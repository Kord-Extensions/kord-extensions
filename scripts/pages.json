[{"name":"CLASS","description":"dev.kordex.modules.func.mappings.utils.QueryType.CLASS","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.utils/-query-type/-c-l-a-s-s/index.html","searchKeys":["CLASS","CLASS","dev.kordex.modules.func.mappings.utils.QueryType.CLASS"]},{"name":"FIELD","description":"dev.kordex.modules.func.mappings.utils.QueryType.FIELD","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.utils/-query-type/-f-i-e-l-d/index.html","searchKeys":["FIELD","FIELD","dev.kordex.modules.func.mappings.utils.QueryType.FIELD"]},{"name":"METHOD","description":"dev.kordex.modules.func.mappings.utils.QueryType.METHOD","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.utils/-query-type/-m-e-t-h-o-d/index.html","searchKeys":["METHOD","METHOD","dev.kordex.modules.func.mappings.utils.QueryType.METHOD"]},{"name":"OFFICIAL","description":"dev.kordex.modules.func.mappings.enums.Channels.OFFICIAL","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.enums/-channels/-o-f-f-i-c-i-a-l/index.html","searchKeys":["OFFICIAL","OFFICIAL","dev.kordex.modules.func.mappings.enums.Channels.OFFICIAL"]},{"name":"SNAPSHOT","description":"dev.kordex.modules.func.mappings.enums.Channels.SNAPSHOT","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.enums/-channels/-s-n-a-p-s-h-o-t/index.html","searchKeys":["SNAPSHOT","SNAPSHOT","dev.kordex.modules.func.mappings.enums.Channels.SNAPSHOT"]},{"name":"abstract class MappingWithChannelArguments(val namespace: Namespace) : MappingArguments","description":"dev.kordex.modules.func.mappings.arguments.MappingWithChannelArguments","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.arguments/-mapping-with-channel-arguments/index.html","searchKeys":["MappingWithChannelArguments","abstract class MappingWithChannelArguments(val namespace: Namespace) : MappingArguments","dev.kordex.modules.func.mappings.arguments.MappingWithChannelArguments"]},{"name":"abstract val channel: Channels?","description":"dev.kordex.modules.func.mappings.arguments.MappingWithChannelArguments.channel","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.arguments/-mapping-with-channel-arguments/channel.html","searchKeys":["channel","abstract val channel: Channels?","dev.kordex.modules.func.mappings.arguments.MappingWithChannelArguments.channel"]},{"name":"abstract val mapDescriptors: Boolean","description":"dev.kordex.modules.func.mappings.arguments.IntermediaryMappable.mapDescriptors","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.arguments/-intermediary-mappable/map-descriptors.html","searchKeys":["mapDescriptors","abstract val mapDescriptors: Boolean","dev.kordex.modules.func.mappings.arguments.IntermediaryMappable.mapDescriptors"]},{"name":"class BarnArguments : MappingArguments, IntermediaryMappable","description":"dev.kordex.modules.func.mappings.arguments.BarnArguments","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.arguments/-barn-arguments/index.html","searchKeys":["BarnArguments","class BarnArguments : MappingArguments, IntermediaryMappable","dev.kordex.modules.func.mappings.arguments.BarnArguments"]},{"name":"class ExtMappingsBuilder","description":"dev.kordex.modules.func.mappings.builders.ExtMappingsBuilder","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.builders/-ext-mappings-builder/index.html","searchKeys":["ExtMappingsBuilder","class ExtMappingsBuilder","dev.kordex.modules.func.mappings.builders.ExtMappingsBuilder"]},{"name":"class FeatherArguments : MappingArguments, IntermediaryMappable","description":"dev.kordex.modules.func.mappings.arguments.FeatherArguments","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.arguments/-feather-arguments/index.html","searchKeys":["FeatherArguments","class FeatherArguments : MappingArguments, IntermediaryMappable","dev.kordex.modules.func.mappings.arguments.FeatherArguments"]},{"name":"class HashedMojangArguments : MappingWithChannelArguments, IntermediaryMappable","description":"dev.kordex.modules.func.mappings.arguments.HashedMojangArguments","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.arguments/-hashed-mojang-arguments/index.html","searchKeys":["HashedMojangArguments","class HashedMojangArguments : MappingWithChannelArguments, IntermediaryMappable","dev.kordex.modules.func.mappings.arguments.HashedMojangArguments"]},{"name":"class LegacyYarnArguments : MappingArguments, IntermediaryMappable","description":"dev.kordex.modules.func.mappings.arguments.LegacyYarnArguments","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.arguments/-legacy-yarn-arguments/index.html","searchKeys":["LegacyYarnArguments","class LegacyYarnArguments : MappingArguments, IntermediaryMappable","dev.kordex.modules.func.mappings.arguments.LegacyYarnArguments"]},{"name":"class MCPArguments : MappingArguments","description":"dev.kordex.modules.func.mappings.arguments.MCPArguments","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.arguments/-m-c-p-arguments/index.html","searchKeys":["MCPArguments","class MCPArguments : MappingArguments","dev.kordex.modules.func.mappings.arguments.MCPArguments"]},{"name":"class MappingConversionArguments(enabledNamespaces: suspend (Snowflake?) -> Map<String, String>) : Arguments","description":"dev.kordex.modules.func.mappings.arguments.MappingConversionArguments","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.arguments/-mapping-conversion-arguments/index.html","searchKeys":["MappingConversionArguments","class MappingConversionArguments(enabledNamespaces: suspend (Snowflake?) -> Map<String, String>) : Arguments","dev.kordex.modules.func.mappings.arguments.MappingConversionArguments"]},{"name":"class MappingsExtension : Extension","description":"dev.kordex.modules.func.mappings.MappingsExtension","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings/-mappings-extension/index.html","searchKeys":["MappingsExtension","class MappingsExtension : Extension","dev.kordex.modules.func.mappings.MappingsExtension"]},{"name":"class MappingsPlugin : KordExPlugin","description":"dev.kordex.modules.func.mappings.plugins.MappingsPlugin","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.plugins/-mappings-plugin/index.html","searchKeys":["MappingsPlugin","class MappingsPlugin : KordExPlugin","dev.kordex.modules.func.mappings.plugins.MappingsPlugin"]},{"name":"class MappingsVersionConverter(namespaceGetter: suspend () -> Namespace, var validator: Validator<MappingsContainer> = null) : SingleConverter<MappingsContainer> ","description":"dev.kordex.modules.func.mappings.converters.MappingsVersionConverter","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.converters/-mappings-version-converter/index.html","searchKeys":["MappingsVersionConverter","class MappingsVersionConverter(namespaceGetter: suspend () -> Namespace, var validator: Validator<MappingsContainer> = null) : SingleConverter<MappingsContainer> ","dev.kordex.modules.func.mappings.converters.MappingsVersionConverter"]},{"name":"class MojangArguments : MappingWithChannelArguments, IntermediaryMappable","description":"dev.kordex.modules.func.mappings.arguments.MojangArguments","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.arguments/-mojang-arguments/index.html","searchKeys":["MojangArguments","class MojangArguments : MappingWithChannelArguments, IntermediaryMappable","dev.kordex.modules.func.mappings.arguments.MojangArguments"]},{"name":"class PlasmaArguments : MappingArguments, IntermediaryMappable","description":"dev.kordex.modules.func.mappings.arguments.PlasmaArguments","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.arguments/-plasma-arguments/index.html","searchKeys":["PlasmaArguments","class PlasmaArguments : MappingArguments, IntermediaryMappable","dev.kordex.modules.func.mappings.arguments.PlasmaArguments"]},{"name":"class QuiltArguments : MappingArguments, IntermediaryMappable","description":"dev.kordex.modules.func.mappings.arguments.QuiltArguments","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.arguments/-quilt-arguments/index.html","searchKeys":["QuiltArguments","class QuiltArguments : MappingArguments, IntermediaryMappable","dev.kordex.modules.func.mappings.arguments.QuiltArguments"]},{"name":"class SrgMojangArguments : MappingArguments, IntermediaryMappable","description":"dev.kordex.modules.func.mappings.arguments.SrgMojangArguments","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.arguments/-srg-mojang-arguments/index.html","searchKeys":["SrgMojangArguments","class SrgMojangArguments : MappingArguments, IntermediaryMappable","dev.kordex.modules.func.mappings.arguments.SrgMojangArguments"]},{"name":"class UnsupportedNamespaceException(val namespace: String) : Exception","description":"dev.kordex.modules.func.mappings.exceptions.UnsupportedNamespaceException","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.exceptions/-unsupported-namespace-exception/index.html","searchKeys":["UnsupportedNamespaceException","class UnsupportedNamespaceException(val namespace: String) : Exception","dev.kordex.modules.func.mappings.exceptions.UnsupportedNamespaceException"]},{"name":"class YarnArguments : MappingWithChannelArguments, IntermediaryMappable","description":"dev.kordex.modules.func.mappings.arguments.YarnArguments","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.arguments/-yarn-arguments/index.html","searchKeys":["YarnArguments","class YarnArguments : MappingWithChannelArguments, IntermediaryMappable","dev.kordex.modules.func.mappings.arguments.YarnArguments"]},{"name":"class YarrnArguments : MappingArguments, IntermediaryMappable","description":"dev.kordex.modules.func.mappings.arguments.YarrnArguments","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.arguments/-yarrn-arguments/index.html","searchKeys":["YarrnArguments","class YarrnArguments : MappingArguments, IntermediaryMappable","dev.kordex.modules.func.mappings.arguments.YarrnArguments"]},{"name":"const val PLUGIN_ID: String","description":"dev.kordex.modules.func.mappings.plugins.MappingsPlugin.Companion.PLUGIN_ID","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.plugins/-mappings-plugin/-companion/-p-l-u-g-i-n_-i-d.html","searchKeys":["PLUGIN_ID","const val PLUGIN_ID: String","dev.kordex.modules.func.mappings.plugins.MappingsPlugin.Companion.PLUGIN_ID"]},{"name":"constructor()","description":"dev.kordex.modules.func.mappings.MappingsExtension.MappingConfigArguments.MappingConfigArguments","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings/-mappings-extension/-mapping-config-arguments/-mapping-config-arguments.html","searchKeys":["MappingConfigArguments","constructor()","dev.kordex.modules.func.mappings.MappingsExtension.MappingConfigArguments.MappingConfigArguments"]},{"name":"constructor()","description":"dev.kordex.modules.func.mappings.MappingsExtension.MappingsExtension","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings/-mappings-extension/-mappings-extension.html","searchKeys":["MappingsExtension","constructor()","dev.kordex.modules.func.mappings.MappingsExtension.MappingsExtension"]},{"name":"constructor()","description":"dev.kordex.modules.func.mappings.arguments.BarnArguments.BarnArguments","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.arguments/-barn-arguments/-barn-arguments.html","searchKeys":["BarnArguments","constructor()","dev.kordex.modules.func.mappings.arguments.BarnArguments.BarnArguments"]},{"name":"constructor()","description":"dev.kordex.modules.func.mappings.arguments.FeatherArguments.FeatherArguments","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.arguments/-feather-arguments/-feather-arguments.html","searchKeys":["FeatherArguments","constructor()","dev.kordex.modules.func.mappings.arguments.FeatherArguments.FeatherArguments"]},{"name":"constructor()","description":"dev.kordex.modules.func.mappings.arguments.HashedMojangArguments.HashedMojangArguments","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.arguments/-hashed-mojang-arguments/-hashed-mojang-arguments.html","searchKeys":["HashedMojangArguments","constructor()","dev.kordex.modules.func.mappings.arguments.HashedMojangArguments.HashedMojangArguments"]},{"name":"constructor()","description":"dev.kordex.modules.func.mappings.arguments.LegacyYarnArguments.LegacyYarnArguments","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.arguments/-legacy-yarn-arguments/-legacy-yarn-arguments.html","searchKeys":["LegacyYarnArguments","constructor()","dev.kordex.modules.func.mappings.arguments.LegacyYarnArguments.LegacyYarnArguments"]},{"name":"constructor()","description":"dev.kordex.modules.func.mappings.arguments.MCPArguments.MCPArguments","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.arguments/-m-c-p-arguments/-m-c-p-arguments.html","searchKeys":["MCPArguments","constructor()","dev.kordex.modules.func.mappings.arguments.MCPArguments.MCPArguments"]},{"name":"constructor()","description":"dev.kordex.modules.func.mappings.arguments.MojangArguments.MojangArguments","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.arguments/-mojang-arguments/-mojang-arguments.html","searchKeys":["MojangArguments","constructor()","dev.kordex.modules.func.mappings.arguments.MojangArguments.MojangArguments"]},{"name":"constructor()","description":"dev.kordex.modules.func.mappings.arguments.PlasmaArguments.PlasmaArguments","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.arguments/-plasma-arguments/-plasma-arguments.html","searchKeys":["PlasmaArguments","constructor()","dev.kordex.modules.func.mappings.arguments.PlasmaArguments.PlasmaArguments"]},{"name":"constructor()","description":"dev.kordex.modules.func.mappings.arguments.QuiltArguments.QuiltArguments","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.arguments/-quilt-arguments/-quilt-arguments.html","searchKeys":["QuiltArguments","constructor()","dev.kordex.modules.func.mappings.arguments.QuiltArguments.QuiltArguments"]},{"name":"constructor()","description":"dev.kordex.modules.func.mappings.arguments.SrgMojangArguments.SrgMojangArguments","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.arguments/-srg-mojang-arguments/-srg-mojang-arguments.html","searchKeys":["SrgMojangArguments","constructor()","dev.kordex.modules.func.mappings.arguments.SrgMojangArguments.SrgMojangArguments"]},{"name":"constructor()","description":"dev.kordex.modules.func.mappings.arguments.YarnArguments.YarnArguments","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.arguments/-yarn-arguments/-yarn-arguments.html","searchKeys":["YarnArguments","constructor()","dev.kordex.modules.func.mappings.arguments.YarnArguments.YarnArguments"]},{"name":"constructor()","description":"dev.kordex.modules.func.mappings.arguments.YarrnArguments.YarrnArguments","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.arguments/-yarrn-arguments/-yarrn-arguments.html","searchKeys":["YarrnArguments","constructor()","dev.kordex.modules.func.mappings.arguments.YarrnArguments.YarrnArguments"]},{"name":"constructor()","description":"dev.kordex.modules.func.mappings.builders.ExtMappingsBuilder.ExtMappingsBuilder","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.builders/-ext-mappings-builder/-ext-mappings-builder.html","searchKeys":["ExtMappingsBuilder","constructor()","dev.kordex.modules.func.mappings.builders.ExtMappingsBuilder.ExtMappingsBuilder"]},{"name":"constructor()","description":"dev.kordex.modules.func.mappings.plugins.MappingsPlugin.MappingsPlugin","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.plugins/-mappings-plugin/-mappings-plugin.html","searchKeys":["MappingsPlugin","constructor()","dev.kordex.modules.func.mappings.plugins.MappingsPlugin.MappingsPlugin"]},{"name":"constructor(enabledNamespaces: suspend (Snowflake?) -> Map<String, String>)","description":"dev.kordex.modules.func.mappings.arguments.MappingConversionArguments.MappingConversionArguments","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.arguments/-mapping-conversion-arguments/-mapping-conversion-arguments.html","searchKeys":["MappingConversionArguments","constructor(enabledNamespaces: suspend (Snowflake?) -> Map<String, String>)","dev.kordex.modules.func.mappings.arguments.MappingConversionArguments.MappingConversionArguments"]},{"name":"constructor(namespace: Namespace)","description":"dev.kordex.modules.func.mappings.arguments.MappingArguments.MappingArguments","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.arguments/-mapping-arguments/-mapping-arguments.html","searchKeys":["MappingArguments","constructor(namespace: Namespace)","dev.kordex.modules.func.mappings.arguments.MappingArguments.MappingArguments"]},{"name":"constructor(namespace: Namespace)","description":"dev.kordex.modules.func.mappings.arguments.MappingWithChannelArguments.MappingWithChannelArguments","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.arguments/-mapping-with-channel-arguments/-mapping-with-channel-arguments.html","searchKeys":["MappingWithChannelArguments","constructor(namespace: Namespace)","dev.kordex.modules.func.mappings.arguments.MappingWithChannelArguments.MappingWithChannelArguments"]},{"name":"constructor(namespace: String)","description":"dev.kordex.modules.func.mappings.exceptions.UnsupportedNamespaceException.UnsupportedNamespaceException","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.exceptions/-unsupported-namespace-exception/-unsupported-namespace-exception.html","searchKeys":["UnsupportedNamespaceException","constructor(namespace: String)","dev.kordex.modules.func.mappings.exceptions.UnsupportedNamespaceException.UnsupportedNamespaceException"]},{"name":"constructor(namespaceGetter: suspend () -> Namespace, validator: Validator<MappingsContainer> = null)","description":"dev.kordex.modules.func.mappings.converters.MappingsVersionConverter.MappingsVersionConverter","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.converters/-mappings-version-converter/-mappings-version-converter.html","searchKeys":["MappingsVersionConverter","constructor(namespaceGetter: suspend () -> Namespace, validator: Validator<MappingsContainer> = null)","dev.kordex.modules.func.mappings.converters.MappingsVersionConverter.MappingsVersionConverter"]},{"name":"constructor(namespaces: List<String> = listOf(\n\t\t\t\"barn\",\n\t\t\t\"feather\",\n\t\t\t\"hashed-mojang\",\n\t\t\t\"legacy-yarn\",\n\t\t\t\"mcp\",\n\t\t\t\"mojang\",\n\t\t\t\"plasma\",\n\t\t\t\"quilt-mappings\",\n\t\t\t\"srg-mojang\",\n\t\t\t\"yarn\",\n\t\t\t\"yarrn\",\n\t\t), timeout: Int = 300)","description":"dev.kordex.modules.func.mappings.storage.MappingsConfig.MappingsConfig","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.storage/-mappings-config/-mappings-config.html","searchKeys":["MappingsConfig","constructor(namespaces: List<String> = listOf(\n\t\t\t\"barn\",\n\t\t\t\"feather\",\n\t\t\t\"hashed-mojang\",\n\t\t\t\"legacy-yarn\",\n\t\t\t\"mcp\",\n\t\t\t\"mojang\",\n\t\t\t\"plasma\",\n\t\t\t\"quilt-mappings\",\n\t\t\t\"srg-mojang\",\n\t\t\t\"yarn\",\n\t\t\t\"yarrn\",\n\t\t), timeout: Int = 300)","dev.kordex.modules.func.mappings.storage.MappingsConfig.MappingsConfig"]},{"name":"data class MappingsConfig(var namespaces: List<String> = listOf(\n\t\t\t\"barn\",\n\t\t\t\"feather\",\n\t\t\t\"hashed-mojang\",\n\t\t\t\"legacy-yarn\",\n\t\t\t\"mcp\",\n\t\t\t\"mojang\",\n\t\t\t\"plasma\",\n\t\t\t\"quilt-mappings\",\n\t\t\t\"srg-mojang\",\n\t\t\t\"yarn\",\n\t\t\t\"yarrn\",\n\t\t), var timeout: Int = 300) : Data","description":"dev.kordex.modules.func.mappings.storage.MappingsConfig","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.storage/-mappings-config/index.html","searchKeys":["MappingsConfig","data class MappingsConfig(var namespaces: List<String> = listOf(\n\t\t\t\"barn\",\n\t\t\t\"feather\",\n\t\t\t\"hashed-mojang\",\n\t\t\t\"legacy-yarn\",\n\t\t\t\"mcp\",\n\t\t\t\"mojang\",\n\t\t\t\"plasma\",\n\t\t\t\"quilt-mappings\",\n\t\t\t\"srg-mojang\",\n\t\t\t\"yarn\",\n\t\t\t\"yarrn\",\n\t\t), var timeout: Int = 300) : Data","dev.kordex.modules.func.mappings.storage.MappingsConfig"]},{"name":"enum Channels : Enum<Channels> , ChoiceEnum","description":"dev.kordex.modules.func.mappings.enums.Channels","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.enums/-channels/index.html","searchKeys":["Channels","enum Channels : Enum<Channels> , ChoiceEnum","dev.kordex.modules.func.mappings.enums.Channels"]},{"name":"enum QueryType : Enum<QueryType> ","description":"dev.kordex.modules.func.mappings.utils.QueryType","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.utils/-query-type/index.html","searchKeys":["QueryType","enum QueryType : Enum<QueryType> ","dev.kordex.modules.func.mappings.utils.QueryType"]},{"name":"fun ExtensionsBuilder.extMappings(builder: ExtMappingsBuilder.() -> Unit)","description":"dev.kordex.modules.func.mappings.extMappings","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings/ext-mappings.html","searchKeys":["extMappings","fun ExtensionsBuilder.extMappings(builder: ExtMappingsBuilder.() -> Unit)","dev.kordex.modules.func.mappings.extMappings"]},{"name":"fun Obf.stringPairs(): Pair<String?, String?>","description":"dev.kordex.modules.func.mappings.utils.linkie.stringPairs","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.utils.linkie/string-pairs.html","searchKeys":["stringPairs","fun Obf.stringPairs(): Pair<String?, String?>","dev.kordex.modules.func.mappings.utils.linkie.stringPairs"]},{"name":"fun String.toNamespace(locale: Locale): Namespace","description":"dev.kordex.modules.func.mappings.utils.toNamespace","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.utils/to-namespace.html","searchKeys":["toNamespace","fun String.toNamespace(locale: Locale): Namespace","dev.kordex.modules.func.mappings.utils.toNamespace"]},{"name":"fun classMatchesToPages(outputContainer: MappingsContainer, matches: List<Pair<Class, Class>>, locale: Locale): List<String>","description":"dev.kordex.modules.func.mappings.utils.classMatchesToPages","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.utils/class-matches-to-pages.html","searchKeys":["classMatchesToPages","fun classMatchesToPages(outputContainer: MappingsContainer, matches: List<Pair<Class, Class>>, locale: Locale): List<String>","dev.kordex.modules.func.mappings.utils.classMatchesToPages"]},{"name":"fun classesToPages(namespace: Namespace, classes: List<Class>): List<Pair<String, String>>","description":"dev.kordex.modules.func.mappings.utils.classesToPages","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.utils/classes-to-pages.html","searchKeys":["classesToPages","fun classesToPages(namespace: Namespace, classes: List<Class>): List<Pair<String, String>>","dev.kordex.modules.func.mappings.utils.classesToPages"]},{"name":"fun classesToPages(namespace: Namespace, queryResult: ClassResults): List<Pair<String, String>>","description":"dev.kordex.modules.func.mappings.utils.classesToPages","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.utils/classes-to-pages.html","searchKeys":["classesToPages","fun classesToPages(namespace: Namespace, queryResult: ClassResults): List<Pair<String, String>>","dev.kordex.modules.func.mappings.utils.classesToPages"]},{"name":"fun commandCheck(check: suspend (Key) -> SlashCommandCheck)","description":"dev.kordex.modules.func.mappings.builders.ExtMappingsBuilder.commandCheck","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.builders/-ext-mappings-builder/command-check.html","searchKeys":["commandCheck","fun commandCheck(check: suspend (Key) -> SlashCommandCheck)","dev.kordex.modules.func.mappings.builders.ExtMappingsBuilder.commandCheck"]},{"name":"fun fieldMatchesToPages(outputContainer: MappingsContainer, matches: List<Pair<MemberEntry<Field>, MemberEntry<Field>>>, locale: Locale): List<String>","description":"dev.kordex.modules.func.mappings.utils.fieldMatchesToPages","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.utils/field-matches-to-pages.html","searchKeys":["fieldMatchesToPages","fun fieldMatchesToPages(outputContainer: MappingsContainer, matches: List<Pair<MemberEntry<Field>, MemberEntry<Field>>>, locale: Locale): List<String>","dev.kordex.modules.func.mappings.utils.fieldMatchesToPages"]},{"name":"fun fieldsToPages(namespace: Namespace, mappings: MappingsContainer, fields: List<MemberEntry<Field>>, mapDescriptors: Boolean = true): List<Pair<String, String>>","description":"dev.kordex.modules.func.mappings.utils.fieldsToPages","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.utils/fields-to-pages.html","searchKeys":["fieldsToPages","fun fieldsToPages(namespace: Namespace, mappings: MappingsContainer, fields: List<MemberEntry<Field>>, mapDescriptors: Boolean = true): List<Pair<String, String>>","dev.kordex.modules.func.mappings.utils.fieldsToPages"]},{"name":"fun fieldsToPages(namespace: Namespace, mappings: MappingsContainer, queryResult: QueryResult<MappingsContainer, FieldResultList>, mapDescriptors: Boolean = true): List<Pair<String, String>>","description":"dev.kordex.modules.func.mappings.utils.fieldsToPages","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.utils/fields-to-pages.html","searchKeys":["fieldsToPages","fun fieldsToPages(namespace: Namespace, mappings: MappingsContainer, queryResult: QueryResult<MappingsContainer, FieldResultList>, mapDescriptors: Boolean = true): List<Pair<String, String>>","dev.kordex.modules.func.mappings.utils.fieldsToPages"]},{"name":"fun methodMatchesToPages(outputContainer: MappingsContainer, matches: List<Pair<MemberEntry<Method>, MemberEntry<Method>>>, locale: Locale): List<String>","description":"dev.kordex.modules.func.mappings.utils.methodMatchesToPages","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.utils/method-matches-to-pages.html","searchKeys":["methodMatchesToPages","fun methodMatchesToPages(outputContainer: MappingsContainer, matches: List<Pair<MemberEntry<Method>, MemberEntry<Method>>>, locale: Locale): List<String>","dev.kordex.modules.func.mappings.utils.methodMatchesToPages"]},{"name":"fun methodsToPages(namespace: Namespace, mappings: MappingsContainer, methods: List<MemberEntry<Method>>, mapDescriptors: Boolean = true): List<Pair<String, String>>","description":"dev.kordex.modules.func.mappings.utils.methodsToPages","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.utils/methods-to-pages.html","searchKeys":["methodsToPages","fun methodsToPages(namespace: Namespace, mappings: MappingsContainer, methods: List<MemberEntry<Method>>, mapDescriptors: Boolean = true): List<Pair<String, String>>","dev.kordex.modules.func.mappings.utils.methodsToPages"]},{"name":"fun methodsToPages(namespace: Namespace, mappings: MappingsContainer, queryResult: QueryResult<MappingsContainer, MethodResultList>, mapDescriptors: Boolean = true): List<Pair<String, String>>","description":"dev.kordex.modules.func.mappings.utils.methodsToPages","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.utils/methods-to-pages.html","searchKeys":["methodsToPages","fun methodsToPages(namespace: Namespace, mappings: MappingsContainer, queryResult: QueryResult<MappingsContainer, MethodResultList>, mapDescriptors: Boolean = true): List<Pair<String, String>>","dev.kordex.modules.func.mappings.utils.methodsToPages"]},{"name":"fun namespaceCheck(check: suspend (Namespace) -> SlashCommandCheck)","description":"dev.kordex.modules.func.mappings.builders.ExtMappingsBuilder.namespaceCheck","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.builders/-ext-mappings-builder/namespace-check.html","searchKeys":["namespaceCheck","fun namespaceCheck(check: suspend (Namespace) -> SlashCommandCheck)","dev.kordex.modules.func.mappings.builders.ExtMappingsBuilder.namespaceCheck"]},{"name":"fun valueOf(value: String): Channels","description":"dev.kordex.modules.func.mappings.enums.Channels.valueOf","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.enums/-channels/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Channels","dev.kordex.modules.func.mappings.enums.Channels.valueOf"]},{"name":"fun valueOf(value: String): QueryType","description":"dev.kordex.modules.func.mappings.utils.QueryType.valueOf","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.utils/-query-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): QueryType","dev.kordex.modules.func.mappings.utils.QueryType.valueOf"]},{"name":"fun values(): Array<Channels>","description":"dev.kordex.modules.func.mappings.enums.Channels.values","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.enums/-channels/values.html","searchKeys":["values","fun values(): Array<Channels>","dev.kordex.modules.func.mappings.enums.Channels.values"]},{"name":"fun values(): Array<QueryType>","description":"dev.kordex.modules.func.mappings.utils.QueryType.values","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.utils/-query-type/values.html","searchKeys":["values","fun values(): Array<QueryType>","dev.kordex.modules.func.mappings.utils.QueryType.values"]},{"name":"inline fun <T> ConverterBuilder<T>.autocompleteVersions(crossinline versions: suspend AutoCompleteInteraction.(event: AutoCompleteInteractionCreateEvent) -> List<String>)","description":"dev.kordex.modules.func.mappings.utils.autocompleteVersions","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.utils/autocomplete-versions.html","searchKeys":["autocompleteVersions","inline fun <T> ConverterBuilder<T>.autocompleteVersions(crossinline versions: suspend AutoCompleteInteraction.(event: AutoCompleteInteractionCreateEvent) -> List<String>)","dev.kordex.modules.func.mappings.utils.autocompleteVersions"]},{"name":"inline fun String?.mapIfNotNullOrNotEquals(other: String, mapper: (String) -> String): String?","description":"dev.kordex.modules.func.mappings.utils.linkie.mapIfNotNullOrNotEquals","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.utils.linkie/map-if-not-null-or-not-equals.html","searchKeys":["mapIfNotNullOrNotEquals","inline fun String?.mapIfNotNullOrNotEquals(other: String, mapper: (String) -> String): String?","dev.kordex.modules.func.mappings.utils.linkie.mapIfNotNullOrNotEquals"]},{"name":"inner class MappingConfigArguments : Arguments","description":"dev.kordex.modules.func.mappings.MappingsExtension.MappingConfigArguments","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings/-mappings-extension/-mapping-config-arguments/index.html","searchKeys":["MappingConfigArguments","inner class MappingConfigArguments : Arguments","dev.kordex.modules.func.mappings.MappingsExtension.MappingConfigArguments"]},{"name":"interface IntermediaryMappable","description":"dev.kordex.modules.func.mappings.arguments.IntermediaryMappable","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.arguments/-intermediary-mappable/index.html","searchKeys":["IntermediaryMappable","interface IntermediaryMappable","dev.kordex.modules.func.mappings.arguments.IntermediaryMappable"]},{"name":"object Companion","description":"dev.kordex.modules.func.mappings.MappingsExtension.Companion","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings/-mappings-extension/-companion/index.html","searchKeys":["Companion","object Companion","dev.kordex.modules.func.mappings.MappingsExtension.Companion"]},{"name":"object Companion","description":"dev.kordex.modules.func.mappings.plugins.MappingsPlugin.Companion","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.plugins/-mappings-plugin/-companion/index.html","searchKeys":["Companion","object Companion","dev.kordex.modules.func.mappings.plugins.MappingsPlugin.Companion"]},{"name":"object MojangReleaseContainer","description":"dev.kordex.modules.func.mappings.utils.MojangReleaseContainer","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.utils/-mojang-release-container/index.html","searchKeys":["MojangReleaseContainer","object MojangReleaseContainer","dev.kordex.modules.func.mappings.utils.MojangReleaseContainer"]},{"name":"object YarnReleaseContainer","description":"dev.kordex.modules.func.mappings.utils.YarnReleaseContainer","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.utils/-yarn-release-container/index.html","searchKeys":["YarnReleaseContainer","object YarnReleaseContainer","dev.kordex.modules.func.mappings.utils.YarnReleaseContainer"]},{"name":"open class MappingArguments(val namespace: Namespace) : Arguments","description":"dev.kordex.modules.func.mappings.arguments.MappingArguments","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.arguments/-mapping-arguments/index.html","searchKeys":["MappingArguments","open class MappingArguments(val namespace: Namespace) : Arguments","dev.kordex.modules.func.mappings.arguments.MappingArguments"]},{"name":"open override val channel: Channels?","description":"dev.kordex.modules.func.mappings.arguments.HashedMojangArguments.channel","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.arguments/-hashed-mojang-arguments/channel.html","searchKeys":["channel","open override val channel: Channels?","dev.kordex.modules.func.mappings.arguments.HashedMojangArguments.channel"]},{"name":"open override val channel: Channels?","description":"dev.kordex.modules.func.mappings.arguments.MojangArguments.channel","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.arguments/-mojang-arguments/channel.html","searchKeys":["channel","open override val channel: Channels?","dev.kordex.modules.func.mappings.arguments.MojangArguments.channel"]},{"name":"open override val channel: Channels?","description":"dev.kordex.modules.func.mappings.arguments.YarnArguments.channel","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.arguments/-yarn-arguments/channel.html","searchKeys":["channel","open override val channel: Channels?","dev.kordex.modules.func.mappings.arguments.YarnArguments.channel"]},{"name":"open override val mapDescriptors: Boolean","description":"dev.kordex.modules.func.mappings.arguments.BarnArguments.mapDescriptors","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.arguments/-barn-arguments/map-descriptors.html","searchKeys":["mapDescriptors","open override val mapDescriptors: Boolean","dev.kordex.modules.func.mappings.arguments.BarnArguments.mapDescriptors"]},{"name":"open override val mapDescriptors: Boolean","description":"dev.kordex.modules.func.mappings.arguments.FeatherArguments.mapDescriptors","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.arguments/-feather-arguments/map-descriptors.html","searchKeys":["mapDescriptors","open override val mapDescriptors: Boolean","dev.kordex.modules.func.mappings.arguments.FeatherArguments.mapDescriptors"]},{"name":"open override val mapDescriptors: Boolean","description":"dev.kordex.modules.func.mappings.arguments.HashedMojangArguments.mapDescriptors","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.arguments/-hashed-mojang-arguments/map-descriptors.html","searchKeys":["mapDescriptors","open override val mapDescriptors: Boolean","dev.kordex.modules.func.mappings.arguments.HashedMojangArguments.mapDescriptors"]},{"name":"open override val mapDescriptors: Boolean","description":"dev.kordex.modules.func.mappings.arguments.LegacyYarnArguments.mapDescriptors","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.arguments/-legacy-yarn-arguments/map-descriptors.html","searchKeys":["mapDescriptors","open override val mapDescriptors: Boolean","dev.kordex.modules.func.mappings.arguments.LegacyYarnArguments.mapDescriptors"]},{"name":"open override val mapDescriptors: Boolean","description":"dev.kordex.modules.func.mappings.arguments.MojangArguments.mapDescriptors","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.arguments/-mojang-arguments/map-descriptors.html","searchKeys":["mapDescriptors","open override val mapDescriptors: Boolean","dev.kordex.modules.func.mappings.arguments.MojangArguments.mapDescriptors"]},{"name":"open override val mapDescriptors: Boolean","description":"dev.kordex.modules.func.mappings.arguments.PlasmaArguments.mapDescriptors","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.arguments/-plasma-arguments/map-descriptors.html","searchKeys":["mapDescriptors","open override val mapDescriptors: Boolean","dev.kordex.modules.func.mappings.arguments.PlasmaArguments.mapDescriptors"]},{"name":"open override val mapDescriptors: Boolean","description":"dev.kordex.modules.func.mappings.arguments.QuiltArguments.mapDescriptors","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.arguments/-quilt-arguments/map-descriptors.html","searchKeys":["mapDescriptors","open override val mapDescriptors: Boolean","dev.kordex.modules.func.mappings.arguments.QuiltArguments.mapDescriptors"]},{"name":"open override val mapDescriptors: Boolean","description":"dev.kordex.modules.func.mappings.arguments.SrgMojangArguments.mapDescriptors","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.arguments/-srg-mojang-arguments/map-descriptors.html","searchKeys":["mapDescriptors","open override val mapDescriptors: Boolean","dev.kordex.modules.func.mappings.arguments.SrgMojangArguments.mapDescriptors"]},{"name":"open override val mapDescriptors: Boolean","description":"dev.kordex.modules.func.mappings.arguments.YarnArguments.mapDescriptors","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.arguments/-yarn-arguments/map-descriptors.html","searchKeys":["mapDescriptors","open override val mapDescriptors: Boolean","dev.kordex.modules.func.mappings.arguments.YarnArguments.mapDescriptors"]},{"name":"open override val mapDescriptors: Boolean","description":"dev.kordex.modules.func.mappings.arguments.YarrnArguments.mapDescriptors","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.arguments/-yarrn-arguments/map-descriptors.html","searchKeys":["mapDescriptors","open override val mapDescriptors: Boolean","dev.kordex.modules.func.mappings.arguments.YarrnArguments.mapDescriptors"]},{"name":"open override val name: String","description":"dev.kordex.modules.func.mappings.MappingsExtension.name","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings/-mappings-extension/name.html","searchKeys":["name","open override val name: String","dev.kordex.modules.func.mappings.MappingsExtension.name"]},{"name":"open override val readableName: Key","description":"dev.kordex.modules.func.mappings.enums.Channels.readableName","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.enums/-channels/readable-name.html","searchKeys":["readableName","open override val readableName: Key","dev.kordex.modules.func.mappings.enums.Channels.readableName"]},{"name":"open override val showTypeInSignature: Boolean = false","description":"dev.kordex.modules.func.mappings.converters.MappingsVersionConverter.showTypeInSignature","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.converters/-mappings-version-converter/show-type-in-signature.html","searchKeys":["showTypeInSignature","open override val showTypeInSignature: Boolean = false","dev.kordex.modules.func.mappings.converters.MappingsVersionConverter.showTypeInSignature"]},{"name":"open override val signatureType: Key","description":"dev.kordex.modules.func.mappings.converters.MappingsVersionConverter.signatureType","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.converters/-mappings-version-converter/signature-type.html","searchKeys":["signatureType","open override val signatureType: Key","dev.kordex.modules.func.mappings.converters.MappingsVersionConverter.signatureType"]},{"name":"open override var validator: Validator<MappingsContainer>","description":"dev.kordex.modules.func.mappings.converters.MappingsVersionConverter.validator","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.converters/-mappings-version-converter/validator.html","searchKeys":["validator","open override var validator: Validator<MappingsContainer>","dev.kordex.modules.func.mappings.converters.MappingsVersionConverter.validator"]},{"name":"open suspend override fun parse(parser: StringParser?, context: CommandContext, named: String?): Boolean","description":"dev.kordex.modules.func.mappings.converters.MappingsVersionConverter.parse","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.converters/-mappings-version-converter/parse.html","searchKeys":["parse","open suspend override fun parse(parser: StringParser?, context: CommandContext, named: String?): Boolean","dev.kordex.modules.func.mappings.converters.MappingsVersionConverter.parse"]},{"name":"open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","description":"dev.kordex.modules.func.mappings.converters.MappingsVersionConverter.parseOption","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.converters/-mappings-version-converter/parse-option.html","searchKeys":["parseOption","open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","dev.kordex.modules.func.mappings.converters.MappingsVersionConverter.parseOption"]},{"name":"open suspend override fun setup()","description":"dev.kordex.modules.func.mappings.MappingsExtension.setup","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings/-mappings-extension/setup.html","searchKeys":["setup","open suspend override fun setup()","dev.kordex.modules.func.mappings.MappingsExtension.setup"]},{"name":"open suspend override fun setup()","description":"dev.kordex.modules.func.mappings.plugins.MappingsPlugin.setup","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.plugins/-mappings-plugin/setup.html","searchKeys":["setup","open suspend override fun setup()","dev.kordex.modules.func.mappings.plugins.MappingsPlugin.setup"]},{"name":"open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<StringChoiceBuilder>","description":"dev.kordex.modules.func.mappings.converters.MappingsVersionConverter.toSlashOption","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.converters/-mappings-version-converter/to-slash-option.html","searchKeys":["toSlashOption","open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<StringChoiceBuilder>","dev.kordex.modules.func.mappings.converters.MappingsVersionConverter.toSlashOption"]},{"name":"suspend fun CheckContext<ChatInputCommandInteractionCreateEvent>.allowedCategory(allowed: List<Snowflake>, banned: List<Snowflake>)","description":"dev.kordex.modules.func.mappings.allowedCategory","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings/allowed-category.html","searchKeys":["allowedCategory","suspend fun CheckContext<ChatInputCommandInteractionCreateEvent>.allowedCategory(allowed: List<Snowflake>, banned: List<Snowflake>)","dev.kordex.modules.func.mappings.allowedCategory"]},{"name":"suspend fun CheckContext<ChatInputCommandInteractionCreateEvent>.allowedChannel(allowed: List<Snowflake>, banned: List<Snowflake>)","description":"dev.kordex.modules.func.mappings.allowedChannel","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings/allowed-channel.html","searchKeys":["allowedChannel","suspend fun CheckContext<ChatInputCommandInteractionCreateEvent>.allowedChannel(allowed: List<Snowflake>, banned: List<Snowflake>)","dev.kordex.modules.func.mappings.allowedChannel"]},{"name":"suspend fun CheckContext<ChatInputCommandInteractionCreateEvent>.allowedGuild(allowed: List<Snowflake>, banned: List<Snowflake>)","description":"dev.kordex.modules.func.mappings.allowedGuild","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings/allowed-guild.html","searchKeys":["allowedGuild","suspend fun CheckContext<ChatInputCommandInteractionCreateEvent>.allowedGuild(allowed: List<Snowflake>, banned: List<Snowflake>)","dev.kordex.modules.func.mappings.allowedGuild"]},{"name":"val Obf.preferredName: String?","description":"dev.kordex.modules.func.mappings.utils.preferredName","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.utils/preferred-name.html","searchKeys":["preferredName","val Obf.preferredName: String?","dev.kordex.modules.func.mappings.utils.preferredName"]},{"name":"val classMatchesToPages: (MappingsContainer, Matches<Class>, Locale) -> List<String>","description":"dev.kordex.modules.func.mappings.utils.classMatchesToPages","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.utils/class-matches-to-pages.html","searchKeys":["classMatchesToPages","val classMatchesToPages: (MappingsContainer, Matches<Class>, Locale) -> List<String>","dev.kordex.modules.func.mappings.utils.classMatchesToPages"]},{"name":"val classesToPages: (Namespace, MappingsContainer, ClassResults, Boolean) -> List<Pair<String, String>>","description":"dev.kordex.modules.func.mappings.utils.classesToPages","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.utils/classes-to-pages.html","searchKeys":["classesToPages","val classesToPages: (Namespace, MappingsContainer, ClassResults, Boolean) -> List<Pair<String, String>>","dev.kordex.modules.func.mappings.utils.classesToPages"]},{"name":"val commandChecks: MutableList<suspend (Key) -> SlashCommandCheck>","description":"dev.kordex.modules.func.mappings.builders.ExtMappingsBuilder.commandChecks","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.builders/-ext-mappings-builder/command-checks.html","searchKeys":["commandChecks","val commandChecks: MutableList<suspend (Key) -> SlashCommandCheck>","dev.kordex.modules.func.mappings.builders.ExtMappingsBuilder.commandChecks"]},{"name":"val entries: EnumEntries<Channels>","description":"dev.kordex.modules.func.mappings.enums.Channels.entries","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.enums/-channels/entries.html","searchKeys":["entries","val entries: EnumEntries<Channels>","dev.kordex.modules.func.mappings.enums.Channels.entries"]},{"name":"val entries: EnumEntries<QueryType>","description":"dev.kordex.modules.func.mappings.utils.QueryType.entries","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.utils/-query-type/entries.html","searchKeys":["entries","val entries: EnumEntries<QueryType>","dev.kordex.modules.func.mappings.utils.QueryType.entries"]},{"name":"val fieldMatchesToPages: (MappingsContainer, Matches<MemberEntry<Field>>, Locale) -> List<String>","description":"dev.kordex.modules.func.mappings.utils.fieldMatchesToPages","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.utils/field-matches-to-pages.html","searchKeys":["fieldMatchesToPages","val fieldMatchesToPages: (MappingsContainer, Matches<MemberEntry<Field>>, Locale) -> List<String>","dev.kordex.modules.func.mappings.utils.fieldMatchesToPages"]},{"name":"val inputChannel: Channels?","description":"dev.kordex.modules.func.mappings.arguments.MappingConversionArguments.inputChannel","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.arguments/-mapping-conversion-arguments/input-channel.html","searchKeys":["inputChannel","val inputChannel: Channels?","dev.kordex.modules.func.mappings.arguments.MappingConversionArguments.inputChannel"]},{"name":"val inputNamespace: String","description":"dev.kordex.modules.func.mappings.arguments.MappingConversionArguments.inputNamespace","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.arguments/-mapping-conversion-arguments/input-namespace.html","searchKeys":["inputNamespace","val inputNamespace: String","dev.kordex.modules.func.mappings.arguments.MappingConversionArguments.inputNamespace"]},{"name":"val latestRelease: String?","description":"dev.kordex.modules.func.mappings.utils.YarnReleaseContainer.latestRelease","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.utils/-yarn-release-container/latest-release.html","searchKeys":["latestRelease","val latestRelease: String?","dev.kordex.modules.func.mappings.utils.YarnReleaseContainer.latestRelease"]},{"name":"val latestSnapshot: String?","description":"dev.kordex.modules.func.mappings.utils.YarnReleaseContainer.latestSnapshot","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.utils/-yarn-release-container/latest-snapshot.html","searchKeys":["latestSnapshot","val latestSnapshot: String?","dev.kordex.modules.func.mappings.utils.YarnReleaseContainer.latestSnapshot"]},{"name":"val methodMatchesToPages: (MappingsContainer, Matches<MemberEntry<Method>>, Locale) -> List<String>","description":"dev.kordex.modules.func.mappings.utils.methodMatchesToPages","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.utils/method-matches-to-pages.html","searchKeys":["methodMatchesToPages","val methodMatchesToPages: (MappingsContainer, Matches<MemberEntry<Method>>, Locale) -> List<String>","dev.kordex.modules.func.mappings.utils.methodMatchesToPages"]},{"name":"val namespace: Namespace","description":"dev.kordex.modules.func.mappings.arguments.MappingArguments.namespace","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.arguments/-mapping-arguments/namespace.html","searchKeys":["namespace","val namespace: Namespace","dev.kordex.modules.func.mappings.arguments.MappingArguments.namespace"]},{"name":"val namespace: String","description":"dev.kordex.modules.func.mappings.exceptions.UnsupportedNamespaceException.namespace","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.exceptions/-unsupported-namespace-exception/namespace.html","searchKeys":["namespace","val namespace: String","dev.kordex.modules.func.mappings.exceptions.UnsupportedNamespaceException.namespace"]},{"name":"val namespaceChecks: MutableList<suspend (Namespace) -> SlashCommandCheck>","description":"dev.kordex.modules.func.mappings.builders.ExtMappingsBuilder.namespaceChecks","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.builders/-ext-mappings-builder/namespace-checks.html","searchKeys":["namespaceChecks","val namespaceChecks: MutableList<suspend (Namespace) -> SlashCommandCheck>","dev.kordex.modules.func.mappings.builders.ExtMappingsBuilder.namespaceChecks"]},{"name":"val outputChannel: Channels?","description":"dev.kordex.modules.func.mappings.arguments.MappingConversionArguments.outputChannel","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.arguments/-mapping-conversion-arguments/output-channel.html","searchKeys":["outputChannel","val outputChannel: Channels?","dev.kordex.modules.func.mappings.arguments.MappingConversionArguments.outputChannel"]},{"name":"val outputNamespace: String","description":"dev.kordex.modules.func.mappings.arguments.MappingConversionArguments.outputNamespace","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.arguments/-mapping-conversion-arguments/output-namespace.html","searchKeys":["outputNamespace","val outputNamespace: String","dev.kordex.modules.func.mappings.arguments.MappingConversionArguments.outputNamespace"]},{"name":"val plural: Key","description":"dev.kordex.modules.func.mappings.utils.QueryType.plural","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.utils/-query-type/plural.html","searchKeys":["plural","val plural: Key","dev.kordex.modules.func.mappings.utils.QueryType.plural"]},{"name":"val query: String","description":"dev.kordex.modules.func.mappings.arguments.MappingArguments.query","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.arguments/-mapping-arguments/query.html","searchKeys":["query","val query: String","dev.kordex.modules.func.mappings.arguments.MappingArguments.query"]},{"name":"val query: String","description":"dev.kordex.modules.func.mappings.arguments.MappingConversionArguments.query","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.arguments/-mapping-conversion-arguments/query.html","searchKeys":["query","val query: String","dev.kordex.modules.func.mappings.arguments.MappingConversionArguments.query"]},{"name":"val readableName: String","description":"dev.kordex.modules.func.mappings.utils.QueryType.readableName","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.utils/-query-type/readable-name.html","searchKeys":["readableName","val readableName: String","dev.kordex.modules.func.mappings.utils.QueryType.readableName"]},{"name":"val singular: Key","description":"dev.kordex.modules.func.mappings.utils.QueryType.singular","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.utils/-query-type/singular.html","searchKeys":["singular","val singular: Key","dev.kordex.modules.func.mappings.utils.QueryType.singular"]},{"name":"val timeout: Int?","description":"dev.kordex.modules.func.mappings.MappingsExtension.MappingConfigArguments.timeout","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings/-mappings-extension/-mapping-config-arguments/timeout.html","searchKeys":["timeout","val timeout: Int?","dev.kordex.modules.func.mappings.MappingsExtension.MappingConfigArguments.timeout"]},{"name":"val version: MappingsContainer?","description":"dev.kordex.modules.func.mappings.arguments.MappingArguments.version","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.arguments/-mapping-arguments/version.html","searchKeys":["version","val version: MappingsContainer?","dev.kordex.modules.func.mappings.arguments.MappingArguments.version"]},{"name":"val version: String?","description":"dev.kordex.modules.func.mappings.arguments.MappingConversionArguments.version","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.arguments/-mapping-conversion-arguments/version.html","searchKeys":["version","val version: String?","dev.kordex.modules.func.mappings.arguments.MappingConversionArguments.version"]},{"name":"var latestRelease: String","description":"dev.kordex.modules.func.mappings.utils.MojangReleaseContainer.latestRelease","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.utils/-mojang-release-container/latest-release.html","searchKeys":["latestRelease","var latestRelease: String","dev.kordex.modules.func.mappings.utils.MojangReleaseContainer.latestRelease"]},{"name":"var latestSnapshot: String","description":"dev.kordex.modules.func.mappings.utils.MojangReleaseContainer.latestSnapshot","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.utils/-mojang-release-container/latest-snapshot.html","searchKeys":["latestSnapshot","var latestSnapshot: String","dev.kordex.modules.func.mappings.utils.MojangReleaseContainer.latestSnapshot"]},{"name":"var namespaces: List<String>","description":"dev.kordex.modules.func.mappings.storage.MappingsConfig.namespaces","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.storage/-mappings-config/namespaces.html","searchKeys":["namespaces","var namespaces: List<String>","dev.kordex.modules.func.mappings.storage.MappingsConfig.namespaces"]},{"name":"var timeout: Int","description":"dev.kordex.modules.func.mappings.storage.MappingsConfig.timeout","location":"modules/functionality/func-mappings/dev.kordex.modules.func.mappings.storage/-mappings-config/timeout.html","searchKeys":["timeout","var timeout: Int","dev.kordex.modules.func.mappings.storage.MappingsConfig.timeout"]},{"name":"abstract suspend fun deleteTagByKey(key: String, guildId: Snowflake? = null): Tag?","description":"dev.kordex.modules.func.tags.data.TagsData.deleteTagByKey","location":"modules/functionality/func-tags/dev.kordex.modules.func.tags.data/-tags-data/delete-tag-by-key.html","searchKeys":["deleteTagByKey","abstract suspend fun deleteTagByKey(key: String, guildId: Snowflake? = null): Tag?","dev.kordex.modules.func.tags.data.TagsData.deleteTagByKey"]},{"name":"abstract suspend fun findTags(category: String? = null, guildId: Snowflake? = null, key: String? = null): List<Tag>","description":"dev.kordex.modules.func.tags.data.TagsData.findTags","location":"modules/functionality/func-tags/dev.kordex.modules.func.tags.data/-tags-data/find-tags.html","searchKeys":["findTags","abstract suspend fun findTags(category: String? = null, guildId: Snowflake? = null, key: String? = null): List<Tag>","dev.kordex.modules.func.tags.data.TagsData.findTags"]},{"name":"abstract suspend fun getAllCategories(guildId: Snowflake? = null): Set<String>","description":"dev.kordex.modules.func.tags.data.TagsData.getAllCategories","location":"modules/functionality/func-tags/dev.kordex.modules.func.tags.data/-tags-data/get-all-categories.html","searchKeys":["getAllCategories","abstract suspend fun getAllCategories(guildId: Snowflake? = null): Set<String>","dev.kordex.modules.func.tags.data.TagsData.getAllCategories"]},{"name":"abstract suspend fun getLoggingChannelOrNull(guild: Guild): GuildMessageChannel?","description":"dev.kordex.modules.func.tags.config.TagsConfig.getLoggingChannelOrNull","location":"modules/functionality/func-tags/dev.kordex.modules.func.tags.config/-tags-config/get-logging-channel-or-null.html","searchKeys":["getLoggingChannelOrNull","abstract suspend fun getLoggingChannelOrNull(guild: Guild): GuildMessageChannel?","dev.kordex.modules.func.tags.config.TagsConfig.getLoggingChannelOrNull"]},{"name":"abstract suspend fun getStaffCommandChecks(): List<Check<*>>","description":"dev.kordex.modules.func.tags.config.TagsConfig.getStaffCommandChecks","location":"modules/functionality/func-tags/dev.kordex.modules.func.tags.config/-tags-config/get-staff-command-checks.html","searchKeys":["getStaffCommandChecks","abstract suspend fun getStaffCommandChecks(): List<Check<*>>","dev.kordex.modules.func.tags.config.TagsConfig.getStaffCommandChecks"]},{"name":"abstract suspend fun getTagByKey(key: String, guildId: Snowflake? = null): Tag?","description":"dev.kordex.modules.func.tags.data.TagsData.getTagByKey","location":"modules/functionality/func-tags/dev.kordex.modules.func.tags.data/-tags-data/get-tag-by-key.html","searchKeys":["getTagByKey","abstract suspend fun getTagByKey(key: String, guildId: Snowflake? = null): Tag?","dev.kordex.modules.func.tags.data.TagsData.getTagByKey"]},{"name":"abstract suspend fun getTagFormatter(): TagFormatter","description":"dev.kordex.modules.func.tags.config.TagsConfig.getTagFormatter","location":"modules/functionality/func-tags/dev.kordex.modules.func.tags.config/-tags-config/get-tag-formatter.html","searchKeys":["getTagFormatter","abstract suspend fun getTagFormatter(): TagFormatter","dev.kordex.modules.func.tags.config.TagsConfig.getTagFormatter"]},{"name":"abstract suspend fun getTagsByCategory(category: String, guildId: Snowflake? = null): List<Tag>","description":"dev.kordex.modules.func.tags.data.TagsData.getTagsByCategory","location":"modules/functionality/func-tags/dev.kordex.modules.func.tags.data/-tags-data/get-tags-by-category.html","searchKeys":["getTagsByCategory","abstract suspend fun getTagsByCategory(category: String, guildId: Snowflake? = null): List<Tag>","dev.kordex.modules.func.tags.data.TagsData.getTagsByCategory"]},{"name":"abstract suspend fun getTagsByPartialKey(partialKey: String, guildId: Snowflake? = null): List<Tag>","description":"dev.kordex.modules.func.tags.data.TagsData.getTagsByPartialKey","location":"modules/functionality/func-tags/dev.kordex.modules.func.tags.data/-tags-data/get-tags-by-partial-key.html","searchKeys":["getTagsByPartialKey","abstract suspend fun getTagsByPartialKey(partialKey: String, guildId: Snowflake? = null): List<Tag>","dev.kordex.modules.func.tags.data.TagsData.getTagsByPartialKey"]},{"name":"abstract suspend fun getTagsByPartialTitle(partialTitle: String, guildId: Snowflake? = null): List<Tag>","description":"dev.kordex.modules.func.tags.data.TagsData.getTagsByPartialTitle","location":"modules/functionality/func-tags/dev.kordex.modules.func.tags.data/-tags-data/get-tags-by-partial-title.html","searchKeys":["getTagsByPartialTitle","abstract suspend fun getTagsByPartialTitle(partialTitle: String, guildId: Snowflake? = null): List<Tag>","dev.kordex.modules.func.tags.data.TagsData.getTagsByPartialTitle"]},{"name":"abstract suspend fun getUserCommandChecks(): List<Check<*>>","description":"dev.kordex.modules.func.tags.config.TagsConfig.getUserCommandChecks","location":"modules/functionality/func-tags/dev.kordex.modules.func.tags.config/-tags-config/get-user-command-checks.html","searchKeys":["getUserCommandChecks","abstract suspend fun getUserCommandChecks(): List<Check<*>>","dev.kordex.modules.func.tags.config.TagsConfig.getUserCommandChecks"]},{"name":"abstract suspend fun setTag(tag: Tag)","description":"dev.kordex.modules.func.tags.data.TagsData.setTag","location":"modules/functionality/func-tags/dev.kordex.modules.func.tags.data/-tags-data/set-tag.html","searchKeys":["setTag","abstract suspend fun setTag(tag: Tag)","dev.kordex.modules.func.tags.data.TagsData.setTag"]},{"name":"class Builder","description":"dev.kordex.modules.func.tags.config.SimpleTagsConfig.Builder","location":"modules/functionality/func-tags/dev.kordex.modules.func.tags.config/-simple-tags-config/-builder/index.html","searchKeys":["Builder","class Builder","dev.kordex.modules.func.tags.config.SimpleTagsConfig.Builder"]},{"name":"class MemoryTagsData : TagsData","description":"dev.kordex.modules.func.tags.data.MemoryTagsData","location":"modules/functionality/func-tags/dev.kordex.modules.func.tags.data/-memory-tags-data/index.html","searchKeys":["MemoryTagsData","class MemoryTagsData : TagsData","dev.kordex.modules.func.tags.data.MemoryTagsData"]},{"name":"class SimpleTagsConfig(builder: SimpleTagsConfig.Builder) : TagsConfig","description":"dev.kordex.modules.func.tags.config.SimpleTagsConfig","location":"modules/functionality/func-tags/dev.kordex.modules.func.tags.config/-simple-tags-config/index.html","searchKeys":["SimpleTagsConfig","class SimpleTagsConfig(builder: SimpleTagsConfig.Builder) : TagsConfig","dev.kordex.modules.func.tags.config.SimpleTagsConfig"]},{"name":"class TagsExtension : Extension","description":"dev.kordex.modules.func.tags.TagsExtension","location":"modules/functionality/func-tags/dev.kordex.modules.func.tags/-tags-extension/index.html","searchKeys":["TagsExtension","class TagsExtension : Extension","dev.kordex.modules.func.tags.TagsExtension"]},{"name":"constructor()","description":"dev.kordex.modules.func.tags.TagsExtension.TagsExtension","location":"modules/functionality/func-tags/dev.kordex.modules.func.tags/-tags-extension/-tags-extension.html","searchKeys":["TagsExtension","constructor()","dev.kordex.modules.func.tags.TagsExtension.TagsExtension"]},{"name":"constructor()","description":"dev.kordex.modules.func.tags.config.SimpleTagsConfig.Builder.Builder","location":"modules/functionality/func-tags/dev.kordex.modules.func.tags.config/-simple-tags-config/-builder/-builder.html","searchKeys":["Builder","constructor()","dev.kordex.modules.func.tags.config.SimpleTagsConfig.Builder.Builder"]},{"name":"constructor()","description":"dev.kordex.modules.func.tags.data.MemoryTagsData.MemoryTagsData","location":"modules/functionality/func-tags/dev.kordex.modules.func.tags.data/-memory-tags-data/-memory-tags-data.html","searchKeys":["MemoryTagsData","constructor()","dev.kordex.modules.func.tags.data.MemoryTagsData.MemoryTagsData"]},{"name":"constructor(builder: SimpleTagsConfig.Builder)","description":"dev.kordex.modules.func.tags.config.SimpleTagsConfig.SimpleTagsConfig","location":"modules/functionality/func-tags/dev.kordex.modules.func.tags.config/-simple-tags-config/-simple-tags-config.html","searchKeys":["SimpleTagsConfig","constructor(builder: SimpleTagsConfig.Builder)","dev.kordex.modules.func.tags.config.SimpleTagsConfig.SimpleTagsConfig"]},{"name":"constructor(category: String, description: String, key: String, title: String, color: Color? = null, guildId: Snowflake? = null, image: String? = null)","description":"dev.kordex.modules.func.tags.data.Tag.Tag","location":"modules/functionality/func-tags/dev.kordex.modules.func.tags.data/-tag/-tag.html","searchKeys":["Tag","constructor(category: String, description: String, key: String, title: String, color: Color? = null, guildId: Snowflake? = null, image: String? = null)","dev.kordex.modules.func.tags.data.Tag.Tag"]},{"name":"data class Tag(val category: String, val description: String, val key: String, val title: String, val color: Color? = null, val guildId: Snowflake? = null, val image: String? = null)","description":"dev.kordex.modules.func.tags.data.Tag","location":"modules/functionality/func-tags/dev.kordex.modules.func.tags.data/-tag/index.html","searchKeys":["Tag","data class Tag(val category: String, val description: String, val key: String, val title: String, val color: Color? = null, val guildId: Snowflake? = null, val image: String? = null)","dev.kordex.modules.func.tags.data.Tag"]},{"name":"fun ExtensionsBuilder.tags(config: TagsConfig, data: TagsData)","description":"dev.kordex.modules.func.tags.tags","location":"modules/functionality/func-tags/dev.kordex.modules.func.tags/tags.html","searchKeys":["tags","fun ExtensionsBuilder.tags(config: TagsConfig, data: TagsData)","dev.kordex.modules.func.tags.tags"]},{"name":"fun ExtensionsBuilder.tags(data: TagsData, body: SimpleTagsConfig.Builder.() -> Unit)","description":"dev.kordex.modules.func.tags.tags","location":"modules/functionality/func-tags/dev.kordex.modules.func.tags/tags.html","searchKeys":["tags","fun ExtensionsBuilder.tags(data: TagsData, body: SimpleTagsConfig.Builder.() -> Unit)","dev.kordex.modules.func.tags.tags"]},{"name":"fun SimpleTagsConfig(body: SimpleTagsConfig.Builder.() -> Unit): SimpleTagsConfig","description":"dev.kordex.modules.func.tags.config.SimpleTagsConfig","location":"modules/functionality/func-tags/dev.kordex.modules.func.tags.config/-simple-tags-config.html","searchKeys":["SimpleTagsConfig","fun SimpleTagsConfig(body: SimpleTagsConfig.Builder.() -> Unit): SimpleTagsConfig","dev.kordex.modules.func.tags.config.SimpleTagsConfig"]},{"name":"fun String?.nullIfBlank(): String?","description":"dev.kordex.modules.func.tags.nullIfBlank","location":"modules/functionality/func-tags/dev.kordex.modules.func.tags/null-if-blank.html","searchKeys":["nullIfBlank","fun String?.nullIfBlank(): String?","dev.kordex.modules.func.tags.nullIfBlank"]},{"name":"fun staffCommandCheck(body: Check<*>)","description":"dev.kordex.modules.func.tags.config.SimpleTagsConfig.Builder.staffCommandCheck","location":"modules/functionality/func-tags/dev.kordex.modules.func.tags.config/-simple-tags-config/-builder/staff-command-check.html","searchKeys":["staffCommandCheck","fun staffCommandCheck(body: Check<*>)","dev.kordex.modules.func.tags.config.SimpleTagsConfig.Builder.staffCommandCheck"]},{"name":"fun userCommandCheck(body: Check<*>)","description":"dev.kordex.modules.func.tags.config.SimpleTagsConfig.Builder.userCommandCheck","location":"modules/functionality/func-tags/dev.kordex.modules.func.tags.config/-simple-tags-config/-builder/user-command-check.html","searchKeys":["userCommandCheck","fun userCommandCheck(body: Check<*>)","dev.kordex.modules.func.tags.config.SimpleTagsConfig.Builder.userCommandCheck"]},{"name":"interface TagsConfig","description":"dev.kordex.modules.func.tags.config.TagsConfig","location":"modules/functionality/func-tags/dev.kordex.modules.func.tags.config/-tags-config/index.html","searchKeys":["TagsConfig","interface TagsConfig","dev.kordex.modules.func.tags.config.TagsConfig"]},{"name":"interface TagsData","description":"dev.kordex.modules.func.tags.data.TagsData","location":"modules/functionality/func-tags/dev.kordex.modules.func.tags.data/-tags-data/index.html","searchKeys":["TagsData","interface TagsData","dev.kordex.modules.func.tags.data.TagsData"]},{"name":"open override val name: String","description":"dev.kordex.modules.func.tags.TagsExtension.name","location":"modules/functionality/func-tags/dev.kordex.modules.func.tags/-tags-extension/name.html","searchKeys":["name","open override val name: String","dev.kordex.modules.func.tags.TagsExtension.name"]},{"name":"open suspend fun deleteTag(tag: Tag): Tag?","description":"dev.kordex.modules.func.tags.data.TagsData.deleteTag","location":"modules/functionality/func-tags/dev.kordex.modules.func.tags.data/-tags-data/delete-tag.html","searchKeys":["deleteTag","open suspend fun deleteTag(tag: Tag): Tag?","dev.kordex.modules.func.tags.data.TagsData.deleteTag"]},{"name":"open suspend fun getLoggingChannel(guild: Guild): GuildMessageChannel","description":"dev.kordex.modules.func.tags.config.TagsConfig.getLoggingChannel","location":"modules/functionality/func-tags/dev.kordex.modules.func.tags.config/-tags-config/get-logging-channel.html","searchKeys":["getLoggingChannel","open suspend fun getLoggingChannel(guild: Guild): GuildMessageChannel","dev.kordex.modules.func.tags.config.TagsConfig.getLoggingChannel"]},{"name":"open suspend override fun deleteTagByKey(key: String, guildId: Snowflake?): Tag?","description":"dev.kordex.modules.func.tags.data.MemoryTagsData.deleteTagByKey","location":"modules/functionality/func-tags/dev.kordex.modules.func.tags.data/-memory-tags-data/delete-tag-by-key.html","searchKeys":["deleteTagByKey","open suspend override fun deleteTagByKey(key: String, guildId: Snowflake?): Tag?","dev.kordex.modules.func.tags.data.MemoryTagsData.deleteTagByKey"]},{"name":"open suspend override fun findTags(category: String?, guildId: Snowflake?, key: String?): List<Tag>","description":"dev.kordex.modules.func.tags.data.MemoryTagsData.findTags","location":"modules/functionality/func-tags/dev.kordex.modules.func.tags.data/-memory-tags-data/find-tags.html","searchKeys":["findTags","open suspend override fun findTags(category: String?, guildId: Snowflake?, key: String?): List<Tag>","dev.kordex.modules.func.tags.data.MemoryTagsData.findTags"]},{"name":"open suspend override fun getAllCategories(guildId: Snowflake?): Set<String>","description":"dev.kordex.modules.func.tags.data.MemoryTagsData.getAllCategories","location":"modules/functionality/func-tags/dev.kordex.modules.func.tags.data/-memory-tags-data/get-all-categories.html","searchKeys":["getAllCategories","open suspend override fun getAllCategories(guildId: Snowflake?): Set<String>","dev.kordex.modules.func.tags.data.MemoryTagsData.getAllCategories"]},{"name":"open suspend override fun getLoggingChannelOrNull(guild: Guild): GuildMessageChannel?","description":"dev.kordex.modules.func.tags.config.SimpleTagsConfig.getLoggingChannelOrNull","location":"modules/functionality/func-tags/dev.kordex.modules.func.tags.config/-simple-tags-config/get-logging-channel-or-null.html","searchKeys":["getLoggingChannelOrNull","open suspend override fun getLoggingChannelOrNull(guild: Guild): GuildMessageChannel?","dev.kordex.modules.func.tags.config.SimpleTagsConfig.getLoggingChannelOrNull"]},{"name":"open suspend override fun getStaffCommandChecks(): List<Check<*>>","description":"dev.kordex.modules.func.tags.config.SimpleTagsConfig.getStaffCommandChecks","location":"modules/functionality/func-tags/dev.kordex.modules.func.tags.config/-simple-tags-config/get-staff-command-checks.html","searchKeys":["getStaffCommandChecks","open suspend override fun getStaffCommandChecks(): List<Check<*>>","dev.kordex.modules.func.tags.config.SimpleTagsConfig.getStaffCommandChecks"]},{"name":"open suspend override fun getTagByKey(key: String, guildId: Snowflake?): Tag?","description":"dev.kordex.modules.func.tags.data.MemoryTagsData.getTagByKey","location":"modules/functionality/func-tags/dev.kordex.modules.func.tags.data/-memory-tags-data/get-tag-by-key.html","searchKeys":["getTagByKey","open suspend override fun getTagByKey(key: String, guildId: Snowflake?): Tag?","dev.kordex.modules.func.tags.data.MemoryTagsData.getTagByKey"]},{"name":"open suspend override fun getTagFormatter(): TagFormatter","description":"dev.kordex.modules.func.tags.config.SimpleTagsConfig.getTagFormatter","location":"modules/functionality/func-tags/dev.kordex.modules.func.tags.config/-simple-tags-config/get-tag-formatter.html","searchKeys":["getTagFormatter","open suspend override fun getTagFormatter(): TagFormatter","dev.kordex.modules.func.tags.config.SimpleTagsConfig.getTagFormatter"]},{"name":"open suspend override fun getTagsByCategory(category: String, guildId: Snowflake?): List<Tag>","description":"dev.kordex.modules.func.tags.data.MemoryTagsData.getTagsByCategory","location":"modules/functionality/func-tags/dev.kordex.modules.func.tags.data/-memory-tags-data/get-tags-by-category.html","searchKeys":["getTagsByCategory","open suspend override fun getTagsByCategory(category: String, guildId: Snowflake?): List<Tag>","dev.kordex.modules.func.tags.data.MemoryTagsData.getTagsByCategory"]},{"name":"open suspend override fun getTagsByPartialKey(partialKey: String, guildId: Snowflake?): List<Tag>","description":"dev.kordex.modules.func.tags.data.MemoryTagsData.getTagsByPartialKey","location":"modules/functionality/func-tags/dev.kordex.modules.func.tags.data/-memory-tags-data/get-tags-by-partial-key.html","searchKeys":["getTagsByPartialKey","open suspend override fun getTagsByPartialKey(partialKey: String, guildId: Snowflake?): List<Tag>","dev.kordex.modules.func.tags.data.MemoryTagsData.getTagsByPartialKey"]},{"name":"open suspend override fun getTagsByPartialTitle(partialTitle: String, guildId: Snowflake?): List<Tag>","description":"dev.kordex.modules.func.tags.data.MemoryTagsData.getTagsByPartialTitle","location":"modules/functionality/func-tags/dev.kordex.modules.func.tags.data/-memory-tags-data/get-tags-by-partial-title.html","searchKeys":["getTagsByPartialTitle","open suspend override fun getTagsByPartialTitle(partialTitle: String, guildId: Snowflake?): List<Tag>","dev.kordex.modules.func.tags.data.MemoryTagsData.getTagsByPartialTitle"]},{"name":"open suspend override fun getUserCommandChecks(): List<Check<*>>","description":"dev.kordex.modules.func.tags.config.SimpleTagsConfig.getUserCommandChecks","location":"modules/functionality/func-tags/dev.kordex.modules.func.tags.config/-simple-tags-config/get-user-command-checks.html","searchKeys":["getUserCommandChecks","open suspend override fun getUserCommandChecks(): List<Check<*>>","dev.kordex.modules.func.tags.config.SimpleTagsConfig.getUserCommandChecks"]},{"name":"open suspend override fun setTag(tag: Tag)","description":"dev.kordex.modules.func.tags.data.MemoryTagsData.setTag","location":"modules/functionality/func-tags/dev.kordex.modules.func.tags.data/-memory-tags-data/set-tag.html","searchKeys":["setTag","open suspend override fun setTag(tag: Tag)","dev.kordex.modules.func.tags.data.MemoryTagsData.setTag"]},{"name":"open suspend override fun setup()","description":"dev.kordex.modules.func.tags.TagsExtension.setup","location":"modules/functionality/func-tags/dev.kordex.modules.func.tags/-tags-extension/setup.html","searchKeys":["setup","open suspend override fun setup()","dev.kordex.modules.func.tags.TagsExtension.setup"]},{"name":"typealias TagFormatter = suspend MessageCreateBuilder.(tag: Tag) -> Unit","description":"dev.kordex.modules.func.tags.TagFormatter","location":"modules/functionality/func-tags/dev.kordex.modules.func.tags/-tag-formatter/index.html","searchKeys":["TagFormatter","typealias TagFormatter = suspend MessageCreateBuilder.(tag: Tag) -> Unit","dev.kordex.modules.func.tags.TagFormatter"]},{"name":"val category: String","description":"dev.kordex.modules.func.tags.data.Tag.category","location":"modules/functionality/func-tags/dev.kordex.modules.func.tags.data/-tag/category.html","searchKeys":["category","val category: String","dev.kordex.modules.func.tags.data.Tag.category"]},{"name":"val color: Color? = null","description":"dev.kordex.modules.func.tags.data.Tag.color","location":"modules/functionality/func-tags/dev.kordex.modules.func.tags.data/-tag/color.html","searchKeys":["color","val color: Color? = null","dev.kordex.modules.func.tags.data.Tag.color"]},{"name":"val description: String","description":"dev.kordex.modules.func.tags.data.Tag.description","location":"modules/functionality/func-tags/dev.kordex.modules.func.tags.data/-tag/description.html","searchKeys":["description","val description: String","dev.kordex.modules.func.tags.data.Tag.description"]},{"name":"val guildId: Snowflake? = null","description":"dev.kordex.modules.func.tags.data.Tag.guildId","location":"modules/functionality/func-tags/dev.kordex.modules.func.tags.data/-tag/guild-id.html","searchKeys":["guildId","val guildId: Snowflake? = null","dev.kordex.modules.func.tags.data.Tag.guildId"]},{"name":"val image: String? = null","description":"dev.kordex.modules.func.tags.data.Tag.image","location":"modules/functionality/func-tags/dev.kordex.modules.func.tags.data/-tag/image.html","searchKeys":["image","val image: String? = null","dev.kordex.modules.func.tags.data.Tag.image"]},{"name":"val key: String","description":"dev.kordex.modules.func.tags.data.Tag.key","location":"modules/functionality/func-tags/dev.kordex.modules.func.tags.data/-tag/key.html","searchKeys":["key","val key: String","dev.kordex.modules.func.tags.data.Tag.key"]},{"name":"val tagsConfig: TagsConfig","description":"dev.kordex.modules.func.tags.TagsExtension.tagsConfig","location":"modules/functionality/func-tags/dev.kordex.modules.func.tags/-tags-extension/tags-config.html","searchKeys":["tagsConfig","val tagsConfig: TagsConfig","dev.kordex.modules.func.tags.TagsExtension.tagsConfig"]},{"name":"val tagsData: TagsData","description":"dev.kordex.modules.func.tags.TagsExtension.tagsData","location":"modules/functionality/func-tags/dev.kordex.modules.func.tags/-tags-extension/tags-data.html","searchKeys":["tagsData","val tagsData: TagsData","dev.kordex.modules.func.tags.TagsExtension.tagsData"]},{"name":"val title: String","description":"dev.kordex.modules.func.tags.data.Tag.title","location":"modules/functionality/func-tags/dev.kordex.modules.func.tags.data/-tag/title.html","searchKeys":["title","val title: String","dev.kordex.modules.func.tags.data.Tag.title"]},{"name":"var loggingChannelName: String?","description":"dev.kordex.modules.func.tags.config.SimpleTagsConfig.Builder.loggingChannelName","location":"modules/functionality/func-tags/dev.kordex.modules.func.tags.config/-simple-tags-config/-builder/logging-channel-name.html","searchKeys":["loggingChannelName","var loggingChannelName: String?","dev.kordex.modules.func.tags.config.SimpleTagsConfig.Builder.loggingChannelName"]},{"name":"var tagFormatter: TagFormatter","description":"dev.kordex.modules.func.tags.config.SimpleTagsConfig.Builder.tagFormatter","location":"modules/functionality/func-tags/dev.kordex.modules.func.tags.config/-simple-tags-config/-builder/tag-formatter.html","searchKeys":["tagFormatter","var tagFormatter: TagFormatter","dev.kordex.modules.func.tags.config.SimpleTagsConfig.Builder.tagFormatter"]},{"name":"abstract class Block","description":"dev.kordex.modules.web.core.backend.pages.Block","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.pages/-block/index.html","searchKeys":["Block","abstract class Block","dev.kordex.modules.web.core.backend.pages.Block"]},{"name":"abstract class Page","description":"dev.kordex.modules.web.core.backend.pages.Page","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.pages/-page/index.html","searchKeys":["Page","abstract class Page","dev.kordex.modules.web.core.backend.pages.Page"]},{"name":"abstract class Route(val extension: String)","description":"dev.kordex.modules.web.core.backend.routes.Route","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.routes/-route/index.html","searchKeys":["Route","abstract class Route(val extension: String)","dev.kordex.modules.web.core.backend.routes.Route"]},{"name":"abstract class Value<I, O, T : Any>","description":"dev.kordex.modules.web.core.backend.values.types.Value","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.values.types/-value/index.html","searchKeys":["Value","abstract class Value<I, O, T : Any>","dev.kordex.modules.web.core.backend.values.types.Value"]},{"name":"abstract class Websocket(val session: DefaultWebSocketServerSession)","description":"dev.kordex.modules.web.core.backend.websockets.Websocket","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.websockets/-websocket/index.html","searchKeys":["Websocket","abstract class Websocket(val session: DefaultWebSocketServerSession)","dev.kordex.modules.web.core.backend.websockets.Websocket"]},{"name":"abstract fun read(): O","description":"dev.kordex.modules.web.core.backend.values.types.Value.read","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.values.types/-value/read.html","searchKeys":["read","abstract fun read(): O","dev.kordex.modules.web.core.backend.values.types.Value.read"]},{"name":"abstract fun write(value: I)","description":"dev.kordex.modules.web.core.backend.values.types.Value.write","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.values.types/-value/write.html","searchKeys":["write","abstract fun write(value: I)","dev.kordex.modules.web.core.backend.values.types.Value.write"]},{"name":"abstract suspend fun handle(frame: Frame)","description":"dev.kordex.modules.web.core.backend.websockets.Websocket.handle","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.websockets/-websocket/handle.html","searchKeys":["handle","abstract suspend fun handle(frame: Frame)","dev.kordex.modules.web.core.backend.websockets.Websocket.handle"]},{"name":"abstract val identifier: Identifier","description":"dev.kordex.modules.web.core.backend.values.types.Value.identifier","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.values.types/-value/identifier.html","searchKeys":["identifier","abstract val identifier: Identifier","dev.kordex.modules.web.core.backend.values.types.Value.identifier"]},{"name":"abstract val path: String","description":"dev.kordex.modules.web.core.backend.pages.Page.path","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.pages/-page/path.html","searchKeys":["path","abstract val path: String","dev.kordex.modules.web.core.backend.pages.Page.path"]},{"name":"abstract val path: String","description":"dev.kordex.modules.web.core.backend.routes.Route.path","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.routes/-route/path.html","searchKeys":["path","abstract val path: String","dev.kordex.modules.web.core.backend.routes.Route.path"]},{"name":"abstract val serializer: KSerializer<T>","description":"dev.kordex.modules.web.core.backend.values.types.Value.serializer","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.values.types/-value/serializer.html","searchKeys":["serializer","abstract val serializer: KSerializer<T>","dev.kordex.modules.web.core.backend.values.types.Value.serializer"]},{"name":"class Builder","description":"dev.kordex.modules.web.core.backend.pages.navigation.NavigationItem.Builder","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.pages.navigation/-navigation-item/-builder/index.html","searchKeys":["Builder","class Builder","dev.kordex.modules.web.core.backend.pages.navigation.NavigationItem.Builder"]},{"name":"class DenyBuilder : KordExKoinComponent","description":"dev.kordex.modules.web.core.backend.routes.utils.DenyBuilder","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.routes.utils/-deny-builder/index.html","searchKeys":["DenyBuilder","class DenyBuilder : KordExKoinComponent","dev.kordex.modules.web.core.backend.routes.utils.DenyBuilder"]},{"name":"class ExtensionNavigation(val extension: String, val icon: Identifier, val setup: ExtensionNavigation.() -> Unit)","description":"dev.kordex.modules.web.core.backend.pages.navigation.ExtensionNavigation","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.pages.navigation/-extension-navigation/index.html","searchKeys":["ExtensionNavigation","class ExtensionNavigation(val extension: String, val icon: Identifier, val setup: ExtensionNavigation.() -> Unit)","dev.kordex.modules.web.core.backend.pages.navigation.ExtensionNavigation"]},{"name":"class IdentifierSerializer : KSerializer<Identifier> ","description":"dev.kordex.modules.web.core.backend.types.IdentifierSerializer","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.types/-identifier-serializer/index.html","searchKeys":["IdentifierSerializer","class IdentifierSerializer : KSerializer<Identifier> ","dev.kordex.modules.web.core.backend.types.IdentifierSerializer"]},{"name":"class NavigationRegistry","description":"dev.kordex.modules.web.core.backend.pages.navigation.NavigationRegistry","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.pages.navigation/-navigation-registry/index.html","searchKeys":["NavigationRegistry","class NavigationRegistry","dev.kordex.modules.web.core.backend.pages.navigation.NavigationRegistry"]},{"name":"class RouteRegistry : KordExKoinComponent","description":"dev.kordex.modules.web.core.backend.routes.RouteRegistry","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.routes/-route-registry/index.html","searchKeys":["RouteRegistry","class RouteRegistry : KordExKoinComponent","dev.kordex.modules.web.core.backend.routes.RouteRegistry"]},{"name":"class SimpleValue<T : Any>(val identifier: Identifier, val writable: Boolean, val serializer: KSerializer<T>) : Value<T?, T?, T> ","description":"dev.kordex.modules.web.core.backend.values.types.SimpleValue","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.values.types/-simple-value/index.html","searchKeys":["SimpleValue","class SimpleValue<T : Any>(val identifier: Identifier, val writable: Boolean, val serializer: KSerializer<T>) : Value<T?, T?, T> ","dev.kordex.modules.web.core.backend.values.types.SimpleValue"]},{"name":"class SimpleValueSerializer<T : Any>(dataSerializer: KSerializer<T>) : KSerializer<SimpleValue<T>> ","description":"dev.kordex.modules.web.core.backend.values.serializers.SimpleValueSerializer","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.values.serializers/-simple-value-serializer/index.html","searchKeys":["SimpleValueSerializer","class SimpleValueSerializer<T : Any>(dataSerializer: KSerializer<T>) : KSerializer<SimpleValue<T>> ","dev.kordex.modules.web.core.backend.values.serializers.SimpleValueSerializer"]},{"name":"class TextLabel(val text: String) : Block","description":"dev.kordex.modules.web.core.backend.pages.blocks.labels.TextLabel","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.pages.blocks.labels/-text-label/index.html","searchKeys":["TextLabel","class TextLabel(val text: String) : Block","dev.kordex.modules.web.core.backend.pages.blocks.labels.TextLabel"]},{"name":"class TimedContainerSerializer<T>(dataSerializer: KSerializer<T>) : KSerializer<TimedContainer<T>> ","description":"dev.kordex.modules.web.core.backend.values.serializers.TimedContainerSerializer","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.values.serializers/-timed-container-serializer/index.html","searchKeys":["TimedContainerSerializer","class TimedContainerSerializer<T>(dataSerializer: KSerializer<T>) : KSerializer<TimedContainer<T>> ","dev.kordex.modules.web.core.backend.values.serializers.TimedContainerSerializer"]},{"name":"class TrackedValue<T : Any>(val identifier: Identifier, val maxValues: Int = 48, val precision: ValueInterval = ValueInterval.HalfHour, val serializer: KSerializer<T>) : Value<T?, List<TimedContainer<T?>>, T> ","description":"dev.kordex.modules.web.core.backend.values.types.TrackedValue","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.values.types/-tracked-value/index.html","searchKeys":["TrackedValue","class TrackedValue<T : Any>(val identifier: Identifier, val maxValues: Int = 48, val precision: ValueInterval = ValueInterval.HalfHour, val serializer: KSerializer<T>) : Value<T?, List<TimedContainer<T?>>, T> ","dev.kordex.modules.web.core.backend.values.types.TrackedValue"]},{"name":"class TrackedValueSerializer<T : Any>(dataSerializer: KSerializer<T>) : KSerializer<TrackedValue<T>> ","description":"dev.kordex.modules.web.core.backend.values.serializers.TrackedValueSerializer","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.values.serializers/-tracked-value-serializer/index.html","searchKeys":["TrackedValueSerializer","class TrackedValueSerializer<T : Any>(dataSerializer: KSerializer<T>) : KSerializer<TrackedValue<T>> ","dev.kordex.modules.web.core.backend.values.serializers.TrackedValueSerializer"]},{"name":"class ValueLabel(val value: String, val template: String = \"\") : Block","description":"dev.kordex.modules.web.core.backend.pages.blocks.labels.ValueLabel","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.pages.blocks.labels/-value-label/index.html","searchKeys":["ValueLabel","class ValueLabel(val value: String, val template: String = \"\") : Block","dev.kordex.modules.web.core.backend.pages.blocks.labels.ValueLabel"]},{"name":"class WebExtension(config: WebServerConfig) : Extension","description":"dev.kordex.modules.web.core.backend.WebExtension","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend/-web-extension/index.html","searchKeys":["WebExtension","class WebExtension(config: WebServerConfig) : Extension","dev.kordex.modules.web.core.backend.WebExtension"]},{"name":"class WebRegistries","description":"dev.kordex.modules.web.core.backend.WebRegistries","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend/-web-registries/index.html","searchKeys":["WebRegistries","class WebRegistries","dev.kordex.modules.web.core.backend.WebRegistries"]},{"name":"class WebServer(config: WebServerConfig) : KordExKoinComponent","description":"dev.kordex.modules.web.core.backend.server.WebServer","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.server/-web-server/index.html","searchKeys":["WebServer","class WebServer(config: WebServerConfig) : KordExKoinComponent","dev.kordex.modules.web.core.backend.server.WebServer"]},{"name":"class WebServerConfig","description":"dev.kordex.modules.web.core.backend.config.WebServerConfig","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.config/-web-server-config/index.html","searchKeys":["WebServerConfig","class WebServerConfig","dev.kordex.modules.web.core.backend.config.WebServerConfig"]},{"name":"class WebServerStartEvent(val server: WebServer) : KordExEvent","description":"dev.kordex.modules.web.core.backend.events.WebServerStartEvent","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.events/-web-server-start-event/index.html","searchKeys":["WebServerStartEvent","class WebServerStartEvent(val server: WebServer) : KordExEvent","dev.kordex.modules.web.core.backend.events.WebServerStartEvent"]},{"name":"class WebServerStopEvent : KordExEvent","description":"dev.kordex.modules.web.core.backend.events.WebServerStopEvent","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.events/-web-server-stop-event/index.html","searchKeys":["WebServerStopEvent","class WebServerStopEvent : KordExEvent","dev.kordex.modules.web.core.backend.events.WebServerStopEvent"]},{"name":"class WebsocketRegistry : KordExKoinComponent","description":"dev.kordex.modules.web.core.backend.websockets.WebsocketRegistry","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.websockets/-websocket-registry/index.html","searchKeys":["WebsocketRegistry","class WebsocketRegistry : KordExKoinComponent","dev.kordex.modules.web.core.backend.websockets.WebsocketRegistry"]},{"name":"constructor()","description":"dev.kordex.modules.web.core.backend.WebRegistries.WebRegistries","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend/-web-registries/-web-registries.html","searchKeys":["WebRegistries","constructor()","dev.kordex.modules.web.core.backend.WebRegistries.WebRegistries"]},{"name":"constructor()","description":"dev.kordex.modules.web.core.backend.config.WebServerConfig.OAuth.OAuth","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.config/-web-server-config/-o-auth/-o-auth.html","searchKeys":["OAuth","constructor()","dev.kordex.modules.web.core.backend.config.WebServerConfig.OAuth.OAuth"]},{"name":"constructor()","description":"dev.kordex.modules.web.core.backend.config.WebServerConfig.ReverseProxy.ReverseProxy","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.config/-web-server-config/-reverse-proxy/-reverse-proxy.html","searchKeys":["ReverseProxy","constructor()","dev.kordex.modules.web.core.backend.config.WebServerConfig.ReverseProxy.ReverseProxy"]},{"name":"constructor()","description":"dev.kordex.modules.web.core.backend.config.WebServerConfig.WebServerConfig","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.config/-web-server-config/-web-server-config.html","searchKeys":["WebServerConfig","constructor()","dev.kordex.modules.web.core.backend.config.WebServerConfig.WebServerConfig"]},{"name":"constructor()","description":"dev.kordex.modules.web.core.backend.events.WebServerStopEvent.WebServerStopEvent","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.events/-web-server-stop-event/-web-server-stop-event.html","searchKeys":["WebServerStopEvent","constructor()","dev.kordex.modules.web.core.backend.events.WebServerStopEvent.WebServerStopEvent"]},{"name":"constructor()","description":"dev.kordex.modules.web.core.backend.pages.Block.Block","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.pages/-block/-block.html","searchKeys":["Block","constructor()","dev.kordex.modules.web.core.backend.pages.Block.Block"]},{"name":"constructor()","description":"dev.kordex.modules.web.core.backend.pages.Page.Page","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.pages/-page/-page.html","searchKeys":["Page","constructor()","dev.kordex.modules.web.core.backend.pages.Page.Page"]},{"name":"constructor()","description":"dev.kordex.modules.web.core.backend.pages.navigation.NavigationItem.Builder.Builder","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.pages.navigation/-navigation-item/-builder/-builder.html","searchKeys":["Builder","constructor()","dev.kordex.modules.web.core.backend.pages.navigation.NavigationItem.Builder.Builder"]},{"name":"constructor()","description":"dev.kordex.modules.web.core.backend.pages.navigation.NavigationRegistry.NavigationRegistry","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.pages.navigation/-navigation-registry/-navigation-registry.html","searchKeys":["NavigationRegistry","constructor()","dev.kordex.modules.web.core.backend.pages.navigation.NavigationRegistry.NavigationRegistry"]},{"name":"constructor()","description":"dev.kordex.modules.web.core.backend.routes.RouteRegistry.RouteRegistry","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.routes/-route-registry/-route-registry.html","searchKeys":["RouteRegistry","constructor()","dev.kordex.modules.web.core.backend.routes.RouteRegistry.RouteRegistry"]},{"name":"constructor()","description":"dev.kordex.modules.web.core.backend.routes.utils.DenyBuilder.DenyBuilder","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.routes.utils/-deny-builder/-deny-builder.html","searchKeys":["DenyBuilder","constructor()","dev.kordex.modules.web.core.backend.routes.utils.DenyBuilder.DenyBuilder"]},{"name":"constructor()","description":"dev.kordex.modules.web.core.backend.types.IdentifierSerializer.IdentifierSerializer","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.types/-identifier-serializer/-identifier-serializer.html","searchKeys":["IdentifierSerializer","constructor()","dev.kordex.modules.web.core.backend.types.IdentifierSerializer.IdentifierSerializer"]},{"name":"constructor()","description":"dev.kordex.modules.web.core.backend.values.types.Value.Value","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.values.types/-value/-value.html","searchKeys":["Value","constructor()","dev.kordex.modules.web.core.backend.values.types.Value.Value"]},{"name":"constructor()","description":"dev.kordex.modules.web.core.backend.websockets.WebsocketRegistry.WebsocketRegistry","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.websockets/-websocket-registry/-websocket-registry.html","searchKeys":["WebsocketRegistry","constructor()","dev.kordex.modules.web.core.backend.websockets.WebsocketRegistry.WebsocketRegistry"]},{"name":"constructor(block: (MutableOriginConnectionPoint, List<ForwardedHeaderValue>) -> Unit)","description":"dev.kordex.modules.web.core.backend.config.ForwardedHeaderStrategy.Custom.Custom","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.config/-forwarded-header-strategy/-custom/-custom.html","searchKeys":["Custom","constructor(block: (MutableOriginConnectionPoint, List<ForwardedHeaderValue>) -> Unit)","dev.kordex.modules.web.core.backend.config.ForwardedHeaderStrategy.Custom.Custom"]},{"name":"constructor(block: (MutableOriginConnectionPoint, XForwardedHeaderValues) -> Unit)","description":"dev.kordex.modules.web.core.backend.config.ForwardedHeaderStrategy.XCustom.XCustom","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.config/-forwarded-header-strategy/-x-custom/-x-custom.html","searchKeys":["XCustom","constructor(block: (MutableOriginConnectionPoint, XForwardedHeaderValues) -> Unit)","dev.kordex.modules.web.core.backend.config.ForwardedHeaderStrategy.XCustom.XCustom"]},{"name":"constructor(config: WebServerConfig)","description":"dev.kordex.modules.web.core.backend.WebExtension.WebExtension","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend/-web-extension/-web-extension.html","searchKeys":["WebExtension","constructor(config: WebServerConfig)","dev.kordex.modules.web.core.backend.WebExtension.WebExtension"]},{"name":"constructor(config: WebServerConfig)","description":"dev.kordex.modules.web.core.backend.server.WebServer.WebServer","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.server/-web-server/-web-server.html","searchKeys":["WebServer","constructor(config: WebServerConfig)","dev.kordex.modules.web.core.backend.server.WebServer.WebServer"]},{"name":"constructor(dataSerializer: KSerializer<T>)","description":"dev.kordex.modules.web.core.backend.values.serializers.SimpleValueSerializer.SimpleValueSerializer","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.values.serializers/-simple-value-serializer/-simple-value-serializer.html","searchKeys":["SimpleValueSerializer","constructor(dataSerializer: KSerializer<T>)","dev.kordex.modules.web.core.backend.values.serializers.SimpleValueSerializer.SimpleValueSerializer"]},{"name":"constructor(dataSerializer: KSerializer<T>)","description":"dev.kordex.modules.web.core.backend.values.serializers.TimedContainerSerializer.TimedContainerSerializer","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.values.serializers/-timed-container-serializer/-timed-container-serializer.html","searchKeys":["TimedContainerSerializer","constructor(dataSerializer: KSerializer<T>)","dev.kordex.modules.web.core.backend.values.serializers.TimedContainerSerializer.TimedContainerSerializer"]},{"name":"constructor(dataSerializer: KSerializer<T>)","description":"dev.kordex.modules.web.core.backend.values.serializers.TrackedValueSerializer.TrackedValueSerializer","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.values.serializers/-tracked-value-serializer/-tracked-value-serializer.html","searchKeys":["TrackedValueSerializer","constructor(dataSerializer: KSerializer<T>)","dev.kordex.modules.web.core.backend.values.serializers.TrackedValueSerializer.TrackedValueSerializer"]},{"name":"constructor(extension: String)","description":"dev.kordex.modules.web.core.backend.routes.Route.Route","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.routes/-route/-route.html","searchKeys":["Route","constructor(extension: String)","dev.kordex.modules.web.core.backend.routes.Route.Route"]},{"name":"constructor(extension: String, builder: WebsocketBuilderFun)","description":"dev.kordex.modules.web.core.backend.websockets.WebsocketBuilder.WebsocketBuilder","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.websockets/-websocket-builder/-websocket-builder.html","searchKeys":["WebsocketBuilder","constructor(extension: String, builder: WebsocketBuilderFun)","dev.kordex.modules.web.core.backend.websockets.WebsocketBuilder.WebsocketBuilder"]},{"name":"constructor(extension: String, icon: Identifier, setup: ExtensionNavigation.() -> Unit)","description":"dev.kordex.modules.web.core.backend.pages.navigation.ExtensionNavigation.ExtensionNavigation","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.pages.navigation/-extension-navigation/-extension-navigation.html","searchKeys":["ExtensionNavigation","constructor(extension: String, icon: Identifier, setup: ExtensionNavigation.() -> Unit)","dev.kordex.modules.web.core.backend.pages.navigation.ExtensionNavigation.ExtensionNavigation"]},{"name":"constructor(id: Snowflake, name: String?)","description":"dev.kordex.modules.web.core.backend.routes.utils.DenyBuilder.EntityInfo.EntityInfo","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.routes.utils/-deny-builder/-entity-info/-entity-info.html","searchKeys":["EntityInfo","constructor(id: Snowflake, name: String?)","dev.kordex.modules.web.core.backend.routes.utils.DenyBuilder.EntityInfo.EntityInfo"]},{"name":"constructor(identifier: Identifier, maxValues: Int = 48, precision: ValueInterval = ValueInterval.HalfHour, serializer: KSerializer<T>)","description":"dev.kordex.modules.web.core.backend.values.types.TrackedValue.TrackedValue","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.values.types/-tracked-value/-tracked-value.html","searchKeys":["TrackedValue","constructor(identifier: Identifier, maxValues: Int = 48, precision: ValueInterval = ValueInterval.HalfHour, serializer: KSerializer<T>)","dev.kordex.modules.web.core.backend.values.types.TrackedValue.TrackedValue"]},{"name":"constructor(identifier: Identifier, writable: Boolean, serializer: KSerializer<T>)","description":"dev.kordex.modules.web.core.backend.values.types.SimpleValue.SimpleValue","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.values.types/-simple-value/-simple-value.html","searchKeys":["SimpleValue","constructor(identifier: Identifier, writable: Boolean, serializer: KSerializer<T>)","dev.kordex.modules.web.core.backend.values.types.SimpleValue.SimpleValue"]},{"name":"constructor(known: List<String>)","description":"dev.kordex.modules.web.core.backend.config.ForwardedHeaderStrategy.SkipKnown.SkipKnown","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.config/-forwarded-header-strategy/-skip-known/-skip-known.html","searchKeys":["SkipKnown","constructor(known: List<String>)","dev.kordex.modules.web.core.backend.config.ForwardedHeaderStrategy.SkipKnown.SkipKnown"]},{"name":"constructor(message: String, statusCode: HttpStatusCode)","description":"dev.kordex.modules.web.core.backend.errors.WebError.WebError","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.errors/-web-error/-web-error.html","searchKeys":["WebError","constructor(message: String, statusCode: HttpStatusCode)","dev.kordex.modules.web.core.backend.errors.WebError.WebError"]},{"name":"constructor(name: String, icon: Identifier, page: String?, children: MutableList<NavigationItem> = mutableListOf())","description":"dev.kordex.modules.web.core.backend.pages.navigation.NavigationItem.NavigationItem","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.pages.navigation/-navigation-item/-navigation-item.html","searchKeys":["NavigationItem","constructor(name: String, icon: Identifier, page: String?, children: MutableList<NavigationItem> = mutableListOf())","dev.kordex.modules.web.core.backend.pages.navigation.NavigationItem.NavigationItem"]},{"name":"constructor(namespace: String, id: String)","description":"dev.kordex.modules.web.core.backend.types.Identifier.Identifier","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.types/-identifier/-identifier.html","searchKeys":["Identifier","constructor(namespace: String, id: String)","dev.kordex.modules.web.core.backend.types.Identifier.Identifier"]},{"name":"constructor(number: Int)","description":"dev.kordex.modules.web.core.backend.config.ForwardedHeaderStrategy.SkipLast.SkipLast","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.config/-forwarded-header-strategy/-skip-last/-skip-last.html","searchKeys":["SkipLast","constructor(number: Int)","dev.kordex.modules.web.core.backend.config.ForwardedHeaderStrategy.SkipLast.SkipLast"]},{"name":"constructor(server: WebServer)","description":"dev.kordex.modules.web.core.backend.events.WebServerStartEvent.WebServerStartEvent","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.events/-web-server-start-event/-web-server-start-event.html","searchKeys":["WebServerStartEvent","constructor(server: WebServer)","dev.kordex.modules.web.core.backend.events.WebServerStartEvent.WebServerStartEvent"]},{"name":"constructor(session: DefaultWebSocketServerSession)","description":"dev.kordex.modules.web.core.backend.websockets.Websocket.Websocket","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.websockets/-websocket/-websocket.html","searchKeys":["Websocket","constructor(session: DefaultWebSocketServerSession)","dev.kordex.modules.web.core.backend.websockets.Websocket.Websocket"]},{"name":"constructor(text: String)","description":"dev.kordex.modules.web.core.backend.pages.blocks.labels.TextLabel.TextLabel","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.pages.blocks.labels/-text-label/-text-label.html","searchKeys":["TextLabel","constructor(text: String)","dev.kordex.modules.web.core.backend.pages.blocks.labels.TextLabel.TextLabel"]},{"name":"constructor(value: String, template: String = \"\")","description":"dev.kordex.modules.web.core.backend.pages.blocks.labels.ValueLabel.ValueLabel","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.pages.blocks.labels/-value-label/-value-label.html","searchKeys":["ValueLabel","constructor(value: String, template: String = \"\")","dev.kordex.modules.web.core.backend.pages.blocks.labels.ValueLabel.ValueLabel"]},{"name":"constructor(value: V, time: Instant)","description":"dev.kordex.modules.web.core.backend.values.TimedContainer.TimedContainer","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.values/-timed-container/-timed-container.html","searchKeys":["TimedContainer","constructor(value: V, time: Instant)","dev.kordex.modules.web.core.backend.values.TimedContainer.TimedContainer"]},{"name":"data class Custom(val block: (MutableOriginConnectionPoint, List<ForwardedHeaderValue>) -> Unit) : ForwardedHeaderStrategy","description":"dev.kordex.modules.web.core.backend.config.ForwardedHeaderStrategy.Custom","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.config/-forwarded-header-strategy/-custom/index.html","searchKeys":["Custom","data class Custom(val block: (MutableOriginConnectionPoint, List<ForwardedHeaderValue>) -> Unit) : ForwardedHeaderStrategy","dev.kordex.modules.web.core.backend.config.ForwardedHeaderStrategy.Custom"]},{"name":"data class EntityInfo(val id: Snowflake, val name: String?)","description":"dev.kordex.modules.web.core.backend.routes.utils.DenyBuilder.EntityInfo","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.routes.utils/-deny-builder/-entity-info/index.html","searchKeys":["EntityInfo","data class EntityInfo(val id: Snowflake, val name: String?)","dev.kordex.modules.web.core.backend.routes.utils.DenyBuilder.EntityInfo"]},{"name":"data class Identifier(val namespace: String, val id: String)","description":"dev.kordex.modules.web.core.backend.types.Identifier","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.types/-identifier/index.html","searchKeys":["Identifier","data class Identifier(val namespace: String, val id: String)","dev.kordex.modules.web.core.backend.types.Identifier"]},{"name":"data class NavigationItem(val name: String, val icon: Identifier, val page: String?, val children: MutableList<NavigationItem> = mutableListOf())","description":"dev.kordex.modules.web.core.backend.pages.navigation.NavigationItem","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.pages.navigation/-navigation-item/index.html","searchKeys":["NavigationItem","data class NavigationItem(val name: String, val icon: Identifier, val page: String?, val children: MutableList<NavigationItem> = mutableListOf())","dev.kordex.modules.web.core.backend.pages.navigation.NavigationItem"]},{"name":"data class SkipKnown(val known: List<String>) : ForwardedHeaderStrategy","description":"dev.kordex.modules.web.core.backend.config.ForwardedHeaderStrategy.SkipKnown","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.config/-forwarded-header-strategy/-skip-known/index.html","searchKeys":["SkipKnown","data class SkipKnown(val known: List<String>) : ForwardedHeaderStrategy","dev.kordex.modules.web.core.backend.config.ForwardedHeaderStrategy.SkipKnown"]},{"name":"data class SkipLast(val number: Int) : ForwardedHeaderStrategy","description":"dev.kordex.modules.web.core.backend.config.ForwardedHeaderStrategy.SkipLast","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.config/-forwarded-header-strategy/-skip-last/index.html","searchKeys":["SkipLast","data class SkipLast(val number: Int) : ForwardedHeaderStrategy","dev.kordex.modules.web.core.backend.config.ForwardedHeaderStrategy.SkipLast"]},{"name":"data class TimedContainer<V>(val value: V, val time: Instant)","description":"dev.kordex.modules.web.core.backend.values.TimedContainer","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.values/-timed-container/index.html","searchKeys":["TimedContainer","data class TimedContainer<V>(val value: V, val time: Instant)","dev.kordex.modules.web.core.backend.values.TimedContainer"]},{"name":"data class WebError(val message: String, val statusCode: HttpStatusCode)","description":"dev.kordex.modules.web.core.backend.errors.WebError","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.errors/-web-error/index.html","searchKeys":["WebError","data class WebError(val message: String, val statusCode: HttpStatusCode)","dev.kordex.modules.web.core.backend.errors.WebError"]},{"name":"data class WebsocketBuilder(val extension: String, val builder: WebsocketBuilderFun)","description":"dev.kordex.modules.web.core.backend.websockets.WebsocketBuilder","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.websockets/-websocket-builder/index.html","searchKeys":["WebsocketBuilder","data class WebsocketBuilder(val extension: String, val builder: WebsocketBuilderFun)","dev.kordex.modules.web.core.backend.websockets.WebsocketBuilder"]},{"name":"data class XCustom(val block: (MutableOriginConnectionPoint, XForwardedHeaderValues) -> Unit) : ForwardedHeaderStrategy","description":"dev.kordex.modules.web.core.backend.config.ForwardedHeaderStrategy.XCustom","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.config/-forwarded-header-strategy/-x-custom/index.html","searchKeys":["XCustom","data class XCustom(val block: (MutableOriginConnectionPoint, XForwardedHeaderValues) -> Unit) : ForwardedHeaderStrategy","dev.kordex.modules.web.core.backend.config.ForwardedHeaderStrategy.XCustom"]},{"name":"data object DELETE : Verb","description":"dev.kordex.modules.web.core.backend.routes.Verb.DELETE","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.routes/-verb/-d-e-l-e-t-e/index.html","searchKeys":["DELETE","data object DELETE : Verb","dev.kordex.modules.web.core.backend.routes.Verb.DELETE"]},{"name":"data object Day : ValueInterval","description":"dev.kordex.modules.web.core.backend.values.ValueInterval.Day","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.values/-value-interval/-day/index.html","searchKeys":["Day","data object Day : ValueInterval","dev.kordex.modules.web.core.backend.values.ValueInterval.Day"]},{"name":"data object First : ForwardedHeaderStrategy","description":"dev.kordex.modules.web.core.backend.config.ForwardedHeaderStrategy.First","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.config/-forwarded-header-strategy/-first/index.html","searchKeys":["First","data object First : ForwardedHeaderStrategy","dev.kordex.modules.web.core.backend.config.ForwardedHeaderStrategy.First"]},{"name":"data object Forwarded : ForwardedHeaderMode","description":"dev.kordex.modules.web.core.backend.config.ForwardedHeaderMode.Forwarded","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.config/-forwarded-header-mode/-forwarded/index.html","searchKeys":["Forwarded","data object Forwarded : ForwardedHeaderMode","dev.kordex.modules.web.core.backend.config.ForwardedHeaderMode.Forwarded"]},{"name":"data object GET : Verb","description":"dev.kordex.modules.web.core.backend.routes.Verb.GET","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.routes/-verb/-g-e-t/index.html","searchKeys":["GET","data object GET : Verb","dev.kordex.modules.web.core.backend.routes.Verb.GET"]},{"name":"data object HEAD : Verb","description":"dev.kordex.modules.web.core.backend.routes.Verb.HEAD","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.routes/-verb/-h-e-a-d/index.html","searchKeys":["HEAD","data object HEAD : Verb","dev.kordex.modules.web.core.backend.routes.Verb.HEAD"]},{"name":"data object HalfDay : ValueInterval","description":"dev.kordex.modules.web.core.backend.values.ValueInterval.HalfDay","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.values/-value-interval/-half-day/index.html","searchKeys":["HalfDay","data object HalfDay : ValueInterval","dev.kordex.modules.web.core.backend.values.ValueInterval.HalfDay"]},{"name":"data object HalfHour : ValueInterval","description":"dev.kordex.modules.web.core.backend.values.ValueInterval.HalfHour","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.values/-value-interval/-half-hour/index.html","searchKeys":["HalfHour","data object HalfHour : ValueInterval","dev.kordex.modules.web.core.backend.values.ValueInterval.HalfHour"]},{"name":"data object HalfMinute : ValueInterval","description":"dev.kordex.modules.web.core.backend.values.ValueInterval.HalfMinute","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.values/-value-interval/-half-minute/index.html","searchKeys":["HalfMinute","data object HalfMinute : ValueInterval","dev.kordex.modules.web.core.backend.values.ValueInterval.HalfMinute"]},{"name":"data object Hour : ValueInterval","description":"dev.kordex.modules.web.core.backend.values.ValueInterval.Hour","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.values/-value-interval/-hour/index.html","searchKeys":["Hour","data object Hour : ValueInterval","dev.kordex.modules.web.core.backend.values.ValueInterval.Hour"]},{"name":"data object Last : ForwardedHeaderStrategy","description":"dev.kordex.modules.web.core.backend.config.ForwardedHeaderStrategy.Last","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.config/-forwarded-header-strategy/-last/index.html","searchKeys":["Last","data object Last : ForwardedHeaderStrategy","dev.kordex.modules.web.core.backend.config.ForwardedHeaderStrategy.Last"]},{"name":"data object Minute : ValueInterval","description":"dev.kordex.modules.web.core.backend.values.ValueInterval.Minute","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.values/-value-interval/-minute/index.html","searchKeys":["Minute","data object Minute : ValueInterval","dev.kordex.modules.web.core.backend.values.ValueInterval.Minute"]},{"name":"data object None : ForwardedHeaderMode","description":"dev.kordex.modules.web.core.backend.config.ForwardedHeaderMode.None","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.config/-forwarded-header-mode/-none/index.html","searchKeys":["None","data object None : ForwardedHeaderMode","dev.kordex.modules.web.core.backend.config.ForwardedHeaderMode.None"]},{"name":"data object OPTIONS : Verb","description":"dev.kordex.modules.web.core.backend.routes.Verb.OPTIONS","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.routes/-verb/-o-p-t-i-o-n-s/index.html","searchKeys":["OPTIONS","data object OPTIONS : Verb","dev.kordex.modules.web.core.backend.routes.Verb.OPTIONS"]},{"name":"data object PATCH : Verb","description":"dev.kordex.modules.web.core.backend.routes.Verb.PATCH","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.routes/-verb/-p-a-t-c-h/index.html","searchKeys":["PATCH","data object PATCH : Verb","dev.kordex.modules.web.core.backend.routes.Verb.PATCH"]},{"name":"data object POST : Verb","description":"dev.kordex.modules.web.core.backend.routes.Verb.POST","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.routes/-verb/-p-o-s-t/index.html","searchKeys":["POST","data object POST : Verb","dev.kordex.modules.web.core.backend.routes.Verb.POST"]},{"name":"data object PUT : Verb","description":"dev.kordex.modules.web.core.backend.routes.Verb.PUT","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.routes/-verb/-p-u-t/index.html","searchKeys":["PUT","data object PUT : Verb","dev.kordex.modules.web.core.backend.routes.Verb.PUT"]},{"name":"data object QuarterDay : ValueInterval","description":"dev.kordex.modules.web.core.backend.values.ValueInterval.QuarterDay","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.values/-value-interval/-quarter-day/index.html","searchKeys":["QuarterDay","data object QuarterDay : ValueInterval","dev.kordex.modules.web.core.backend.values.ValueInterval.QuarterDay"]},{"name":"data object QuarterHour : ValueInterval","description":"dev.kordex.modules.web.core.backend.values.ValueInterval.QuarterHour","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.values/-value-interval/-quarter-hour/index.html","searchKeys":["QuarterHour","data object QuarterHour : ValueInterval","dev.kordex.modules.web.core.backend.values.ValueInterval.QuarterHour"]},{"name":"data object QuarterMinute : ValueInterval","description":"dev.kordex.modules.web.core.backend.values.ValueInterval.QuarterMinute","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.values/-value-interval/-quarter-minute/index.html","searchKeys":["QuarterMinute","data object QuarterMinute : ValueInterval","dev.kordex.modules.web.core.backend.values.ValueInterval.QuarterMinute"]},{"name":"data object Second : ValueInterval","description":"dev.kordex.modules.web.core.backend.values.ValueInterval.Second","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.values/-value-interval/-second/index.html","searchKeys":["Second","data object Second : ValueInterval","dev.kordex.modules.web.core.backend.values.ValueInterval.Second"]},{"name":"data object XForwarded : ForwardedHeaderMode","description":"dev.kordex.modules.web.core.backend.config.ForwardedHeaderMode.XForwarded","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.config/-forwarded-header-mode/-x-forwarded/index.html","searchKeys":["XForwarded","data object XForwarded : ForwardedHeaderMode","dev.kordex.modules.web.core.backend.config.ForwardedHeaderMode.XForwarded"]},{"name":"fun EventContext<WebServerStartEvent>.apiRoute(route: Route)","description":"dev.kordex.modules.web.core.backend.utils.apiRoute","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.utils/api-route.html","searchKeys":["apiRoute","fun EventContext<WebServerStartEvent>.apiRoute(route: Route)","dev.kordex.modules.web.core.backend.utils.apiRoute"]},{"name":"fun EventContext<WebServerStartEvent>.navigation(icon: Identifier, setup: ExtensionNavigation.() -> Unit)","description":"dev.kordex.modules.web.core.backend.utils.navigation","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.utils/navigation.html","searchKeys":["navigation","fun EventContext<WebServerStartEvent>.navigation(icon: Identifier, setup: ExtensionNavigation.() -> Unit)","dev.kordex.modules.web.core.backend.utils.navigation"]},{"name":"fun EventContext<WebServerStartEvent>.websocket(path: String, body: WebsocketBuilderFun)","description":"dev.kordex.modules.web.core.backend.utils.websocket","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.utils/websocket.html","searchKeys":["websocket","fun EventContext<WebServerStartEvent>.websocket(path: String, body: WebsocketBuilderFun)","dev.kordex.modules.web.core.backend.utils.websocket"]},{"name":"fun ExtensionsBuilder.web(builder: WebServerConfig.() -> Unit)","description":"dev.kordex.modules.web.core.backend.utils.web","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.utils/web.html","searchKeys":["web","fun ExtensionsBuilder.web(builder: WebServerConfig.() -> Unit)","dev.kordex.modules.web.core.backend.utils.web"]},{"name":"fun Identifier(identifier: String): Identifier","description":"dev.kordex.modules.web.core.backend.types.Identifier","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.types/-identifier.html","searchKeys":["Identifier","fun Identifier(identifier: String): Identifier","dev.kordex.modules.web.core.backend.types.Identifier"]},{"name":"fun Route.apiInfo(config: WebServerConfig)","description":"dev.kordex.modules.web.core.backend.server.routes.api.apiInfo","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.server.routes.api/api-info.html","searchKeys":["apiInfo","fun Route.apiInfo(config: WebServerConfig)","dev.kordex.modules.web.core.backend.server.routes.api.apiInfo"]},{"name":"fun Routing.api(config: WebServerConfig)","description":"dev.kordex.modules.web.core.backend.server.routes.api","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.server.routes/api.html","searchKeys":["api","fun Routing.api(config: WebServerConfig)","dev.kordex.modules.web.core.backend.server.routes.api"]},{"name":"fun WebServer.configureAuth(app: Application)","description":"dev.kordex.modules.web.core.backend.server.configureAuth","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.server/configure-auth.html","searchKeys":["configureAuth","fun WebServer.configureAuth(app: Application)","dev.kordex.modules.web.core.backend.server.configureAuth"]},{"name":"fun WebServer.configureCORS(app: Application)","description":"dev.kordex.modules.web.core.backend.server.configureCORS","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.server/configure-c-o-r-s.html","searchKeys":["configureCORS","fun WebServer.configureCORS(app: Application)","dev.kordex.modules.web.core.backend.server.configureCORS"]},{"name":"fun WebServer.configureContentNegotiation(app: Application)","description":"dev.kordex.modules.web.core.backend.server.configureContentNegotiation","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.server/configure-content-negotiation.html","searchKeys":["configureContentNegotiation","fun WebServer.configureContentNegotiation(app: Application)","dev.kordex.modules.web.core.backend.server.configureContentNegotiation"]},{"name":"fun WebServer.configureForwardedHeaders(app: Application)","description":"dev.kordex.modules.web.core.backend.server.configureForwardedHeaders","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.server/configure-forwarded-headers.html","searchKeys":["configureForwardedHeaders","fun WebServer.configureForwardedHeaders(app: Application)","dev.kordex.modules.web.core.backend.server.configureForwardedHeaders"]},{"name":"fun WebServer.configureRouting(app: Application, config: WebServerConfig)","description":"dev.kordex.modules.web.core.backend.server.configureRouting","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.server/configure-routing.html","searchKeys":["configureRouting","fun WebServer.configureRouting(app: Application, config: WebServerConfig)","dev.kordex.modules.web.core.backend.server.configureRouting"]},{"name":"fun WebServer.configureStatusPages(app: Application)","description":"dev.kordex.modules.web.core.backend.server.configureStatusPages","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.server/configure-status-pages.html","searchKeys":["configureStatusPages","fun WebServer.configureStatusPages(app: Application)","dev.kordex.modules.web.core.backend.server.configureStatusPages"]},{"name":"fun WebServer.configureWebSockets(app: Application)","description":"dev.kordex.modules.web.core.backend.server.configureWebSockets","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.server/configure-web-sockets.html","searchKeys":["configureWebSockets","fun WebServer.configureWebSockets(app: Application)","dev.kordex.modules.web.core.backend.server.configureWebSockets"]},{"name":"fun add(navigation: ExtensionNavigation)","description":"dev.kordex.modules.web.core.backend.pages.navigation.NavigationRegistry.add","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.pages.navigation/-navigation-registry/add.html","searchKeys":["add","fun add(navigation: ExtensionNavigation)","dev.kordex.modules.web.core.backend.pages.navigation.NavigationRegistry.add"]},{"name":"fun add(path: String, builder: WebsocketBuilder): Boolean","description":"dev.kordex.modules.web.core.backend.websockets.WebsocketRegistry.add","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.websockets/-websocket-registry/add.html","searchKeys":["add","fun add(path: String, builder: WebsocketBuilder): Boolean","dev.kordex.modules.web.core.backend.websockets.WebsocketRegistry.add"]},{"name":"fun add(route: Route): Boolean","description":"dev.kordex.modules.web.core.backend.routes.RouteRegistry.add","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.routes/-route-registry/add.html","searchKeys":["add","fun add(route: Route): Boolean","dev.kordex.modules.web.core.backend.routes.RouteRegistry.add"]},{"name":"fun build(): NavigationItem","description":"dev.kordex.modules.web.core.backend.pages.navigation.NavigationItem.Builder.build","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.pages.navigation/-navigation-item/-builder/build.html","searchKeys":["build","fun build(): NavigationItem","dev.kordex.modules.web.core.backend.pages.navigation.NavigationItem.Builder.build"]},{"name":"fun child(body: NavigationItem.Builder.() -> Unit): NavigationItem","description":"dev.kordex.modules.web.core.backend.pages.navigation.NavigationItem.Builder.child","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.pages.navigation/-navigation-item/-builder/child.html","searchKeys":["child","fun child(body: NavigationItem.Builder.() -> Unit): NavigationItem","dev.kordex.modules.web.core.backend.pages.navigation.NavigationItem.Builder.child"]},{"name":"fun clear()","description":"dev.kordex.modules.web.core.backend.values.types.SimpleValue.clear","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.values.types/-simple-value/clear.html","searchKeys":["clear","fun clear()","dev.kordex.modules.web.core.backend.values.types.SimpleValue.clear"]},{"name":"fun handleExtensionState(event: ExtensionStateEvent)","description":"dev.kordex.modules.web.core.backend.routes.RouteRegistry.handleExtensionState","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.routes/-route-registry/handle-extension-state.html","searchKeys":["handleExtensionState","fun handleExtensionState(event: ExtensionStateEvent)","dev.kordex.modules.web.core.backend.routes.RouteRegistry.handleExtensionState"]},{"name":"fun main()","description":"dev.kordex.modules.web.core.backend.values.serializers.main","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.values.serializers/main.html","searchKeys":["main","fun main()","dev.kordex.modules.web.core.backend.values.serializers.main"]},{"name":"fun missingGuild(guild: Guild)","description":"dev.kordex.modules.web.core.backend.routes.utils.DenyBuilder.missingGuild","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.routes.utils/-deny-builder/missing-guild.html","searchKeys":["missingGuild","fun missingGuild(guild: Guild)","dev.kordex.modules.web.core.backend.routes.utils.DenyBuilder.missingGuild"]},{"name":"fun missingPermission(perm: Permission)","description":"dev.kordex.modules.web.core.backend.routes.utils.DenyBuilder.missingPermission","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.routes.utils/-deny-builder/missing-permission.html","searchKeys":["missingPermission","fun missingPermission(perm: Permission)","dev.kordex.modules.web.core.backend.routes.utils.DenyBuilder.missingPermission"]},{"name":"fun missingRole(role: Role)","description":"dev.kordex.modules.web.core.backend.routes.utils.DenyBuilder.missingRole","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.routes.utils/-deny-builder/missing-role.html","searchKeys":["missingRole","fun missingRole(role: Role)","dev.kordex.modules.web.core.backend.routes.utils.DenyBuilder.missingRole"]},{"name":"fun navigation(body: NavigationItem.Builder.() -> Unit): NavigationItem","description":"dev.kordex.modules.web.core.backend.pages.navigation.ExtensionNavigation.navigation","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.pages.navigation/-extension-navigation/navigation.html","searchKeys":["navigation","fun navigation(body: NavigationItem.Builder.() -> Unit): NavigationItem","dev.kordex.modules.web.core.backend.pages.navigation.ExtensionNavigation.navigation"]},{"name":"fun oauth(body: WebServerConfig.OAuth.() -> Unit)","description":"dev.kordex.modules.web.core.backend.config.WebServerConfig.oauth","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.config/-web-server-config/oauth.html","searchKeys":["oauth","fun oauth(body: WebServerConfig.OAuth.() -> Unit)","dev.kordex.modules.web.core.backend.config.WebServerConfig.oauth"]},{"name":"fun reason(key: String, placeholders: Array<Any> = arrayOf())","description":"dev.kordex.modules.web.core.backend.routes.utils.DenyBuilder.reason","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.routes.utils/-deny-builder/reason.html","searchKeys":["reason","fun reason(key: String, placeholders: Array<Any> = arrayOf())","dev.kordex.modules.web.core.backend.routes.utils.DenyBuilder.reason"]},{"name":"fun remove(extension: String): ExtensionNavigation?","description":"dev.kordex.modules.web.core.backend.pages.navigation.NavigationRegistry.remove","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.pages.navigation/-navigation-registry/remove.html","searchKeys":["remove","fun remove(extension: String): ExtensionNavigation?","dev.kordex.modules.web.core.backend.pages.navigation.NavigationRegistry.remove"]},{"name":"fun remove(navigation: ExtensionNavigation): ExtensionNavigation?","description":"dev.kordex.modules.web.core.backend.pages.navigation.NavigationRegistry.remove","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.pages.navigation/-navigation-registry/remove.html","searchKeys":["remove","fun remove(navigation: ExtensionNavigation): ExtensionNavigation?","dev.kordex.modules.web.core.backend.pages.navigation.NavigationRegistry.remove"]},{"name":"fun remove(route: Route): Route?","description":"dev.kordex.modules.web.core.backend.routes.RouteRegistry.remove","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.routes/-route-registry/remove.html","searchKeys":["remove","fun remove(route: Route): Route?","dev.kordex.modules.web.core.backend.routes.RouteRegistry.remove"]},{"name":"fun removeAll()","description":"dev.kordex.modules.web.core.backend.pages.navigation.NavigationRegistry.removeAll","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.pages.navigation/-navigation-registry/remove-all.html","searchKeys":["removeAll","fun removeAll()","dev.kordex.modules.web.core.backend.pages.navigation.NavigationRegistry.removeAll"]},{"name":"fun removeAll()","description":"dev.kordex.modules.web.core.backend.routes.RouteRegistry.removeAll","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.routes/-route-registry/remove-all.html","searchKeys":["removeAll","fun removeAll()","dev.kordex.modules.web.core.backend.routes.RouteRegistry.removeAll"]},{"name":"fun removeSocket(socket: Websocket): Boolean","description":"dev.kordex.modules.web.core.backend.websockets.WebsocketRegistry.removeSocket","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.websockets/-websocket-registry/remove-socket.html","searchKeys":["removeSocket","fun removeSocket(socket: Websocket): Boolean","dev.kordex.modules.web.core.backend.websockets.WebsocketRegistry.removeSocket"]},{"name":"fun reverseProxy(body: WebServerConfig.ReverseProxy.() -> Unit)","description":"dev.kordex.modules.web.core.backend.config.WebServerConfig.reverseProxy","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.config/-web-server-config/reverse-proxy.html","searchKeys":["reverseProxy","fun reverseProxy(body: WebServerConfig.ReverseProxy.() -> Unit)","dev.kordex.modules.web.core.backend.config.WebServerConfig.reverseProxy"]},{"name":"fun setup()","description":"dev.kordex.modules.web.core.backend.WebRegistries.setup","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend/-web-registries/setup.html","searchKeys":["setup","fun setup()","dev.kordex.modules.web.core.backend.WebRegistries.setup"]},{"name":"fun writeOptional(value: Optional<T?>)","description":"dev.kordex.modules.web.core.backend.values.types.SimpleValue.writeOptional","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.values.types/-simple-value/write-optional.html","searchKeys":["writeOptional","fun writeOptional(value: Optional<T?>)","dev.kordex.modules.web.core.backend.values.types.SimpleValue.writeOptional"]},{"name":"fun writeTimed(value: TimedContainer<T?>)","description":"dev.kordex.modules.web.core.backend.values.types.TrackedValue.writeTimed","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.values.types/-tracked-value/write-timed.html","searchKeys":["writeTimed","fun writeTimed(value: TimedContainer<T?>)","dev.kordex.modules.web.core.backend.values.types.TrackedValue.writeTimed"]},{"name":"inline fun <T : Any> SimpleValue(identifier: Identifier, writable: Boolean): SimpleValue<T>","description":"dev.kordex.modules.web.core.backend.values.types.SimpleValue","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.values.types/-simple-value.html","searchKeys":["SimpleValue","inline fun <T : Any> SimpleValue(identifier: Identifier, writable: Boolean): SimpleValue<T>","dev.kordex.modules.web.core.backend.values.types.SimpleValue"]},{"name":"inline fun <T : Any> TrackedValue(identifier: Identifier, maxValues: Int = 48, precision: ValueInterval = ValueInterval.HalfHour): TrackedValue<T>","description":"dev.kordex.modules.web.core.backend.values.types.TrackedValue","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.values.types/-tracked-value.html","searchKeys":["TrackedValue","inline fun <T : Any> TrackedValue(identifier: Identifier, maxValues: Int = 48, precision: ValueInterval = ValueInterval.HalfHour): TrackedValue<T>","dev.kordex.modules.web.core.backend.values.types.TrackedValue"]},{"name":"inline suspend fun <T> sendSerialized(data: T)","description":"dev.kordex.modules.web.core.backend.websockets.Websocket.sendSerialized","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.websockets/-websocket/send-serialized.html","searchKeys":["sendSerialized","inline suspend fun <T> sendSerialized(data: T)","dev.kordex.modules.web.core.backend.websockets.Websocket.sendSerialized"]},{"name":"inner class OAuth","description":"dev.kordex.modules.web.core.backend.config.WebServerConfig.OAuth","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.config/-web-server-config/-o-auth/index.html","searchKeys":["OAuth","inner class OAuth","dev.kordex.modules.web.core.backend.config.WebServerConfig.OAuth"]},{"name":"inner class ReverseProxy","description":"dev.kordex.modules.web.core.backend.config.WebServerConfig.ReverseProxy","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.config/-web-server-config/-reverse-proxy/index.html","searchKeys":["ReverseProxy","inner class ReverseProxy","dev.kordex.modules.web.core.backend.config.WebServerConfig.ReverseProxy"]},{"name":"lateinit var builder: WebsocketBuilder","description":"dev.kordex.modules.web.core.backend.websockets.Websocket.builder","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.websockets/-websocket/builder.html","searchKeys":["builder","lateinit var builder: WebsocketBuilder","dev.kordex.modules.web.core.backend.websockets.Websocket.builder"]},{"name":"lateinit var clientId: String","description":"dev.kordex.modules.web.core.backend.config.WebServerConfig.OAuth.clientId","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.config/-web-server-config/-o-auth/client-id.html","searchKeys":["clientId","lateinit var clientId: String","dev.kordex.modules.web.core.backend.config.WebServerConfig.OAuth.clientId"]},{"name":"lateinit var clientSecret: String","description":"dev.kordex.modules.web.core.backend.config.WebServerConfig.OAuth.clientSecret","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.config/-web-server-config/-o-auth/client-secret.html","searchKeys":["clientSecret","lateinit var clientSecret: String","dev.kordex.modules.web.core.backend.config.WebServerConfig.OAuth.clientSecret"]},{"name":"lateinit var hostname: String","description":"dev.kordex.modules.web.core.backend.config.WebServerConfig.hostname","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.config/-web-server-config/hostname.html","searchKeys":["hostname","lateinit var hostname: String","dev.kordex.modules.web.core.backend.config.WebServerConfig.hostname"]},{"name":"lateinit var icon: Identifier","description":"dev.kordex.modules.web.core.backend.pages.navigation.NavigationItem.Builder.icon","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.pages.navigation/-navigation-item/-builder/icon.html","searchKeys":["icon","lateinit var icon: Identifier","dev.kordex.modules.web.core.backend.pages.navigation.NavigationItem.Builder.icon"]},{"name":"lateinit var name: String","description":"dev.kordex.modules.web.core.backend.pages.navigation.NavigationItem.Builder.name","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.pages.navigation/-navigation-item/-builder/name.html","searchKeys":["name","lateinit var name: String","dev.kordex.modules.web.core.backend.pages.navigation.NavigationItem.Builder.name"]},{"name":"lateinit var navigation: NavigationRegistry","description":"dev.kordex.modules.web.core.backend.WebRegistries.navigation","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend/-web-registries/navigation.html","searchKeys":["navigation","lateinit var navigation: NavigationRegistry","dev.kordex.modules.web.core.backend.WebRegistries.navigation"]},{"name":"lateinit var page: String","description":"dev.kordex.modules.web.core.backend.pages.navigation.NavigationItem.Builder.page","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.pages.navigation/-navigation-item/-builder/page.html","searchKeys":["page","lateinit var page: String","dev.kordex.modules.web.core.backend.pages.navigation.NavigationItem.Builder.page"]},{"name":"lateinit var path: String","description":"dev.kordex.modules.web.core.backend.websockets.Websocket.path","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.websockets/-websocket/path.html","searchKeys":["path","lateinit var path: String","dev.kordex.modules.web.core.backend.websockets.Websocket.path"]},{"name":"lateinit var registry: WebsocketRegistry","description":"dev.kordex.modules.web.core.backend.websockets.Websocket.registry","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.websockets/-websocket/registry.html","searchKeys":["registry","lateinit var registry: WebsocketRegistry","dev.kordex.modules.web.core.backend.websockets.Websocket.registry"]},{"name":"lateinit var routes: RouteRegistry","description":"dev.kordex.modules.web.core.backend.WebRegistries.routes","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend/-web-registries/routes.html","searchKeys":["routes","lateinit var routes: RouteRegistry","dev.kordex.modules.web.core.backend.WebRegistries.routes"]},{"name":"lateinit var server: WebServer","description":"dev.kordex.modules.web.core.backend.WebExtension.server","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend/-web-extension/server.html","searchKeys":["server","lateinit var server: WebServer","dev.kordex.modules.web.core.backend.WebExtension.server"]},{"name":"lateinit var siteTitle: String","description":"dev.kordex.modules.web.core.backend.config.WebServerConfig.siteTitle","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.config/-web-server-config/site-title.html","searchKeys":["siteTitle","lateinit var siteTitle: String","dev.kordex.modules.web.core.backend.config.WebServerConfig.siteTitle"]},{"name":"lateinit var websockets: WebsocketRegistry","description":"dev.kordex.modules.web.core.backend.WebRegistries.websockets","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend/-web-registries/websockets.html","searchKeys":["websockets","lateinit var websockets: WebsocketRegistry","dev.kordex.modules.web.core.backend.WebRegistries.websockets"]},{"name":"object Companion","description":"dev.kordex.modules.web.core.backend.values.ValueInterval.Companion","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.values/-value-interval/-companion/index.html","searchKeys":["Companion","object Companion","dev.kordex.modules.web.core.backend.values.ValueInterval.Companion"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"dev.kordex.modules.web.core.backend.types.Identifier.equals","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.types/-identifier/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","dev.kordex.modules.web.core.backend.types.Identifier.equals"]},{"name":"open override fun deserialize(decoder: Decoder): Identifier","description":"dev.kordex.modules.web.core.backend.types.IdentifierSerializer.deserialize","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.types/-identifier-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): Identifier","dev.kordex.modules.web.core.backend.types.IdentifierSerializer.deserialize"]},{"name":"open override fun deserialize(decoder: Decoder): SimpleValue<T>","description":"dev.kordex.modules.web.core.backend.values.serializers.SimpleValueSerializer.deserialize","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.values.serializers/-simple-value-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): SimpleValue<T>","dev.kordex.modules.web.core.backend.values.serializers.SimpleValueSerializer.deserialize"]},{"name":"open override fun deserialize(decoder: Decoder): TimedContainer<T>","description":"dev.kordex.modules.web.core.backend.values.serializers.TimedContainerSerializer.deserialize","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.values.serializers/-timed-container-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): TimedContainer<T>","dev.kordex.modules.web.core.backend.values.serializers.TimedContainerSerializer.deserialize"]},{"name":"open override fun deserialize(decoder: Decoder): TrackedValue<T>","description":"dev.kordex.modules.web.core.backend.values.serializers.TrackedValueSerializer.deserialize","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.values.serializers/-tracked-value-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): TrackedValue<T>","dev.kordex.modules.web.core.backend.values.serializers.TrackedValueSerializer.deserialize"]},{"name":"open override fun hashCode(): Int","description":"dev.kordex.modules.web.core.backend.types.Identifier.hashCode","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.types/-identifier/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","dev.kordex.modules.web.core.backend.types.Identifier.hashCode"]},{"name":"open override fun read(): List<TimedContainer<T?>>","description":"dev.kordex.modules.web.core.backend.values.types.TrackedValue.read","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.values.types/-tracked-value/read.html","searchKeys":["read","open override fun read(): List<TimedContainer<T?>>","dev.kordex.modules.web.core.backend.values.types.TrackedValue.read"]},{"name":"open override fun read(): T?","description":"dev.kordex.modules.web.core.backend.values.types.SimpleValue.read","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.values.types/-simple-value/read.html","searchKeys":["read","open override fun read(): T?","dev.kordex.modules.web.core.backend.values.types.SimpleValue.read"]},{"name":"open override fun serialize(encoder: Encoder, value: Identifier)","description":"dev.kordex.modules.web.core.backend.types.IdentifierSerializer.serialize","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.types/-identifier-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: Identifier)","dev.kordex.modules.web.core.backend.types.IdentifierSerializer.serialize"]},{"name":"open override fun serialize(encoder: Encoder, value: SimpleValue<T>)","description":"dev.kordex.modules.web.core.backend.values.serializers.SimpleValueSerializer.serialize","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.values.serializers/-simple-value-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: SimpleValue<T>)","dev.kordex.modules.web.core.backend.values.serializers.SimpleValueSerializer.serialize"]},{"name":"open override fun serialize(encoder: Encoder, value: TimedContainer<T>)","description":"dev.kordex.modules.web.core.backend.values.serializers.TimedContainerSerializer.serialize","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.values.serializers/-timed-container-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: TimedContainer<T>)","dev.kordex.modules.web.core.backend.values.serializers.TimedContainerSerializer.serialize"]},{"name":"open override fun serialize(encoder: Encoder, value: TrackedValue<T>)","description":"dev.kordex.modules.web.core.backend.values.serializers.TrackedValueSerializer.serialize","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.values.serializers/-tracked-value-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: TrackedValue<T>)","dev.kordex.modules.web.core.backend.values.serializers.TrackedValueSerializer.serialize"]},{"name":"open override fun toString(): String","description":"dev.kordex.modules.web.core.backend.types.Identifier.toString","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.types/-identifier/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kordex.modules.web.core.backend.types.Identifier.toString"]},{"name":"open override fun write(value: T?)","description":"dev.kordex.modules.web.core.backend.values.types.SimpleValue.write","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.values.types/-simple-value/write.html","searchKeys":["write","open override fun write(value: T?)","dev.kordex.modules.web.core.backend.values.types.SimpleValue.write"]},{"name":"open override fun write(value: T?)","description":"dev.kordex.modules.web.core.backend.values.types.TrackedValue.write","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.values.types/-tracked-value/write.html","searchKeys":["write","open override fun write(value: T?)","dev.kordex.modules.web.core.backend.values.types.TrackedValue.write"]},{"name":"open override val descriptor: SerialDescriptor","description":"dev.kordex.modules.web.core.backend.types.IdentifierSerializer.descriptor","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.types/-identifier-serializer/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","dev.kordex.modules.web.core.backend.types.IdentifierSerializer.descriptor"]},{"name":"open override val descriptor: SerialDescriptor","description":"dev.kordex.modules.web.core.backend.values.serializers.SimpleValueSerializer.descriptor","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.values.serializers/-simple-value-serializer/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","dev.kordex.modules.web.core.backend.values.serializers.SimpleValueSerializer.descriptor"]},{"name":"open override val descriptor: SerialDescriptor","description":"dev.kordex.modules.web.core.backend.values.serializers.TimedContainerSerializer.descriptor","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.values.serializers/-timed-container-serializer/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","dev.kordex.modules.web.core.backend.values.serializers.TimedContainerSerializer.descriptor"]},{"name":"open override val descriptor: SerialDescriptor","description":"dev.kordex.modules.web.core.backend.values.serializers.TrackedValueSerializer.descriptor","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.values.serializers/-tracked-value-serializer/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","dev.kordex.modules.web.core.backend.values.serializers.TrackedValueSerializer.descriptor"]},{"name":"open override val identifier: Identifier","description":"dev.kordex.modules.web.core.backend.values.types.SimpleValue.identifier","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.values.types/-simple-value/identifier.html","searchKeys":["identifier","open override val identifier: Identifier","dev.kordex.modules.web.core.backend.values.types.SimpleValue.identifier"]},{"name":"open override val identifier: Identifier","description":"dev.kordex.modules.web.core.backend.values.types.TrackedValue.identifier","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.values.types/-tracked-value/identifier.html","searchKeys":["identifier","open override val identifier: Identifier","dev.kordex.modules.web.core.backend.values.types.TrackedValue.identifier"]},{"name":"open override val name: String","description":"dev.kordex.modules.web.core.backend.WebExtension.name","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend/-web-extension/name.html","searchKeys":["name","open override val name: String","dev.kordex.modules.web.core.backend.WebExtension.name"]},{"name":"open override val serializer: KSerializer<T>","description":"dev.kordex.modules.web.core.backend.values.types.SimpleValue.serializer","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.values.types/-simple-value/serializer.html","searchKeys":["serializer","open override val serializer: KSerializer<T>","dev.kordex.modules.web.core.backend.values.types.SimpleValue.serializer"]},{"name":"open override val serializer: KSerializer<T>","description":"dev.kordex.modules.web.core.backend.values.types.TrackedValue.serializer","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.values.types/-tracked-value/serializer.html","searchKeys":["serializer","open override val serializer: KSerializer<T>","dev.kordex.modules.web.core.backend.values.types.TrackedValue.serializer"]},{"name":"open override val writable: Boolean","description":"dev.kordex.modules.web.core.backend.values.types.SimpleValue.writable","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.values.types/-simple-value/writable.html","searchKeys":["writable","open override val writable: Boolean","dev.kordex.modules.web.core.backend.values.types.SimpleValue.writable"]},{"name":"open suspend fun beforeRequest(verb: Verb, call: ApplicationCall): Boolean","description":"dev.kordex.modules.web.core.backend.routes.Route.beforeRequest","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.routes/-route/before-request.html","searchKeys":["beforeRequest","open suspend fun beforeRequest(verb: Verb, call: ApplicationCall): Boolean","dev.kordex.modules.web.core.backend.routes.Route.beforeRequest"]},{"name":"open suspend fun delete(call: ApplicationCall)","description":"dev.kordex.modules.web.core.backend.routes.Route.delete","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.routes/-route/delete.html","searchKeys":["delete","open suspend fun delete(call: ApplicationCall)","dev.kordex.modules.web.core.backend.routes.Route.delete"]},{"name":"open suspend fun get(call: ApplicationCall)","description":"dev.kordex.modules.web.core.backend.routes.Route.get","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.routes/-route/get.html","searchKeys":["get","open suspend fun get(call: ApplicationCall)","dev.kordex.modules.web.core.backend.routes.Route.get"]},{"name":"open suspend fun head(call: ApplicationCall)","description":"dev.kordex.modules.web.core.backend.routes.Route.head","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.routes/-route/head.html","searchKeys":["head","open suspend fun head(call: ApplicationCall)","dev.kordex.modules.web.core.backend.routes.Route.head"]},{"name":"open suspend fun options(call: ApplicationCall)","description":"dev.kordex.modules.web.core.backend.routes.Route.options","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.routes/-route/options.html","searchKeys":["options","open suspend fun options(call: ApplicationCall)","dev.kordex.modules.web.core.backend.routes.Route.options"]},{"name":"open suspend fun patch(call: ApplicationCall)","description":"dev.kordex.modules.web.core.backend.routes.Route.patch","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.routes/-route/patch.html","searchKeys":["patch","open suspend fun patch(call: ApplicationCall)","dev.kordex.modules.web.core.backend.routes.Route.patch"]},{"name":"open suspend fun post(call: ApplicationCall)","description":"dev.kordex.modules.web.core.backend.routes.Route.post","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.routes/-route/post.html","searchKeys":["post","open suspend fun post(call: ApplicationCall)","dev.kordex.modules.web.core.backend.routes.Route.post"]},{"name":"open suspend fun put(call: ApplicationCall)","description":"dev.kordex.modules.web.core.backend.routes.Route.put","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.routes/-route/put.html","searchKeys":["put","open suspend fun put(call: ApplicationCall)","dev.kordex.modules.web.core.backend.routes.Route.put"]},{"name":"open suspend fun setup(call: ApplicationCall): Boolean","description":"dev.kordex.modules.web.core.backend.websockets.Websocket.setup","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.websockets/-websocket/setup.html","searchKeys":["setup","open suspend fun setup(call: ApplicationCall): Boolean","dev.kordex.modules.web.core.backend.websockets.Websocket.setup"]},{"name":"open suspend override fun setup()","description":"dev.kordex.modules.web.core.backend.WebExtension.setup","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend/-web-extension/setup.html","searchKeys":["setup","open suspend override fun setup()","dev.kordex.modules.web.core.backend.WebExtension.setup"]},{"name":"open suspend override fun unload()","description":"dev.kordex.modules.web.core.backend.WebExtension.unload","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend/-web-extension/unload.html","searchKeys":["unload","open suspend override fun unload()","dev.kordex.modules.web.core.backend.WebExtension.unload"]},{"name":"open val classes: MutableList<String>","description":"dev.kordex.modules.web.core.backend.pages.Block.classes","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.pages/-block/classes.html","searchKeys":["classes","open val classes: MutableList<String>","dev.kordex.modules.web.core.backend.pages.Block.classes"]},{"name":"open val content: String? = null","description":"dev.kordex.modules.web.core.backend.pages.Block.content","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.pages/-block/content.html","searchKeys":["content","open val content: String? = null","dev.kordex.modules.web.core.backend.pages.Block.content"]},{"name":"open val id: String? = null","description":"dev.kordex.modules.web.core.backend.pages.Block.id","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.pages/-block/id.html","searchKeys":["id","open val id: String? = null","dev.kordex.modules.web.core.backend.pages.Block.id"]},{"name":"open val writable: Boolean = false","description":"dev.kordex.modules.web.core.backend.values.types.Value.writable","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.values.types/-value/writable.html","searchKeys":["writable","open val writable: Boolean = false","dev.kordex.modules.web.core.backend.values.types.Value.writable"]},{"name":"sealed class ValueInterval","description":"dev.kordex.modules.web.core.backend.values.ValueInterval","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.values/-value-interval/index.html","searchKeys":["ValueInterval","sealed class ValueInterval","dev.kordex.modules.web.core.backend.values.ValueInterval"]},{"name":"sealed class Verb","description":"dev.kordex.modules.web.core.backend.routes.Verb","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.routes/-verb/index.html","searchKeys":["Verb","sealed class Verb","dev.kordex.modules.web.core.backend.routes.Verb"]},{"name":"sealed interface ForwardedHeaderMode","description":"dev.kordex.modules.web.core.backend.config.ForwardedHeaderMode","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.config/-forwarded-header-mode/index.html","searchKeys":["ForwardedHeaderMode","sealed interface ForwardedHeaderMode","dev.kordex.modules.web.core.backend.config.ForwardedHeaderMode"]},{"name":"sealed interface ForwardedHeaderStrategy","description":"dev.kordex.modules.web.core.backend.config.ForwardedHeaderStrategy","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.config/-forwarded-header-strategy/index.html","searchKeys":["ForwardedHeaderStrategy","sealed interface ForwardedHeaderStrategy","dev.kordex.modules.web.core.backend.config.ForwardedHeaderStrategy"]},{"name":"suspend fun ApplicationCall.allow(): Boolean","description":"dev.kordex.modules.web.core.backend.routes.utils.allow","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.routes.utils/allow.html","searchKeys":["allow","suspend fun ApplicationCall.allow(): Boolean","dev.kordex.modules.web.core.backend.routes.utils.allow"]},{"name":"suspend fun ApplicationCall.deny(body: DenyBuilder.() -> Unit): Boolean","description":"dev.kordex.modules.web.core.backend.routes.utils.deny","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.routes.utils/deny.html","searchKeys":["deny","suspend fun ApplicationCall.deny(body: DenyBuilder.() -> Unit): Boolean","dev.kordex.modules.web.core.backend.routes.utils.deny"]},{"name":"suspend fun ApplicationCall.error(error: WebError)","description":"dev.kordex.modules.web.core.backend.errors.error","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.errors/error.html","searchKeys":["error","suspend fun ApplicationCall.error(error: WebError)","dev.kordex.modules.web.core.backend.errors.error"]},{"name":"suspend fun close(reason: CloseReason = CloseReason(CloseReason.Codes.NORMAL, \"\"))","description":"dev.kordex.modules.web.core.backend.websockets.Websocket.close","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.websockets/-websocket/close.html","searchKeys":["close","suspend fun close(reason: CloseReason = CloseReason(CloseReason.Codes.NORMAL, \"\"))","dev.kordex.modules.web.core.backend.websockets.Websocket.close"]},{"name":"suspend fun handle(session: DefaultWebSocketServerSession)","description":"dev.kordex.modules.web.core.backend.websockets.WebsocketRegistry.handle","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.websockets/-websocket-registry/handle.html","searchKeys":["handle","suspend fun handle(session: DefaultWebSocketServerSession)","dev.kordex.modules.web.core.backend.websockets.WebsocketRegistry.handle"]},{"name":"suspend fun handle(verb: Verb, context: RoutingContext)","description":"dev.kordex.modules.web.core.backend.routes.RouteRegistry.handle","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.routes/-route-registry/handle.html","searchKeys":["handle","suspend fun handle(verb: Verb, context: RoutingContext)","dev.kordex.modules.web.core.backend.routes.RouteRegistry.handle"]},{"name":"suspend fun handleExtensionState(event: ExtensionStateEvent)","description":"dev.kordex.modules.web.core.backend.websockets.WebsocketRegistry.handleExtensionState","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.websockets/-websocket-registry/handle-extension-state.html","searchKeys":["handleExtensionState","suspend fun handleExtensionState(event: ExtensionStateEvent)","dev.kordex.modules.web.core.backend.websockets.WebsocketRegistry.handleExtensionState"]},{"name":"suspend fun missingGuild(id: Snowflake)","description":"dev.kordex.modules.web.core.backend.routes.utils.DenyBuilder.missingGuild","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.routes.utils/-deny-builder/missing-guild.html","searchKeys":["missingGuild","suspend fun missingGuild(id: Snowflake)","dev.kordex.modules.web.core.backend.routes.utils.DenyBuilder.missingGuild"]},{"name":"suspend fun missingPermissions(perms: Permissions)","description":"dev.kordex.modules.web.core.backend.routes.utils.DenyBuilder.missingPermissions","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.routes.utils/-deny-builder/missing-permissions.html","searchKeys":["missingPermissions","suspend fun missingPermissions(perms: Permissions)","dev.kordex.modules.web.core.backend.routes.utils.DenyBuilder.missingPermissions"]},{"name":"suspend fun missingRole(guildId: Snowflake, id: Snowflake)","description":"dev.kordex.modules.web.core.backend.routes.utils.DenyBuilder.missingRole","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.routes.utils/-deny-builder/missing-role.html","searchKeys":["missingRole","suspend fun missingRole(guildId: Snowflake, id: Snowflake)","dev.kordex.modules.web.core.backend.routes.utils.DenyBuilder.missingRole"]},{"name":"suspend fun remove(path: String): WebsocketBuilder?","description":"dev.kordex.modules.web.core.backend.websockets.WebsocketRegistry.remove","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.websockets/-websocket-registry/remove.html","searchKeys":["remove","suspend fun remove(path: String): WebsocketBuilder?","dev.kordex.modules.web.core.backend.websockets.WebsocketRegistry.remove"]},{"name":"suspend fun removeAll()","description":"dev.kordex.modules.web.core.backend.websockets.WebsocketRegistry.removeAll","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.websockets/-websocket-registry/remove-all.html","searchKeys":["removeAll","suspend fun removeAll()","dev.kordex.modules.web.core.backend.websockets.WebsocketRegistry.removeAll"]},{"name":"suspend fun send(content: ByteArray)","description":"dev.kordex.modules.web.core.backend.websockets.Websocket.send","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.websockets/-websocket/send.html","searchKeys":["send","suspend fun send(content: ByteArray)","dev.kordex.modules.web.core.backend.websockets.Websocket.send"]},{"name":"suspend fun send(content: String)","description":"dev.kordex.modules.web.core.backend.websockets.Websocket.send","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.websockets/-websocket/send.html","searchKeys":["send","suspend fun send(content: String)","dev.kordex.modules.web.core.backend.websockets.Websocket.send"]},{"name":"suspend fun send(frame: Frame)","description":"dev.kordex.modules.web.core.backend.websockets.Websocket.send","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.websockets/-websocket/send.html","searchKeys":["send","suspend fun send(frame: Frame)","dev.kordex.modules.web.core.backend.websockets.Websocket.send"]},{"name":"suspend fun start()","description":"dev.kordex.modules.web.core.backend.server.WebServer.start","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.server/-web-server/start.html","searchKeys":["start","suspend fun start()","dev.kordex.modules.web.core.backend.server.WebServer.start"]},{"name":"suspend fun stop()","description":"dev.kordex.modules.web.core.backend.server.WebServer.stop","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.server/-web-server/stop.html","searchKeys":["stop","suspend fun stop()","dev.kordex.modules.web.core.backend.server.WebServer.stop"]},{"name":"suspend fun teardown()","description":"dev.kordex.modules.web.core.backend.WebRegistries.teardown","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend/-web-registries/teardown.html","searchKeys":["teardown","suspend fun teardown()","dev.kordex.modules.web.core.backend.WebRegistries.teardown"]},{"name":"typealias Callback = suspend (Frame) -> Unit","description":"dev.kordex.modules.web.core.backend.websockets.Callback","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.websockets/-callback/index.html","searchKeys":["Callback","typealias Callback = suspend (Frame) -> Unit","dev.kordex.modules.web.core.backend.websockets.Callback"]},{"name":"typealias ValueCheck = (now: LocalDateTime) -> Boolean","description":"dev.kordex.modules.web.core.backend.values.ValueCheck","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.values/-value-check/index.html","searchKeys":["ValueCheck","typealias ValueCheck = (now: LocalDateTime) -> Boolean","dev.kordex.modules.web.core.backend.values.ValueCheck"]},{"name":"typealias WebsocketBuilderFun = (session: DefaultWebSocketServerSession) -> Websocket","description":"dev.kordex.modules.web.core.backend.websockets.WebsocketBuilderFun","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.websockets/-websocket-builder-fun/index.html","searchKeys":["WebsocketBuilderFun","typealias WebsocketBuilderFun = (session: DefaultWebSocketServerSession) -> Websocket","dev.kordex.modules.web.core.backend.websockets.WebsocketBuilderFun"]},{"name":"val ALL: Set<ValueInterval>","description":"dev.kordex.modules.web.core.backend.values.ValueInterval.Companion.ALL","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.values/-value-interval/-companion/-a-l-l.html","searchKeys":["ALL","val ALL: Set<ValueInterval>","dev.kordex.modules.web.core.backend.values.ValueInterval.Companion.ALL"]},{"name":"val MethodNotAllowedError: WebError","description":"dev.kordex.modules.web.core.backend.errors.MethodNotAllowedError","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.errors/-method-not-allowed-error.html","searchKeys":["MethodNotAllowedError","val MethodNotAllowedError: WebError","dev.kordex.modules.web.core.backend.errors.MethodNotAllowedError"]},{"name":"val block: (MutableOriginConnectionPoint, List<ForwardedHeaderValue>) -> Unit","description":"dev.kordex.modules.web.core.backend.config.ForwardedHeaderStrategy.Custom.block","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.config/-forwarded-header-strategy/-custom/block.html","searchKeys":["block","val block: (MutableOriginConnectionPoint, List<ForwardedHeaderValue>) -> Unit","dev.kordex.modules.web.core.backend.config.ForwardedHeaderStrategy.Custom.block"]},{"name":"val block: (MutableOriginConnectionPoint, XForwardedHeaderValues) -> Unit","description":"dev.kordex.modules.web.core.backend.config.ForwardedHeaderStrategy.XCustom.block","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.config/-forwarded-header-strategy/-x-custom/block.html","searchKeys":["block","val block: (MutableOriginConnectionPoint, XForwardedHeaderValues) -> Unit","dev.kordex.modules.web.core.backend.config.ForwardedHeaderStrategy.XCustom.block"]},{"name":"val builder: WebsocketBuilderFun","description":"dev.kordex.modules.web.core.backend.websockets.WebsocketBuilder.builder","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.websockets/-websocket-builder/builder.html","searchKeys":["builder","val builder: WebsocketBuilderFun","dev.kordex.modules.web.core.backend.websockets.WebsocketBuilder.builder"]},{"name":"val check: ValueCheck","description":"dev.kordex.modules.web.core.backend.values.ValueInterval.check","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.values/-value-interval/check.html","searchKeys":["check","val check: ValueCheck","dev.kordex.modules.web.core.backend.values.ValueInterval.check"]},{"name":"val children: MutableList<NavigationItem>","description":"dev.kordex.modules.web.core.backend.pages.navigation.NavigationItem.children","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.pages.navigation/-navigation-item/children.html","searchKeys":["children","val children: MutableList<NavigationItem>","dev.kordex.modules.web.core.backend.pages.navigation.NavigationItem.children"]},{"name":"val extension: String","description":"dev.kordex.modules.web.core.backend.pages.navigation.ExtensionNavigation.extension","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.pages.navigation/-extension-navigation/extension.html","searchKeys":["extension","val extension: String","dev.kordex.modules.web.core.backend.pages.navigation.ExtensionNavigation.extension"]},{"name":"val extension: String","description":"dev.kordex.modules.web.core.backend.routes.Route.extension","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.routes/-route/extension.html","searchKeys":["extension","val extension: String","dev.kordex.modules.web.core.backend.routes.Route.extension"]},{"name":"val extension: String","description":"dev.kordex.modules.web.core.backend.websockets.WebsocketBuilder.extension","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.websockets/-websocket-builder/extension.html","searchKeys":["extension","val extension: String","dev.kordex.modules.web.core.backend.websockets.WebsocketBuilder.extension"]},{"name":"val extensions: MutableMap<String, ExtensionNavigation>","description":"dev.kordex.modules.web.core.backend.pages.navigation.NavigationRegistry.extensions","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.pages.navigation/-navigation-registry/extensions.html","searchKeys":["extensions","val extensions: MutableMap<String, ExtensionNavigation>","dev.kordex.modules.web.core.backend.pages.navigation.NavigationRegistry.extensions"]},{"name":"val icon: Identifier","description":"dev.kordex.modules.web.core.backend.pages.navigation.ExtensionNavigation.icon","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.pages.navigation/-extension-navigation/icon.html","searchKeys":["icon","val icon: Identifier","dev.kordex.modules.web.core.backend.pages.navigation.ExtensionNavigation.icon"]},{"name":"val icon: Identifier","description":"dev.kordex.modules.web.core.backend.pages.navigation.NavigationItem.icon","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.pages.navigation/-navigation-item/icon.html","searchKeys":["icon","val icon: Identifier","dev.kordex.modules.web.core.backend.pages.navigation.NavigationItem.icon"]},{"name":"val id: Snowflake","description":"dev.kordex.modules.web.core.backend.routes.utils.DenyBuilder.EntityInfo.id","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.routes.utils/-deny-builder/-entity-info/id.html","searchKeys":["id","val id: Snowflake","dev.kordex.modules.web.core.backend.routes.utils.DenyBuilder.EntityInfo.id"]},{"name":"val id: String","description":"dev.kordex.modules.web.core.backend.types.Identifier.id","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.types/-identifier/id.html","searchKeys":["id","val id: String","dev.kordex.modules.web.core.backend.types.Identifier.id"]},{"name":"val known: List<String>","description":"dev.kordex.modules.web.core.backend.config.ForwardedHeaderStrategy.SkipKnown.known","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.config/-forwarded-header-strategy/-skip-known/known.html","searchKeys":["known","val known: List<String>","dev.kordex.modules.web.core.backend.config.ForwardedHeaderStrategy.SkipKnown.known"]},{"name":"val maxValues: Int = 48","description":"dev.kordex.modules.web.core.backend.values.types.TrackedValue.maxValues","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.values.types/-tracked-value/max-values.html","searchKeys":["maxValues","val maxValues: Int = 48","dev.kordex.modules.web.core.backend.values.types.TrackedValue.maxValues"]},{"name":"val message: String","description":"dev.kordex.modules.web.core.backend.errors.WebError.message","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.errors/-web-error/message.html","searchKeys":["message","val message: String","dev.kordex.modules.web.core.backend.errors.WebError.message"]},{"name":"val method: HttpMethod","description":"dev.kordex.modules.web.core.backend.routes.Verb.method","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.routes/-verb/method.html","searchKeys":["method","val method: HttpMethod","dev.kordex.modules.web.core.backend.routes.Verb.method"]},{"name":"val name: String","description":"dev.kordex.modules.web.core.backend.pages.navigation.NavigationItem.name","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.pages.navigation/-navigation-item/name.html","searchKeys":["name","val name: String","dev.kordex.modules.web.core.backend.pages.navigation.NavigationItem.name"]},{"name":"val name: String?","description":"dev.kordex.modules.web.core.backend.routes.utils.DenyBuilder.EntityInfo.name","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.routes.utils/-deny-builder/-entity-info/name.html","searchKeys":["name","val name: String?","dev.kordex.modules.web.core.backend.routes.utils.DenyBuilder.EntityInfo.name"]},{"name":"val namespace: String","description":"dev.kordex.modules.web.core.backend.types.Identifier.namespace","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.types/-identifier/namespace.html","searchKeys":["namespace","val namespace: String","dev.kordex.modules.web.core.backend.types.Identifier.namespace"]},{"name":"val navigation: MutableList<NavigationItem>","description":"dev.kordex.modules.web.core.backend.pages.navigation.ExtensionNavigation.navigation","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.pages.navigation/-extension-navigation/navigation.html","searchKeys":["navigation","val navigation: MutableList<NavigationItem>","dev.kordex.modules.web.core.backend.pages.navigation.ExtensionNavigation.navigation"]},{"name":"val number: Int","description":"dev.kordex.modules.web.core.backend.config.ForwardedHeaderStrategy.SkipLast.number","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.config/-forwarded-header-strategy/-skip-last/number.html","searchKeys":["number","val number: Int","dev.kordex.modules.web.core.backend.config.ForwardedHeaderStrategy.SkipLast.number"]},{"name":"val oauthClient: HttpClient","description":"dev.kordex.modules.web.core.backend.server.oauthClient","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.server/oauth-client.html","searchKeys":["oauthClient","val oauthClient: HttpClient","dev.kordex.modules.web.core.backend.server.oauthClient"]},{"name":"val page: String?","description":"dev.kordex.modules.web.core.backend.pages.navigation.NavigationItem.page","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.pages.navigation/-navigation-item/page.html","searchKeys":["page","val page: String?","dev.kordex.modules.web.core.backend.pages.navigation.NavigationItem.page"]},{"name":"val precision: ValueInterval","description":"dev.kordex.modules.web.core.backend.values.types.TrackedValue.precision","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.values.types/-tracked-value/precision.html","searchKeys":["precision","val precision: ValueInterval","dev.kordex.modules.web.core.backend.values.types.TrackedValue.precision"]},{"name":"val registries: WebRegistries","description":"dev.kordex.modules.web.core.backend.server.WebServer.registries","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.server/-web-server/registries.html","searchKeys":["registries","val registries: WebRegistries","dev.kordex.modules.web.core.backend.server.WebServer.registries"]},{"name":"val server: WebServer","description":"dev.kordex.modules.web.core.backend.events.WebServerStartEvent.server","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.events/-web-server-start-event/server.html","searchKeys":["server","val server: WebServer","dev.kordex.modules.web.core.backend.events.WebServerStartEvent.server"]},{"name":"val session: DefaultWebSocketServerSession","description":"dev.kordex.modules.web.core.backend.websockets.Websocket.session","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.websockets/-websocket/session.html","searchKeys":["session","val session: DefaultWebSocketServerSession","dev.kordex.modules.web.core.backend.websockets.Websocket.session"]},{"name":"val setup: ExtensionNavigation.() -> Unit","description":"dev.kordex.modules.web.core.backend.pages.navigation.ExtensionNavigation.setup","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.pages.navigation/-extension-navigation/setup.html","searchKeys":["setup","val setup: ExtensionNavigation.() -> Unit","dev.kordex.modules.web.core.backend.pages.navigation.ExtensionNavigation.setup"]},{"name":"val statusCode: HttpStatusCode","description":"dev.kordex.modules.web.core.backend.errors.WebError.statusCode","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.errors/-web-error/status-code.html","searchKeys":["statusCode","val statusCode: HttpStatusCode","dev.kordex.modules.web.core.backend.errors.WebError.statusCode"]},{"name":"val template: String","description":"dev.kordex.modules.web.core.backend.pages.blocks.labels.ValueLabel.template","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.pages.blocks.labels/-value-label/template.html","searchKeys":["template","val template: String","dev.kordex.modules.web.core.backend.pages.blocks.labels.ValueLabel.template"]},{"name":"val text: String","description":"dev.kordex.modules.web.core.backend.pages.blocks.labels.TextLabel.text","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.pages.blocks.labels/-text-label/text.html","searchKeys":["text","val text: String","dev.kordex.modules.web.core.backend.pages.blocks.labels.TextLabel.text"]},{"name":"val time: Instant","description":"dev.kordex.modules.web.core.backend.values.TimedContainer.time","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.values/-timed-container/time.html","searchKeys":["time","val time: Instant","dev.kordex.modules.web.core.backend.values.TimedContainer.time"]},{"name":"val translationKey: String","description":"dev.kordex.modules.web.core.backend.values.ValueInterval.translationKey","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.values/-value-interval/translation-key.html","searchKeys":["translationKey","val translationKey: String","dev.kordex.modules.web.core.backend.values.ValueInterval.translationKey"]},{"name":"val value: String","description":"dev.kordex.modules.web.core.backend.pages.blocks.labels.ValueLabel.value","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.pages.blocks.labels/-value-label/value.html","searchKeys":["value","val value: String","dev.kordex.modules.web.core.backend.pages.blocks.labels.ValueLabel.value"]},{"name":"val value: V","description":"dev.kordex.modules.web.core.backend.values.TimedContainer.value","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.values/-timed-container/value.html","searchKeys":["value","val value: V","dev.kordex.modules.web.core.backend.values.TimedContainer.value"]},{"name":"var children: MutableList<NavigationItem>","description":"dev.kordex.modules.web.core.backend.pages.navigation.NavigationItem.Builder.children","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.pages.navigation/-navigation-item/-builder/children.html","searchKeys":["children","var children: MutableList<NavigationItem>","dev.kordex.modules.web.core.backend.pages.navigation.NavigationItem.Builder.children"]},{"name":"var devMode: Boolean","description":"dev.kordex.modules.web.core.backend.config.WebServerConfig.devMode","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.config/-web-server-config/dev-mode.html","searchKeys":["devMode","var devMode: Boolean","dev.kordex.modules.web.core.backend.config.WebServerConfig.devMode"]},{"name":"var headerMode: ForwardedHeaderMode","description":"dev.kordex.modules.web.core.backend.config.WebServerConfig.ReverseProxy.headerMode","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.config/-web-server-config/-reverse-proxy/header-mode.html","searchKeys":["headerMode","var headerMode: ForwardedHeaderMode","dev.kordex.modules.web.core.backend.config.WebServerConfig.ReverseProxy.headerMode"]},{"name":"var headerStrategy: ForwardedHeaderStrategy","description":"dev.kordex.modules.web.core.backend.config.WebServerConfig.ReverseProxy.headerStrategy","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.config/-web-server-config/-reverse-proxy/header-strategy.html","searchKeys":["headerStrategy","var headerStrategy: ForwardedHeaderStrategy","dev.kordex.modules.web.core.backend.config.WebServerConfig.ReverseProxy.headerStrategy"]},{"name":"var missingGuilds: MutableList<DenyBuilder.EntityInfo>?","description":"dev.kordex.modules.web.core.backend.routes.utils.DenyBuilder.missingGuilds","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.routes.utils/-deny-builder/missing-guilds.html","searchKeys":["missingGuilds","var missingGuilds: MutableList<DenyBuilder.EntityInfo>?","dev.kordex.modules.web.core.backend.routes.utils.DenyBuilder.missingGuilds"]},{"name":"var missingPermissions: Permissions?","description":"dev.kordex.modules.web.core.backend.routes.utils.DenyBuilder.missingPermissions","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.routes.utils/-deny-builder/missing-permissions.html","searchKeys":["missingPermissions","var missingPermissions: Permissions?","dev.kordex.modules.web.core.backend.routes.utils.DenyBuilder.missingPermissions"]},{"name":"var missingRoles: MutableList<DenyBuilder.EntityInfo>?","description":"dev.kordex.modules.web.core.backend.routes.utils.DenyBuilder.missingRoles","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.routes.utils/-deny-builder/missing-roles.html","searchKeys":["missingRoles","var missingRoles: MutableList<DenyBuilder.EntityInfo>?","dev.kordex.modules.web.core.backend.routes.utils.DenyBuilder.missingRoles"]},{"name":"var port: Int","description":"dev.kordex.modules.web.core.backend.config.WebServerConfig.port","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.config/-web-server-config/port.html","searchKeys":["port","var port: Int","dev.kordex.modules.web.core.backend.config.WebServerConfig.port"]},{"name":"var reasonKey: String?","description":"dev.kordex.modules.web.core.backend.routes.utils.DenyBuilder.reasonKey","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.routes.utils/-deny-builder/reason-key.html","searchKeys":["reasonKey","var reasonKey: String?","dev.kordex.modules.web.core.backend.routes.utils.DenyBuilder.reasonKey"]},{"name":"var reasonPlaceholders: Array<String>","description":"dev.kordex.modules.web.core.backend.routes.utils.DenyBuilder.reasonPlaceholders","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.routes.utils/-deny-builder/reason-placeholders.html","searchKeys":["reasonPlaceholders","var reasonPlaceholders: Array<String>","dev.kordex.modules.web.core.backend.routes.utils.DenyBuilder.reasonPlaceholders"]},{"name":"var running: Boolean","description":"dev.kordex.modules.web.core.backend.server.WebServer.running","location":"modules/web/web-core/web-backend/dev.kordex.modules.web.core.backend.server/-web-server/running.html","searchKeys":["running","var running: Boolean","dev.kordex.modules.web.core.backend.server.WebServer.running"]},{"name":"abstract class UnsafeModalForm : ModalForm","description":"dev.kordex.modules.dev.unsafe.components.forms.UnsafeModalForm","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.forms/-unsafe-modal-form/index.html","searchKeys":["UnsafeModalForm","abstract class UnsafeModalForm : ModalForm","dev.kordex.modules.dev.unsafe.components.forms.UnsafeModalForm"]},{"name":"abstract class UnsafeSelectMenu<C : SelectMenuContext, UnsafeSelectMenuInteractionContext, M : UnsafeModalForm>(timeoutTask: Task?, val modal: () -> M? = null) : SelectMenu<C, M> ","description":"dev.kordex.modules.dev.unsafe.components.menus.UnsafeSelectMenu","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus/-unsafe-select-menu/index.html","searchKeys":["UnsafeSelectMenu","abstract class UnsafeSelectMenu<C : SelectMenuContext, UnsafeSelectMenuInteractionContext, M : UnsafeModalForm>(timeoutTask: Task?, val modal: () -> M? = null) : SelectMenu<C, M> ","dev.kordex.modules.dev.unsafe.components.menus.UnsafeSelectMenu"]},{"name":"abstract fun createContext(event: SelectMenuInteractionCreateEvent, interactionResponse: MessageInteractionResponseBehavior?, cache: MutableStringKeyedMap<Any>): C","description":"dev.kordex.modules.dev.unsafe.components.menus.UnsafeSelectMenu.createContext","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus/-unsafe-select-menu/create-context.html","searchKeys":["createContext","abstract fun createContext(event: SelectMenuInteractionCreateEvent, interactionResponse: MessageInteractionResponseBehavior?, cache: MutableStringKeyedMap<Any>): C","dev.kordex.modules.dev.unsafe.components.menus.UnsafeSelectMenu.createContext"]},{"name":"abstract override val event: ApplicationCommandInteractionCreateEvent","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeCommandInteractionContext.event","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-command-interaction-context/event.html","searchKeys":["event","abstract override val event: ApplicationCommandInteractionCreateEvent","dev.kordex.modules.dev.unsafe.commands.UnsafeCommandInteractionContext.event"]},{"name":"abstract override val event: E","description":"dev.kordex.modules.dev.unsafe.components.UnsafeComponentInteractionContext.event","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components/-unsafe-component-interaction-context/event.html","searchKeys":["event","abstract override val event: E","dev.kordex.modules.dev.unsafe.components.UnsafeComponentInteractionContext.event"]},{"name":"abstract suspend fun ackEphemeral(builder: suspend InteractionResponseCreateBuilder.() -> Unit? = null): EphemeralMessageInteractionResponseBehavior","description":"dev.kordex.modules.dev.unsafe.types.UnsafeInteractionContext.ackEphemeral","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.types/-unsafe-interaction-context/ack-ephemeral.html","searchKeys":["ackEphemeral","abstract suspend fun ackEphemeral(builder: suspend InteractionResponseCreateBuilder.() -> Unit? = null): EphemeralMessageInteractionResponseBehavior","dev.kordex.modules.dev.unsafe.types.UnsafeInteractionContext.ackEphemeral"]},{"name":"abstract suspend fun ackPublic(builder: suspend InteractionResponseCreateBuilder.() -> Unit? = null): PublicMessageInteractionResponseBehavior","description":"dev.kordex.modules.dev.unsafe.types.UnsafeInteractionContext.ackPublic","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.types/-unsafe-interaction-context/ack-public.html","searchKeys":["ackPublic","abstract suspend fun ackPublic(builder: suspend InteractionResponseCreateBuilder.() -> Unit? = null): PublicMessageInteractionResponseBehavior","dev.kordex.modules.dev.unsafe.types.UnsafeInteractionContext.ackPublic"]},{"name":"abstract suspend fun edit(builder: suspend InteractionResponseModifyBuilder.() -> Unit): MessageInteractionResponse","description":"dev.kordex.modules.dev.unsafe.types.UnsafeInteractionContext.edit","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.types/-unsafe-interaction-context/edit.html","searchKeys":["edit","abstract suspend fun edit(builder: suspend InteractionResponseModifyBuilder.() -> Unit): MessageInteractionResponse","dev.kordex.modules.dev.unsafe.types.UnsafeInteractionContext.edit"]},{"name":"abstract suspend fun editingPaginator(defaultGroup: Key = EMPTY_KEY, locale: Locale? = null, builder: suspend PaginatorBuilder.() -> Unit): BaseButtonPaginator","description":"dev.kordex.modules.dev.unsafe.types.UnsafeInteractionContext.editingPaginator","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.types/-unsafe-interaction-context/editing-paginator.html","searchKeys":["editingPaginator","abstract suspend fun editingPaginator(defaultGroup: Key = EMPTY_KEY, locale: Locale? = null, builder: suspend PaginatorBuilder.() -> Unit): BaseButtonPaginator","dev.kordex.modules.dev.unsafe.types.UnsafeInteractionContext.editingPaginator"]},{"name":"abstract suspend fun respondEphemeral(builder: suspend FollowupMessageCreateBuilder.() -> Unit): EphemeralFollowupMessage","description":"dev.kordex.modules.dev.unsafe.types.UnsafeInteractionContext.respondEphemeral","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.types/-unsafe-interaction-context/respond-ephemeral.html","searchKeys":["respondEphemeral","abstract suspend fun respondEphemeral(builder: suspend FollowupMessageCreateBuilder.() -> Unit): EphemeralFollowupMessage","dev.kordex.modules.dev.unsafe.types.UnsafeInteractionContext.respondEphemeral"]},{"name":"abstract suspend fun respondPublic(builder: suspend FollowupMessageCreateBuilder.() -> Unit): PublicFollowupMessage","description":"dev.kordex.modules.dev.unsafe.types.UnsafeInteractionContext.respondPublic","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.types/-unsafe-interaction-context/respond-public.html","searchKeys":["respondPublic","abstract suspend fun respondPublic(builder: suspend FollowupMessageCreateBuilder.() -> Unit): PublicFollowupMessage","dev.kordex.modules.dev.unsafe.types.UnsafeInteractionContext.respondPublic"]},{"name":"abstract suspend fun respondingPaginator(defaultGroup: Key = EMPTY_KEY, locale: Locale? = null, builder: suspend PaginatorBuilder.() -> Unit): BaseButtonPaginator","description":"dev.kordex.modules.dev.unsafe.types.UnsafeInteractionContext.respondingPaginator","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.types/-unsafe-interaction-context/responding-paginator.html","searchKeys":["respondingPaginator","abstract suspend fun respondingPaginator(defaultGroup: Key = EMPTY_KEY, locale: Locale? = null, builder: suspend PaginatorBuilder.() -> Unit): BaseButtonPaginator","dev.kordex.modules.dev.unsafe.types.UnsafeInteractionContext.respondingPaginator"]},{"name":"abstract val event: InteractionCreateEvent","description":"dev.kordex.modules.dev.unsafe.types.UnsafeInteractionContext.event","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.types/-unsafe-interaction-context/event.html","searchKeys":["event","abstract val event: InteractionCreateEvent","dev.kordex.modules.dev.unsafe.types.UnsafeInteractionContext.event"]},{"name":"abstract var interactionResponse: R?","description":"dev.kordex.modules.dev.unsafe.types.UnsafeInteractionContext.interactionResponse","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.types/-unsafe-interaction-context/interaction-response.html","searchKeys":["interactionResponse","abstract var interactionResponse: R?","dev.kordex.modules.dev.unsafe.types.UnsafeInteractionContext.interactionResponse"]},{"name":"annotation class UnsafeAPI","description":"dev.kordex.modules.dev.unsafe.annotations.UnsafeAPI","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.annotations/-unsafe-a-p-i/index.html","searchKeys":["UnsafeAPI","annotation class UnsafeAPI","dev.kordex.modules.dev.unsafe.annotations.UnsafeAPI"]},{"name":"class UnionConverter(converters: Collection<GenericConverter>, typeName: Key? = null, shouldThrow: Boolean = false, var validator: Validator<Any> = null) : CoalescingConverter<Any> ","description":"dev.kordex.modules.dev.unsafe.converters.UnionConverter","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.converters/-union-converter/index.html","searchKeys":["UnionConverter","class UnionConverter(converters: Collection<GenericConverter>, typeName: Key? = null, shouldThrow: Boolean = false, var validator: Validator<Any> = null) : CoalescingConverter<Any> ","dev.kordex.modules.dev.unsafe.converters.UnionConverter"]},{"name":"class UnsafeChannelSelectMenu<M : UnsafeModalForm>(timeoutTask: Task?, val modal: () -> M? = null) : UnsafeSelectMenu<UnsafeChannelSelectMenuContext<M>, M> , ChannelSelectMenu","description":"dev.kordex.modules.dev.unsafe.components.menus.channel.UnsafeChannelSelectMenu","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus.channel/-unsafe-channel-select-menu/index.html","searchKeys":["UnsafeChannelSelectMenu","class UnsafeChannelSelectMenu<M : UnsafeModalForm>(timeoutTask: Task?, val modal: () -> M? = null) : UnsafeSelectMenu<UnsafeChannelSelectMenuContext<M>, M> , ChannelSelectMenu","dev.kordex.modules.dev.unsafe.components.menus.channel.UnsafeChannelSelectMenu"]},{"name":"class UnsafeChannelSelectMenuContext<M : UnsafeModalForm>(component: UnsafeChannelSelectMenu<M>, event: SelectMenuInteractionCreateEvent, var interactionResponse: MessageInteractionResponseBehavior?, cache: MutableStringKeyedMap<Any>) : SelectMenuContext, UnsafeSelectMenuInteractionContext","description":"dev.kordex.modules.dev.unsafe.components.menus.channel.UnsafeChannelSelectMenuContext","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus.channel/-unsafe-channel-select-menu-context/index.html","searchKeys":["UnsafeChannelSelectMenuContext","class UnsafeChannelSelectMenuContext<M : UnsafeModalForm>(component: UnsafeChannelSelectMenu<M>, event: SelectMenuInteractionCreateEvent, var interactionResponse: MessageInteractionResponseBehavior?, cache: MutableStringKeyedMap<Any>) : SelectMenuContext, UnsafeSelectMenuInteractionContext","dev.kordex.modules.dev.unsafe.components.menus.channel.UnsafeChannelSelectMenuContext"]},{"name":"class UnsafeCommandMessageCommandContext<M : UnsafeModalForm>(val event: MessageCommandInteractionCreateEvent, val command: MessageCommand<UnsafeCommandMessageCommandContext<M>, M>, var interactionResponse: MessageInteractionResponseBehavior?, cache: MutableStringKeyedMap<Any>) : MessageCommandContext<UnsafeCommandMessageCommandContext<M>, M> , UnsafeCommandInteractionContext","description":"dev.kordex.modules.dev.unsafe.contexts.UnsafeCommandMessageCommandContext","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.contexts/-unsafe-command-message-command-context/index.html","searchKeys":["UnsafeCommandMessageCommandContext","class UnsafeCommandMessageCommandContext<M : UnsafeModalForm>(val event: MessageCommandInteractionCreateEvent, val command: MessageCommand<UnsafeCommandMessageCommandContext<M>, M>, var interactionResponse: MessageInteractionResponseBehavior?, cache: MutableStringKeyedMap<Any>) : MessageCommandContext<UnsafeCommandMessageCommandContext<M>, M> , UnsafeCommandInteractionContext","dev.kordex.modules.dev.unsafe.contexts.UnsafeCommandMessageCommandContext"]},{"name":"class UnsafeCommandSlashCommandContext<A : Arguments, M : UnsafeModalForm>(val event: ChatInputCommandInteractionCreateEvent, val command: UnsafeSlashCommand<A, M>, var interactionResponse: MessageInteractionResponseBehavior?, cache: MutableStringKeyedMap<Any>) : SlashCommandContext<UnsafeCommandSlashCommandContext<A, M>, A, M> , UnsafeCommandInteractionContext","description":"dev.kordex.modules.dev.unsafe.contexts.UnsafeCommandSlashCommandContext","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.contexts/-unsafe-command-slash-command-context/index.html","searchKeys":["UnsafeCommandSlashCommandContext","class UnsafeCommandSlashCommandContext<A : Arguments, M : UnsafeModalForm>(val event: ChatInputCommandInteractionCreateEvent, val command: UnsafeSlashCommand<A, M>, var interactionResponse: MessageInteractionResponseBehavior?, cache: MutableStringKeyedMap<Any>) : SlashCommandContext<UnsafeCommandSlashCommandContext<A, M>, A, M> , UnsafeCommandInteractionContext","dev.kordex.modules.dev.unsafe.contexts.UnsafeCommandSlashCommandContext"]},{"name":"class UnsafeCommandUserCommandContext<M : UnsafeModalForm>(val event: UserCommandInteractionCreateEvent, val command: UserCommand<UnsafeCommandUserCommandContext<M>, M>, var interactionResponse: MessageInteractionResponseBehavior?, cache: MutableStringKeyedMap<Any>) : UserCommandContext<UnsafeCommandUserCommandContext<M>, M> , UnsafeCommandInteractionContext","description":"dev.kordex.modules.dev.unsafe.contexts.UnsafeCommandUserCommandContext","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.contexts/-unsafe-command-user-command-context/index.html","searchKeys":["UnsafeCommandUserCommandContext","class UnsafeCommandUserCommandContext<M : UnsafeModalForm>(val event: UserCommandInteractionCreateEvent, val command: UserCommand<UnsafeCommandUserCommandContext<M>, M>, var interactionResponse: MessageInteractionResponseBehavior?, cache: MutableStringKeyedMap<Any>) : UserCommandContext<UnsafeCommandUserCommandContext<M>, M> , UnsafeCommandInteractionContext","dev.kordex.modules.dev.unsafe.contexts.UnsafeCommandUserCommandContext"]},{"name":"class UnsafeInteractionComponentContext<M : UnsafeModalForm>(val component: UnsafeInteractionButton<M>, val event: ButtonInteractionCreateEvent, var interactionResponse: MessageInteractionResponseBehavior?, cache: MutableStringKeyedMap<Any>) : InteractionButtonContext, UnsafeButtonInteractionContext","description":"dev.kordex.modules.dev.unsafe.contexts.UnsafeInteractionComponentContext","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.contexts/-unsafe-interaction-component-context/index.html","searchKeys":["UnsafeInteractionComponentContext","class UnsafeInteractionComponentContext<M : UnsafeModalForm>(val component: UnsafeInteractionButton<M>, val event: ButtonInteractionCreateEvent, var interactionResponse: MessageInteractionResponseBehavior?, cache: MutableStringKeyedMap<Any>) : InteractionButtonContext, UnsafeButtonInteractionContext","dev.kordex.modules.dev.unsafe.contexts.UnsafeInteractionComponentContext"]},{"name":"class UnsafeMentionableSelectMenu<M : UnsafeModalForm>(timeoutTask: Task?, val modal: () -> M? = null) : UnsafeSelectMenu<UnsafeMentionableSelectMenuContext<M>, M> , MentionableSelectMenu","description":"dev.kordex.modules.dev.unsafe.components.menus.mentionable.UnsafeMentionableSelectMenu","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus.mentionable/-unsafe-mentionable-select-menu/index.html","searchKeys":["UnsafeMentionableSelectMenu","class UnsafeMentionableSelectMenu<M : UnsafeModalForm>(timeoutTask: Task?, val modal: () -> M? = null) : UnsafeSelectMenu<UnsafeMentionableSelectMenuContext<M>, M> , MentionableSelectMenu","dev.kordex.modules.dev.unsafe.components.menus.mentionable.UnsafeMentionableSelectMenu"]},{"name":"class UnsafeMentionableSelectMenuContext<M : UnsafeModalForm>(component: UnsafeMentionableSelectMenu<M>, event: SelectMenuInteractionCreateEvent, var interactionResponse: MessageInteractionResponseBehavior?, cache: MutableStringKeyedMap<Any>) : SelectMenuContext, UnsafeSelectMenuInteractionContext","description":"dev.kordex.modules.dev.unsafe.components.menus.mentionable.UnsafeMentionableSelectMenuContext","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus.mentionable/-unsafe-mentionable-select-menu-context/index.html","searchKeys":["UnsafeMentionableSelectMenuContext","class UnsafeMentionableSelectMenuContext<M : UnsafeModalForm>(component: UnsafeMentionableSelectMenu<M>, event: SelectMenuInteractionCreateEvent, var interactionResponse: MessageInteractionResponseBehavior?, cache: MutableStringKeyedMap<Any>) : SelectMenuContext, UnsafeSelectMenuInteractionContext","dev.kordex.modules.dev.unsafe.components.menus.mentionable.UnsafeMentionableSelectMenuContext"]},{"name":"class UnsafeMessageCommand<M : UnsafeModalForm>(extension: Extension, val modal: () -> M? = null) : MessageCommand<UnsafeCommandMessageCommandContext<M>, M> ","description":"dev.kordex.modules.dev.unsafe.commands.message.UnsafeMessageCommand","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands.message/-unsafe-message-command/index.html","searchKeys":["UnsafeMessageCommand","class UnsafeMessageCommand<M : UnsafeModalForm>(extension: Extension, val modal: () -> M? = null) : MessageCommand<UnsafeCommandMessageCommandContext<M>, M> ","dev.kordex.modules.dev.unsafe.commands.message.UnsafeMessageCommand"]},{"name":"class UnsafeRoleSelectMenu<M : UnsafeModalForm>(timeoutTask: Task?, val modal: () -> M? = null) : UnsafeSelectMenu<UnsafeRoleSelectMenuContext<M>, M> , RoleSelectMenu","description":"dev.kordex.modules.dev.unsafe.components.menus.role.UnsafeRoleSelectMenu","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus.role/-unsafe-role-select-menu/index.html","searchKeys":["UnsafeRoleSelectMenu","class UnsafeRoleSelectMenu<M : UnsafeModalForm>(timeoutTask: Task?, val modal: () -> M? = null) : UnsafeSelectMenu<UnsafeRoleSelectMenuContext<M>, M> , RoleSelectMenu","dev.kordex.modules.dev.unsafe.components.menus.role.UnsafeRoleSelectMenu"]},{"name":"class UnsafeRoleSelectMenuContext<M : UnsafeModalForm>(component: UnsafeRoleSelectMenu<M>, event: SelectMenuInteractionCreateEvent, var interactionResponse: MessageInteractionResponseBehavior?, cache: MutableStringKeyedMap<Any>) : SelectMenuContext, UnsafeSelectMenuInteractionContext","description":"dev.kordex.modules.dev.unsafe.components.menus.role.UnsafeRoleSelectMenuContext","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus.role/-unsafe-role-select-menu-context/index.html","searchKeys":["UnsafeRoleSelectMenuContext","class UnsafeRoleSelectMenuContext<M : UnsafeModalForm>(component: UnsafeRoleSelectMenu<M>, event: SelectMenuInteractionCreateEvent, var interactionResponse: MessageInteractionResponseBehavior?, cache: MutableStringKeyedMap<Any>) : SelectMenuContext, UnsafeSelectMenuInteractionContext","dev.kordex.modules.dev.unsafe.components.menus.role.UnsafeRoleSelectMenuContext"]},{"name":"class UnsafeSlashCommand<A : Arguments, M : UnsafeModalForm>(extension: Extension, val arguments: () -> A? = null, val modal: () -> M? = null, val parentCommand: SlashCommand<*, *, *>? = null, val parentGroup: SlashGroup? = null) : SlashCommand<UnsafeCommandSlashCommandContext<A, M>, A, M> ","description":"dev.kordex.modules.dev.unsafe.commands.slash.UnsafeSlashCommand","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands.slash/-unsafe-slash-command/index.html","searchKeys":["UnsafeSlashCommand","class UnsafeSlashCommand<A : Arguments, M : UnsafeModalForm>(extension: Extension, val arguments: () -> A? = null, val modal: () -> M? = null, val parentCommand: SlashCommand<*, *, *>? = null, val parentGroup: SlashGroup? = null) : SlashCommand<UnsafeCommandSlashCommandContext<A, M>, A, M> ","dev.kordex.modules.dev.unsafe.commands.slash.UnsafeSlashCommand"]},{"name":"class UnsafeStringSelectMenu<M : UnsafeModalForm>(timeoutTask: Task?, val modal: () -> M? = null) : UnsafeSelectMenu<UnsafeStringSelectMenuContext<M>, M> , StringSelectMenu","description":"dev.kordex.modules.dev.unsafe.components.menus.string.UnsafeStringSelectMenu","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus.string/-unsafe-string-select-menu/index.html","searchKeys":["UnsafeStringSelectMenu","class UnsafeStringSelectMenu<M : UnsafeModalForm>(timeoutTask: Task?, val modal: () -> M? = null) : UnsafeSelectMenu<UnsafeStringSelectMenuContext<M>, M> , StringSelectMenu","dev.kordex.modules.dev.unsafe.components.menus.string.UnsafeStringSelectMenu"]},{"name":"class UnsafeStringSelectMenuContext<M : UnsafeModalForm>(component: UnsafeStringSelectMenu<M>, event: SelectMenuInteractionCreateEvent, var interactionResponse: MessageInteractionResponseBehavior?, cache: MutableStringKeyedMap<Any>) : SelectMenuContext, UnsafeSelectMenuInteractionContext","description":"dev.kordex.modules.dev.unsafe.components.menus.string.UnsafeStringSelectMenuContext","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus.string/-unsafe-string-select-menu-context/index.html","searchKeys":["UnsafeStringSelectMenuContext","class UnsafeStringSelectMenuContext<M : UnsafeModalForm>(component: UnsafeStringSelectMenu<M>, event: SelectMenuInteractionCreateEvent, var interactionResponse: MessageInteractionResponseBehavior?, cache: MutableStringKeyedMap<Any>) : SelectMenuContext, UnsafeSelectMenuInteractionContext","dev.kordex.modules.dev.unsafe.components.menus.string.UnsafeStringSelectMenuContext"]},{"name":"class UnsafeUserCommand<M : UnsafeModalForm>(extension: Extension, val modal: () -> M? = null) : UserCommand<UnsafeCommandUserCommandContext<M>, M> ","description":"dev.kordex.modules.dev.unsafe.commands.user.UnsafeUserCommand","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands.user/-unsafe-user-command/index.html","searchKeys":["UnsafeUserCommand","class UnsafeUserCommand<M : UnsafeModalForm>(extension: Extension, val modal: () -> M? = null) : UserCommand<UnsafeCommandUserCommandContext<M>, M> ","dev.kordex.modules.dev.unsafe.commands.user.UnsafeUserCommand"]},{"name":"class UnsafeUserSelectMenu<M : UnsafeModalForm>(timeoutTask: Task?, val modal: () -> M? = null) : UnsafeSelectMenu<UnsafeUserSelectMenuContext<M>, M> , UserSelectMenu","description":"dev.kordex.modules.dev.unsafe.components.menus.user.UnsafeUserSelectMenu","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus.user/-unsafe-user-select-menu/index.html","searchKeys":["UnsafeUserSelectMenu","class UnsafeUserSelectMenu<M : UnsafeModalForm>(timeoutTask: Task?, val modal: () -> M? = null) : UnsafeSelectMenu<UnsafeUserSelectMenuContext<M>, M> , UserSelectMenu","dev.kordex.modules.dev.unsafe.components.menus.user.UnsafeUserSelectMenu"]},{"name":"class UnsafeUserSelectMenuContext<M : UnsafeModalForm>(component: UnsafeUserSelectMenu<M>, event: SelectMenuInteractionCreateEvent, var interactionResponse: MessageInteractionResponseBehavior?, cache: MutableStringKeyedMap<Any>) : SelectMenuContext, UnsafeSelectMenuInteractionContext","description":"dev.kordex.modules.dev.unsafe.components.menus.user.UnsafeUserSelectMenuContext","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus.user/-unsafe-user-select-menu-context/index.html","searchKeys":["UnsafeUserSelectMenuContext","class UnsafeUserSelectMenuContext<M : UnsafeModalForm>(component: UnsafeUserSelectMenu<M>, event: SelectMenuInteractionCreateEvent, var interactionResponse: MessageInteractionResponseBehavior?, cache: MutableStringKeyedMap<Any>) : SelectMenuContext, UnsafeSelectMenuInteractionContext","dev.kordex.modules.dev.unsafe.components.menus.user.UnsafeUserSelectMenuContext"]},{"name":"constructor()","description":"dev.kordex.modules.dev.unsafe.components.forms.UnsafeModalForm.UnsafeModalForm","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.forms/-unsafe-modal-form/-unsafe-modal-form.html","searchKeys":["UnsafeModalForm","constructor()","dev.kordex.modules.dev.unsafe.components.forms.UnsafeModalForm.UnsafeModalForm"]},{"name":"constructor(builder: InitialEphemeralButtonResponseBuilder)","description":"dev.kordex.modules.dev.unsafe.components.buttons.InitialInteractionButtonResponse.EphemeralResponse.EphemeralResponse","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.buttons/-initial-interaction-button-response/-ephemeral-response/-ephemeral-response.html","searchKeys":["EphemeralResponse","constructor(builder: InitialEphemeralButtonResponseBuilder)","dev.kordex.modules.dev.unsafe.components.buttons.InitialInteractionButtonResponse.EphemeralResponse.EphemeralResponse"]},{"name":"constructor(builder: InitialEphemeralMessageResponseBuilder)","description":"dev.kordex.modules.dev.unsafe.commands.message.InitialMessageCommandResponse.EphemeralResponse.EphemeralResponse","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands.message/-initial-message-command-response/-ephemeral-response/-ephemeral-response.html","searchKeys":["EphemeralResponse","constructor(builder: InitialEphemeralMessageResponseBuilder)","dev.kordex.modules.dev.unsafe.commands.message.InitialMessageCommandResponse.EphemeralResponse.EphemeralResponse"]},{"name":"constructor(builder: InitialEphemeralModalResponseBuilder)","description":"dev.kordex.modules.dev.unsafe.components.forms.InitialUnsafeModalResponse.EphemeralResponse.EphemeralResponse","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.forms/-initial-unsafe-modal-response/-ephemeral-response/-ephemeral-response.html","searchKeys":["EphemeralResponse","constructor(builder: InitialEphemeralModalResponseBuilder)","dev.kordex.modules.dev.unsafe.components.forms.InitialUnsafeModalResponse.EphemeralResponse.EphemeralResponse"]},{"name":"constructor(builder: InitialEphemeralSelectMenuResponseBuilder)","description":"dev.kordex.modules.dev.unsafe.components.menus.InitialInteractionSelectMenuResponse.EphemeralResponse.EphemeralResponse","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus/-initial-interaction-select-menu-response/-ephemeral-response/-ephemeral-response.html","searchKeys":["EphemeralResponse","constructor(builder: InitialEphemeralSelectMenuResponseBuilder)","dev.kordex.modules.dev.unsafe.components.menus.InitialInteractionSelectMenuResponse.EphemeralResponse.EphemeralResponse"]},{"name":"constructor(builder: InitialEphemeralSlashResponseBuilder)","description":"dev.kordex.modules.dev.unsafe.commands.slash.InitialSlashCommandResponse.EphemeralResponse.EphemeralResponse","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands.slash/-initial-slash-command-response/-ephemeral-response/-ephemeral-response.html","searchKeys":["EphemeralResponse","constructor(builder: InitialEphemeralSlashResponseBuilder)","dev.kordex.modules.dev.unsafe.commands.slash.InitialSlashCommandResponse.EphemeralResponse.EphemeralResponse"]},{"name":"constructor(builder: InitialEphemeralUserResponseBuilder)","description":"dev.kordex.modules.dev.unsafe.commands.user.InitialUserCommandResponse.EphemeralResponse.EphemeralResponse","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands.user/-initial-user-command-response/-ephemeral-response/-ephemeral-response.html","searchKeys":["EphemeralResponse","constructor(builder: InitialEphemeralUserResponseBuilder)","dev.kordex.modules.dev.unsafe.commands.user.InitialUserCommandResponse.EphemeralResponse.EphemeralResponse"]},{"name":"constructor(builder: InitialPublicButtonResponseBuilder)","description":"dev.kordex.modules.dev.unsafe.components.buttons.InitialInteractionButtonResponse.PublicResponse.PublicResponse","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.buttons/-initial-interaction-button-response/-public-response/-public-response.html","searchKeys":["PublicResponse","constructor(builder: InitialPublicButtonResponseBuilder)","dev.kordex.modules.dev.unsafe.components.buttons.InitialInteractionButtonResponse.PublicResponse.PublicResponse"]},{"name":"constructor(builder: InitialPublicMessageResponseBuilder)","description":"dev.kordex.modules.dev.unsafe.commands.message.InitialMessageCommandResponse.PublicResponse.PublicResponse","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands.message/-initial-message-command-response/-public-response/-public-response.html","searchKeys":["PublicResponse","constructor(builder: InitialPublicMessageResponseBuilder)","dev.kordex.modules.dev.unsafe.commands.message.InitialMessageCommandResponse.PublicResponse.PublicResponse"]},{"name":"constructor(builder: InitialPublicModalResponseBuilder)","description":"dev.kordex.modules.dev.unsafe.components.forms.InitialUnsafeModalResponse.PublicResponse.PublicResponse","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.forms/-initial-unsafe-modal-response/-public-response/-public-response.html","searchKeys":["PublicResponse","constructor(builder: InitialPublicModalResponseBuilder)","dev.kordex.modules.dev.unsafe.components.forms.InitialUnsafeModalResponse.PublicResponse.PublicResponse"]},{"name":"constructor(builder: InitialPublicSelectMenuResponseBuilder)","description":"dev.kordex.modules.dev.unsafe.components.menus.InitialInteractionSelectMenuResponse.PublicResponse.PublicResponse","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus/-initial-interaction-select-menu-response/-public-response/-public-response.html","searchKeys":["PublicResponse","constructor(builder: InitialPublicSelectMenuResponseBuilder)","dev.kordex.modules.dev.unsafe.components.menus.InitialInteractionSelectMenuResponse.PublicResponse.PublicResponse"]},{"name":"constructor(builder: InitialPublicSlashResponseBehavior)","description":"dev.kordex.modules.dev.unsafe.commands.slash.InitialSlashCommandResponse.PublicResponse.PublicResponse","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands.slash/-initial-slash-command-response/-public-response/-public-response.html","searchKeys":["PublicResponse","constructor(builder: InitialPublicSlashResponseBehavior)","dev.kordex.modules.dev.unsafe.commands.slash.InitialSlashCommandResponse.PublicResponse.PublicResponse"]},{"name":"constructor(builder: InitialPublicUserResponseBuilder)","description":"dev.kordex.modules.dev.unsafe.commands.user.InitialUserCommandResponse.PublicResponse.PublicResponse","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands.user/-initial-user-command-response/-public-response/-public-response.html","searchKeys":["PublicResponse","constructor(builder: InitialPublicUserResponseBuilder)","dev.kordex.modules.dev.unsafe.commands.user.InitialUserCommandResponse.PublicResponse.PublicResponse"]},{"name":"constructor(command: UnsafeMessageCommand<*>, event: MessageCommandInteractionCreateEvent)","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeMessageCommandInvocationEvent.UnsafeMessageCommandInvocationEvent","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-message-command-invocation-event/-unsafe-message-command-invocation-event.html","searchKeys":["UnsafeMessageCommandInvocationEvent","constructor(command: UnsafeMessageCommand<*>, event: MessageCommandInteractionCreateEvent)","dev.kordex.modules.dev.unsafe.commands.UnsafeMessageCommandInvocationEvent.UnsafeMessageCommandInvocationEvent"]},{"name":"constructor(command: UnsafeMessageCommand<*>, event: MessageCommandInteractionCreateEvent)","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeMessageCommandSucceededEvent.UnsafeMessageCommandSucceededEvent","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-message-command-succeeded-event/-unsafe-message-command-succeeded-event.html","searchKeys":["UnsafeMessageCommandSucceededEvent","constructor(command: UnsafeMessageCommand<*>, event: MessageCommandInteractionCreateEvent)","dev.kordex.modules.dev.unsafe.commands.UnsafeMessageCommandSucceededEvent.UnsafeMessageCommandSucceededEvent"]},{"name":"constructor(command: UnsafeMessageCommand<*>, event: MessageCommandInteractionCreateEvent, reason: Key)","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeMessageCommandFailedChecksEvent.UnsafeMessageCommandFailedChecksEvent","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-message-command-failed-checks-event/-unsafe-message-command-failed-checks-event.html","searchKeys":["UnsafeMessageCommandFailedChecksEvent","constructor(command: UnsafeMessageCommand<*>, event: MessageCommandInteractionCreateEvent, reason: Key)","dev.kordex.modules.dev.unsafe.commands.UnsafeMessageCommandFailedChecksEvent.UnsafeMessageCommandFailedChecksEvent"]},{"name":"constructor(command: UnsafeMessageCommand<*>, event: MessageCommandInteractionCreateEvent, throwable: Throwable)","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeMessageCommandFailedWithExceptionEvent.UnsafeMessageCommandFailedWithExceptionEvent","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-message-command-failed-with-exception-event/-unsafe-message-command-failed-with-exception-event.html","searchKeys":["UnsafeMessageCommandFailedWithExceptionEvent","constructor(command: UnsafeMessageCommand<*>, event: MessageCommandInteractionCreateEvent, throwable: Throwable)","dev.kordex.modules.dev.unsafe.commands.UnsafeMessageCommandFailedWithExceptionEvent.UnsafeMessageCommandFailedWithExceptionEvent"]},{"name":"constructor(command: UnsafeSlashCommand<*, *>, event: ChatInputCommandInteractionCreateEvent)","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeSlashCommandInvocationEvent.UnsafeSlashCommandInvocationEvent","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-slash-command-invocation-event/-unsafe-slash-command-invocation-event.html","searchKeys":["UnsafeSlashCommandInvocationEvent","constructor(command: UnsafeSlashCommand<*, *>, event: ChatInputCommandInteractionCreateEvent)","dev.kordex.modules.dev.unsafe.commands.UnsafeSlashCommandInvocationEvent.UnsafeSlashCommandInvocationEvent"]},{"name":"constructor(command: UnsafeSlashCommand<*, *>, event: ChatInputCommandInteractionCreateEvent)","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeSlashCommandSucceededEvent.UnsafeSlashCommandSucceededEvent","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-slash-command-succeeded-event/-unsafe-slash-command-succeeded-event.html","searchKeys":["UnsafeSlashCommandSucceededEvent","constructor(command: UnsafeSlashCommand<*, *>, event: ChatInputCommandInteractionCreateEvent)","dev.kordex.modules.dev.unsafe.commands.UnsafeSlashCommandSucceededEvent.UnsafeSlashCommandSucceededEvent"]},{"name":"constructor(command: UnsafeSlashCommand<*, *>, event: ChatInputCommandInteractionCreateEvent, exception: ArgumentParsingException)","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeSlashCommandFailedParsingEvent.UnsafeSlashCommandFailedParsingEvent","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-slash-command-failed-parsing-event/-unsafe-slash-command-failed-parsing-event.html","searchKeys":["UnsafeSlashCommandFailedParsingEvent","constructor(command: UnsafeSlashCommand<*, *>, event: ChatInputCommandInteractionCreateEvent, exception: ArgumentParsingException)","dev.kordex.modules.dev.unsafe.commands.UnsafeSlashCommandFailedParsingEvent.UnsafeSlashCommandFailedParsingEvent"]},{"name":"constructor(command: UnsafeSlashCommand<*, *>, event: ChatInputCommandInteractionCreateEvent, reason: Key)","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeSlashCommandFailedChecksEvent.UnsafeSlashCommandFailedChecksEvent","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-slash-command-failed-checks-event/-unsafe-slash-command-failed-checks-event.html","searchKeys":["UnsafeSlashCommandFailedChecksEvent","constructor(command: UnsafeSlashCommand<*, *>, event: ChatInputCommandInteractionCreateEvent, reason: Key)","dev.kordex.modules.dev.unsafe.commands.UnsafeSlashCommandFailedChecksEvent.UnsafeSlashCommandFailedChecksEvent"]},{"name":"constructor(command: UnsafeSlashCommand<*, *>, event: ChatInputCommandInteractionCreateEvent, throwable: Throwable)","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeSlashCommandFailedWithExceptionEvent.UnsafeSlashCommandFailedWithExceptionEvent","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-slash-command-failed-with-exception-event/-unsafe-slash-command-failed-with-exception-event.html","searchKeys":["UnsafeSlashCommandFailedWithExceptionEvent","constructor(command: UnsafeSlashCommand<*, *>, event: ChatInputCommandInteractionCreateEvent, throwable: Throwable)","dev.kordex.modules.dev.unsafe.commands.UnsafeSlashCommandFailedWithExceptionEvent.UnsafeSlashCommandFailedWithExceptionEvent"]},{"name":"constructor(command: UnsafeUserCommand<*>, event: UserCommandInteractionCreateEvent)","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeUserCommandInvocationEvent.UnsafeUserCommandInvocationEvent","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-user-command-invocation-event/-unsafe-user-command-invocation-event.html","searchKeys":["UnsafeUserCommandInvocationEvent","constructor(command: UnsafeUserCommand<*>, event: UserCommandInteractionCreateEvent)","dev.kordex.modules.dev.unsafe.commands.UnsafeUserCommandInvocationEvent.UnsafeUserCommandInvocationEvent"]},{"name":"constructor(command: UnsafeUserCommand<*>, event: UserCommandInteractionCreateEvent)","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeUserCommandSucceededEvent.UnsafeUserCommandSucceededEvent","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-user-command-succeeded-event/-unsafe-user-command-succeeded-event.html","searchKeys":["UnsafeUserCommandSucceededEvent","constructor(command: UnsafeUserCommand<*>, event: UserCommandInteractionCreateEvent)","dev.kordex.modules.dev.unsafe.commands.UnsafeUserCommandSucceededEvent.UnsafeUserCommandSucceededEvent"]},{"name":"constructor(command: UnsafeUserCommand<*>, event: UserCommandInteractionCreateEvent, reason: Key)","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeUserCommandFailedChecksEvent.UnsafeUserCommandFailedChecksEvent","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-user-command-failed-checks-event/-unsafe-user-command-failed-checks-event.html","searchKeys":["UnsafeUserCommandFailedChecksEvent","constructor(command: UnsafeUserCommand<*>, event: UserCommandInteractionCreateEvent, reason: Key)","dev.kordex.modules.dev.unsafe.commands.UnsafeUserCommandFailedChecksEvent.UnsafeUserCommandFailedChecksEvent"]},{"name":"constructor(command: UnsafeUserCommand<*>, event: UserCommandInteractionCreateEvent, throwable: Throwable)","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeUserCommandFailedWithExceptionEvent.UnsafeUserCommandFailedWithExceptionEvent","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-user-command-failed-with-exception-event/-unsafe-user-command-failed-with-exception-event.html","searchKeys":["UnsafeUserCommandFailedWithExceptionEvent","constructor(command: UnsafeUserCommand<*>, event: UserCommandInteractionCreateEvent, throwable: Throwable)","dev.kordex.modules.dev.unsafe.commands.UnsafeUserCommandFailedWithExceptionEvent.UnsafeUserCommandFailedWithExceptionEvent"]},{"name":"constructor(component: UnsafeChannelSelectMenu<M>, event: SelectMenuInteractionCreateEvent, interactionResponse: MessageInteractionResponseBehavior?, cache: MutableStringKeyedMap<Any>)","description":"dev.kordex.modules.dev.unsafe.components.menus.channel.UnsafeChannelSelectMenuContext.UnsafeChannelSelectMenuContext","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus.channel/-unsafe-channel-select-menu-context/-unsafe-channel-select-menu-context.html","searchKeys":["UnsafeChannelSelectMenuContext","constructor(component: UnsafeChannelSelectMenu<M>, event: SelectMenuInteractionCreateEvent, interactionResponse: MessageInteractionResponseBehavior?, cache: MutableStringKeyedMap<Any>)","dev.kordex.modules.dev.unsafe.components.menus.channel.UnsafeChannelSelectMenuContext.UnsafeChannelSelectMenuContext"]},{"name":"constructor(component: UnsafeInteractionButton<M>, event: ButtonInteractionCreateEvent, interactionResponse: MessageInteractionResponseBehavior?, cache: MutableStringKeyedMap<Any>)","description":"dev.kordex.modules.dev.unsafe.contexts.UnsafeInteractionComponentContext.UnsafeInteractionComponentContext","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.contexts/-unsafe-interaction-component-context/-unsafe-interaction-component-context.html","searchKeys":["UnsafeInteractionComponentContext","constructor(component: UnsafeInteractionButton<M>, event: ButtonInteractionCreateEvent, interactionResponse: MessageInteractionResponseBehavior?, cache: MutableStringKeyedMap<Any>)","dev.kordex.modules.dev.unsafe.contexts.UnsafeInteractionComponentContext.UnsafeInteractionComponentContext"]},{"name":"constructor(component: UnsafeMentionableSelectMenu<M>, event: SelectMenuInteractionCreateEvent, interactionResponse: MessageInteractionResponseBehavior?, cache: MutableStringKeyedMap<Any>)","description":"dev.kordex.modules.dev.unsafe.components.menus.mentionable.UnsafeMentionableSelectMenuContext.UnsafeMentionableSelectMenuContext","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus.mentionable/-unsafe-mentionable-select-menu-context/-unsafe-mentionable-select-menu-context.html","searchKeys":["UnsafeMentionableSelectMenuContext","constructor(component: UnsafeMentionableSelectMenu<M>, event: SelectMenuInteractionCreateEvent, interactionResponse: MessageInteractionResponseBehavior?, cache: MutableStringKeyedMap<Any>)","dev.kordex.modules.dev.unsafe.components.menus.mentionable.UnsafeMentionableSelectMenuContext.UnsafeMentionableSelectMenuContext"]},{"name":"constructor(component: UnsafeRoleSelectMenu<M>, event: SelectMenuInteractionCreateEvent, interactionResponse: MessageInteractionResponseBehavior?, cache: MutableStringKeyedMap<Any>)","description":"dev.kordex.modules.dev.unsafe.components.menus.role.UnsafeRoleSelectMenuContext.UnsafeRoleSelectMenuContext","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus.role/-unsafe-role-select-menu-context/-unsafe-role-select-menu-context.html","searchKeys":["UnsafeRoleSelectMenuContext","constructor(component: UnsafeRoleSelectMenu<M>, event: SelectMenuInteractionCreateEvent, interactionResponse: MessageInteractionResponseBehavior?, cache: MutableStringKeyedMap<Any>)","dev.kordex.modules.dev.unsafe.components.menus.role.UnsafeRoleSelectMenuContext.UnsafeRoleSelectMenuContext"]},{"name":"constructor(component: UnsafeStringSelectMenu<M>, event: SelectMenuInteractionCreateEvent, interactionResponse: MessageInteractionResponseBehavior?, cache: MutableStringKeyedMap<Any>)","description":"dev.kordex.modules.dev.unsafe.components.menus.string.UnsafeStringSelectMenuContext.UnsafeStringSelectMenuContext","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus.string/-unsafe-string-select-menu-context/-unsafe-string-select-menu-context.html","searchKeys":["UnsafeStringSelectMenuContext","constructor(component: UnsafeStringSelectMenu<M>, event: SelectMenuInteractionCreateEvent, interactionResponse: MessageInteractionResponseBehavior?, cache: MutableStringKeyedMap<Any>)","dev.kordex.modules.dev.unsafe.components.menus.string.UnsafeStringSelectMenuContext.UnsafeStringSelectMenuContext"]},{"name":"constructor(component: UnsafeUserSelectMenu<M>, event: SelectMenuInteractionCreateEvent, interactionResponse: MessageInteractionResponseBehavior?, cache: MutableStringKeyedMap<Any>)","description":"dev.kordex.modules.dev.unsafe.components.menus.user.UnsafeUserSelectMenuContext.UnsafeUserSelectMenuContext","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus.user/-unsafe-user-select-menu-context/-unsafe-user-select-menu-context.html","searchKeys":["UnsafeUserSelectMenuContext","constructor(component: UnsafeUserSelectMenu<M>, event: SelectMenuInteractionCreateEvent, interactionResponse: MessageInteractionResponseBehavior?, cache: MutableStringKeyedMap<Any>)","dev.kordex.modules.dev.unsafe.components.menus.user.UnsafeUserSelectMenuContext.UnsafeUserSelectMenuContext"]},{"name":"constructor(converters: Collection<GenericConverter>, typeName: Key? = null, shouldThrow: Boolean = false, validator: Validator<Any> = null)","description":"dev.kordex.modules.dev.unsafe.converters.UnionConverter.UnionConverter","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.converters/-union-converter/-union-converter.html","searchKeys":["UnionConverter","constructor(converters: Collection<GenericConverter>, typeName: Key? = null, shouldThrow: Boolean = false, validator: Validator<Any> = null)","dev.kordex.modules.dev.unsafe.converters.UnionConverter.UnionConverter"]},{"name":"constructor(event: ChatInputCommandInteractionCreateEvent, command: UnsafeSlashCommand<A, M>, interactionResponse: MessageInteractionResponseBehavior?, cache: MutableStringKeyedMap<Any>)","description":"dev.kordex.modules.dev.unsafe.contexts.UnsafeCommandSlashCommandContext.UnsafeCommandSlashCommandContext","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.contexts/-unsafe-command-slash-command-context/-unsafe-command-slash-command-context.html","searchKeys":["UnsafeCommandSlashCommandContext","constructor(event: ChatInputCommandInteractionCreateEvent, command: UnsafeSlashCommand<A, M>, interactionResponse: MessageInteractionResponseBehavior?, cache: MutableStringKeyedMap<Any>)","dev.kordex.modules.dev.unsafe.contexts.UnsafeCommandSlashCommandContext.UnsafeCommandSlashCommandContext"]},{"name":"constructor(event: MessageCommandInteractionCreateEvent, command: MessageCommand<UnsafeCommandMessageCommandContext<M>, M>, interactionResponse: MessageInteractionResponseBehavior?, cache: MutableStringKeyedMap<Any>)","description":"dev.kordex.modules.dev.unsafe.contexts.UnsafeCommandMessageCommandContext.UnsafeCommandMessageCommandContext","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.contexts/-unsafe-command-message-command-context/-unsafe-command-message-command-context.html","searchKeys":["UnsafeCommandMessageCommandContext","constructor(event: MessageCommandInteractionCreateEvent, command: MessageCommand<UnsafeCommandMessageCommandContext<M>, M>, interactionResponse: MessageInteractionResponseBehavior?, cache: MutableStringKeyedMap<Any>)","dev.kordex.modules.dev.unsafe.contexts.UnsafeCommandMessageCommandContext.UnsafeCommandMessageCommandContext"]},{"name":"constructor(event: UserCommandInteractionCreateEvent, command: UserCommand<UnsafeCommandUserCommandContext<M>, M>, interactionResponse: MessageInteractionResponseBehavior?, cache: MutableStringKeyedMap<Any>)","description":"dev.kordex.modules.dev.unsafe.contexts.UnsafeCommandUserCommandContext.UnsafeCommandUserCommandContext","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.contexts/-unsafe-command-user-command-context/-unsafe-command-user-command-context.html","searchKeys":["UnsafeCommandUserCommandContext","constructor(event: UserCommandInteractionCreateEvent, command: UserCommand<UnsafeCommandUserCommandContext<M>, M>, interactionResponse: MessageInteractionResponseBehavior?, cache: MutableStringKeyedMap<Any>)","dev.kordex.modules.dev.unsafe.contexts.UnsafeCommandUserCommandContext.UnsafeCommandUserCommandContext"]},{"name":"constructor(extension: Extension, arguments: () -> A? = null, modal: () -> M? = null, parentCommand: SlashCommand<*, *, *>? = null, parentGroup: SlashGroup? = null)","description":"dev.kordex.modules.dev.unsafe.commands.slash.UnsafeSlashCommand.UnsafeSlashCommand","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands.slash/-unsafe-slash-command/-unsafe-slash-command.html","searchKeys":["UnsafeSlashCommand","constructor(extension: Extension, arguments: () -> A? = null, modal: () -> M? = null, parentCommand: SlashCommand<*, *, *>? = null, parentGroup: SlashGroup? = null)","dev.kordex.modules.dev.unsafe.commands.slash.UnsafeSlashCommand.UnsafeSlashCommand"]},{"name":"constructor(extension: Extension, modal: () -> M? = null)","description":"dev.kordex.modules.dev.unsafe.commands.message.UnsafeMessageCommand.UnsafeMessageCommand","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands.message/-unsafe-message-command/-unsafe-message-command.html","searchKeys":["UnsafeMessageCommand","constructor(extension: Extension, modal: () -> M? = null)","dev.kordex.modules.dev.unsafe.commands.message.UnsafeMessageCommand.UnsafeMessageCommand"]},{"name":"constructor(extension: Extension, modal: () -> M? = null)","description":"dev.kordex.modules.dev.unsafe.commands.user.UnsafeUserCommand.UnsafeUserCommand","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands.user/-unsafe-user-command/-unsafe-user-command.html","searchKeys":["UnsafeUserCommand","constructor(extension: Extension, modal: () -> M? = null)","dev.kordex.modules.dev.unsafe.commands.user.UnsafeUserCommand.UnsafeUserCommand"]},{"name":"constructor(timeoutTask: Task?, modal: () -> M? = null)","description":"dev.kordex.modules.dev.unsafe.components.buttons.UnsafeInteractionButton.UnsafeInteractionButton","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.buttons/-unsafe-interaction-button/-unsafe-interaction-button.html","searchKeys":["UnsafeInteractionButton","constructor(timeoutTask: Task?, modal: () -> M? = null)","dev.kordex.modules.dev.unsafe.components.buttons.UnsafeInteractionButton.UnsafeInteractionButton"]},{"name":"constructor(timeoutTask: Task?, modal: () -> M? = null)","description":"dev.kordex.modules.dev.unsafe.components.menus.UnsafeSelectMenu.UnsafeSelectMenu","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus/-unsafe-select-menu/-unsafe-select-menu.html","searchKeys":["UnsafeSelectMenu","constructor(timeoutTask: Task?, modal: () -> M? = null)","dev.kordex.modules.dev.unsafe.components.menus.UnsafeSelectMenu.UnsafeSelectMenu"]},{"name":"constructor(timeoutTask: Task?, modal: () -> M? = null)","description":"dev.kordex.modules.dev.unsafe.components.menus.channel.UnsafeChannelSelectMenu.UnsafeChannelSelectMenu","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus.channel/-unsafe-channel-select-menu/-unsafe-channel-select-menu.html","searchKeys":["UnsafeChannelSelectMenu","constructor(timeoutTask: Task?, modal: () -> M? = null)","dev.kordex.modules.dev.unsafe.components.menus.channel.UnsafeChannelSelectMenu.UnsafeChannelSelectMenu"]},{"name":"constructor(timeoutTask: Task?, modal: () -> M? = null)","description":"dev.kordex.modules.dev.unsafe.components.menus.mentionable.UnsafeMentionableSelectMenu.UnsafeMentionableSelectMenu","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus.mentionable/-unsafe-mentionable-select-menu/-unsafe-mentionable-select-menu.html","searchKeys":["UnsafeMentionableSelectMenu","constructor(timeoutTask: Task?, modal: () -> M? = null)","dev.kordex.modules.dev.unsafe.components.menus.mentionable.UnsafeMentionableSelectMenu.UnsafeMentionableSelectMenu"]},{"name":"constructor(timeoutTask: Task?, modal: () -> M? = null)","description":"dev.kordex.modules.dev.unsafe.components.menus.role.UnsafeRoleSelectMenu.UnsafeRoleSelectMenu","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus.role/-unsafe-role-select-menu/-unsafe-role-select-menu.html","searchKeys":["UnsafeRoleSelectMenu","constructor(timeoutTask: Task?, modal: () -> M? = null)","dev.kordex.modules.dev.unsafe.components.menus.role.UnsafeRoleSelectMenu.UnsafeRoleSelectMenu"]},{"name":"constructor(timeoutTask: Task?, modal: () -> M? = null)","description":"dev.kordex.modules.dev.unsafe.components.menus.string.UnsafeStringSelectMenu.UnsafeStringSelectMenu","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus.string/-unsafe-string-select-menu/-unsafe-string-select-menu.html","searchKeys":["UnsafeStringSelectMenu","constructor(timeoutTask: Task?, modal: () -> M? = null)","dev.kordex.modules.dev.unsafe.components.menus.string.UnsafeStringSelectMenu.UnsafeStringSelectMenu"]},{"name":"constructor(timeoutTask: Task?, modal: () -> M? = null)","description":"dev.kordex.modules.dev.unsafe.components.menus.user.UnsafeUserSelectMenu.UnsafeUserSelectMenu","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus.user/-unsafe-user-select-menu/-unsafe-user-select-menu.html","searchKeys":["UnsafeUserSelectMenu","constructor(timeoutTask: Task?, modal: () -> M? = null)","dev.kordex.modules.dev.unsafe.components.menus.user.UnsafeUserSelectMenu.UnsafeUserSelectMenu"]},{"name":"data class EphemeralResponse(val builder: InitialEphemeralButtonResponseBuilder) : InitialInteractionButtonResponse","description":"dev.kordex.modules.dev.unsafe.components.buttons.InitialInteractionButtonResponse.EphemeralResponse","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.buttons/-initial-interaction-button-response/-ephemeral-response/index.html","searchKeys":["EphemeralResponse","data class EphemeralResponse(val builder: InitialEphemeralButtonResponseBuilder) : InitialInteractionButtonResponse","dev.kordex.modules.dev.unsafe.components.buttons.InitialInteractionButtonResponse.EphemeralResponse"]},{"name":"data class EphemeralResponse(val builder: InitialEphemeralMessageResponseBuilder) : InitialMessageCommandResponse","description":"dev.kordex.modules.dev.unsafe.commands.message.InitialMessageCommandResponse.EphemeralResponse","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands.message/-initial-message-command-response/-ephemeral-response/index.html","searchKeys":["EphemeralResponse","data class EphemeralResponse(val builder: InitialEphemeralMessageResponseBuilder) : InitialMessageCommandResponse","dev.kordex.modules.dev.unsafe.commands.message.InitialMessageCommandResponse.EphemeralResponse"]},{"name":"data class EphemeralResponse(val builder: InitialEphemeralModalResponseBuilder) : InitialUnsafeModalResponse","description":"dev.kordex.modules.dev.unsafe.components.forms.InitialUnsafeModalResponse.EphemeralResponse","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.forms/-initial-unsafe-modal-response/-ephemeral-response/index.html","searchKeys":["EphemeralResponse","data class EphemeralResponse(val builder: InitialEphemeralModalResponseBuilder) : InitialUnsafeModalResponse","dev.kordex.modules.dev.unsafe.components.forms.InitialUnsafeModalResponse.EphemeralResponse"]},{"name":"data class EphemeralResponse(val builder: InitialEphemeralSelectMenuResponseBuilder) : InitialInteractionSelectMenuResponse","description":"dev.kordex.modules.dev.unsafe.components.menus.InitialInteractionSelectMenuResponse.EphemeralResponse","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus/-initial-interaction-select-menu-response/-ephemeral-response/index.html","searchKeys":["EphemeralResponse","data class EphemeralResponse(val builder: InitialEphemeralSelectMenuResponseBuilder) : InitialInteractionSelectMenuResponse","dev.kordex.modules.dev.unsafe.components.menus.InitialInteractionSelectMenuResponse.EphemeralResponse"]},{"name":"data class EphemeralResponse(val builder: InitialEphemeralSlashResponseBuilder) : InitialSlashCommandResponse","description":"dev.kordex.modules.dev.unsafe.commands.slash.InitialSlashCommandResponse.EphemeralResponse","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands.slash/-initial-slash-command-response/-ephemeral-response/index.html","searchKeys":["EphemeralResponse","data class EphemeralResponse(val builder: InitialEphemeralSlashResponseBuilder) : InitialSlashCommandResponse","dev.kordex.modules.dev.unsafe.commands.slash.InitialSlashCommandResponse.EphemeralResponse"]},{"name":"data class EphemeralResponse(val builder: InitialEphemeralUserResponseBuilder) : InitialUserCommandResponse","description":"dev.kordex.modules.dev.unsafe.commands.user.InitialUserCommandResponse.EphemeralResponse","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands.user/-initial-user-command-response/-ephemeral-response/index.html","searchKeys":["EphemeralResponse","data class EphemeralResponse(val builder: InitialEphemeralUserResponseBuilder) : InitialUserCommandResponse","dev.kordex.modules.dev.unsafe.commands.user.InitialUserCommandResponse.EphemeralResponse"]},{"name":"data class PublicResponse(val builder: InitialPublicButtonResponseBuilder) : InitialInteractionButtonResponse","description":"dev.kordex.modules.dev.unsafe.components.buttons.InitialInteractionButtonResponse.PublicResponse","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.buttons/-initial-interaction-button-response/-public-response/index.html","searchKeys":["PublicResponse","data class PublicResponse(val builder: InitialPublicButtonResponseBuilder) : InitialInteractionButtonResponse","dev.kordex.modules.dev.unsafe.components.buttons.InitialInteractionButtonResponse.PublicResponse"]},{"name":"data class PublicResponse(val builder: InitialPublicMessageResponseBuilder) : InitialMessageCommandResponse","description":"dev.kordex.modules.dev.unsafe.commands.message.InitialMessageCommandResponse.PublicResponse","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands.message/-initial-message-command-response/-public-response/index.html","searchKeys":["PublicResponse","data class PublicResponse(val builder: InitialPublicMessageResponseBuilder) : InitialMessageCommandResponse","dev.kordex.modules.dev.unsafe.commands.message.InitialMessageCommandResponse.PublicResponse"]},{"name":"data class PublicResponse(val builder: InitialPublicModalResponseBuilder) : InitialUnsafeModalResponse","description":"dev.kordex.modules.dev.unsafe.components.forms.InitialUnsafeModalResponse.PublicResponse","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.forms/-initial-unsafe-modal-response/-public-response/index.html","searchKeys":["PublicResponse","data class PublicResponse(val builder: InitialPublicModalResponseBuilder) : InitialUnsafeModalResponse","dev.kordex.modules.dev.unsafe.components.forms.InitialUnsafeModalResponse.PublicResponse"]},{"name":"data class PublicResponse(val builder: InitialPublicSelectMenuResponseBuilder) : InitialInteractionSelectMenuResponse","description":"dev.kordex.modules.dev.unsafe.components.menus.InitialInteractionSelectMenuResponse.PublicResponse","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus/-initial-interaction-select-menu-response/-public-response/index.html","searchKeys":["PublicResponse","data class PublicResponse(val builder: InitialPublicSelectMenuResponseBuilder) : InitialInteractionSelectMenuResponse","dev.kordex.modules.dev.unsafe.components.menus.InitialInteractionSelectMenuResponse.PublicResponse"]},{"name":"data class PublicResponse(val builder: InitialPublicSlashResponseBehavior) : InitialSlashCommandResponse","description":"dev.kordex.modules.dev.unsafe.commands.slash.InitialSlashCommandResponse.PublicResponse","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands.slash/-initial-slash-command-response/-public-response/index.html","searchKeys":["PublicResponse","data class PublicResponse(val builder: InitialPublicSlashResponseBehavior) : InitialSlashCommandResponse","dev.kordex.modules.dev.unsafe.commands.slash.InitialSlashCommandResponse.PublicResponse"]},{"name":"data class PublicResponse(val builder: InitialPublicUserResponseBuilder) : InitialUserCommandResponse","description":"dev.kordex.modules.dev.unsafe.commands.user.InitialUserCommandResponse.PublicResponse","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands.user/-initial-user-command-response/-public-response/index.html","searchKeys":["PublicResponse","data class PublicResponse(val builder: InitialPublicUserResponseBuilder) : InitialUserCommandResponse","dev.kordex.modules.dev.unsafe.commands.user.InitialUserCommandResponse.PublicResponse"]},{"name":"data class UnsafeMessageCommandFailedChecksEvent(val command: UnsafeMessageCommand<*>, val event: MessageCommandInteractionCreateEvent, val reason: Key) : MessageCommandFailedChecksEvent<UnsafeMessageCommand<*>> ","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeMessageCommandFailedChecksEvent","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-message-command-failed-checks-event/index.html","searchKeys":["UnsafeMessageCommandFailedChecksEvent","data class UnsafeMessageCommandFailedChecksEvent(val command: UnsafeMessageCommand<*>, val event: MessageCommandInteractionCreateEvent, val reason: Key) : MessageCommandFailedChecksEvent<UnsafeMessageCommand<*>> ","dev.kordex.modules.dev.unsafe.commands.UnsafeMessageCommandFailedChecksEvent"]},{"name":"data class UnsafeMessageCommandFailedWithExceptionEvent(val command: UnsafeMessageCommand<*>, val event: MessageCommandInteractionCreateEvent, val throwable: Throwable) : MessageCommandFailedWithExceptionEvent<UnsafeMessageCommand<*>> ","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeMessageCommandFailedWithExceptionEvent","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-message-command-failed-with-exception-event/index.html","searchKeys":["UnsafeMessageCommandFailedWithExceptionEvent","data class UnsafeMessageCommandFailedWithExceptionEvent(val command: UnsafeMessageCommand<*>, val event: MessageCommandInteractionCreateEvent, val throwable: Throwable) : MessageCommandFailedWithExceptionEvent<UnsafeMessageCommand<*>> ","dev.kordex.modules.dev.unsafe.commands.UnsafeMessageCommandFailedWithExceptionEvent"]},{"name":"data class UnsafeMessageCommandInvocationEvent(val command: UnsafeMessageCommand<*>, val event: MessageCommandInteractionCreateEvent) : MessageCommandInvocationEvent<UnsafeMessageCommand<*>> ","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeMessageCommandInvocationEvent","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-message-command-invocation-event/index.html","searchKeys":["UnsafeMessageCommandInvocationEvent","data class UnsafeMessageCommandInvocationEvent(val command: UnsafeMessageCommand<*>, val event: MessageCommandInteractionCreateEvent) : MessageCommandInvocationEvent<UnsafeMessageCommand<*>> ","dev.kordex.modules.dev.unsafe.commands.UnsafeMessageCommandInvocationEvent"]},{"name":"data class UnsafeMessageCommandSucceededEvent(val command: UnsafeMessageCommand<*>, val event: MessageCommandInteractionCreateEvent) : MessageCommandSucceededEvent<UnsafeMessageCommand<*>> ","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeMessageCommandSucceededEvent","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-message-command-succeeded-event/index.html","searchKeys":["UnsafeMessageCommandSucceededEvent","data class UnsafeMessageCommandSucceededEvent(val command: UnsafeMessageCommand<*>, val event: MessageCommandInteractionCreateEvent) : MessageCommandSucceededEvent<UnsafeMessageCommand<*>> ","dev.kordex.modules.dev.unsafe.commands.UnsafeMessageCommandSucceededEvent"]},{"name":"data class UnsafeSlashCommandFailedChecksEvent(val command: UnsafeSlashCommand<*, *>, val event: ChatInputCommandInteractionCreateEvent, val reason: Key) : SlashCommandFailedChecksEvent<UnsafeSlashCommand<*, *>> ","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeSlashCommandFailedChecksEvent","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-slash-command-failed-checks-event/index.html","searchKeys":["UnsafeSlashCommandFailedChecksEvent","data class UnsafeSlashCommandFailedChecksEvent(val command: UnsafeSlashCommand<*, *>, val event: ChatInputCommandInteractionCreateEvent, val reason: Key) : SlashCommandFailedChecksEvent<UnsafeSlashCommand<*, *>> ","dev.kordex.modules.dev.unsafe.commands.UnsafeSlashCommandFailedChecksEvent"]},{"name":"data class UnsafeSlashCommandFailedParsingEvent(val command: UnsafeSlashCommand<*, *>, val event: ChatInputCommandInteractionCreateEvent, val exception: ArgumentParsingException) : SlashCommandFailedParsingEvent<UnsafeSlashCommand<*, *>> ","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeSlashCommandFailedParsingEvent","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-slash-command-failed-parsing-event/index.html","searchKeys":["UnsafeSlashCommandFailedParsingEvent","data class UnsafeSlashCommandFailedParsingEvent(val command: UnsafeSlashCommand<*, *>, val event: ChatInputCommandInteractionCreateEvent, val exception: ArgumentParsingException) : SlashCommandFailedParsingEvent<UnsafeSlashCommand<*, *>> ","dev.kordex.modules.dev.unsafe.commands.UnsafeSlashCommandFailedParsingEvent"]},{"name":"data class UnsafeSlashCommandFailedWithExceptionEvent(val command: UnsafeSlashCommand<*, *>, val event: ChatInputCommandInteractionCreateEvent, val throwable: Throwable) : SlashCommandFailedWithExceptionEvent<UnsafeSlashCommand<*, *>> ","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeSlashCommandFailedWithExceptionEvent","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-slash-command-failed-with-exception-event/index.html","searchKeys":["UnsafeSlashCommandFailedWithExceptionEvent","data class UnsafeSlashCommandFailedWithExceptionEvent(val command: UnsafeSlashCommand<*, *>, val event: ChatInputCommandInteractionCreateEvent, val throwable: Throwable) : SlashCommandFailedWithExceptionEvent<UnsafeSlashCommand<*, *>> ","dev.kordex.modules.dev.unsafe.commands.UnsafeSlashCommandFailedWithExceptionEvent"]},{"name":"data class UnsafeSlashCommandInvocationEvent(val command: UnsafeSlashCommand<*, *>, val event: ChatInputCommandInteractionCreateEvent) : SlashCommandInvocationEvent<UnsafeSlashCommand<*, *>> ","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeSlashCommandInvocationEvent","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-slash-command-invocation-event/index.html","searchKeys":["UnsafeSlashCommandInvocationEvent","data class UnsafeSlashCommandInvocationEvent(val command: UnsafeSlashCommand<*, *>, val event: ChatInputCommandInteractionCreateEvent) : SlashCommandInvocationEvent<UnsafeSlashCommand<*, *>> ","dev.kordex.modules.dev.unsafe.commands.UnsafeSlashCommandInvocationEvent"]},{"name":"data class UnsafeSlashCommandSucceededEvent(val command: UnsafeSlashCommand<*, *>, val event: ChatInputCommandInteractionCreateEvent) : SlashCommandSucceededEvent<UnsafeSlashCommand<*, *>> ","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeSlashCommandSucceededEvent","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-slash-command-succeeded-event/index.html","searchKeys":["UnsafeSlashCommandSucceededEvent","data class UnsafeSlashCommandSucceededEvent(val command: UnsafeSlashCommand<*, *>, val event: ChatInputCommandInteractionCreateEvent) : SlashCommandSucceededEvent<UnsafeSlashCommand<*, *>> ","dev.kordex.modules.dev.unsafe.commands.UnsafeSlashCommandSucceededEvent"]},{"name":"data class UnsafeUserCommandFailedChecksEvent(val command: UnsafeUserCommand<*>, val event: UserCommandInteractionCreateEvent, val reason: Key) : UserCommandFailedChecksEvent<UnsafeUserCommand<*>> ","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeUserCommandFailedChecksEvent","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-user-command-failed-checks-event/index.html","searchKeys":["UnsafeUserCommandFailedChecksEvent","data class UnsafeUserCommandFailedChecksEvent(val command: UnsafeUserCommand<*>, val event: UserCommandInteractionCreateEvent, val reason: Key) : UserCommandFailedChecksEvent<UnsafeUserCommand<*>> ","dev.kordex.modules.dev.unsafe.commands.UnsafeUserCommandFailedChecksEvent"]},{"name":"data class UnsafeUserCommandFailedWithExceptionEvent(val command: UnsafeUserCommand<*>, val event: UserCommandInteractionCreateEvent, val throwable: Throwable) : UserCommandFailedWithExceptionEvent<UnsafeUserCommand<*>> ","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeUserCommandFailedWithExceptionEvent","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-user-command-failed-with-exception-event/index.html","searchKeys":["UnsafeUserCommandFailedWithExceptionEvent","data class UnsafeUserCommandFailedWithExceptionEvent(val command: UnsafeUserCommand<*>, val event: UserCommandInteractionCreateEvent, val throwable: Throwable) : UserCommandFailedWithExceptionEvent<UnsafeUserCommand<*>> ","dev.kordex.modules.dev.unsafe.commands.UnsafeUserCommandFailedWithExceptionEvent"]},{"name":"data class UnsafeUserCommandInvocationEvent(val command: UnsafeUserCommand<*>, val event: UserCommandInteractionCreateEvent) : UserCommandInvocationEvent<UnsafeUserCommand<*>> ","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeUserCommandInvocationEvent","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-user-command-invocation-event/index.html","searchKeys":["UnsafeUserCommandInvocationEvent","data class UnsafeUserCommandInvocationEvent(val command: UnsafeUserCommand<*>, val event: UserCommandInteractionCreateEvent) : UserCommandInvocationEvent<UnsafeUserCommand<*>> ","dev.kordex.modules.dev.unsafe.commands.UnsafeUserCommandInvocationEvent"]},{"name":"data class UnsafeUserCommandSucceededEvent(val command: UnsafeUserCommand<*>, val event: UserCommandInteractionCreateEvent) : UserCommandSucceededEvent<UnsafeUserCommand<*>> ","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeUserCommandSucceededEvent","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-user-command-succeeded-event/index.html","searchKeys":["UnsafeUserCommandSucceededEvent","data class UnsafeUserCommandSucceededEvent(val command: UnsafeUserCommand<*>, val event: UserCommandInteractionCreateEvent) : UserCommandSucceededEvent<UnsafeUserCommand<*>> ","dev.kordex.modules.dev.unsafe.commands.UnsafeUserCommandSucceededEvent"]},{"name":"data object EphemeralAck : InitialInteractionButtonResponse","description":"dev.kordex.modules.dev.unsafe.components.buttons.InitialInteractionButtonResponse.EphemeralAck","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.buttons/-initial-interaction-button-response/-ephemeral-ack/index.html","searchKeys":["EphemeralAck","data object EphemeralAck : InitialInteractionButtonResponse","dev.kordex.modules.dev.unsafe.components.buttons.InitialInteractionButtonResponse.EphemeralAck"]},{"name":"data object EphemeralAck : InitialInteractionSelectMenuResponse","description":"dev.kordex.modules.dev.unsafe.components.menus.InitialInteractionSelectMenuResponse.EphemeralAck","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus/-initial-interaction-select-menu-response/-ephemeral-ack/index.html","searchKeys":["EphemeralAck","data object EphemeralAck : InitialInteractionSelectMenuResponse","dev.kordex.modules.dev.unsafe.components.menus.InitialInteractionSelectMenuResponse.EphemeralAck"]},{"name":"data object EphemeralAck : InitialUnsafeModalResponse","description":"dev.kordex.modules.dev.unsafe.components.forms.InitialUnsafeModalResponse.EphemeralAck","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.forms/-initial-unsafe-modal-response/-ephemeral-ack/index.html","searchKeys":["EphemeralAck","data object EphemeralAck : InitialUnsafeModalResponse","dev.kordex.modules.dev.unsafe.components.forms.InitialUnsafeModalResponse.EphemeralAck"]},{"name":"data object None : InitialInteractionButtonResponse","description":"dev.kordex.modules.dev.unsafe.components.buttons.InitialInteractionButtonResponse.None","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.buttons/-initial-interaction-button-response/-none/index.html","searchKeys":["None","data object None : InitialInteractionButtonResponse","dev.kordex.modules.dev.unsafe.components.buttons.InitialInteractionButtonResponse.None"]},{"name":"data object None : InitialInteractionSelectMenuResponse","description":"dev.kordex.modules.dev.unsafe.components.menus.InitialInteractionSelectMenuResponse.None","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus/-initial-interaction-select-menu-response/-none/index.html","searchKeys":["None","data object None : InitialInteractionSelectMenuResponse","dev.kordex.modules.dev.unsafe.components.menus.InitialInteractionSelectMenuResponse.None"]},{"name":"data object PublicAck : InitialInteractionButtonResponse","description":"dev.kordex.modules.dev.unsafe.components.buttons.InitialInteractionButtonResponse.PublicAck","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.buttons/-initial-interaction-button-response/-public-ack/index.html","searchKeys":["PublicAck","data object PublicAck : InitialInteractionButtonResponse","dev.kordex.modules.dev.unsafe.components.buttons.InitialInteractionButtonResponse.PublicAck"]},{"name":"data object PublicAck : InitialInteractionSelectMenuResponse","description":"dev.kordex.modules.dev.unsafe.components.menus.InitialInteractionSelectMenuResponse.PublicAck","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus/-initial-interaction-select-menu-response/-public-ack/index.html","searchKeys":["PublicAck","data object PublicAck : InitialInteractionSelectMenuResponse","dev.kordex.modules.dev.unsafe.components.menus.InitialInteractionSelectMenuResponse.PublicAck"]},{"name":"data object PublicAck : InitialUnsafeModalResponse","description":"dev.kordex.modules.dev.unsafe.components.forms.InitialUnsafeModalResponse.PublicAck","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.forms/-initial-unsafe-modal-response/-public-ack/index.html","searchKeys":["PublicAck","data object PublicAck : InitialUnsafeModalResponse","dev.kordex.modules.dev.unsafe.components.forms.InitialUnsafeModalResponse.PublicAck"]},{"name":"fun <T : Arguments, M : UnsafeModalForm> SlashCommand<*, *, *>.unsafeSubCommand(commandObj: UnsafeSlashCommand<T, M>): UnsafeSlashCommand<T, M>","description":"dev.kordex.modules.dev.unsafe.extensions.unsafeSubCommand","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.extensions/unsafe-sub-command.html","searchKeys":["unsafeSubCommand","fun <T : Arguments, M : UnsafeModalForm> SlashCommand<*, *, *>.unsafeSubCommand(commandObj: UnsafeSlashCommand<T, M>): UnsafeSlashCommand<T, M>","dev.kordex.modules.dev.unsafe.extensions.unsafeSubCommand"]},{"name":"fun <T : Arguments, M : UnsafeModalForm> SlashGroup.unsafeSubCommand(commandObj: UnsafeSlashCommand<T, M>): UnsafeSlashCommand<T, M>","description":"dev.kordex.modules.dev.unsafe.extensions.unsafeSubCommand","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.extensions/unsafe-sub-command.html","searchKeys":["unsafeSubCommand","fun <T : Arguments, M : UnsafeModalForm> SlashGroup.unsafeSubCommand(commandObj: UnsafeSlashCommand<T, M>): UnsafeSlashCommand<T, M>","dev.kordex.modules.dev.unsafe.extensions.unsafeSubCommand"]},{"name":"fun Arguments.optionalUnion(displayName: Key, description: Key, typeName: Key? = null, shouldThrow: Boolean = false, vararg converters: GenericConverter, validator: Validator<Any?> = null): OptionalCoalescingConverter<Any>","description":"dev.kordex.modules.dev.unsafe.converters.optionalUnion","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.converters/optional-union.html","searchKeys":["optionalUnion","fun Arguments.optionalUnion(displayName: Key, description: Key, typeName: Key? = null, shouldThrow: Boolean = false, vararg converters: GenericConverter, validator: Validator<Any?> = null): OptionalCoalescingConverter<Any>","dev.kordex.modules.dev.unsafe.converters.optionalUnion"]},{"name":"fun Arguments.union(displayName: Key, description: Key, typeName: Key? = null, shouldThrow: Boolean = false, vararg converters: GenericConverter, validator: Validator<Any> = null): UnionConverter","description":"dev.kordex.modules.dev.unsafe.converters.union","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.converters/union.html","searchKeys":["union","fun Arguments.union(displayName: Key, description: Key, typeName: Key? = null, shouldThrow: Boolean = false, vararg converters: GenericConverter, validator: Validator<Any> = null): UnionConverter","dev.kordex.modules.dev.unsafe.converters.union"]},{"name":"interface UnsafeButtonInteractionContext : UnsafeComponentInteractionContext<ButtonInteractionCreateEvent> ","description":"dev.kordex.modules.dev.unsafe.components.buttons.UnsafeButtonInteractionContext","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.buttons/-unsafe-button-interaction-context/index.html","searchKeys":["UnsafeButtonInteractionContext","interface UnsafeButtonInteractionContext : UnsafeComponentInteractionContext<ButtonInteractionCreateEvent> ","dev.kordex.modules.dev.unsafe.components.buttons.UnsafeButtonInteractionContext"]},{"name":"interface UnsafeCommandInteractionContext : UnsafeInteractionContext<MessageInteractionResponseBehavior, ApplicationCommandInteractionCreateEvent> ","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeCommandInteractionContext","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-command-interaction-context/index.html","searchKeys":["UnsafeCommandInteractionContext","interface UnsafeCommandInteractionContext : UnsafeInteractionContext<MessageInteractionResponseBehavior, ApplicationCommandInteractionCreateEvent> ","dev.kordex.modules.dev.unsafe.commands.UnsafeCommandInteractionContext"]},{"name":"interface UnsafeComponentInteractionContext<E : ComponentInteractionCreateEvent> : UnsafeInteractionContext<MessageInteractionResponseBehavior, E> ","description":"dev.kordex.modules.dev.unsafe.components.UnsafeComponentInteractionContext","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components/-unsafe-component-interaction-context/index.html","searchKeys":["UnsafeComponentInteractionContext","interface UnsafeComponentInteractionContext<E : ComponentInteractionCreateEvent> : UnsafeInteractionContext<MessageInteractionResponseBehavior, E> ","dev.kordex.modules.dev.unsafe.components.UnsafeComponentInteractionContext"]},{"name":"interface UnsafeInteractionContext<R : MessageInteractionResponseBehavior, E : InteractionCreateEvent>","description":"dev.kordex.modules.dev.unsafe.types.UnsafeInteractionContext","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.types/-unsafe-interaction-context/index.html","searchKeys":["UnsafeInteractionContext","interface UnsafeInteractionContext<R : MessageInteractionResponseBehavior, E : InteractionCreateEvent>","dev.kordex.modules.dev.unsafe.types.UnsafeInteractionContext"]},{"name":"interface UnsafeSelectMenuInteractionContext : UnsafeComponentInteractionContext<SelectMenuInteractionCreateEvent> ","description":"dev.kordex.modules.dev.unsafe.components.menus.UnsafeSelectMenuInteractionContext","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus/-unsafe-select-menu-interaction-context/index.html","searchKeys":["UnsafeSelectMenuInteractionContext","interface UnsafeSelectMenuInteractionContext : UnsafeComponentInteractionContext<SelectMenuInteractionCreateEvent> ","dev.kordex.modules.dev.unsafe.components.menus.UnsafeSelectMenuInteractionContext"]},{"name":"lateinit var initialResponse: InitialUnsafeModalResponse","description":"dev.kordex.modules.dev.unsafe.components.forms.UnsafeModalForm.initialResponse","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.forms/-unsafe-modal-form/initial-response.html","searchKeys":["initialResponse","lateinit var initialResponse: InitialUnsafeModalResponse","dev.kordex.modules.dev.unsafe.components.forms.UnsafeModalForm.initialResponse"]},{"name":"object EphemeralAck : InitialMessageCommandResponse","description":"dev.kordex.modules.dev.unsafe.commands.message.InitialMessageCommandResponse.EphemeralAck","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands.message/-initial-message-command-response/-ephemeral-ack/index.html","searchKeys":["EphemeralAck","object EphemeralAck : InitialMessageCommandResponse","dev.kordex.modules.dev.unsafe.commands.message.InitialMessageCommandResponse.EphemeralAck"]},{"name":"object EphemeralAck : InitialSlashCommandResponse","description":"dev.kordex.modules.dev.unsafe.commands.slash.InitialSlashCommandResponse.EphemeralAck","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands.slash/-initial-slash-command-response/-ephemeral-ack/index.html","searchKeys":["EphemeralAck","object EphemeralAck : InitialSlashCommandResponse","dev.kordex.modules.dev.unsafe.commands.slash.InitialSlashCommandResponse.EphemeralAck"]},{"name":"object EphemeralAck : InitialUserCommandResponse","description":"dev.kordex.modules.dev.unsafe.commands.user.InitialUserCommandResponse.EphemeralAck","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands.user/-initial-user-command-response/-ephemeral-ack/index.html","searchKeys":["EphemeralAck","object EphemeralAck : InitialUserCommandResponse","dev.kordex.modules.dev.unsafe.commands.user.InitialUserCommandResponse.EphemeralAck"]},{"name":"object None : InitialMessageCommandResponse","description":"dev.kordex.modules.dev.unsafe.commands.message.InitialMessageCommandResponse.None","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands.message/-initial-message-command-response/-none/index.html","searchKeys":["None","object None : InitialMessageCommandResponse","dev.kordex.modules.dev.unsafe.commands.message.InitialMessageCommandResponse.None"]},{"name":"object None : InitialSlashCommandResponse","description":"dev.kordex.modules.dev.unsafe.commands.slash.InitialSlashCommandResponse.None","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands.slash/-initial-slash-command-response/-none/index.html","searchKeys":["None","object None : InitialSlashCommandResponse","dev.kordex.modules.dev.unsafe.commands.slash.InitialSlashCommandResponse.None"]},{"name":"object None : InitialUserCommandResponse","description":"dev.kordex.modules.dev.unsafe.commands.user.InitialUserCommandResponse.None","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands.user/-initial-user-command-response/-none/index.html","searchKeys":["None","object None : InitialUserCommandResponse","dev.kordex.modules.dev.unsafe.commands.user.InitialUserCommandResponse.None"]},{"name":"object PublicAck : InitialMessageCommandResponse","description":"dev.kordex.modules.dev.unsafe.commands.message.InitialMessageCommandResponse.PublicAck","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands.message/-initial-message-command-response/-public-ack/index.html","searchKeys":["PublicAck","object PublicAck : InitialMessageCommandResponse","dev.kordex.modules.dev.unsafe.commands.message.InitialMessageCommandResponse.PublicAck"]},{"name":"object PublicAck : InitialSlashCommandResponse","description":"dev.kordex.modules.dev.unsafe.commands.slash.InitialSlashCommandResponse.PublicAck","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands.slash/-initial-slash-command-response/-public-ack/index.html","searchKeys":["PublicAck","object PublicAck : InitialSlashCommandResponse","dev.kordex.modules.dev.unsafe.commands.slash.InitialSlashCommandResponse.PublicAck"]},{"name":"object PublicAck : InitialUserCommandResponse","description":"dev.kordex.modules.dev.unsafe.commands.user.InitialUserCommandResponse.PublicAck","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands.user/-initial-user-command-response/-public-ack/index.html","searchKeys":["PublicAck","object PublicAck : InitialUserCommandResponse","dev.kordex.modules.dev.unsafe.commands.user.InitialUserCommandResponse.PublicAck"]},{"name":"open class UnsafeInteractionButton<M : UnsafeModalForm>(timeoutTask: Task?, val modal: () -> M? = null) : InteractionButtonWithAction<UnsafeInteractionComponentContext<M>, M> ","description":"dev.kordex.modules.dev.unsafe.components.buttons.UnsafeInteractionButton","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.buttons/-unsafe-interaction-button/index.html","searchKeys":["UnsafeInteractionButton","open class UnsafeInteractionButton<M : UnsafeModalForm>(timeoutTask: Task?, val modal: () -> M? = null) : InteractionButtonWithAction<UnsafeInteractionComponentContext<M>, M> ","dev.kordex.modules.dev.unsafe.components.buttons.UnsafeInteractionButton"]},{"name":"open override fun apply(builder: ActionRowBuilder)","description":"dev.kordex.modules.dev.unsafe.components.buttons.UnsafeInteractionButton.apply","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.buttons/-unsafe-interaction-button/apply.html","searchKeys":["apply","open override fun apply(builder: ActionRowBuilder)","dev.kordex.modules.dev.unsafe.components.buttons.UnsafeInteractionButton.apply"]},{"name":"open override fun apply(builder: ActionRowBuilder)","description":"dev.kordex.modules.dev.unsafe.components.menus.channel.UnsafeChannelSelectMenu.apply","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus.channel/-unsafe-channel-select-menu/apply.html","searchKeys":["apply","open override fun apply(builder: ActionRowBuilder)","dev.kordex.modules.dev.unsafe.components.menus.channel.UnsafeChannelSelectMenu.apply"]},{"name":"open override fun apply(builder: ActionRowBuilder)","description":"dev.kordex.modules.dev.unsafe.components.menus.mentionable.UnsafeMentionableSelectMenu.apply","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus.mentionable/-unsafe-mentionable-select-menu/apply.html","searchKeys":["apply","open override fun apply(builder: ActionRowBuilder)","dev.kordex.modules.dev.unsafe.components.menus.mentionable.UnsafeMentionableSelectMenu.apply"]},{"name":"open override fun apply(builder: ActionRowBuilder)","description":"dev.kordex.modules.dev.unsafe.components.menus.role.UnsafeRoleSelectMenu.apply","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus.role/-unsafe-role-select-menu/apply.html","searchKeys":["apply","open override fun apply(builder: ActionRowBuilder)","dev.kordex.modules.dev.unsafe.components.menus.role.UnsafeRoleSelectMenu.apply"]},{"name":"open override fun apply(builder: ActionRowBuilder)","description":"dev.kordex.modules.dev.unsafe.components.menus.string.UnsafeStringSelectMenu.apply","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus.string/-unsafe-string-select-menu/apply.html","searchKeys":["apply","open override fun apply(builder: ActionRowBuilder)","dev.kordex.modules.dev.unsafe.components.menus.string.UnsafeStringSelectMenu.apply"]},{"name":"open override fun apply(builder: ActionRowBuilder)","description":"dev.kordex.modules.dev.unsafe.components.menus.user.UnsafeUserSelectMenu.apply","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus.user/-unsafe-user-select-menu/apply.html","searchKeys":["apply","open override fun apply(builder: ActionRowBuilder)","dev.kordex.modules.dev.unsafe.components.menus.user.UnsafeUserSelectMenu.apply"]},{"name":"open override fun createContext(event: SelectMenuInteractionCreateEvent, interactionResponse: MessageInteractionResponseBehavior?, cache: MutableStringKeyedMap<Any>): UnsafeChannelSelectMenuContext<M>","description":"dev.kordex.modules.dev.unsafe.components.menus.channel.UnsafeChannelSelectMenu.createContext","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus.channel/-unsafe-channel-select-menu/create-context.html","searchKeys":["createContext","open override fun createContext(event: SelectMenuInteractionCreateEvent, interactionResponse: MessageInteractionResponseBehavior?, cache: MutableStringKeyedMap<Any>): UnsafeChannelSelectMenuContext<M>","dev.kordex.modules.dev.unsafe.components.menus.channel.UnsafeChannelSelectMenu.createContext"]},{"name":"open override fun createContext(event: SelectMenuInteractionCreateEvent, interactionResponse: MessageInteractionResponseBehavior?, cache: MutableStringKeyedMap<Any>): UnsafeMentionableSelectMenuContext<M>","description":"dev.kordex.modules.dev.unsafe.components.menus.mentionable.UnsafeMentionableSelectMenu.createContext","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus.mentionable/-unsafe-mentionable-select-menu/create-context.html","searchKeys":["createContext","open override fun createContext(event: SelectMenuInteractionCreateEvent, interactionResponse: MessageInteractionResponseBehavior?, cache: MutableStringKeyedMap<Any>): UnsafeMentionableSelectMenuContext<M>","dev.kordex.modules.dev.unsafe.components.menus.mentionable.UnsafeMentionableSelectMenu.createContext"]},{"name":"open override fun createContext(event: SelectMenuInteractionCreateEvent, interactionResponse: MessageInteractionResponseBehavior?, cache: MutableStringKeyedMap<Any>): UnsafeRoleSelectMenuContext<M>","description":"dev.kordex.modules.dev.unsafe.components.menus.role.UnsafeRoleSelectMenu.createContext","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus.role/-unsafe-role-select-menu/create-context.html","searchKeys":["createContext","open override fun createContext(event: SelectMenuInteractionCreateEvent, interactionResponse: MessageInteractionResponseBehavior?, cache: MutableStringKeyedMap<Any>): UnsafeRoleSelectMenuContext<M>","dev.kordex.modules.dev.unsafe.components.menus.role.UnsafeRoleSelectMenu.createContext"]},{"name":"open override fun createContext(event: SelectMenuInteractionCreateEvent, interactionResponse: MessageInteractionResponseBehavior?, cache: MutableStringKeyedMap<Any>): UnsafeStringSelectMenuContext<M>","description":"dev.kordex.modules.dev.unsafe.components.menus.string.UnsafeStringSelectMenu.createContext","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus.string/-unsafe-string-select-menu/create-context.html","searchKeys":["createContext","open override fun createContext(event: SelectMenuInteractionCreateEvent, interactionResponse: MessageInteractionResponseBehavior?, cache: MutableStringKeyedMap<Any>): UnsafeStringSelectMenuContext<M>","dev.kordex.modules.dev.unsafe.components.menus.string.UnsafeStringSelectMenu.createContext"]},{"name":"open override fun createContext(event: SelectMenuInteractionCreateEvent, interactionResponse: MessageInteractionResponseBehavior?, cache: MutableStringKeyedMap<Any>): UnsafeUserSelectMenuContext<M>","description":"dev.kordex.modules.dev.unsafe.components.menus.user.UnsafeUserSelectMenu.createContext","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus.user/-unsafe-user-select-menu/create-context.html","searchKeys":["createContext","open override fun createContext(event: SelectMenuInteractionCreateEvent, interactionResponse: MessageInteractionResponseBehavior?, cache: MutableStringKeyedMap<Any>): UnsafeUserSelectMenuContext<M>","dev.kordex.modules.dev.unsafe.components.menus.user.UnsafeUserSelectMenu.createContext"]},{"name":"open override fun validate()","description":"dev.kordex.modules.dev.unsafe.commands.message.UnsafeMessageCommand.validate","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands.message/-unsafe-message-command/validate.html","searchKeys":["validate","open override fun validate()","dev.kordex.modules.dev.unsafe.commands.message.UnsafeMessageCommand.validate"]},{"name":"open override fun validate()","description":"dev.kordex.modules.dev.unsafe.commands.slash.UnsafeSlashCommand.validate","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands.slash/-unsafe-slash-command/validate.html","searchKeys":["validate","open override fun validate()","dev.kordex.modules.dev.unsafe.commands.slash.UnsafeSlashCommand.validate"]},{"name":"open override fun validate()","description":"dev.kordex.modules.dev.unsafe.commands.user.UnsafeUserCommand.validate","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands.user/-unsafe-user-command/validate.html","searchKeys":["validate","open override fun validate()","dev.kordex.modules.dev.unsafe.commands.user.UnsafeUserCommand.validate"]},{"name":"open override fun validate()","description":"dev.kordex.modules.dev.unsafe.components.buttons.UnsafeInteractionButton.validate","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.buttons/-unsafe-interaction-button/validate.html","searchKeys":["validate","open override fun validate()","dev.kordex.modules.dev.unsafe.components.buttons.UnsafeInteractionButton.validate"]},{"name":"open override fun validate()","description":"dev.kordex.modules.dev.unsafe.components.menus.UnsafeSelectMenu.validate","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus/-unsafe-select-menu/validate.html","searchKeys":["validate","open override fun validate()","dev.kordex.modules.dev.unsafe.components.menus.UnsafeSelectMenu.validate"]},{"name":"open override val arguments: () -> A? = null","description":"dev.kordex.modules.dev.unsafe.commands.slash.UnsafeSlashCommand.arguments","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands.slash/-unsafe-slash-command/arguments.html","searchKeys":["arguments","open override val arguments: () -> A? = null","dev.kordex.modules.dev.unsafe.commands.slash.UnsafeSlashCommand.arguments"]},{"name":"open override val command: MessageCommand<UnsafeCommandMessageCommandContext<M>, M>","description":"dev.kordex.modules.dev.unsafe.contexts.UnsafeCommandMessageCommandContext.command","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.contexts/-unsafe-command-message-command-context/command.html","searchKeys":["command","open override val command: MessageCommand<UnsafeCommandMessageCommandContext<M>, M>","dev.kordex.modules.dev.unsafe.contexts.UnsafeCommandMessageCommandContext.command"]},{"name":"open override val command: UnsafeMessageCommand<*>","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeMessageCommandFailedChecksEvent.command","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-message-command-failed-checks-event/command.html","searchKeys":["command","open override val command: UnsafeMessageCommand<*>","dev.kordex.modules.dev.unsafe.commands.UnsafeMessageCommandFailedChecksEvent.command"]},{"name":"open override val command: UnsafeMessageCommand<*>","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeMessageCommandFailedWithExceptionEvent.command","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-message-command-failed-with-exception-event/command.html","searchKeys":["command","open override val command: UnsafeMessageCommand<*>","dev.kordex.modules.dev.unsafe.commands.UnsafeMessageCommandFailedWithExceptionEvent.command"]},{"name":"open override val command: UnsafeMessageCommand<*>","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeMessageCommandInvocationEvent.command","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-message-command-invocation-event/command.html","searchKeys":["command","open override val command: UnsafeMessageCommand<*>","dev.kordex.modules.dev.unsafe.commands.UnsafeMessageCommandInvocationEvent.command"]},{"name":"open override val command: UnsafeMessageCommand<*>","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeMessageCommandSucceededEvent.command","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-message-command-succeeded-event/command.html","searchKeys":["command","open override val command: UnsafeMessageCommand<*>","dev.kordex.modules.dev.unsafe.commands.UnsafeMessageCommandSucceededEvent.command"]},{"name":"open override val command: UnsafeSlashCommand<*, *>","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeSlashCommandFailedChecksEvent.command","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-slash-command-failed-checks-event/command.html","searchKeys":["command","open override val command: UnsafeSlashCommand<*, *>","dev.kordex.modules.dev.unsafe.commands.UnsafeSlashCommandFailedChecksEvent.command"]},{"name":"open override val command: UnsafeSlashCommand<*, *>","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeSlashCommandFailedParsingEvent.command","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-slash-command-failed-parsing-event/command.html","searchKeys":["command","open override val command: UnsafeSlashCommand<*, *>","dev.kordex.modules.dev.unsafe.commands.UnsafeSlashCommandFailedParsingEvent.command"]},{"name":"open override val command: UnsafeSlashCommand<*, *>","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeSlashCommandFailedWithExceptionEvent.command","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-slash-command-failed-with-exception-event/command.html","searchKeys":["command","open override val command: UnsafeSlashCommand<*, *>","dev.kordex.modules.dev.unsafe.commands.UnsafeSlashCommandFailedWithExceptionEvent.command"]},{"name":"open override val command: UnsafeSlashCommand<*, *>","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeSlashCommandInvocationEvent.command","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-slash-command-invocation-event/command.html","searchKeys":["command","open override val command: UnsafeSlashCommand<*, *>","dev.kordex.modules.dev.unsafe.commands.UnsafeSlashCommandInvocationEvent.command"]},{"name":"open override val command: UnsafeSlashCommand<*, *>","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeSlashCommandSucceededEvent.command","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-slash-command-succeeded-event/command.html","searchKeys":["command","open override val command: UnsafeSlashCommand<*, *>","dev.kordex.modules.dev.unsafe.commands.UnsafeSlashCommandSucceededEvent.command"]},{"name":"open override val command: UnsafeSlashCommand<A, M>","description":"dev.kordex.modules.dev.unsafe.contexts.UnsafeCommandSlashCommandContext.command","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.contexts/-unsafe-command-slash-command-context/command.html","searchKeys":["command","open override val command: UnsafeSlashCommand<A, M>","dev.kordex.modules.dev.unsafe.contexts.UnsafeCommandSlashCommandContext.command"]},{"name":"open override val command: UnsafeUserCommand<*>","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeUserCommandFailedChecksEvent.command","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-user-command-failed-checks-event/command.html","searchKeys":["command","open override val command: UnsafeUserCommand<*>","dev.kordex.modules.dev.unsafe.commands.UnsafeUserCommandFailedChecksEvent.command"]},{"name":"open override val command: UnsafeUserCommand<*>","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeUserCommandFailedWithExceptionEvent.command","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-user-command-failed-with-exception-event/command.html","searchKeys":["command","open override val command: UnsafeUserCommand<*>","dev.kordex.modules.dev.unsafe.commands.UnsafeUserCommandFailedWithExceptionEvent.command"]},{"name":"open override val command: UnsafeUserCommand<*>","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeUserCommandInvocationEvent.command","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-user-command-invocation-event/command.html","searchKeys":["command","open override val command: UnsafeUserCommand<*>","dev.kordex.modules.dev.unsafe.commands.UnsafeUserCommandInvocationEvent.command"]},{"name":"open override val command: UnsafeUserCommand<*>","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeUserCommandSucceededEvent.command","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-user-command-succeeded-event/command.html","searchKeys":["command","open override val command: UnsafeUserCommand<*>","dev.kordex.modules.dev.unsafe.commands.UnsafeUserCommandSucceededEvent.command"]},{"name":"open override val command: UserCommand<UnsafeCommandUserCommandContext<M>, M>","description":"dev.kordex.modules.dev.unsafe.contexts.UnsafeCommandUserCommandContext.command","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.contexts/-unsafe-command-user-command-context/command.html","searchKeys":["command","open override val command: UserCommand<UnsafeCommandUserCommandContext<M>, M>","dev.kordex.modules.dev.unsafe.contexts.UnsafeCommandUserCommandContext.command"]},{"name":"open override val component: UnsafeInteractionButton<M>","description":"dev.kordex.modules.dev.unsafe.contexts.UnsafeInteractionComponentContext.component","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.contexts/-unsafe-interaction-component-context/component.html","searchKeys":["component","open override val component: UnsafeInteractionButton<M>","dev.kordex.modules.dev.unsafe.contexts.UnsafeInteractionComponentContext.component"]},{"name":"open override val event: ButtonInteractionCreateEvent","description":"dev.kordex.modules.dev.unsafe.contexts.UnsafeInteractionComponentContext.event","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.contexts/-unsafe-interaction-component-context/event.html","searchKeys":["event","open override val event: ButtonInteractionCreateEvent","dev.kordex.modules.dev.unsafe.contexts.UnsafeInteractionComponentContext.event"]},{"name":"open override val event: ChatInputCommandInteractionCreateEvent","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeSlashCommandFailedChecksEvent.event","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-slash-command-failed-checks-event/event.html","searchKeys":["event","open override val event: ChatInputCommandInteractionCreateEvent","dev.kordex.modules.dev.unsafe.commands.UnsafeSlashCommandFailedChecksEvent.event"]},{"name":"open override val event: ChatInputCommandInteractionCreateEvent","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeSlashCommandFailedParsingEvent.event","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-slash-command-failed-parsing-event/event.html","searchKeys":["event","open override val event: ChatInputCommandInteractionCreateEvent","dev.kordex.modules.dev.unsafe.commands.UnsafeSlashCommandFailedParsingEvent.event"]},{"name":"open override val event: ChatInputCommandInteractionCreateEvent","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeSlashCommandFailedWithExceptionEvent.event","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-slash-command-failed-with-exception-event/event.html","searchKeys":["event","open override val event: ChatInputCommandInteractionCreateEvent","dev.kordex.modules.dev.unsafe.commands.UnsafeSlashCommandFailedWithExceptionEvent.event"]},{"name":"open override val event: ChatInputCommandInteractionCreateEvent","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeSlashCommandInvocationEvent.event","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-slash-command-invocation-event/event.html","searchKeys":["event","open override val event: ChatInputCommandInteractionCreateEvent","dev.kordex.modules.dev.unsafe.commands.UnsafeSlashCommandInvocationEvent.event"]},{"name":"open override val event: ChatInputCommandInteractionCreateEvent","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeSlashCommandSucceededEvent.event","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-slash-command-succeeded-event/event.html","searchKeys":["event","open override val event: ChatInputCommandInteractionCreateEvent","dev.kordex.modules.dev.unsafe.commands.UnsafeSlashCommandSucceededEvent.event"]},{"name":"open override val event: ChatInputCommandInteractionCreateEvent","description":"dev.kordex.modules.dev.unsafe.contexts.UnsafeCommandSlashCommandContext.event","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.contexts/-unsafe-command-slash-command-context/event.html","searchKeys":["event","open override val event: ChatInputCommandInteractionCreateEvent","dev.kordex.modules.dev.unsafe.contexts.UnsafeCommandSlashCommandContext.event"]},{"name":"open override val event: MessageCommandInteractionCreateEvent","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeMessageCommandFailedChecksEvent.event","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-message-command-failed-checks-event/event.html","searchKeys":["event","open override val event: MessageCommandInteractionCreateEvent","dev.kordex.modules.dev.unsafe.commands.UnsafeMessageCommandFailedChecksEvent.event"]},{"name":"open override val event: MessageCommandInteractionCreateEvent","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeMessageCommandFailedWithExceptionEvent.event","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-message-command-failed-with-exception-event/event.html","searchKeys":["event","open override val event: MessageCommandInteractionCreateEvent","dev.kordex.modules.dev.unsafe.commands.UnsafeMessageCommandFailedWithExceptionEvent.event"]},{"name":"open override val event: MessageCommandInteractionCreateEvent","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeMessageCommandInvocationEvent.event","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-message-command-invocation-event/event.html","searchKeys":["event","open override val event: MessageCommandInteractionCreateEvent","dev.kordex.modules.dev.unsafe.commands.UnsafeMessageCommandInvocationEvent.event"]},{"name":"open override val event: MessageCommandInteractionCreateEvent","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeMessageCommandSucceededEvent.event","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-message-command-succeeded-event/event.html","searchKeys":["event","open override val event: MessageCommandInteractionCreateEvent","dev.kordex.modules.dev.unsafe.commands.UnsafeMessageCommandSucceededEvent.event"]},{"name":"open override val event: MessageCommandInteractionCreateEvent","description":"dev.kordex.modules.dev.unsafe.contexts.UnsafeCommandMessageCommandContext.event","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.contexts/-unsafe-command-message-command-context/event.html","searchKeys":["event","open override val event: MessageCommandInteractionCreateEvent","dev.kordex.modules.dev.unsafe.contexts.UnsafeCommandMessageCommandContext.event"]},{"name":"open override val event: UserCommandInteractionCreateEvent","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeUserCommandFailedChecksEvent.event","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-user-command-failed-checks-event/event.html","searchKeys":["event","open override val event: UserCommandInteractionCreateEvent","dev.kordex.modules.dev.unsafe.commands.UnsafeUserCommandFailedChecksEvent.event"]},{"name":"open override val event: UserCommandInteractionCreateEvent","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeUserCommandFailedWithExceptionEvent.event","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-user-command-failed-with-exception-event/event.html","searchKeys":["event","open override val event: UserCommandInteractionCreateEvent","dev.kordex.modules.dev.unsafe.commands.UnsafeUserCommandFailedWithExceptionEvent.event"]},{"name":"open override val event: UserCommandInteractionCreateEvent","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeUserCommandInvocationEvent.event","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-user-command-invocation-event/event.html","searchKeys":["event","open override val event: UserCommandInteractionCreateEvent","dev.kordex.modules.dev.unsafe.commands.UnsafeUserCommandInvocationEvent.event"]},{"name":"open override val event: UserCommandInteractionCreateEvent","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeUserCommandSucceededEvent.event","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-user-command-succeeded-event/event.html","searchKeys":["event","open override val event: UserCommandInteractionCreateEvent","dev.kordex.modules.dev.unsafe.commands.UnsafeUserCommandSucceededEvent.event"]},{"name":"open override val event: UserCommandInteractionCreateEvent","description":"dev.kordex.modules.dev.unsafe.contexts.UnsafeCommandUserCommandContext.event","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.contexts/-unsafe-command-user-command-context/event.html","searchKeys":["event","open override val event: UserCommandInteractionCreateEvent","dev.kordex.modules.dev.unsafe.contexts.UnsafeCommandUserCommandContext.event"]},{"name":"open override val exception: ArgumentParsingException","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeSlashCommandFailedParsingEvent.exception","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-slash-command-failed-parsing-event/exception.html","searchKeys":["exception","open override val exception: ArgumentParsingException","dev.kordex.modules.dev.unsafe.commands.UnsafeSlashCommandFailedParsingEvent.exception"]},{"name":"open override val modal: () -> M? = null","description":"dev.kordex.modules.dev.unsafe.commands.message.UnsafeMessageCommand.modal","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands.message/-unsafe-message-command/modal.html","searchKeys":["modal","open override val modal: () -> M? = null","dev.kordex.modules.dev.unsafe.commands.message.UnsafeMessageCommand.modal"]},{"name":"open override val modal: () -> M? = null","description":"dev.kordex.modules.dev.unsafe.commands.slash.UnsafeSlashCommand.modal","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands.slash/-unsafe-slash-command/modal.html","searchKeys":["modal","open override val modal: () -> M? = null","dev.kordex.modules.dev.unsafe.commands.slash.UnsafeSlashCommand.modal"]},{"name":"open override val modal: () -> M? = null","description":"dev.kordex.modules.dev.unsafe.commands.user.UnsafeUserCommand.modal","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands.user/-unsafe-user-command/modal.html","searchKeys":["modal","open override val modal: () -> M? = null","dev.kordex.modules.dev.unsafe.commands.user.UnsafeUserCommand.modal"]},{"name":"open override val modal: () -> M? = null","description":"dev.kordex.modules.dev.unsafe.components.buttons.UnsafeInteractionButton.modal","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.buttons/-unsafe-interaction-button/modal.html","searchKeys":["modal","open override val modal: () -> M? = null","dev.kordex.modules.dev.unsafe.components.buttons.UnsafeInteractionButton.modal"]},{"name":"open override val modal: () -> M? = null","description":"dev.kordex.modules.dev.unsafe.components.menus.UnsafeSelectMenu.modal","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus/-unsafe-select-menu/modal.html","searchKeys":["modal","open override val modal: () -> M? = null","dev.kordex.modules.dev.unsafe.components.menus.UnsafeSelectMenu.modal"]},{"name":"open override val modal: () -> M? = null","description":"dev.kordex.modules.dev.unsafe.components.menus.channel.UnsafeChannelSelectMenu.modal","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus.channel/-unsafe-channel-select-menu/modal.html","searchKeys":["modal","open override val modal: () -> M? = null","dev.kordex.modules.dev.unsafe.components.menus.channel.UnsafeChannelSelectMenu.modal"]},{"name":"open override val modal: () -> M? = null","description":"dev.kordex.modules.dev.unsafe.components.menus.mentionable.UnsafeMentionableSelectMenu.modal","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus.mentionable/-unsafe-mentionable-select-menu/modal.html","searchKeys":["modal","open override val modal: () -> M? = null","dev.kordex.modules.dev.unsafe.components.menus.mentionable.UnsafeMentionableSelectMenu.modal"]},{"name":"open override val modal: () -> M? = null","description":"dev.kordex.modules.dev.unsafe.components.menus.role.UnsafeRoleSelectMenu.modal","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus.role/-unsafe-role-select-menu/modal.html","searchKeys":["modal","open override val modal: () -> M? = null","dev.kordex.modules.dev.unsafe.components.menus.role.UnsafeRoleSelectMenu.modal"]},{"name":"open override val modal: () -> M? = null","description":"dev.kordex.modules.dev.unsafe.components.menus.string.UnsafeStringSelectMenu.modal","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus.string/-unsafe-string-select-menu/modal.html","searchKeys":["modal","open override val modal: () -> M? = null","dev.kordex.modules.dev.unsafe.components.menus.string.UnsafeStringSelectMenu.modal"]},{"name":"open override val modal: () -> M? = null","description":"dev.kordex.modules.dev.unsafe.components.menus.user.UnsafeUserSelectMenu.modal","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus.user/-unsafe-user-select-menu/modal.html","searchKeys":["modal","open override val modal: () -> M? = null","dev.kordex.modules.dev.unsafe.components.menus.user.UnsafeUserSelectMenu.modal"]},{"name":"open override val options: MutableList<SelectOptionBuilder>","description":"dev.kordex.modules.dev.unsafe.components.menus.string.UnsafeStringSelectMenu.options","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus.string/-unsafe-string-select-menu/options.html","searchKeys":["options","open override val options: MutableList<SelectOptionBuilder>","dev.kordex.modules.dev.unsafe.components.menus.string.UnsafeStringSelectMenu.options"]},{"name":"open override val parentCommand: SlashCommand<*, *, *>? = null","description":"dev.kordex.modules.dev.unsafe.commands.slash.UnsafeSlashCommand.parentCommand","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands.slash/-unsafe-slash-command/parent-command.html","searchKeys":["parentCommand","open override val parentCommand: SlashCommand<*, *, *>? = null","dev.kordex.modules.dev.unsafe.commands.slash.UnsafeSlashCommand.parentCommand"]},{"name":"open override val parentGroup: SlashGroup? = null","description":"dev.kordex.modules.dev.unsafe.commands.slash.UnsafeSlashCommand.parentGroup","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands.slash/-unsafe-slash-command/parent-group.html","searchKeys":["parentGroup","open override val parentGroup: SlashGroup? = null","dev.kordex.modules.dev.unsafe.commands.slash.UnsafeSlashCommand.parentGroup"]},{"name":"open override val reason: Key","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeMessageCommandFailedChecksEvent.reason","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-message-command-failed-checks-event/reason.html","searchKeys":["reason","open override val reason: Key","dev.kordex.modules.dev.unsafe.commands.UnsafeMessageCommandFailedChecksEvent.reason"]},{"name":"open override val reason: Key","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeSlashCommandFailedChecksEvent.reason","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-slash-command-failed-checks-event/reason.html","searchKeys":["reason","open override val reason: Key","dev.kordex.modules.dev.unsafe.commands.UnsafeSlashCommandFailedChecksEvent.reason"]},{"name":"open override val reason: Key","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeUserCommandFailedChecksEvent.reason","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-user-command-failed-checks-event/reason.html","searchKeys":["reason","open override val reason: Key","dev.kordex.modules.dev.unsafe.commands.UnsafeUserCommandFailedChecksEvent.reason"]},{"name":"open override val signatureType: Key","description":"dev.kordex.modules.dev.unsafe.converters.UnionConverter.signatureType","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.converters/-union-converter/signature-type.html","searchKeys":["signatureType","open override val signatureType: Key","dev.kordex.modules.dev.unsafe.converters.UnionConverter.signatureType"]},{"name":"open override val throwable: Throwable","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeMessageCommandFailedWithExceptionEvent.throwable","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-message-command-failed-with-exception-event/throwable.html","searchKeys":["throwable","open override val throwable: Throwable","dev.kordex.modules.dev.unsafe.commands.UnsafeMessageCommandFailedWithExceptionEvent.throwable"]},{"name":"open override val throwable: Throwable","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeSlashCommandFailedWithExceptionEvent.throwable","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-slash-command-failed-with-exception-event/throwable.html","searchKeys":["throwable","open override val throwable: Throwable","dev.kordex.modules.dev.unsafe.commands.UnsafeSlashCommandFailedWithExceptionEvent.throwable"]},{"name":"open override val throwable: Throwable","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeUserCommandFailedWithExceptionEvent.throwable","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-user-command-failed-with-exception-event/throwable.html","searchKeys":["throwable","open override val throwable: Throwable","dev.kordex.modules.dev.unsafe.commands.UnsafeUserCommandFailedWithExceptionEvent.throwable"]},{"name":"open override var channelTypes: MutableList<ChannelType>","description":"dev.kordex.modules.dev.unsafe.components.menus.channel.UnsafeChannelSelectMenu.channelTypes","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus.channel/-unsafe-channel-select-menu/channel-types.html","searchKeys":["channelTypes","open override var channelTypes: MutableList<ChannelType>","dev.kordex.modules.dev.unsafe.components.menus.channel.UnsafeChannelSelectMenu.channelTypes"]},{"name":"open override var defaultChannels: MutableList<Snowflake>","description":"dev.kordex.modules.dev.unsafe.components.menus.channel.UnsafeChannelSelectMenu.defaultChannels","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus.channel/-unsafe-channel-select-menu/default-channels.html","searchKeys":["defaultChannels","open override var defaultChannels: MutableList<Snowflake>","dev.kordex.modules.dev.unsafe.components.menus.channel.UnsafeChannelSelectMenu.defaultChannels"]},{"name":"open override var defaultRoles: MutableList<Snowflake>","description":"dev.kordex.modules.dev.unsafe.components.menus.mentionable.UnsafeMentionableSelectMenu.defaultRoles","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus.mentionable/-unsafe-mentionable-select-menu/default-roles.html","searchKeys":["defaultRoles","open override var defaultRoles: MutableList<Snowflake>","dev.kordex.modules.dev.unsafe.components.menus.mentionable.UnsafeMentionableSelectMenu.defaultRoles"]},{"name":"open override var defaultRoles: MutableList<Snowflake>","description":"dev.kordex.modules.dev.unsafe.components.menus.role.UnsafeRoleSelectMenu.defaultRoles","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus.role/-unsafe-role-select-menu/default-roles.html","searchKeys":["defaultRoles","open override var defaultRoles: MutableList<Snowflake>","dev.kordex.modules.dev.unsafe.components.menus.role.UnsafeRoleSelectMenu.defaultRoles"]},{"name":"open override var defaultUsers: MutableList<Snowflake>","description":"dev.kordex.modules.dev.unsafe.components.menus.mentionable.UnsafeMentionableSelectMenu.defaultUsers","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus.mentionable/-unsafe-mentionable-select-menu/default-users.html","searchKeys":["defaultUsers","open override var defaultUsers: MutableList<Snowflake>","dev.kordex.modules.dev.unsafe.components.menus.mentionable.UnsafeMentionableSelectMenu.defaultUsers"]},{"name":"open override var defaultUsers: MutableList<Snowflake>","description":"dev.kordex.modules.dev.unsafe.components.menus.user.UnsafeUserSelectMenu.defaultUsers","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus.user/-unsafe-user-select-menu/default-users.html","searchKeys":["defaultUsers","open override var defaultUsers: MutableList<Snowflake>","dev.kordex.modules.dev.unsafe.components.menus.user.UnsafeUserSelectMenu.defaultUsers"]},{"name":"open override var interactionResponse: MessageInteractionResponseBehavior?","description":"dev.kordex.modules.dev.unsafe.components.menus.channel.UnsafeChannelSelectMenuContext.interactionResponse","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus.channel/-unsafe-channel-select-menu-context/interaction-response.html","searchKeys":["interactionResponse","open override var interactionResponse: MessageInteractionResponseBehavior?","dev.kordex.modules.dev.unsafe.components.menus.channel.UnsafeChannelSelectMenuContext.interactionResponse"]},{"name":"open override var interactionResponse: MessageInteractionResponseBehavior?","description":"dev.kordex.modules.dev.unsafe.components.menus.mentionable.UnsafeMentionableSelectMenuContext.interactionResponse","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus.mentionable/-unsafe-mentionable-select-menu-context/interaction-response.html","searchKeys":["interactionResponse","open override var interactionResponse: MessageInteractionResponseBehavior?","dev.kordex.modules.dev.unsafe.components.menus.mentionable.UnsafeMentionableSelectMenuContext.interactionResponse"]},{"name":"open override var interactionResponse: MessageInteractionResponseBehavior?","description":"dev.kordex.modules.dev.unsafe.components.menus.role.UnsafeRoleSelectMenuContext.interactionResponse","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus.role/-unsafe-role-select-menu-context/interaction-response.html","searchKeys":["interactionResponse","open override var interactionResponse: MessageInteractionResponseBehavior?","dev.kordex.modules.dev.unsafe.components.menus.role.UnsafeRoleSelectMenuContext.interactionResponse"]},{"name":"open override var interactionResponse: MessageInteractionResponseBehavior?","description":"dev.kordex.modules.dev.unsafe.components.menus.string.UnsafeStringSelectMenuContext.interactionResponse","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus.string/-unsafe-string-select-menu-context/interaction-response.html","searchKeys":["interactionResponse","open override var interactionResponse: MessageInteractionResponseBehavior?","dev.kordex.modules.dev.unsafe.components.menus.string.UnsafeStringSelectMenuContext.interactionResponse"]},{"name":"open override var interactionResponse: MessageInteractionResponseBehavior?","description":"dev.kordex.modules.dev.unsafe.components.menus.user.UnsafeUserSelectMenuContext.interactionResponse","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus.user/-unsafe-user-select-menu-context/interaction-response.html","searchKeys":["interactionResponse","open override var interactionResponse: MessageInteractionResponseBehavior?","dev.kordex.modules.dev.unsafe.components.menus.user.UnsafeUserSelectMenuContext.interactionResponse"]},{"name":"open override var interactionResponse: MessageInteractionResponseBehavior?","description":"dev.kordex.modules.dev.unsafe.contexts.UnsafeCommandMessageCommandContext.interactionResponse","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.contexts/-unsafe-command-message-command-context/interaction-response.html","searchKeys":["interactionResponse","open override var interactionResponse: MessageInteractionResponseBehavior?","dev.kordex.modules.dev.unsafe.contexts.UnsafeCommandMessageCommandContext.interactionResponse"]},{"name":"open override var interactionResponse: MessageInteractionResponseBehavior?","description":"dev.kordex.modules.dev.unsafe.contexts.UnsafeCommandSlashCommandContext.interactionResponse","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.contexts/-unsafe-command-slash-command-context/interaction-response.html","searchKeys":["interactionResponse","open override var interactionResponse: MessageInteractionResponseBehavior?","dev.kordex.modules.dev.unsafe.contexts.UnsafeCommandSlashCommandContext.interactionResponse"]},{"name":"open override var interactionResponse: MessageInteractionResponseBehavior?","description":"dev.kordex.modules.dev.unsafe.contexts.UnsafeCommandUserCommandContext.interactionResponse","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.contexts/-unsafe-command-user-command-context/interaction-response.html","searchKeys":["interactionResponse","open override var interactionResponse: MessageInteractionResponseBehavior?","dev.kordex.modules.dev.unsafe.contexts.UnsafeCommandUserCommandContext.interactionResponse"]},{"name":"open override var interactionResponse: MessageInteractionResponseBehavior?","description":"dev.kordex.modules.dev.unsafe.contexts.UnsafeInteractionComponentContext.interactionResponse","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.contexts/-unsafe-interaction-component-context/interaction-response.html","searchKeys":["interactionResponse","open override var interactionResponse: MessageInteractionResponseBehavior?","dev.kordex.modules.dev.unsafe.contexts.UnsafeInteractionComponentContext.interactionResponse"]},{"name":"open override var validator: Validator<Any>","description":"dev.kordex.modules.dev.unsafe.converters.UnionConverter.validator","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.converters/-union-converter/validator.html","searchKeys":["validator","open override var validator: Validator<Any>","dev.kordex.modules.dev.unsafe.converters.UnionConverter.validator"]},{"name":"open suspend override fun ackEphemeral(builder: suspend InteractionResponseCreateBuilder.() -> Unit?): EphemeralMessageInteractionResponseBehavior","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeCommandInteractionContext.ackEphemeral","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-command-interaction-context/ack-ephemeral.html","searchKeys":["ackEphemeral","open suspend override fun ackEphemeral(builder: suspend InteractionResponseCreateBuilder.() -> Unit?): EphemeralMessageInteractionResponseBehavior","dev.kordex.modules.dev.unsafe.commands.UnsafeCommandInteractionContext.ackEphemeral"]},{"name":"open suspend override fun ackEphemeral(builder: suspend InteractionResponseCreateBuilder.() -> Unit?): EphemeralMessageInteractionResponseBehavior","description":"dev.kordex.modules.dev.unsafe.components.UnsafeComponentInteractionContext.ackEphemeral","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components/-unsafe-component-interaction-context/ack-ephemeral.html","searchKeys":["ackEphemeral","open suspend override fun ackEphemeral(builder: suspend InteractionResponseCreateBuilder.() -> Unit?): EphemeralMessageInteractionResponseBehavior","dev.kordex.modules.dev.unsafe.components.UnsafeComponentInteractionContext.ackEphemeral"]},{"name":"open suspend override fun ackPublic(builder: suspend InteractionResponseCreateBuilder.() -> Unit?): PublicMessageInteractionResponseBehavior","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeCommandInteractionContext.ackPublic","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-command-interaction-context/ack-public.html","searchKeys":["ackPublic","open suspend override fun ackPublic(builder: suspend InteractionResponseCreateBuilder.() -> Unit?): PublicMessageInteractionResponseBehavior","dev.kordex.modules.dev.unsafe.commands.UnsafeCommandInteractionContext.ackPublic"]},{"name":"open suspend override fun ackPublic(builder: suspend InteractionResponseCreateBuilder.() -> Unit?): PublicMessageInteractionResponseBehavior","description":"dev.kordex.modules.dev.unsafe.components.UnsafeComponentInteractionContext.ackPublic","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components/-unsafe-component-interaction-context/ack-public.html","searchKeys":["ackPublic","open suspend override fun ackPublic(builder: suspend InteractionResponseCreateBuilder.() -> Unit?): PublicMessageInteractionResponseBehavior","dev.kordex.modules.dev.unsafe.components.UnsafeComponentInteractionContext.ackPublic"]},{"name":"open suspend override fun call(event: ButtonInteractionCreateEvent)","description":"dev.kordex.modules.dev.unsafe.components.buttons.UnsafeInteractionButton.call","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.buttons/-unsafe-interaction-button/call.html","searchKeys":["call","open suspend override fun call(event: ButtonInteractionCreateEvent)","dev.kordex.modules.dev.unsafe.components.buttons.UnsafeInteractionButton.call"]},{"name":"open suspend override fun call(event: ChatInputCommandInteractionCreateEvent, cache: MutableStringKeyedMap<Any>)","description":"dev.kordex.modules.dev.unsafe.commands.slash.UnsafeSlashCommand.call","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands.slash/-unsafe-slash-command/call.html","searchKeys":["call","open suspend override fun call(event: ChatInputCommandInteractionCreateEvent, cache: MutableStringKeyedMap<Any>)","dev.kordex.modules.dev.unsafe.commands.slash.UnsafeSlashCommand.call"]},{"name":"open suspend override fun call(event: MessageCommandInteractionCreateEvent, cache: MutableStringKeyedMap<Any>)","description":"dev.kordex.modules.dev.unsafe.commands.message.UnsafeMessageCommand.call","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands.message/-unsafe-message-command/call.html","searchKeys":["call","open suspend override fun call(event: MessageCommandInteractionCreateEvent, cache: MutableStringKeyedMap<Any>)","dev.kordex.modules.dev.unsafe.commands.message.UnsafeMessageCommand.call"]},{"name":"open suspend override fun call(event: SelectMenuInteractionCreateEvent)","description":"dev.kordex.modules.dev.unsafe.components.menus.UnsafeSelectMenu.call","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus/-unsafe-select-menu/call.html","searchKeys":["call","open suspend override fun call(event: SelectMenuInteractionCreateEvent)","dev.kordex.modules.dev.unsafe.components.menus.UnsafeSelectMenu.call"]},{"name":"open suspend override fun call(event: UserCommandInteractionCreateEvent, cache: MutableStringKeyedMap<Any>)","description":"dev.kordex.modules.dev.unsafe.commands.user.UnsafeUserCommand.call","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands.user/-unsafe-user-command/call.html","searchKeys":["call","open suspend override fun call(event: UserCommandInteractionCreateEvent, cache: MutableStringKeyedMap<Any>)","dev.kordex.modules.dev.unsafe.commands.user.UnsafeUserCommand.call"]},{"name":"open suspend override fun edit(builder: suspend InteractionResponseModifyBuilder.() -> Unit): MessageInteractionResponse","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeCommandInteractionContext.edit","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-command-interaction-context/edit.html","searchKeys":["edit","open suspend override fun edit(builder: suspend InteractionResponseModifyBuilder.() -> Unit): MessageInteractionResponse","dev.kordex.modules.dev.unsafe.commands.UnsafeCommandInteractionContext.edit"]},{"name":"open suspend override fun edit(builder: suspend InteractionResponseModifyBuilder.() -> Unit): MessageInteractionResponse","description":"dev.kordex.modules.dev.unsafe.components.UnsafeComponentInteractionContext.edit","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components/-unsafe-component-interaction-context/edit.html","searchKeys":["edit","open suspend override fun edit(builder: suspend InteractionResponseModifyBuilder.() -> Unit): MessageInteractionResponse","dev.kordex.modules.dev.unsafe.components.UnsafeComponentInteractionContext.edit"]},{"name":"open suspend override fun editingPaginator(defaultGroup: Key, locale: Locale?, builder: suspend PaginatorBuilder.() -> Unit): BaseButtonPaginator","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeCommandInteractionContext.editingPaginator","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-command-interaction-context/editing-paginator.html","searchKeys":["editingPaginator","open suspend override fun editingPaginator(defaultGroup: Key, locale: Locale?, builder: suspend PaginatorBuilder.() -> Unit): BaseButtonPaginator","dev.kordex.modules.dev.unsafe.commands.UnsafeCommandInteractionContext.editingPaginator"]},{"name":"open suspend override fun editingPaginator(defaultGroup: Key, locale: Locale?, builder: suspend PaginatorBuilder.() -> Unit): BaseButtonPaginator","description":"dev.kordex.modules.dev.unsafe.components.UnsafeComponentInteractionContext.editingPaginator","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components/-unsafe-component-interaction-context/editing-paginator.html","searchKeys":["editingPaginator","open suspend override fun editingPaginator(defaultGroup: Key, locale: Locale?, builder: suspend PaginatorBuilder.() -> Unit): BaseButtonPaginator","dev.kordex.modules.dev.unsafe.components.UnsafeComponentInteractionContext.editingPaginator"]},{"name":"open suspend override fun parse(parser: StringParser?, context: CommandContext, named: List<String>?): Int","description":"dev.kordex.modules.dev.unsafe.converters.UnionConverter.parse","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.converters/-union-converter/parse.html","searchKeys":["parse","open suspend override fun parse(parser: StringParser?, context: CommandContext, named: List<String>?): Int","dev.kordex.modules.dev.unsafe.converters.UnionConverter.parse"]},{"name":"open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","description":"dev.kordex.modules.dev.unsafe.converters.UnionConverter.parseOption","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.converters/-union-converter/parse-option.html","searchKeys":["parseOption","open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","dev.kordex.modules.dev.unsafe.converters.UnionConverter.parseOption"]},{"name":"open suspend override fun respondEphemeral(builder: suspend FollowupMessageCreateBuilder.() -> Unit): EphemeralFollowupMessage","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeCommandInteractionContext.respondEphemeral","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-command-interaction-context/respond-ephemeral.html","searchKeys":["respondEphemeral","open suspend override fun respondEphemeral(builder: suspend FollowupMessageCreateBuilder.() -> Unit): EphemeralFollowupMessage","dev.kordex.modules.dev.unsafe.commands.UnsafeCommandInteractionContext.respondEphemeral"]},{"name":"open suspend override fun respondEphemeral(builder: suspend FollowupMessageCreateBuilder.() -> Unit): EphemeralFollowupMessage","description":"dev.kordex.modules.dev.unsafe.components.UnsafeComponentInteractionContext.respondEphemeral","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components/-unsafe-component-interaction-context/respond-ephemeral.html","searchKeys":["respondEphemeral","open suspend override fun respondEphemeral(builder: suspend FollowupMessageCreateBuilder.() -> Unit): EphemeralFollowupMessage","dev.kordex.modules.dev.unsafe.components.UnsafeComponentInteractionContext.respondEphemeral"]},{"name":"open suspend override fun respondPublic(builder: suspend FollowupMessageCreateBuilder.() -> Unit): PublicFollowupMessage","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeCommandInteractionContext.respondPublic","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-command-interaction-context/respond-public.html","searchKeys":["respondPublic","open suspend override fun respondPublic(builder: suspend FollowupMessageCreateBuilder.() -> Unit): PublicFollowupMessage","dev.kordex.modules.dev.unsafe.commands.UnsafeCommandInteractionContext.respondPublic"]},{"name":"open suspend override fun respondPublic(builder: suspend FollowupMessageCreateBuilder.() -> Unit): PublicFollowupMessage","description":"dev.kordex.modules.dev.unsafe.components.UnsafeComponentInteractionContext.respondPublic","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components/-unsafe-component-interaction-context/respond-public.html","searchKeys":["respondPublic","open suspend override fun respondPublic(builder: suspend FollowupMessageCreateBuilder.() -> Unit): PublicFollowupMessage","dev.kordex.modules.dev.unsafe.components.UnsafeComponentInteractionContext.respondPublic"]},{"name":"open suspend override fun respondText(context: C, message: Key, failureType: FailureReason<*>)","description":"dev.kordex.modules.dev.unsafe.components.menus.UnsafeSelectMenu.respondText","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus/-unsafe-select-menu/respond-text.html","searchKeys":["respondText","open suspend override fun respondText(context: C, message: Key, failureType: FailureReason<*>)","dev.kordex.modules.dev.unsafe.components.menus.UnsafeSelectMenu.respondText"]},{"name":"open suspend override fun respondText(context: UnsafeCommandMessageCommandContext<M>, message: Key, failureType: FailureReason<*>)","description":"dev.kordex.modules.dev.unsafe.commands.message.UnsafeMessageCommand.respondText","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands.message/-unsafe-message-command/respond-text.html","searchKeys":["respondText","open suspend override fun respondText(context: UnsafeCommandMessageCommandContext<M>, message: Key, failureType: FailureReason<*>)","dev.kordex.modules.dev.unsafe.commands.message.UnsafeMessageCommand.respondText"]},{"name":"open suspend override fun respondText(context: UnsafeCommandSlashCommandContext<A, M>, message: Key, failureType: FailureReason<*>)","description":"dev.kordex.modules.dev.unsafe.commands.slash.UnsafeSlashCommand.respondText","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands.slash/-unsafe-slash-command/respond-text.html","searchKeys":["respondText","open suspend override fun respondText(context: UnsafeCommandSlashCommandContext<A, M>, message: Key, failureType: FailureReason<*>)","dev.kordex.modules.dev.unsafe.commands.slash.UnsafeSlashCommand.respondText"]},{"name":"open suspend override fun respondText(context: UnsafeCommandUserCommandContext<M>, message: Key, failureType: FailureReason<*>)","description":"dev.kordex.modules.dev.unsafe.commands.user.UnsafeUserCommand.respondText","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands.user/-unsafe-user-command/respond-text.html","searchKeys":["respondText","open suspend override fun respondText(context: UnsafeCommandUserCommandContext<M>, message: Key, failureType: FailureReason<*>)","dev.kordex.modules.dev.unsafe.commands.user.UnsafeUserCommand.respondText"]},{"name":"open suspend override fun respondText(context: UnsafeInteractionComponentContext<M>, message: Key, failureType: FailureReason<*>)","description":"dev.kordex.modules.dev.unsafe.components.buttons.UnsafeInteractionButton.respondText","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.buttons/-unsafe-interaction-button/respond-text.html","searchKeys":["respondText","open suspend override fun respondText(context: UnsafeInteractionComponentContext<M>, message: Key, failureType: FailureReason<*>)","dev.kordex.modules.dev.unsafe.components.buttons.UnsafeInteractionButton.respondText"]},{"name":"open suspend override fun respondingPaginator(defaultGroup: Key, locale: Locale?, builder: suspend PaginatorBuilder.() -> Unit): BaseButtonPaginator","description":"dev.kordex.modules.dev.unsafe.commands.UnsafeCommandInteractionContext.respondingPaginator","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands/-unsafe-command-interaction-context/responding-paginator.html","searchKeys":["respondingPaginator","open suspend override fun respondingPaginator(defaultGroup: Key, locale: Locale?, builder: suspend PaginatorBuilder.() -> Unit): BaseButtonPaginator","dev.kordex.modules.dev.unsafe.commands.UnsafeCommandInteractionContext.respondingPaginator"]},{"name":"open suspend override fun respondingPaginator(defaultGroup: Key, locale: Locale?, builder: suspend PaginatorBuilder.() -> Unit): BaseButtonPaginator","description":"dev.kordex.modules.dev.unsafe.components.UnsafeComponentInteractionContext.respondingPaginator","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components/-unsafe-component-interaction-context/responding-paginator.html","searchKeys":["respondingPaginator","open suspend override fun respondingPaginator(defaultGroup: Key, locale: Locale?, builder: suspend PaginatorBuilder.() -> Unit): BaseButtonPaginator","dev.kordex.modules.dev.unsafe.components.UnsafeComponentInteractionContext.respondingPaginator"]},{"name":"open suspend override fun run(event: ChatInputCommandInteractionCreateEvent, cache: MutableStringKeyedMap<Any>)","description":"dev.kordex.modules.dev.unsafe.commands.slash.UnsafeSlashCommand.run","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands.slash/-unsafe-slash-command/run.html","searchKeys":["run","open suspend override fun run(event: ChatInputCommandInteractionCreateEvent, cache: MutableStringKeyedMap<Any>)","dev.kordex.modules.dev.unsafe.commands.slash.UnsafeSlashCommand.run"]},{"name":"open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<StringChoiceBuilder>","description":"dev.kordex.modules.dev.unsafe.converters.UnionConverter.toSlashOption","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.converters/-union-converter/to-slash-option.html","searchKeys":["toSlashOption","open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<StringChoiceBuilder>","dev.kordex.modules.dev.unsafe.converters.UnionConverter.toSlashOption"]},{"name":"open var style: ButtonStyle","description":"dev.kordex.modules.dev.unsafe.components.buttons.UnsafeInteractionButton.style","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.buttons/-unsafe-interaction-button/style.html","searchKeys":["style","open var style: ButtonStyle","dev.kordex.modules.dev.unsafe.components.buttons.UnsafeInteractionButton.style"]},{"name":"sealed class InitialInteractionButtonResponse","description":"dev.kordex.modules.dev.unsafe.components.buttons.InitialInteractionButtonResponse","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.buttons/-initial-interaction-button-response/index.html","searchKeys":["InitialInteractionButtonResponse","sealed class InitialInteractionButtonResponse","dev.kordex.modules.dev.unsafe.components.buttons.InitialInteractionButtonResponse"]},{"name":"sealed class InitialInteractionSelectMenuResponse","description":"dev.kordex.modules.dev.unsafe.components.menus.InitialInteractionSelectMenuResponse","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus/-initial-interaction-select-menu-response/index.html","searchKeys":["InitialInteractionSelectMenuResponse","sealed class InitialInteractionSelectMenuResponse","dev.kordex.modules.dev.unsafe.components.menus.InitialInteractionSelectMenuResponse"]},{"name":"sealed class InitialMessageCommandResponse","description":"dev.kordex.modules.dev.unsafe.commands.message.InitialMessageCommandResponse","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands.message/-initial-message-command-response/index.html","searchKeys":["InitialMessageCommandResponse","sealed class InitialMessageCommandResponse","dev.kordex.modules.dev.unsafe.commands.message.InitialMessageCommandResponse"]},{"name":"sealed class InitialSlashCommandResponse","description":"dev.kordex.modules.dev.unsafe.commands.slash.InitialSlashCommandResponse","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands.slash/-initial-slash-command-response/index.html","searchKeys":["InitialSlashCommandResponse","sealed class InitialSlashCommandResponse","dev.kordex.modules.dev.unsafe.commands.slash.InitialSlashCommandResponse"]},{"name":"sealed class InitialUnsafeModalResponse","description":"dev.kordex.modules.dev.unsafe.components.forms.InitialUnsafeModalResponse","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.forms/-initial-unsafe-modal-response/index.html","searchKeys":["InitialUnsafeModalResponse","sealed class InitialUnsafeModalResponse","dev.kordex.modules.dev.unsafe.components.forms.InitialUnsafeModalResponse"]},{"name":"sealed class InitialUserCommandResponse","description":"dev.kordex.modules.dev.unsafe.commands.user.InitialUserCommandResponse","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands.user/-initial-user-command-response/index.html","searchKeys":["InitialUserCommandResponse","sealed class InitialUserCommandResponse","dev.kordex.modules.dev.unsafe.commands.user.InitialUserCommandResponse"]},{"name":"suspend fun <M : UnsafeModalForm> ComponentContainer.unsafeButton(modal: () -> M?, row: Int? = null, builder: suspend UnsafeInteractionButton<M>.() -> Unit): UnsafeInteractionButton<M>","description":"dev.kordex.modules.dev.unsafe.extensions.unsafeButton","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.extensions/unsafe-button.html","searchKeys":["unsafeButton","suspend fun <M : UnsafeModalForm> ComponentContainer.unsafeButton(modal: () -> M?, row: Int? = null, builder: suspend UnsafeInteractionButton<M>.() -> Unit): UnsafeInteractionButton<M>","dev.kordex.modules.dev.unsafe.extensions.unsafeButton"]},{"name":"suspend fun <M : UnsafeModalForm> ComponentContainer.unsafeChannelSelectMenu(modal: () -> M?, row: Int? = null, builder: suspend UnsafeChannelSelectMenu<M>.() -> Unit): UnsafeChannelSelectMenu<M>","description":"dev.kordex.modules.dev.unsafe.extensions.unsafeChannelSelectMenu","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.extensions/unsafe-channel-select-menu.html","searchKeys":["unsafeChannelSelectMenu","suspend fun <M : UnsafeModalForm> ComponentContainer.unsafeChannelSelectMenu(modal: () -> M?, row: Int? = null, builder: suspend UnsafeChannelSelectMenu<M>.() -> Unit): UnsafeChannelSelectMenu<M>","dev.kordex.modules.dev.unsafe.extensions.unsafeChannelSelectMenu"]},{"name":"suspend fun <M : UnsafeModalForm> ComponentContainer.unsafeMentionableSelectMenu(modal: () -> M?, row: Int? = null, builder: suspend UnsafeMentionableSelectMenu<M>.() -> Unit): UnsafeMentionableSelectMenu<M>","description":"dev.kordex.modules.dev.unsafe.extensions.unsafeMentionableSelectMenu","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.extensions/unsafe-mentionable-select-menu.html","searchKeys":["unsafeMentionableSelectMenu","suspend fun <M : UnsafeModalForm> ComponentContainer.unsafeMentionableSelectMenu(modal: () -> M?, row: Int? = null, builder: suspend UnsafeMentionableSelectMenu<M>.() -> Unit): UnsafeMentionableSelectMenu<M>","dev.kordex.modules.dev.unsafe.extensions.unsafeMentionableSelectMenu"]},{"name":"suspend fun <M : UnsafeModalForm> ComponentContainer.unsafeRoleSelectMenu(modal: () -> M?, row: Int? = null, builder: suspend UnsafeRoleSelectMenu<M>.() -> Unit): UnsafeRoleSelectMenu<M>","description":"dev.kordex.modules.dev.unsafe.extensions.unsafeRoleSelectMenu","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.extensions/unsafe-role-select-menu.html","searchKeys":["unsafeRoleSelectMenu","suspend fun <M : UnsafeModalForm> ComponentContainer.unsafeRoleSelectMenu(modal: () -> M?, row: Int? = null, builder: suspend UnsafeRoleSelectMenu<M>.() -> Unit): UnsafeRoleSelectMenu<M>","dev.kordex.modules.dev.unsafe.extensions.unsafeRoleSelectMenu"]},{"name":"suspend fun <M : UnsafeModalForm> ComponentContainer.unsafeStringSelectMenu(modal: () -> M?, row: Int? = null, builder: suspend UnsafeStringSelectMenu<M>.() -> Unit): UnsafeStringSelectMenu<M>","description":"dev.kordex.modules.dev.unsafe.extensions.unsafeStringSelectMenu","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.extensions/unsafe-string-select-menu.html","searchKeys":["unsafeStringSelectMenu","suspend fun <M : UnsafeModalForm> ComponentContainer.unsafeStringSelectMenu(modal: () -> M?, row: Int? = null, builder: suspend UnsafeStringSelectMenu<M>.() -> Unit): UnsafeStringSelectMenu<M>","dev.kordex.modules.dev.unsafe.extensions.unsafeStringSelectMenu"]},{"name":"suspend fun <M : UnsafeModalForm> ComponentContainer.unsafeUserSelectMenu(modal: () -> M?, row: Int? = null, builder: suspend UnsafeUserSelectMenu<M>.() -> Unit): UnsafeUserSelectMenu<M>","description":"dev.kordex.modules.dev.unsafe.extensions.unsafeUserSelectMenu","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.extensions/unsafe-user-select-menu.html","searchKeys":["unsafeUserSelectMenu","suspend fun <M : UnsafeModalForm> ComponentContainer.unsafeUserSelectMenu(modal: () -> M?, row: Int? = null, builder: suspend UnsafeUserSelectMenu<M>.() -> Unit): UnsafeUserSelectMenu<M>","dev.kordex.modules.dev.unsafe.extensions.unsafeUserSelectMenu"]},{"name":"suspend fun <M : UnsafeModalForm> Extension.unsafeMessageCommand(commandObj: UnsafeMessageCommand<M>): UnsafeMessageCommand<M>","description":"dev.kordex.modules.dev.unsafe.extensions.unsafeMessageCommand","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.extensions/unsafe-message-command.html","searchKeys":["unsafeMessageCommand","suspend fun <M : UnsafeModalForm> Extension.unsafeMessageCommand(commandObj: UnsafeMessageCommand<M>): UnsafeMessageCommand<M>","dev.kordex.modules.dev.unsafe.extensions.unsafeMessageCommand"]},{"name":"suspend fun <M : UnsafeModalForm> Extension.unsafeUserCommand(commandObj: UnsafeUserCommand<M>): UnsafeUserCommand<M>","description":"dev.kordex.modules.dev.unsafe.extensions.unsafeUserCommand","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.extensions/unsafe-user-command.html","searchKeys":["unsafeUserCommand","suspend fun <M : UnsafeModalForm> Extension.unsafeUserCommand(commandObj: UnsafeUserCommand<M>): UnsafeUserCommand<M>","dev.kordex.modules.dev.unsafe.extensions.unsafeUserCommand"]},{"name":"suspend fun <T : Arguments, M : UnsafeModalForm> Extension.unsafeSlashCommand(commandObj: UnsafeSlashCommand<T, M>): UnsafeSlashCommand<T, M>","description":"dev.kordex.modules.dev.unsafe.extensions.unsafeSlashCommand","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.extensions/unsafe-slash-command.html","searchKeys":["unsafeSlashCommand","suspend fun <T : Arguments, M : UnsafeModalForm> Extension.unsafeSlashCommand(commandObj: UnsafeSlashCommand<T, M>): UnsafeSlashCommand<T, M>","dev.kordex.modules.dev.unsafe.extensions.unsafeSlashCommand"]},{"name":"suspend fun <T : Arguments> Extension.unsafeSlashCommand(arguments: () -> T, body: suspend UnsafeSlashCommand<T, UnsafeModalForm>.() -> Unit): UnsafeSlashCommand<T, UnsafeModalForm>","description":"dev.kordex.modules.dev.unsafe.extensions.unsafeSlashCommand","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.extensions/unsafe-slash-command.html","searchKeys":["unsafeSlashCommand","suspend fun <T : Arguments> Extension.unsafeSlashCommand(arguments: () -> T, body: suspend UnsafeSlashCommand<T, UnsafeModalForm>.() -> Unit): UnsafeSlashCommand<T, UnsafeModalForm>","dev.kordex.modules.dev.unsafe.extensions.unsafeSlashCommand"]},{"name":"suspend fun <T : Arguments> SlashCommand<*, *, *>.unsafeSubCommand(arguments: () -> T, body: suspend UnsafeSlashCommand<T, UnsafeModalForm>.() -> Unit): UnsafeSlashCommand<T, UnsafeModalForm>","description":"dev.kordex.modules.dev.unsafe.extensions.unsafeSubCommand","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.extensions/unsafe-sub-command.html","searchKeys":["unsafeSubCommand","suspend fun <T : Arguments> SlashCommand<*, *, *>.unsafeSubCommand(arguments: () -> T, body: suspend UnsafeSlashCommand<T, UnsafeModalForm>.() -> Unit): UnsafeSlashCommand<T, UnsafeModalForm>","dev.kordex.modules.dev.unsafe.extensions.unsafeSubCommand"]},{"name":"suspend fun <T : Arguments> SlashGroup.unsafeSubCommand(arguments: () -> T, body: suspend UnsafeSlashCommand<T, UnsafeModalForm>.() -> Unit): UnsafeSlashCommand<T, UnsafeModalForm>","description":"dev.kordex.modules.dev.unsafe.extensions.unsafeSubCommand","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.extensions/unsafe-sub-command.html","searchKeys":["unsafeSubCommand","suspend fun <T : Arguments> SlashGroup.unsafeSubCommand(arguments: () -> T, body: suspend UnsafeSlashCommand<T, UnsafeModalForm>.() -> Unit): UnsafeSlashCommand<T, UnsafeModalForm>","dev.kordex.modules.dev.unsafe.extensions.unsafeSubCommand"]},{"name":"suspend fun ComponentContainer.unsafeButton(row: Int? = null, builder: suspend UnsafeInteractionButton<UnsafeModalForm>.() -> Unit): UnsafeInteractionButton<UnsafeModalForm>","description":"dev.kordex.modules.dev.unsafe.extensions.unsafeButton","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.extensions/unsafe-button.html","searchKeys":["unsafeButton","suspend fun ComponentContainer.unsafeButton(row: Int? = null, builder: suspend UnsafeInteractionButton<UnsafeModalForm>.() -> Unit): UnsafeInteractionButton<UnsafeModalForm>","dev.kordex.modules.dev.unsafe.extensions.unsafeButton"]},{"name":"suspend fun ComponentContainer.unsafeChannelSelectMenu(row: Int? = null, builder: suspend UnsafeChannelSelectMenu<UnsafeModalForm>.() -> Unit): UnsafeChannelSelectMenu<UnsafeModalForm>","description":"dev.kordex.modules.dev.unsafe.extensions.unsafeChannelSelectMenu","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.extensions/unsafe-channel-select-menu.html","searchKeys":["unsafeChannelSelectMenu","suspend fun ComponentContainer.unsafeChannelSelectMenu(row: Int? = null, builder: suspend UnsafeChannelSelectMenu<UnsafeModalForm>.() -> Unit): UnsafeChannelSelectMenu<UnsafeModalForm>","dev.kordex.modules.dev.unsafe.extensions.unsafeChannelSelectMenu"]},{"name":"suspend fun ComponentContainer.unsafeMentionableSelectMenu(row: Int? = null, builder: suspend UnsafeMentionableSelectMenu<UnsafeModalForm>.() -> Unit): UnsafeMentionableSelectMenu<UnsafeModalForm>","description":"dev.kordex.modules.dev.unsafe.extensions.unsafeMentionableSelectMenu","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.extensions/unsafe-mentionable-select-menu.html","searchKeys":["unsafeMentionableSelectMenu","suspend fun ComponentContainer.unsafeMentionableSelectMenu(row: Int? = null, builder: suspend UnsafeMentionableSelectMenu<UnsafeModalForm>.() -> Unit): UnsafeMentionableSelectMenu<UnsafeModalForm>","dev.kordex.modules.dev.unsafe.extensions.unsafeMentionableSelectMenu"]},{"name":"suspend fun ComponentContainer.unsafeRoleSelectMenu(row: Int? = null, builder: suspend UnsafeRoleSelectMenu<UnsafeModalForm>.() -> Unit): UnsafeRoleSelectMenu<UnsafeModalForm>","description":"dev.kordex.modules.dev.unsafe.extensions.unsafeRoleSelectMenu","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.extensions/unsafe-role-select-menu.html","searchKeys":["unsafeRoleSelectMenu","suspend fun ComponentContainer.unsafeRoleSelectMenu(row: Int? = null, builder: suspend UnsafeRoleSelectMenu<UnsafeModalForm>.() -> Unit): UnsafeRoleSelectMenu<UnsafeModalForm>","dev.kordex.modules.dev.unsafe.extensions.unsafeRoleSelectMenu"]},{"name":"suspend fun ComponentContainer.unsafeStringSelectMenu(row: Int? = null, builder: suspend UnsafeStringSelectMenu<UnsafeModalForm>.() -> Unit): UnsafeStringSelectMenu<UnsafeModalForm>","description":"dev.kordex.modules.dev.unsafe.extensions.unsafeStringSelectMenu","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.extensions/unsafe-string-select-menu.html","searchKeys":["unsafeStringSelectMenu","suspend fun ComponentContainer.unsafeStringSelectMenu(row: Int? = null, builder: suspend UnsafeStringSelectMenu<UnsafeModalForm>.() -> Unit): UnsafeStringSelectMenu<UnsafeModalForm>","dev.kordex.modules.dev.unsafe.extensions.unsafeStringSelectMenu"]},{"name":"suspend fun ComponentContainer.unsafeUserSelectMenu(row: Int? = null, builder: suspend UnsafeUserSelectMenu<UnsafeModalForm>.() -> Unit): UnsafeUserSelectMenu<UnsafeModalForm>","description":"dev.kordex.modules.dev.unsafe.extensions.unsafeUserSelectMenu","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.extensions/unsafe-user-select-menu.html","searchKeys":["unsafeUserSelectMenu","suspend fun ComponentContainer.unsafeUserSelectMenu(row: Int? = null, builder: suspend UnsafeUserSelectMenu<UnsafeModalForm>.() -> Unit): UnsafeUserSelectMenu<UnsafeModalForm>","dev.kordex.modules.dev.unsafe.extensions.unsafeUserSelectMenu"]},{"name":"suspend fun Extension.unsafeMessageCommand(body: suspend UnsafeMessageCommand<UnsafeModalForm>.() -> Unit): UnsafeMessageCommand<UnsafeModalForm>","description":"dev.kordex.modules.dev.unsafe.extensions.unsafeMessageCommand","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.extensions/unsafe-message-command.html","searchKeys":["unsafeMessageCommand","suspend fun Extension.unsafeMessageCommand(body: suspend UnsafeMessageCommand<UnsafeModalForm>.() -> Unit): UnsafeMessageCommand<UnsafeModalForm>","dev.kordex.modules.dev.unsafe.extensions.unsafeMessageCommand"]},{"name":"suspend fun Extension.unsafeSlashCommand(body: suspend UnsafeSlashCommand<Arguments, UnsafeModalForm>.() -> Unit): UnsafeSlashCommand<Arguments, UnsafeModalForm>","description":"dev.kordex.modules.dev.unsafe.extensions.unsafeSlashCommand","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.extensions/unsafe-slash-command.html","searchKeys":["unsafeSlashCommand","suspend fun Extension.unsafeSlashCommand(body: suspend UnsafeSlashCommand<Arguments, UnsafeModalForm>.() -> Unit): UnsafeSlashCommand<Arguments, UnsafeModalForm>","dev.kordex.modules.dev.unsafe.extensions.unsafeSlashCommand"]},{"name":"suspend fun Extension.unsafeUserCommand(body: suspend UnsafeUserCommand<UnsafeModalForm>.() -> Unit): UnsafeUserCommand<UnsafeModalForm>","description":"dev.kordex.modules.dev.unsafe.extensions.unsafeUserCommand","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.extensions/unsafe-user-command.html","searchKeys":["unsafeUserCommand","suspend fun Extension.unsafeUserCommand(body: suspend UnsafeUserCommand<UnsafeModalForm>.() -> Unit): UnsafeUserCommand<UnsafeModalForm>","dev.kordex.modules.dev.unsafe.extensions.unsafeUserCommand"]},{"name":"suspend fun SlashCommand<*, *, *>.unsafeSubCommand(body: suspend UnsafeSlashCommand<Arguments, UnsafeModalForm>.() -> Unit): UnsafeSlashCommand<Arguments, UnsafeModalForm>","description":"dev.kordex.modules.dev.unsafe.extensions.unsafeSubCommand","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.extensions/unsafe-sub-command.html","searchKeys":["unsafeSubCommand","suspend fun SlashCommand<*, *, *>.unsafeSubCommand(body: suspend UnsafeSlashCommand<Arguments, UnsafeModalForm>.() -> Unit): UnsafeSlashCommand<Arguments, UnsafeModalForm>","dev.kordex.modules.dev.unsafe.extensions.unsafeSubCommand"]},{"name":"suspend fun SlashGroup.unsafeSubCommand(body: suspend UnsafeSlashCommand<Arguments, UnsafeModalForm>.() -> Unit): UnsafeSlashCommand<Arguments, UnsafeModalForm>","description":"dev.kordex.modules.dev.unsafe.extensions.unsafeSubCommand","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.extensions/unsafe-sub-command.html","searchKeys":["unsafeSubCommand","suspend fun SlashGroup.unsafeSubCommand(body: suspend UnsafeSlashCommand<Arguments, UnsafeModalForm>.() -> Unit): UnsafeSlashCommand<Arguments, UnsafeModalForm>","dev.kordex.modules.dev.unsafe.extensions.unsafeSubCommand"]},{"name":"suspend fun respond(interaction: ModalSubmitInteraction?): MessageInteractionResponseBehavior?","description":"dev.kordex.modules.dev.unsafe.components.forms.UnsafeModalForm.respond","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.forms/-unsafe-modal-form/respond.html","searchKeys":["respond","suspend fun respond(interaction: ModalSubmitInteraction?): MessageInteractionResponseBehavior?","dev.kordex.modules.dev.unsafe.components.forms.UnsafeModalForm.respond"]},{"name":"typealias InitialEphemeralModalResponseBuilder = suspend InteractionResponseCreateBuilder.(ModalSubmitInteraction) -> Unit?","description":"dev.kordex.modules.dev.unsafe.components.forms.InitialEphemeralModalResponseBuilder","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.forms/-initial-ephemeral-modal-response-builder/index.html","searchKeys":["InitialEphemeralModalResponseBuilder","typealias InitialEphemeralModalResponseBuilder = suspend InteractionResponseCreateBuilder.(ModalSubmitInteraction) -> Unit?","dev.kordex.modules.dev.unsafe.components.forms.InitialEphemeralModalResponseBuilder"]},{"name":"typealias InitialPublicModalResponseBuilder = suspend InteractionResponseCreateBuilder.(ModalSubmitInteraction) -> Unit?","description":"dev.kordex.modules.dev.unsafe.components.forms.InitialPublicModalResponseBuilder","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.forms/-initial-public-modal-response-builder/index.html","searchKeys":["InitialPublicModalResponseBuilder","typealias InitialPublicModalResponseBuilder = suspend InteractionResponseCreateBuilder.(ModalSubmitInteraction) -> Unit?","dev.kordex.modules.dev.unsafe.components.forms.InitialPublicModalResponseBuilder"]},{"name":"val builder: InitialEphemeralButtonResponseBuilder","description":"dev.kordex.modules.dev.unsafe.components.buttons.InitialInteractionButtonResponse.EphemeralResponse.builder","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.buttons/-initial-interaction-button-response/-ephemeral-response/builder.html","searchKeys":["builder","val builder: InitialEphemeralButtonResponseBuilder","dev.kordex.modules.dev.unsafe.components.buttons.InitialInteractionButtonResponse.EphemeralResponse.builder"]},{"name":"val builder: InitialEphemeralMessageResponseBuilder","description":"dev.kordex.modules.dev.unsafe.commands.message.InitialMessageCommandResponse.EphemeralResponse.builder","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands.message/-initial-message-command-response/-ephemeral-response/builder.html","searchKeys":["builder","val builder: InitialEphemeralMessageResponseBuilder","dev.kordex.modules.dev.unsafe.commands.message.InitialMessageCommandResponse.EphemeralResponse.builder"]},{"name":"val builder: InitialEphemeralModalResponseBuilder","description":"dev.kordex.modules.dev.unsafe.components.forms.InitialUnsafeModalResponse.EphemeralResponse.builder","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.forms/-initial-unsafe-modal-response/-ephemeral-response/builder.html","searchKeys":["builder","val builder: InitialEphemeralModalResponseBuilder","dev.kordex.modules.dev.unsafe.components.forms.InitialUnsafeModalResponse.EphemeralResponse.builder"]},{"name":"val builder: InitialEphemeralSelectMenuResponseBuilder","description":"dev.kordex.modules.dev.unsafe.components.menus.InitialInteractionSelectMenuResponse.EphemeralResponse.builder","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus/-initial-interaction-select-menu-response/-ephemeral-response/builder.html","searchKeys":["builder","val builder: InitialEphemeralSelectMenuResponseBuilder","dev.kordex.modules.dev.unsafe.components.menus.InitialInteractionSelectMenuResponse.EphemeralResponse.builder"]},{"name":"val builder: InitialEphemeralSlashResponseBuilder","description":"dev.kordex.modules.dev.unsafe.commands.slash.InitialSlashCommandResponse.EphemeralResponse.builder","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands.slash/-initial-slash-command-response/-ephemeral-response/builder.html","searchKeys":["builder","val builder: InitialEphemeralSlashResponseBuilder","dev.kordex.modules.dev.unsafe.commands.slash.InitialSlashCommandResponse.EphemeralResponse.builder"]},{"name":"val builder: InitialEphemeralUserResponseBuilder","description":"dev.kordex.modules.dev.unsafe.commands.user.InitialUserCommandResponse.EphemeralResponse.builder","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands.user/-initial-user-command-response/-ephemeral-response/builder.html","searchKeys":["builder","val builder: InitialEphemeralUserResponseBuilder","dev.kordex.modules.dev.unsafe.commands.user.InitialUserCommandResponse.EphemeralResponse.builder"]},{"name":"val builder: InitialPublicButtonResponseBuilder","description":"dev.kordex.modules.dev.unsafe.components.buttons.InitialInteractionButtonResponse.PublicResponse.builder","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.buttons/-initial-interaction-button-response/-public-response/builder.html","searchKeys":["builder","val builder: InitialPublicButtonResponseBuilder","dev.kordex.modules.dev.unsafe.components.buttons.InitialInteractionButtonResponse.PublicResponse.builder"]},{"name":"val builder: InitialPublicMessageResponseBuilder","description":"dev.kordex.modules.dev.unsafe.commands.message.InitialMessageCommandResponse.PublicResponse.builder","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands.message/-initial-message-command-response/-public-response/builder.html","searchKeys":["builder","val builder: InitialPublicMessageResponseBuilder","dev.kordex.modules.dev.unsafe.commands.message.InitialMessageCommandResponse.PublicResponse.builder"]},{"name":"val builder: InitialPublicModalResponseBuilder","description":"dev.kordex.modules.dev.unsafe.components.forms.InitialUnsafeModalResponse.PublicResponse.builder","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.forms/-initial-unsafe-modal-response/-public-response/builder.html","searchKeys":["builder","val builder: InitialPublicModalResponseBuilder","dev.kordex.modules.dev.unsafe.components.forms.InitialUnsafeModalResponse.PublicResponse.builder"]},{"name":"val builder: InitialPublicSelectMenuResponseBuilder","description":"dev.kordex.modules.dev.unsafe.components.menus.InitialInteractionSelectMenuResponse.PublicResponse.builder","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus/-initial-interaction-select-menu-response/-public-response/builder.html","searchKeys":["builder","val builder: InitialPublicSelectMenuResponseBuilder","dev.kordex.modules.dev.unsafe.components.menus.InitialInteractionSelectMenuResponse.PublicResponse.builder"]},{"name":"val builder: InitialPublicSlashResponseBehavior","description":"dev.kordex.modules.dev.unsafe.commands.slash.InitialSlashCommandResponse.PublicResponse.builder","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands.slash/-initial-slash-command-response/-public-response/builder.html","searchKeys":["builder","val builder: InitialPublicSlashResponseBehavior","dev.kordex.modules.dev.unsafe.commands.slash.InitialSlashCommandResponse.PublicResponse.builder"]},{"name":"val builder: InitialPublicUserResponseBuilder","description":"dev.kordex.modules.dev.unsafe.commands.user.InitialUserCommandResponse.PublicResponse.builder","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands.user/-initial-user-command-response/-public-response/builder.html","searchKeys":["builder","val builder: InitialPublicUserResponseBuilder","dev.kordex.modules.dev.unsafe.commands.user.InitialUserCommandResponse.PublicResponse.builder"]},{"name":"val selected: List<ChannelBehavior>","description":"dev.kordex.modules.dev.unsafe.components.menus.channel.UnsafeChannelSelectMenuContext.selected","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus.channel/-unsafe-channel-select-menu-context/selected.html","searchKeys":["selected","val selected: List<ChannelBehavior>","dev.kordex.modules.dev.unsafe.components.menus.channel.UnsafeChannelSelectMenuContext.selected"]},{"name":"val selected: List<RoleBehavior>","description":"dev.kordex.modules.dev.unsafe.components.menus.role.UnsafeRoleSelectMenuContext.selected","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus.role/-unsafe-role-select-menu-context/selected.html","searchKeys":["selected","val selected: List<RoleBehavior>","dev.kordex.modules.dev.unsafe.components.menus.role.UnsafeRoleSelectMenuContext.selected"]},{"name":"val selected: List<Snowflake>","description":"dev.kordex.modules.dev.unsafe.components.menus.mentionable.UnsafeMentionableSelectMenuContext.selected","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus.mentionable/-unsafe-mentionable-select-menu-context/selected.html","searchKeys":["selected","val selected: List<Snowflake>","dev.kordex.modules.dev.unsafe.components.menus.mentionable.UnsafeMentionableSelectMenuContext.selected"]},{"name":"val selected: List<String>","description":"dev.kordex.modules.dev.unsafe.components.menus.string.UnsafeStringSelectMenuContext.selected","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus.string/-unsafe-string-select-menu-context/selected.html","searchKeys":["selected","val selected: List<String>","dev.kordex.modules.dev.unsafe.components.menus.string.UnsafeStringSelectMenuContext.selected"]},{"name":"val selected: List<UserBehavior>","description":"dev.kordex.modules.dev.unsafe.components.menus.user.UnsafeUserSelectMenuContext.selected","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus.user/-unsafe-user-select-menu-context/selected.html","searchKeys":["selected","val selected: List<UserBehavior>","dev.kordex.modules.dev.unsafe.components.menus.user.UnsafeUserSelectMenuContext.selected"]},{"name":"val selectedRoles: List<RoleBehavior>","description":"dev.kordex.modules.dev.unsafe.components.menus.mentionable.UnsafeMentionableSelectMenuContext.selectedRoles","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus.mentionable/-unsafe-mentionable-select-menu-context/selected-roles.html","searchKeys":["selectedRoles","val selectedRoles: List<RoleBehavior>","dev.kordex.modules.dev.unsafe.components.menus.mentionable.UnsafeMentionableSelectMenuContext.selectedRoles"]},{"name":"val selectedUsers: List<UserBehavior>","description":"dev.kordex.modules.dev.unsafe.components.menus.mentionable.UnsafeMentionableSelectMenuContext.selectedUsers","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus.mentionable/-unsafe-mentionable-select-menu-context/selected-users.html","searchKeys":["selectedUsers","val selectedUsers: List<UserBehavior>","dev.kordex.modules.dev.unsafe.components.menus.mentionable.UnsafeMentionableSelectMenuContext.selectedUsers"]},{"name":"var initialResponse: InitialInteractionButtonResponse","description":"dev.kordex.modules.dev.unsafe.components.buttons.UnsafeInteractionButton.initialResponse","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.buttons/-unsafe-interaction-button/initial-response.html","searchKeys":["initialResponse","var initialResponse: InitialInteractionButtonResponse","dev.kordex.modules.dev.unsafe.components.buttons.UnsafeInteractionButton.initialResponse"]},{"name":"var initialResponse: InitialInteractionSelectMenuResponse","description":"dev.kordex.modules.dev.unsafe.components.menus.UnsafeSelectMenu.initialResponse","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.components.menus/-unsafe-select-menu/initial-response.html","searchKeys":["initialResponse","var initialResponse: InitialInteractionSelectMenuResponse","dev.kordex.modules.dev.unsafe.components.menus.UnsafeSelectMenu.initialResponse"]},{"name":"var initialResponse: InitialMessageCommandResponse","description":"dev.kordex.modules.dev.unsafe.commands.message.UnsafeMessageCommand.initialResponse","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands.message/-unsafe-message-command/initial-response.html","searchKeys":["initialResponse","var initialResponse: InitialMessageCommandResponse","dev.kordex.modules.dev.unsafe.commands.message.UnsafeMessageCommand.initialResponse"]},{"name":"var initialResponse: InitialSlashCommandResponse","description":"dev.kordex.modules.dev.unsafe.commands.slash.UnsafeSlashCommand.initialResponse","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands.slash/-unsafe-slash-command/initial-response.html","searchKeys":["initialResponse","var initialResponse: InitialSlashCommandResponse","dev.kordex.modules.dev.unsafe.commands.slash.UnsafeSlashCommand.initialResponse"]},{"name":"var initialResponse: InitialUserCommandResponse","description":"dev.kordex.modules.dev.unsafe.commands.user.UnsafeUserCommand.initialResponse","location":"modules/dev/dev-unsafe/dev.kordex.modules.dev.unsafe.commands.user/-unsafe-user-command/initial-response.html","searchKeys":["initialResponse","var initialResponse: InitialUserCommandResponse","dev.kordex.modules.dev.unsafe.commands.user.UnsafeUserCommand.initialResponse"]},{"name":"abstract class PKMessageDeleteEvent(val event: MessageDeleteEvent, val channelId: Snowflake, val message: Message?, val guildId: Snowflake?, val author: Member?, val repliedToMessage: Message?, val shard: Int, val supplier: EntitySupplier = event.kord.defaultSupplier) : KordExEvent, Strategizable, ChannelEvent, MessageEvent, GuildEvent, MemberEvent","description":"dev.kordex.modules.pluralkit.events.PKMessageDeleteEvent","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-delete-event/index.html","searchKeys":["PKMessageDeleteEvent","abstract class PKMessageDeleteEvent(val event: MessageDeleteEvent, val channelId: Snowflake, val message: Message?, val guildId: Snowflake?, val author: Member?, val repliedToMessage: Message?, val shard: Int, val supplier: EntitySupplier = event.kord.defaultSupplier) : KordExEvent, Strategizable, ChannelEvent, MessageEvent, GuildEvent, MemberEvent","dev.kordex.modules.pluralkit.events.PKMessageDeleteEvent"]},{"name":"abstract class PKMessageUpdateEvent(val event: MessageUpdateEvent, val channelId: Snowflake, val messageId: Snowflake, val old: Message?, val new: DiscordPartialMessage, val author: Member?, val repliedToMessage: Message?, val shard: Int, val supplier: EntitySupplier = event.kord.defaultSupplier) : KordExEvent, Strategizable, ChannelEvent, MessageEvent, MemberEvent","description":"dev.kordex.modules.pluralkit.events.PKMessageUpdateEvent","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-update-event/index.html","searchKeys":["PKMessageUpdateEvent","abstract class PKMessageUpdateEvent(val event: MessageUpdateEvent, val channelId: Snowflake, val messageId: Snowflake, val old: Message?, val new: DiscordPartialMessage, val author: Member?, val repliedToMessage: Message?, val shard: Int, val supplier: EntitySupplier = event.kord.defaultSupplier) : KordExEvent, Strategizable, ChannelEvent, MessageEvent, MemberEvent","dev.kordex.modules.pluralkit.events.PKMessageUpdateEvent"]},{"name":"class LRUHashMap<K, V>(maxSize: Int) : LinkedHashMap<K, V> ","description":"dev.kordex.modules.pluralkit.utils.LRUHashMap","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.utils/-l-r-u-hash-map/index.html","searchKeys":["LRUHashMap","class LRUHashMap<K, V>(maxSize: Int) : LinkedHashMap<K, V> ","dev.kordex.modules.pluralkit.utils.LRUHashMap"]},{"name":"class PKConfigBuilder","description":"dev.kordex.modules.pluralkit.config.PKConfigBuilder","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.config/-p-k-config-builder/index.html","searchKeys":["PKConfigBuilder","class PKConfigBuilder","dev.kordex.modules.pluralkit.config.PKConfigBuilder"]},{"name":"class PKExtension(val config: PKConfigBuilder) : Extension","description":"dev.kordex.modules.pluralkit.PKExtension","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit/-p-k-extension/index.html","searchKeys":["PKExtension","class PKExtension(val config: PKConfigBuilder) : Extension","dev.kordex.modules.pluralkit.PKExtension"]},{"name":"class PluralKit(baseUrl: String = \"https://api.pluralkit.me\", rateLimiter: IntervalRateLimiter? = IntervalRateLimiter(2, 1.seconds), userAgent: String, cacheSize: Int)","description":"dev.kordex.modules.pluralkit.api.PluralKit","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.api/-plural-kit/index.html","searchKeys":["PluralKit","class PluralKit(baseUrl: String = \"https://api.pluralkit.me\", rateLimiter: IntervalRateLimiter? = IntervalRateLimiter(2, 1.seconds), userAgent: String, cacheSize: Int)","dev.kordex.modules.pluralkit.api.PluralKit"]},{"name":"class ProxiedMessageCreateEvent(val event: MessageCreateEvent, val message: Message, val guildId: Snowflake?, val author: Member, val repliedToMessage: Message?, val shard: Int, val pkMessage: PKMessage, val supplier: EntitySupplier = event.kord.defaultSupplier) : PKMessageCreateEvent","description":"dev.kordex.modules.pluralkit.events.ProxiedMessageCreateEvent","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-proxied-message-create-event/index.html","searchKeys":["ProxiedMessageCreateEvent","class ProxiedMessageCreateEvent(val event: MessageCreateEvent, val message: Message, val guildId: Snowflake?, val author: Member, val repliedToMessage: Message?, val shard: Int, val pkMessage: PKMessage, val supplier: EntitySupplier = event.kord.defaultSupplier) : PKMessageCreateEvent","dev.kordex.modules.pluralkit.events.ProxiedMessageCreateEvent"]},{"name":"class ProxiedMessageDeleteEvent(val event: MessageDeleteEvent, val channelId: Snowflake, val message: Message?, val guildId: Snowflake?, val author: Member, val repliedToMessage: Message?, val shard: Int, val pkMessage: PKMessage, val supplier: EntitySupplier = event.kord.defaultSupplier) : PKMessageDeleteEvent","description":"dev.kordex.modules.pluralkit.events.ProxiedMessageDeleteEvent","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-proxied-message-delete-event/index.html","searchKeys":["ProxiedMessageDeleteEvent","class ProxiedMessageDeleteEvent(val event: MessageDeleteEvent, val channelId: Snowflake, val message: Message?, val guildId: Snowflake?, val author: Member, val repliedToMessage: Message?, val shard: Int, val pkMessage: PKMessage, val supplier: EntitySupplier = event.kord.defaultSupplier) : PKMessageDeleteEvent","dev.kordex.modules.pluralkit.events.ProxiedMessageDeleteEvent"]},{"name":"class ProxiedMessageUpdateEvent(val event: MessageUpdateEvent, val channelId: Snowflake, val messageId: Snowflake, val old: Message?, val new: DiscordPartialMessage, val author: Member, val repliedToMessage: Message?, val shard: Int, val pkMessage: PKMessage, val supplier: EntitySupplier = event.kord.defaultSupplier) : PKMessageUpdateEvent","description":"dev.kordex.modules.pluralkit.events.ProxiedMessageUpdateEvent","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-proxied-message-update-event/index.html","searchKeys":["ProxiedMessageUpdateEvent","class ProxiedMessageUpdateEvent(val event: MessageUpdateEvent, val channelId: Snowflake, val messageId: Snowflake, val old: Message?, val new: DiscordPartialMessage, val author: Member, val repliedToMessage: Message?, val shard: Int, val pkMessage: PKMessage, val supplier: EntitySupplier = event.kord.defaultSupplier) : PKMessageUpdateEvent","dev.kordex.modules.pluralkit.events.ProxiedMessageUpdateEvent"]},{"name":"class UnProxiedMessageCreateEvent(val event: MessageCreateEvent, val message: Message, val guildId: Snowflake?, val author: Member?, val repliedToMessage: Message?, val shard: Int, val supplier: EntitySupplier = event.kord.defaultSupplier) : PKMessageCreateEvent","description":"dev.kordex.modules.pluralkit.events.UnProxiedMessageCreateEvent","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-un-proxied-message-create-event/index.html","searchKeys":["UnProxiedMessageCreateEvent","class UnProxiedMessageCreateEvent(val event: MessageCreateEvent, val message: Message, val guildId: Snowflake?, val author: Member?, val repliedToMessage: Message?, val shard: Int, val supplier: EntitySupplier = event.kord.defaultSupplier) : PKMessageCreateEvent","dev.kordex.modules.pluralkit.events.UnProxiedMessageCreateEvent"]},{"name":"class UnProxiedMessageDeleteEvent(val event: MessageDeleteEvent, val channelId: Snowflake, val message: Message?, val guildId: Snowflake?, val author: Member?, val repliedToMessage: Message?, val shard: Int, val supplier: EntitySupplier = event.kord.defaultSupplier) : PKMessageDeleteEvent","description":"dev.kordex.modules.pluralkit.events.UnProxiedMessageDeleteEvent","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-un-proxied-message-delete-event/index.html","searchKeys":["UnProxiedMessageDeleteEvent","class UnProxiedMessageDeleteEvent(val event: MessageDeleteEvent, val channelId: Snowflake, val message: Message?, val guildId: Snowflake?, val author: Member?, val repliedToMessage: Message?, val shard: Int, val supplier: EntitySupplier = event.kord.defaultSupplier) : PKMessageDeleteEvent","dev.kordex.modules.pluralkit.events.UnProxiedMessageDeleteEvent"]},{"name":"class UnProxiedMessageUpdateEvent(val event: MessageUpdateEvent, val channelId: Snowflake, val messageId: Snowflake, val old: Message?, val new: DiscordPartialMessage, val author: Member?, val repliedToMessage: Message?, val shard: Int, val supplier: EntitySupplier = event.kord.defaultSupplier) : PKMessageUpdateEvent","description":"dev.kordex.modules.pluralkit.events.UnProxiedMessageUpdateEvent","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-un-proxied-message-update-event/index.html","searchKeys":["UnProxiedMessageUpdateEvent","class UnProxiedMessageUpdateEvent(val event: MessageUpdateEvent, val channelId: Snowflake, val messageId: Snowflake, val old: Message?, val new: DiscordPartialMessage, val author: Member?, val repliedToMessage: Message?, val shard: Int, val supplier: EntitySupplier = event.kord.defaultSupplier) : PKMessageUpdateEvent","dev.kordex.modules.pluralkit.events.UnProxiedMessageUpdateEvent"]},{"name":"const val NEGATIVE_EMOTE: String","description":"dev.kordex.modules.pluralkit.NEGATIVE_EMOTE","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit/-n-e-g-a-t-i-v-e_-e-m-o-t-e.html","searchKeys":["NEGATIVE_EMOTE","const val NEGATIVE_EMOTE: String","dev.kordex.modules.pluralkit.NEGATIVE_EMOTE"]},{"name":"const val POSITIVE_EMOTE: String","description":"dev.kordex.modules.pluralkit.POSITIVE_EMOTE","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit/-p-o-s-i-t-i-v-e_-e-m-o-t-e.html","searchKeys":["POSITIVE_EMOTE","const val POSITIVE_EMOTE: String","dev.kordex.modules.pluralkit.POSITIVE_EMOTE"]},{"name":"constructor()","description":"dev.kordex.modules.pluralkit.PKExtension.ApiUrlArgs.ApiUrlArgs","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit/-p-k-extension/-api-url-args/-api-url-args.html","searchKeys":["ApiUrlArgs","constructor()","dev.kordex.modules.pluralkit.PKExtension.ApiUrlArgs.ApiUrlArgs"]},{"name":"constructor()","description":"dev.kordex.modules.pluralkit.PKExtension.BotArgs.BotArgs","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit/-p-k-extension/-bot-args/-bot-args.html","searchKeys":["BotArgs","constructor()","dev.kordex.modules.pluralkit.PKExtension.BotArgs.BotArgs"]},{"name":"constructor()","description":"dev.kordex.modules.pluralkit.PKExtension.ToggleSupportArgs.ToggleSupportArgs","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit/-p-k-extension/-toggle-support-args/-toggle-support-args.html","searchKeys":["ToggleSupportArgs","constructor()","dev.kordex.modules.pluralkit.PKExtension.ToggleSupportArgs.ToggleSupportArgs"]},{"name":"constructor()","description":"dev.kordex.modules.pluralkit.config.PKConfigBuilder.PKConfigBuilder","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.config/-p-k-config-builder/-p-k-config-builder.html","searchKeys":["PKConfigBuilder","constructor()","dev.kordex.modules.pluralkit.config.PKConfigBuilder.PKConfigBuilder"]},{"name":"constructor(apiUrl: String = \"https://api.pluralkit.me\", botId: Snowflake = Snowflake(466378653216014359), enabled: Boolean = true)","description":"dev.kordex.modules.pluralkit.storage.PKGuildConfig.PKGuildConfig","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.storage/-p-k-guild-config/-p-k-guild-config.html","searchKeys":["PKGuildConfig","constructor(apiUrl: String = \"https://api.pluralkit.me\", botId: Snowflake = Snowflake(466378653216014359), enabled: Boolean = true)","dev.kordex.modules.pluralkit.storage.PKGuildConfig.PKGuildConfig"]},{"name":"constructor(baseUrl: String = \"https://api.pluralkit.me\", rateLimiter: IntervalRateLimiter? = IntervalRateLimiter(2, 1.seconds), userAgent: String, cacheSize: Int)","description":"dev.kordex.modules.pluralkit.api.PluralKit.PluralKit","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.api/-plural-kit/-plural-kit.html","searchKeys":["PluralKit","constructor(baseUrl: String = \"https://api.pluralkit.me\", rateLimiter: IntervalRateLimiter? = IntervalRateLimiter(2, 1.seconds), userAgent: String, cacheSize: Int)","dev.kordex.modules.pluralkit.api.PluralKit.PluralKit"]},{"name":"constructor(config: PKConfigBuilder)","description":"dev.kordex.modules.pluralkit.PKExtension.PKExtension","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit/-p-k-extension/-p-k-extension.html","searchKeys":["PKExtension","constructor(config: PKConfigBuilder)","dev.kordex.modules.pluralkit.PKExtension.PKExtension"]},{"name":"constructor(event: MessageCreateEvent, message: Message, guildId: Snowflake?, author: Member, repliedToMessage: Message?, shard: Int, pkMessage: PKMessage, supplier: EntitySupplier = event.kord.defaultSupplier)","description":"dev.kordex.modules.pluralkit.events.ProxiedMessageCreateEvent.ProxiedMessageCreateEvent","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-proxied-message-create-event/-proxied-message-create-event.html","searchKeys":["ProxiedMessageCreateEvent","constructor(event: MessageCreateEvent, message: Message, guildId: Snowflake?, author: Member, repliedToMessage: Message?, shard: Int, pkMessage: PKMessage, supplier: EntitySupplier = event.kord.defaultSupplier)","dev.kordex.modules.pluralkit.events.ProxiedMessageCreateEvent.ProxiedMessageCreateEvent"]},{"name":"constructor(event: MessageCreateEvent, message: Message, guildId: Snowflake?, author: Member?, repliedToMessage: Message?, shard: Int, supplier: EntitySupplier = event.kord.defaultSupplier)","description":"dev.kordex.modules.pluralkit.events.UnProxiedMessageCreateEvent.UnProxiedMessageCreateEvent","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-un-proxied-message-create-event/-un-proxied-message-create-event.html","searchKeys":["UnProxiedMessageCreateEvent","constructor(event: MessageCreateEvent, message: Message, guildId: Snowflake?, author: Member?, repliedToMessage: Message?, shard: Int, supplier: EntitySupplier = event.kord.defaultSupplier)","dev.kordex.modules.pluralkit.events.UnProxiedMessageCreateEvent.UnProxiedMessageCreateEvent"]},{"name":"constructor(event: MessageDeleteEvent, channelId: Snowflake, message: Message?, guildId: Snowflake?, author: Member, repliedToMessage: Message?, shard: Int, pkMessage: PKMessage, supplier: EntitySupplier = event.kord.defaultSupplier)","description":"dev.kordex.modules.pluralkit.events.ProxiedMessageDeleteEvent.ProxiedMessageDeleteEvent","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-proxied-message-delete-event/-proxied-message-delete-event.html","searchKeys":["ProxiedMessageDeleteEvent","constructor(event: MessageDeleteEvent, channelId: Snowflake, message: Message?, guildId: Snowflake?, author: Member, repliedToMessage: Message?, shard: Int, pkMessage: PKMessage, supplier: EntitySupplier = event.kord.defaultSupplier)","dev.kordex.modules.pluralkit.events.ProxiedMessageDeleteEvent.ProxiedMessageDeleteEvent"]},{"name":"constructor(event: MessageDeleteEvent, channelId: Snowflake, message: Message?, guildId: Snowflake?, author: Member?, repliedToMessage: Message?, shard: Int, supplier: EntitySupplier = event.kord.defaultSupplier)","description":"dev.kordex.modules.pluralkit.events.PKMessageDeleteEvent.PKMessageDeleteEvent","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-delete-event/-p-k-message-delete-event.html","searchKeys":["PKMessageDeleteEvent","constructor(event: MessageDeleteEvent, channelId: Snowflake, message: Message?, guildId: Snowflake?, author: Member?, repliedToMessage: Message?, shard: Int, supplier: EntitySupplier = event.kord.defaultSupplier)","dev.kordex.modules.pluralkit.events.PKMessageDeleteEvent.PKMessageDeleteEvent"]},{"name":"constructor(event: MessageDeleteEvent, channelId: Snowflake, message: Message?, guildId: Snowflake?, author: Member?, repliedToMessage: Message?, shard: Int, supplier: EntitySupplier = event.kord.defaultSupplier)","description":"dev.kordex.modules.pluralkit.events.UnProxiedMessageDeleteEvent.UnProxiedMessageDeleteEvent","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-un-proxied-message-delete-event/-un-proxied-message-delete-event.html","searchKeys":["UnProxiedMessageDeleteEvent","constructor(event: MessageDeleteEvent, channelId: Snowflake, message: Message?, guildId: Snowflake?, author: Member?, repliedToMessage: Message?, shard: Int, supplier: EntitySupplier = event.kord.defaultSupplier)","dev.kordex.modules.pluralkit.events.UnProxiedMessageDeleteEvent.UnProxiedMessageDeleteEvent"]},{"name":"constructor(event: MessageUpdateEvent, channelId: Snowflake, messageId: Snowflake, old: Message?, new: DiscordPartialMessage, author: Member, repliedToMessage: Message?, shard: Int, pkMessage: PKMessage, supplier: EntitySupplier = event.kord.defaultSupplier)","description":"dev.kordex.modules.pluralkit.events.ProxiedMessageUpdateEvent.ProxiedMessageUpdateEvent","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-proxied-message-update-event/-proxied-message-update-event.html","searchKeys":["ProxiedMessageUpdateEvent","constructor(event: MessageUpdateEvent, channelId: Snowflake, messageId: Snowflake, old: Message?, new: DiscordPartialMessage, author: Member, repliedToMessage: Message?, shard: Int, pkMessage: PKMessage, supplier: EntitySupplier = event.kord.defaultSupplier)","dev.kordex.modules.pluralkit.events.ProxiedMessageUpdateEvent.ProxiedMessageUpdateEvent"]},{"name":"constructor(event: MessageUpdateEvent, channelId: Snowflake, messageId: Snowflake, old: Message?, new: DiscordPartialMessage, author: Member?, repliedToMessage: Message?, shard: Int, supplier: EntitySupplier = event.kord.defaultSupplier)","description":"dev.kordex.modules.pluralkit.events.PKMessageUpdateEvent.PKMessageUpdateEvent","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-update-event/-p-k-message-update-event.html","searchKeys":["PKMessageUpdateEvent","constructor(event: MessageUpdateEvent, channelId: Snowflake, messageId: Snowflake, old: Message?, new: DiscordPartialMessage, author: Member?, repliedToMessage: Message?, shard: Int, supplier: EntitySupplier = event.kord.defaultSupplier)","dev.kordex.modules.pluralkit.events.PKMessageUpdateEvent.PKMessageUpdateEvent"]},{"name":"constructor(event: MessageUpdateEvent, channelId: Snowflake, messageId: Snowflake, old: Message?, new: DiscordPartialMessage, author: Member?, repliedToMessage: Message?, shard: Int, supplier: EntitySupplier = event.kord.defaultSupplier)","description":"dev.kordex.modules.pluralkit.events.UnProxiedMessageUpdateEvent.UnProxiedMessageUpdateEvent","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-un-proxied-message-update-event/-un-proxied-message-update-event.html","searchKeys":["UnProxiedMessageUpdateEvent","constructor(event: MessageUpdateEvent, channelId: Snowflake, messageId: Snowflake, old: Message?, new: DiscordPartialMessage, author: Member?, repliedToMessage: Message?, shard: Int, supplier: EntitySupplier = event.kord.defaultSupplier)","dev.kordex.modules.pluralkit.events.UnProxiedMessageUpdateEvent.UnProxiedMessageUpdateEvent"]},{"name":"constructor(id: String, uuid: String, name: String, displayName: String?, color: String?, birthday: String?, pronouns: String?, avatarUrl: String?, banner: String?, description: String?, created: Instant?, proxyTags: List<PKProxyTag>, keepProxy: Boolean, privacy: PKMemberPrivacy?)","description":"dev.kordex.modules.pluralkit.api.PKMember.PKMember","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.api/-p-k-member/-p-k-member.html","searchKeys":["PKMember","constructor(id: String, uuid: String, name: String, displayName: String?, color: String?, birthday: String?, pronouns: String?, avatarUrl: String?, banner: String?, description: String?, created: Instant?, proxyTags: List<PKProxyTag>, keepProxy: Boolean, privacy: PKMemberPrivacy?)","dev.kordex.modules.pluralkit.api.PKMember.PKMember"]},{"name":"constructor(id: String, uuid: String, name: String?, description: String?, tag: String?, avatarUrl: String?, banner: String?, color: String?, created: Instant, timezone: String? = null, privacy: PKSystemPrivacy?)","description":"dev.kordex.modules.pluralkit.api.PKSystem.PKSystem","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.api/-p-k-system/-p-k-system.html","searchKeys":["PKSystem","constructor(id: String, uuid: String, name: String?, description: String?, tag: String?, avatarUrl: String?, banner: String?, color: String?, created: Instant, timezone: String? = null, privacy: PKSystemPrivacy?)","dev.kordex.modules.pluralkit.api.PKSystem.PKSystem"]},{"name":"constructor(maxSize: Int)","description":"dev.kordex.modules.pluralkit.utils.LRUHashMap.LRUHashMap","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.utils/-l-r-u-hash-map/-l-r-u-hash-map.html","searchKeys":["LRUHashMap","constructor(maxSize: Int)","dev.kordex.modules.pluralkit.utils.LRUHashMap.LRUHashMap"]},{"name":"constructor(prefix: String?, suffix: String?)","description":"dev.kordex.modules.pluralkit.api.PKProxyTag.PKProxyTag","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.api/-p-k-proxy-tag/-p-k-proxy-tag.html","searchKeys":["PKProxyTag","constructor(prefix: String?, suffix: String?)","dev.kordex.modules.pluralkit.api.PKProxyTag.PKProxyTag"]},{"name":"constructor(timestamp: Instant, id: Snowflake, original: Snowflake, sender: Snowflake, channel: Snowflake, system: PKSystem? = null, member: PKMember? = null)","description":"dev.kordex.modules.pluralkit.api.PKMessage.PKMessage","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.api/-p-k-message/-p-k-message.html","searchKeys":["PKMessage","constructor(timestamp: Instant, id: Snowflake, original: Snowflake, sender: Snowflake, channel: Snowflake, system: PKSystem? = null, member: PKMember? = null)","dev.kordex.modules.pluralkit.api.PKMessage.PKMessage"]},{"name":"constructor(visibility: Boolean, namePrivacy: Boolean, descriptionPrivacy: Boolean, birthdayPrivacy: Boolean, pronounPrivacy: Boolean, avatarPrivacy: Boolean, metadataPrivacy: Boolean)","description":"dev.kordex.modules.pluralkit.api.PKMemberPrivacy.PKMemberPrivacy","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.api/-p-k-member-privacy/-p-k-member-privacy.html","searchKeys":["PKMemberPrivacy","constructor(visibility: Boolean, namePrivacy: Boolean, descriptionPrivacy: Boolean, birthdayPrivacy: Boolean, pronounPrivacy: Boolean, avatarPrivacy: Boolean, metadataPrivacy: Boolean)","dev.kordex.modules.pluralkit.api.PKMemberPrivacy.PKMemberPrivacy"]},{"name":"constructor(visibility: Boolean, namePrivacy: Boolean, descriptionPrivacy: Boolean, birthdayPrivacy: Boolean, pronounPrivacy: Boolean, avatarPrivacy: Boolean, metadataPrivacy: Boolean)","description":"dev.kordex.modules.pluralkit.api.PKSystemPrivacy.PKSystemPrivacy","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.api/-p-k-system-privacy/-p-k-system-privacy.html","searchKeys":["PKSystemPrivacy","constructor(visibility: Boolean, namePrivacy: Boolean, descriptionPrivacy: Boolean, birthdayPrivacy: Boolean, pronounPrivacy: Boolean, avatarPrivacy: Boolean, metadataPrivacy: Boolean)","dev.kordex.modules.pluralkit.api.PKSystemPrivacy.PKSystemPrivacy"]},{"name":"data class PKGuildConfig(var apiUrl: String = \"https://api.pluralkit.me\", var botId: Snowflake = Snowflake(466378653216014359), var enabled: Boolean = true) : Data","description":"dev.kordex.modules.pluralkit.storage.PKGuildConfig","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.storage/-p-k-guild-config/index.html","searchKeys":["PKGuildConfig","data class PKGuildConfig(var apiUrl: String = \"https://api.pluralkit.me\", var botId: Snowflake = Snowflake(466378653216014359), var enabled: Boolean = true) : Data","dev.kordex.modules.pluralkit.storage.PKGuildConfig"]},{"name":"data class PKMember(val id: String, val uuid: String, val name: String, val displayName: String?, val color: String?, val birthday: String?, val pronouns: String?, val avatarUrl: String?, val banner: String?, val description: String?, val created: Instant?, val proxyTags: List<PKProxyTag>, val keepProxy: Boolean, val privacy: PKMemberPrivacy?)","description":"dev.kordex.modules.pluralkit.api.PKMember","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.api/-p-k-member/index.html","searchKeys":["PKMember","data class PKMember(val id: String, val uuid: String, val name: String, val displayName: String?, val color: String?, val birthday: String?, val pronouns: String?, val avatarUrl: String?, val banner: String?, val description: String?, val created: Instant?, val proxyTags: List<PKProxyTag>, val keepProxy: Boolean, val privacy: PKMemberPrivacy?)","dev.kordex.modules.pluralkit.api.PKMember"]},{"name":"data class PKMemberPrivacy(val visibility: Boolean, val namePrivacy: Boolean, val descriptionPrivacy: Boolean, val birthdayPrivacy: Boolean, val pronounPrivacy: Boolean, val avatarPrivacy: Boolean, val metadataPrivacy: Boolean)","description":"dev.kordex.modules.pluralkit.api.PKMemberPrivacy","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.api/-p-k-member-privacy/index.html","searchKeys":["PKMemberPrivacy","data class PKMemberPrivacy(val visibility: Boolean, val namePrivacy: Boolean, val descriptionPrivacy: Boolean, val birthdayPrivacy: Boolean, val pronounPrivacy: Boolean, val avatarPrivacy: Boolean, val metadataPrivacy: Boolean)","dev.kordex.modules.pluralkit.api.PKMemberPrivacy"]},{"name":"data class PKMessage(val timestamp: Instant, val id: Snowflake, val original: Snowflake, val sender: Snowflake, val channel: Snowflake, val system: PKSystem? = null, val member: PKMember? = null)","description":"dev.kordex.modules.pluralkit.api.PKMessage","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.api/-p-k-message/index.html","searchKeys":["PKMessage","data class PKMessage(val timestamp: Instant, val id: Snowflake, val original: Snowflake, val sender: Snowflake, val channel: Snowflake, val system: PKSystem? = null, val member: PKMember? = null)","dev.kordex.modules.pluralkit.api.PKMessage"]},{"name":"data class PKProxyTag(val prefix: String?, val suffix: String?)","description":"dev.kordex.modules.pluralkit.api.PKProxyTag","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.api/-p-k-proxy-tag/index.html","searchKeys":["PKProxyTag","data class PKProxyTag(val prefix: String?, val suffix: String?)","dev.kordex.modules.pluralkit.api.PKProxyTag"]},{"name":"data class PKSystem(val id: String, val uuid: String, val name: String?, val description: String?, val tag: String?, val avatarUrl: String?, val banner: String?, val color: String?, val created: Instant, val timezone: String? = null, val privacy: PKSystemPrivacy?)","description":"dev.kordex.modules.pluralkit.api.PKSystem","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.api/-p-k-system/index.html","searchKeys":["PKSystem","data class PKSystem(val id: String, val uuid: String, val name: String?, val description: String?, val tag: String?, val avatarUrl: String?, val banner: String?, val color: String?, val created: Instant, val timezone: String? = null, val privacy: PKSystemPrivacy?)","dev.kordex.modules.pluralkit.api.PKSystem"]},{"name":"data class PKSystemPrivacy(val visibility: Boolean, val namePrivacy: Boolean, val descriptionPrivacy: Boolean, val birthdayPrivacy: Boolean, val pronounPrivacy: Boolean, val avatarPrivacy: Boolean, val metadataPrivacy: Boolean)","description":"dev.kordex.modules.pluralkit.api.PKSystemPrivacy","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.api/-p-k-system-privacy/index.html","searchKeys":["PKSystemPrivacy","data class PKSystemPrivacy(val visibility: Boolean, val namePrivacy: Boolean, val descriptionPrivacy: Boolean, val birthdayPrivacy: Boolean, val pronounPrivacy: Boolean, val avatarPrivacy: Boolean, val metadataPrivacy: Boolean)","dev.kordex.modules.pluralkit.api.PKSystemPrivacy"]},{"name":"fun ExtensionsBuilder.extPluralKit()","description":"dev.kordex.modules.pluralkit.extPluralKit","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit/ext-plural-kit.html","searchKeys":["extPluralKit","fun ExtensionsBuilder.extPluralKit()","dev.kordex.modules.pluralkit.extPluralKit"]},{"name":"fun ExtensionsBuilder.extPluralKit(body: PKConfigBuilder.() -> Unit)","description":"dev.kordex.modules.pluralkit.extPluralKit","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit/ext-plural-kit.html","searchKeys":["extPluralKit","fun ExtensionsBuilder.extPluralKit(body: PKConfigBuilder.() -> Unit)","dev.kordex.modules.pluralkit.extPluralKit"]},{"name":"fun defaultDomainLimit(domain: String)","description":"dev.kordex.modules.pluralkit.config.PKConfigBuilder.defaultDomainLimit","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.config/-p-k-config-builder/default-domain-limit.html","searchKeys":["defaultDomainLimit","fun defaultDomainLimit(domain: String)","dev.kordex.modules.pluralkit.config.PKConfigBuilder.defaultDomainLimit"]},{"name":"fun defaultLimit(limit: Int, interval: Duration)","description":"dev.kordex.modules.pluralkit.config.PKConfigBuilder.defaultLimit","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.config/-p-k-config-builder/default-limit.html","searchKeys":["defaultLimit","fun defaultLimit(limit: Int, interval: Duration)","dev.kordex.modules.pluralkit.config.PKConfigBuilder.defaultLimit"]},{"name":"fun domainLimit(domain: String, limit: Int, interval: Duration)","description":"dev.kordex.modules.pluralkit.config.PKConfigBuilder.domainLimit","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.config/-p-k-config-builder/domain-limit.html","searchKeys":["domainLimit","fun domainLimit(domain: String, limit: Int, interval: Duration)","dev.kordex.modules.pluralkit.config.PKConfigBuilder.domainLimit"]},{"name":"fun unlimitByDefault()","description":"dev.kordex.modules.pluralkit.config.PKConfigBuilder.unlimitByDefault","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.config/-p-k-config-builder/unlimit-by-default.html","searchKeys":["unlimitByDefault","fun unlimitByDefault()","dev.kordex.modules.pluralkit.config.PKConfigBuilder.unlimitByDefault"]},{"name":"fun unlimitDomain(domain: String)","description":"dev.kordex.modules.pluralkit.config.PKConfigBuilder.unlimitDomain","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.config/-p-k-config-builder/unlimit-domain.html","searchKeys":["unlimitDomain","fun unlimitDomain(domain: String)","dev.kordex.modules.pluralkit.config.PKConfigBuilder.unlimitDomain"]},{"name":"inner class ApiUrlArgs : Arguments","description":"dev.kordex.modules.pluralkit.PKExtension.ApiUrlArgs","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit/-p-k-extension/-api-url-args/index.html","searchKeys":["ApiUrlArgs","inner class ApiUrlArgs : Arguments","dev.kordex.modules.pluralkit.PKExtension.ApiUrlArgs"]},{"name":"inner class BotArgs : Arguments","description":"dev.kordex.modules.pluralkit.PKExtension.BotArgs","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit/-p-k-extension/-bot-args/index.html","searchKeys":["BotArgs","inner class BotArgs : Arguments","dev.kordex.modules.pluralkit.PKExtension.BotArgs"]},{"name":"inner class ToggleSupportArgs : Arguments","description":"dev.kordex.modules.pluralkit.PKExtension.ToggleSupportArgs","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit/-p-k-extension/-toggle-support-args/index.html","searchKeys":["ToggleSupportArgs","inner class ToggleSupportArgs : Arguments","dev.kordex.modules.pluralkit.PKExtension.ToggleSupportArgs"]},{"name":"open override fun toString(): String","description":"dev.kordex.modules.pluralkit.events.ProxiedMessageCreateEvent.toString","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-proxied-message-create-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kordex.modules.pluralkit.events.ProxiedMessageCreateEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kordex.modules.pluralkit.events.ProxiedMessageDeleteEvent.toString","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-proxied-message-delete-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kordex.modules.pluralkit.events.ProxiedMessageDeleteEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kordex.modules.pluralkit.events.ProxiedMessageUpdateEvent.toString","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-proxied-message-update-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kordex.modules.pluralkit.events.ProxiedMessageUpdateEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kordex.modules.pluralkit.events.UnProxiedMessageCreateEvent.toString","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-un-proxied-message-create-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kordex.modules.pluralkit.events.UnProxiedMessageCreateEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kordex.modules.pluralkit.events.UnProxiedMessageDeleteEvent.toString","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-un-proxied-message-delete-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kordex.modules.pluralkit.events.UnProxiedMessageDeleteEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kordex.modules.pluralkit.events.UnProxiedMessageUpdateEvent.toString","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-un-proxied-message-update-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kordex.modules.pluralkit.events.UnProxiedMessageUpdateEvent.toString"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): PKMessageCreateEvent","description":"dev.kordex.modules.pluralkit.events.ProxiedMessageCreateEvent.withStrategy","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-proxied-message-create-event/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): PKMessageCreateEvent","dev.kordex.modules.pluralkit.events.ProxiedMessageCreateEvent.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): PKMessageCreateEvent","description":"dev.kordex.modules.pluralkit.events.UnProxiedMessageCreateEvent.withStrategy","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-un-proxied-message-create-event/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): PKMessageCreateEvent","dev.kordex.modules.pluralkit.events.UnProxiedMessageCreateEvent.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): ProxiedMessageDeleteEvent","description":"dev.kordex.modules.pluralkit.events.ProxiedMessageDeleteEvent.withStrategy","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-proxied-message-delete-event/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): ProxiedMessageDeleteEvent","dev.kordex.modules.pluralkit.events.ProxiedMessageDeleteEvent.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): ProxiedMessageUpdateEvent","description":"dev.kordex.modules.pluralkit.events.ProxiedMessageUpdateEvent.withStrategy","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-proxied-message-update-event/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): ProxiedMessageUpdateEvent","dev.kordex.modules.pluralkit.events.ProxiedMessageUpdateEvent.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): UnProxiedMessageDeleteEvent","description":"dev.kordex.modules.pluralkit.events.UnProxiedMessageDeleteEvent.withStrategy","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-un-proxied-message-delete-event/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): UnProxiedMessageDeleteEvent","dev.kordex.modules.pluralkit.events.UnProxiedMessageDeleteEvent.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): UnProxiedMessageUpdateEvent","description":"dev.kordex.modules.pluralkit.events.UnProxiedMessageUpdateEvent.withStrategy","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-un-proxied-message-update-event/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): UnProxiedMessageUpdateEvent","dev.kordex.modules.pluralkit.events.UnProxiedMessageUpdateEvent.withStrategy"]},{"name":"open override val author: Member","description":"dev.kordex.modules.pluralkit.events.ProxiedMessageCreateEvent.author","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-proxied-message-create-event/author.html","searchKeys":["author","open override val author: Member","dev.kordex.modules.pluralkit.events.ProxiedMessageCreateEvent.author"]},{"name":"open override val author: Member","description":"dev.kordex.modules.pluralkit.events.ProxiedMessageDeleteEvent.author","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-proxied-message-delete-event/author.html","searchKeys":["author","open override val author: Member","dev.kordex.modules.pluralkit.events.ProxiedMessageDeleteEvent.author"]},{"name":"open override val author: Member","description":"dev.kordex.modules.pluralkit.events.ProxiedMessageUpdateEvent.author","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-proxied-message-update-event/author.html","searchKeys":["author","open override val author: Member","dev.kordex.modules.pluralkit.events.ProxiedMessageUpdateEvent.author"]},{"name":"open override val channel: ChannelBehavior","description":"dev.kordex.modules.pluralkit.events.PKMessageCreateEvent.channel","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-create-event/channel.html","searchKeys":["channel","open override val channel: ChannelBehavior","dev.kordex.modules.pluralkit.events.PKMessageCreateEvent.channel"]},{"name":"open override val channel: MessageChannelBehavior","description":"dev.kordex.modules.pluralkit.events.PKMessageDeleteEvent.channel","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-delete-event/channel.html","searchKeys":["channel","open override val channel: MessageChannelBehavior","dev.kordex.modules.pluralkit.events.PKMessageDeleteEvent.channel"]},{"name":"open override val channel: MessageChannelBehavior","description":"dev.kordex.modules.pluralkit.events.PKMessageUpdateEvent.channel","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-update-event/channel.html","searchKeys":["channel","open override val channel: MessageChannelBehavior","dev.kordex.modules.pluralkit.events.PKMessageUpdateEvent.channel"]},{"name":"open override val guild: GuildBehavior?","description":"dev.kordex.modules.pluralkit.events.PKMessageCreateEvent.guild","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-create-event/guild.html","searchKeys":["guild","open override val guild: GuildBehavior?","dev.kordex.modules.pluralkit.events.PKMessageCreateEvent.guild"]},{"name":"open override val guild: GuildBehavior?","description":"dev.kordex.modules.pluralkit.events.PKMessageDeleteEvent.guild","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-delete-event/guild.html","searchKeys":["guild","open override val guild: GuildBehavior?","dev.kordex.modules.pluralkit.events.PKMessageDeleteEvent.guild"]},{"name":"open override val guild: GuildBehavior?","description":"dev.kordex.modules.pluralkit.events.PKMessageUpdateEvent.guild","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-update-event/guild.html","searchKeys":["guild","open override val guild: GuildBehavior?","dev.kordex.modules.pluralkit.events.PKMessageUpdateEvent.guild"]},{"name":"open override val member: MemberBehavior?","description":"dev.kordex.modules.pluralkit.events.PKMessageCreateEvent.member","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-create-event/member.html","searchKeys":["member","open override val member: MemberBehavior?","dev.kordex.modules.pluralkit.events.PKMessageCreateEvent.member"]},{"name":"open override val member: MemberBehavior?","description":"dev.kordex.modules.pluralkit.events.PKMessageDeleteEvent.member","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-delete-event/member.html","searchKeys":["member","open override val member: MemberBehavior?","dev.kordex.modules.pluralkit.events.PKMessageDeleteEvent.member"]},{"name":"open override val member: MemberBehavior?","description":"dev.kordex.modules.pluralkit.events.PKMessageUpdateEvent.member","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-update-event/member.html","searchKeys":["member","open override val member: MemberBehavior?","dev.kordex.modules.pluralkit.events.PKMessageUpdateEvent.member"]},{"name":"open override val message: Message","description":"dev.kordex.modules.pluralkit.events.PKMessageCreateEvent.message","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-create-event/message.html","searchKeys":["message","open override val message: Message","dev.kordex.modules.pluralkit.events.PKMessageCreateEvent.message"]},{"name":"open override val message: Message?","description":"dev.kordex.modules.pluralkit.events.PKMessageDeleteEvent.message","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-delete-event/message.html","searchKeys":["message","open override val message: Message?","dev.kordex.modules.pluralkit.events.PKMessageDeleteEvent.message"]},{"name":"open override val message: MessageBehavior","description":"dev.kordex.modules.pluralkit.events.PKMessageUpdateEvent.message","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-update-event/message.html","searchKeys":["message","open override val message: MessageBehavior","dev.kordex.modules.pluralkit.events.PKMessageUpdateEvent.message"]},{"name":"open override val name: String","description":"dev.kordex.modules.pluralkit.PKExtension.name","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit/-p-k-extension/name.html","searchKeys":["name","open override val name: String","dev.kordex.modules.pluralkit.PKExtension.name"]},{"name":"open override val shard: Int","description":"dev.kordex.modules.pluralkit.events.PKMessageCreateEvent.shard","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-create-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kordex.modules.pluralkit.events.PKMessageCreateEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kordex.modules.pluralkit.events.PKMessageDeleteEvent.shard","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-delete-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kordex.modules.pluralkit.events.PKMessageDeleteEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kordex.modules.pluralkit.events.PKMessageUpdateEvent.shard","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-update-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kordex.modules.pluralkit.events.PKMessageUpdateEvent.shard"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kordex.modules.pluralkit.events.PKMessageCreateEvent.supplier","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-create-event/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kordex.modules.pluralkit.events.PKMessageCreateEvent.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kordex.modules.pluralkit.events.PKMessageDeleteEvent.supplier","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-delete-event/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kordex.modules.pluralkit.events.PKMessageDeleteEvent.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kordex.modules.pluralkit.events.PKMessageUpdateEvent.supplier","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-update-event/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kordex.modules.pluralkit.events.PKMessageUpdateEvent.supplier"]},{"name":"open override val user: UserBehavior?","description":"dev.kordex.modules.pluralkit.events.PKMessageCreateEvent.user","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-create-event/user.html","searchKeys":["user","open override val user: UserBehavior?","dev.kordex.modules.pluralkit.events.PKMessageCreateEvent.user"]},{"name":"open override val user: UserBehavior?","description":"dev.kordex.modules.pluralkit.events.PKMessageDeleteEvent.user","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-delete-event/user.html","searchKeys":["user","open override val user: UserBehavior?","dev.kordex.modules.pluralkit.events.PKMessageDeleteEvent.user"]},{"name":"open override val user: UserBehavior?","description":"dev.kordex.modules.pluralkit.events.PKMessageUpdateEvent.user","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-update-event/user.html","searchKeys":["user","open override val user: UserBehavior?","dev.kordex.modules.pluralkit.events.PKMessageUpdateEvent.user"]},{"name":"open suspend override fun getChannel(): Channel","description":"dev.kordex.modules.pluralkit.events.PKMessageCreateEvent.getChannel","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-create-event/get-channel.html","searchKeys":["getChannel","open suspend override fun getChannel(): Channel","dev.kordex.modules.pluralkit.events.PKMessageCreateEvent.getChannel"]},{"name":"open suspend override fun getChannel(): Channel","description":"dev.kordex.modules.pluralkit.events.PKMessageDeleteEvent.getChannel","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-delete-event/get-channel.html","searchKeys":["getChannel","open suspend override fun getChannel(): Channel","dev.kordex.modules.pluralkit.events.PKMessageDeleteEvent.getChannel"]},{"name":"open suspend override fun getChannel(): Channel","description":"dev.kordex.modules.pluralkit.events.PKMessageUpdateEvent.getChannel","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-update-event/get-channel.html","searchKeys":["getChannel","open suspend override fun getChannel(): Channel","dev.kordex.modules.pluralkit.events.PKMessageUpdateEvent.getChannel"]},{"name":"open suspend override fun getChannelOrNull(): Channel","description":"dev.kordex.modules.pluralkit.events.PKMessageDeleteEvent.getChannelOrNull","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-delete-event/get-channel-or-null.html","searchKeys":["getChannelOrNull","open suspend override fun getChannelOrNull(): Channel","dev.kordex.modules.pluralkit.events.PKMessageDeleteEvent.getChannelOrNull"]},{"name":"open suspend override fun getChannelOrNull(): Channel","description":"dev.kordex.modules.pluralkit.events.PKMessageUpdateEvent.getChannelOrNull","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-update-event/get-channel-or-null.html","searchKeys":["getChannelOrNull","open suspend override fun getChannelOrNull(): Channel","dev.kordex.modules.pluralkit.events.PKMessageUpdateEvent.getChannelOrNull"]},{"name":"open suspend override fun getChannelOrNull(): Channel?","description":"dev.kordex.modules.pluralkit.events.PKMessageCreateEvent.getChannelOrNull","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-create-event/get-channel-or-null.html","searchKeys":["getChannelOrNull","open suspend override fun getChannelOrNull(): Channel?","dev.kordex.modules.pluralkit.events.PKMessageCreateEvent.getChannelOrNull"]},{"name":"open suspend override fun getGuild(): Guild","description":"dev.kordex.modules.pluralkit.events.PKMessageCreateEvent.getGuild","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-create-event/get-guild.html","searchKeys":["getGuild","open suspend override fun getGuild(): Guild","dev.kordex.modules.pluralkit.events.PKMessageCreateEvent.getGuild"]},{"name":"open suspend override fun getGuild(): Guild","description":"dev.kordex.modules.pluralkit.events.PKMessageDeleteEvent.getGuild","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-delete-event/get-guild.html","searchKeys":["getGuild","open suspend override fun getGuild(): Guild","dev.kordex.modules.pluralkit.events.PKMessageDeleteEvent.getGuild"]},{"name":"open suspend override fun getGuild(): Guild","description":"dev.kordex.modules.pluralkit.events.PKMessageUpdateEvent.getGuild","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-update-event/get-guild.html","searchKeys":["getGuild","open suspend override fun getGuild(): Guild","dev.kordex.modules.pluralkit.events.PKMessageUpdateEvent.getGuild"]},{"name":"open suspend override fun getGuildOrNull(): Guild?","description":"dev.kordex.modules.pluralkit.events.PKMessageCreateEvent.getGuildOrNull","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-create-event/get-guild-or-null.html","searchKeys":["getGuildOrNull","open suspend override fun getGuildOrNull(): Guild?","dev.kordex.modules.pluralkit.events.PKMessageCreateEvent.getGuildOrNull"]},{"name":"open suspend override fun getGuildOrNull(): Guild?","description":"dev.kordex.modules.pluralkit.events.PKMessageDeleteEvent.getGuildOrNull","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-delete-event/get-guild-or-null.html","searchKeys":["getGuildOrNull","open suspend override fun getGuildOrNull(): Guild?","dev.kordex.modules.pluralkit.events.PKMessageDeleteEvent.getGuildOrNull"]},{"name":"open suspend override fun getGuildOrNull(): Guild?","description":"dev.kordex.modules.pluralkit.events.PKMessageUpdateEvent.getGuildOrNull","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-update-event/get-guild-or-null.html","searchKeys":["getGuildOrNull","open suspend override fun getGuildOrNull(): Guild?","dev.kordex.modules.pluralkit.events.PKMessageUpdateEvent.getGuildOrNull"]},{"name":"open suspend override fun getMember(): Member","description":"dev.kordex.modules.pluralkit.events.PKMessageCreateEvent.getMember","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-create-event/get-member.html","searchKeys":["getMember","open suspend override fun getMember(): Member","dev.kordex.modules.pluralkit.events.PKMessageCreateEvent.getMember"]},{"name":"open suspend override fun getMember(): Member","description":"dev.kordex.modules.pluralkit.events.PKMessageDeleteEvent.getMember","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-delete-event/get-member.html","searchKeys":["getMember","open suspend override fun getMember(): Member","dev.kordex.modules.pluralkit.events.PKMessageDeleteEvent.getMember"]},{"name":"open suspend override fun getMember(): Member","description":"dev.kordex.modules.pluralkit.events.PKMessageUpdateEvent.getMember","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-update-event/get-member.html","searchKeys":["getMember","open suspend override fun getMember(): Member","dev.kordex.modules.pluralkit.events.PKMessageUpdateEvent.getMember"]},{"name":"open suspend override fun getMemberOrNull(): Member?","description":"dev.kordex.modules.pluralkit.events.PKMessageCreateEvent.getMemberOrNull","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-create-event/get-member-or-null.html","searchKeys":["getMemberOrNull","open suspend override fun getMemberOrNull(): Member?","dev.kordex.modules.pluralkit.events.PKMessageCreateEvent.getMemberOrNull"]},{"name":"open suspend override fun getMemberOrNull(): Member?","description":"dev.kordex.modules.pluralkit.events.PKMessageDeleteEvent.getMemberOrNull","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-delete-event/get-member-or-null.html","searchKeys":["getMemberOrNull","open suspend override fun getMemberOrNull(): Member?","dev.kordex.modules.pluralkit.events.PKMessageDeleteEvent.getMemberOrNull"]},{"name":"open suspend override fun getMemberOrNull(): Member?","description":"dev.kordex.modules.pluralkit.events.PKMessageUpdateEvent.getMemberOrNull","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-update-event/get-member-or-null.html","searchKeys":["getMemberOrNull","open suspend override fun getMemberOrNull(): Member?","dev.kordex.modules.pluralkit.events.PKMessageUpdateEvent.getMemberOrNull"]},{"name":"open suspend override fun getMessage(): Message","description":"dev.kordex.modules.pluralkit.events.PKMessageCreateEvent.getMessage","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-create-event/get-message.html","searchKeys":["getMessage","open suspend override fun getMessage(): Message","dev.kordex.modules.pluralkit.events.PKMessageCreateEvent.getMessage"]},{"name":"open suspend override fun getMessage(): Message","description":"dev.kordex.modules.pluralkit.events.PKMessageDeleteEvent.getMessage","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-delete-event/get-message.html","searchKeys":["getMessage","open suspend override fun getMessage(): Message","dev.kordex.modules.pluralkit.events.PKMessageDeleteEvent.getMessage"]},{"name":"open suspend override fun getMessage(): Message","description":"dev.kordex.modules.pluralkit.events.PKMessageUpdateEvent.getMessage","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-update-event/get-message.html","searchKeys":["getMessage","open suspend override fun getMessage(): Message","dev.kordex.modules.pluralkit.events.PKMessageUpdateEvent.getMessage"]},{"name":"open suspend override fun getMessageOrNull(): Message?","description":"dev.kordex.modules.pluralkit.events.PKMessageCreateEvent.getMessageOrNull","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-create-event/get-message-or-null.html","searchKeys":["getMessageOrNull","open suspend override fun getMessageOrNull(): Message?","dev.kordex.modules.pluralkit.events.PKMessageCreateEvent.getMessageOrNull"]},{"name":"open suspend override fun getMessageOrNull(): Message?","description":"dev.kordex.modules.pluralkit.events.PKMessageDeleteEvent.getMessageOrNull","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-delete-event/get-message-or-null.html","searchKeys":["getMessageOrNull","open suspend override fun getMessageOrNull(): Message?","dev.kordex.modules.pluralkit.events.PKMessageDeleteEvent.getMessageOrNull"]},{"name":"open suspend override fun getMessageOrNull(): Message?","description":"dev.kordex.modules.pluralkit.events.PKMessageUpdateEvent.getMessageOrNull","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-update-event/get-message-or-null.html","searchKeys":["getMessageOrNull","open suspend override fun getMessageOrNull(): Message?","dev.kordex.modules.pluralkit.events.PKMessageUpdateEvent.getMessageOrNull"]},{"name":"open suspend override fun getUser(): User","description":"dev.kordex.modules.pluralkit.events.PKMessageCreateEvent.getUser","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-create-event/get-user.html","searchKeys":["getUser","open suspend override fun getUser(): User","dev.kordex.modules.pluralkit.events.PKMessageCreateEvent.getUser"]},{"name":"open suspend override fun getUser(): User","description":"dev.kordex.modules.pluralkit.events.PKMessageDeleteEvent.getUser","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-delete-event/get-user.html","searchKeys":["getUser","open suspend override fun getUser(): User","dev.kordex.modules.pluralkit.events.PKMessageDeleteEvent.getUser"]},{"name":"open suspend override fun getUser(): User","description":"dev.kordex.modules.pluralkit.events.PKMessageUpdateEvent.getUser","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-update-event/get-user.html","searchKeys":["getUser","open suspend override fun getUser(): User","dev.kordex.modules.pluralkit.events.PKMessageUpdateEvent.getUser"]},{"name":"open suspend override fun getUserOrNull(): User?","description":"dev.kordex.modules.pluralkit.events.PKMessageCreateEvent.getUserOrNull","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-create-event/get-user-or-null.html","searchKeys":["getUserOrNull","open suspend override fun getUserOrNull(): User?","dev.kordex.modules.pluralkit.events.PKMessageCreateEvent.getUserOrNull"]},{"name":"open suspend override fun getUserOrNull(): User?","description":"dev.kordex.modules.pluralkit.events.PKMessageDeleteEvent.getUserOrNull","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-delete-event/get-user-or-null.html","searchKeys":["getUserOrNull","open suspend override fun getUserOrNull(): User?","dev.kordex.modules.pluralkit.events.PKMessageDeleteEvent.getUserOrNull"]},{"name":"open suspend override fun getUserOrNull(): User?","description":"dev.kordex.modules.pluralkit.events.PKMessageUpdateEvent.getUserOrNull","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-update-event/get-user-or-null.html","searchKeys":["getUserOrNull","open suspend override fun getUserOrNull(): User?","dev.kordex.modules.pluralkit.events.PKMessageUpdateEvent.getUserOrNull"]},{"name":"open suspend override fun setup()","description":"dev.kordex.modules.pluralkit.PKExtension.setup","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit/-p-k-extension/setup.html","searchKeys":["setup","open suspend override fun setup()","dev.kordex.modules.pluralkit.PKExtension.setup"]},{"name":"open suspend override fun unload()","description":"dev.kordex.modules.pluralkit.PKExtension.unload","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit/-p-k-extension/unload.html","searchKeys":["unload","open suspend override fun unload()","dev.kordex.modules.pluralkit.PKExtension.unload"]},{"name":"open val author: Member?","description":"dev.kordex.modules.pluralkit.events.PKMessageCreateEvent.author","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-create-event/author.html","searchKeys":["author","open val author: Member?","dev.kordex.modules.pluralkit.events.PKMessageCreateEvent.author"]},{"name":"open val author: Member?","description":"dev.kordex.modules.pluralkit.events.PKMessageDeleteEvent.author","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-delete-event/author.html","searchKeys":["author","open val author: Member?","dev.kordex.modules.pluralkit.events.PKMessageDeleteEvent.author"]},{"name":"open val author: Member?","description":"dev.kordex.modules.pluralkit.events.PKMessageUpdateEvent.author","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-update-event/author.html","searchKeys":["author","open val author: Member?","dev.kordex.modules.pluralkit.events.PKMessageUpdateEvent.author"]},{"name":"open val channelId: Snowflake","description":"dev.kordex.modules.pluralkit.events.PKMessageDeleteEvent.channelId","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-delete-event/channel-id.html","searchKeys":["channelId","open val channelId: Snowflake","dev.kordex.modules.pluralkit.events.PKMessageDeleteEvent.channelId"]},{"name":"open val channelId: Snowflake","description":"dev.kordex.modules.pluralkit.events.PKMessageUpdateEvent.channelId","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-update-event/channel-id.html","searchKeys":["channelId","open val channelId: Snowflake","dev.kordex.modules.pluralkit.events.PKMessageUpdateEvent.channelId"]},{"name":"open val event: MessageCreateEvent","description":"dev.kordex.modules.pluralkit.events.PKMessageCreateEvent.event","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-create-event/event.html","searchKeys":["event","open val event: MessageCreateEvent","dev.kordex.modules.pluralkit.events.PKMessageCreateEvent.event"]},{"name":"open val event: MessageDeleteEvent","description":"dev.kordex.modules.pluralkit.events.PKMessageDeleteEvent.event","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-delete-event/event.html","searchKeys":["event","open val event: MessageDeleteEvent","dev.kordex.modules.pluralkit.events.PKMessageDeleteEvent.event"]},{"name":"open val event: MessageUpdateEvent","description":"dev.kordex.modules.pluralkit.events.PKMessageUpdateEvent.event","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-update-event/event.html","searchKeys":["event","open val event: MessageUpdateEvent","dev.kordex.modules.pluralkit.events.PKMessageUpdateEvent.event"]},{"name":"open val guildId: Snowflake?","description":"dev.kordex.modules.pluralkit.events.PKMessageCreateEvent.guildId","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-create-event/guild-id.html","searchKeys":["guildId","open val guildId: Snowflake?","dev.kordex.modules.pluralkit.events.PKMessageCreateEvent.guildId"]},{"name":"open val guildId: Snowflake?","description":"dev.kordex.modules.pluralkit.events.PKMessageDeleteEvent.guildId","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-delete-event/guild-id.html","searchKeys":["guildId","open val guildId: Snowflake?","dev.kordex.modules.pluralkit.events.PKMessageDeleteEvent.guildId"]},{"name":"open val messageId: Snowflake","description":"dev.kordex.modules.pluralkit.events.PKMessageUpdateEvent.messageId","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-update-event/message-id.html","searchKeys":["messageId","open val messageId: Snowflake","dev.kordex.modules.pluralkit.events.PKMessageUpdateEvent.messageId"]},{"name":"open val new: DiscordPartialMessage","description":"dev.kordex.modules.pluralkit.events.PKMessageUpdateEvent.new","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-update-event/new.html","searchKeys":["new","open val new: DiscordPartialMessage","dev.kordex.modules.pluralkit.events.PKMessageUpdateEvent.new"]},{"name":"open val old: Message?","description":"dev.kordex.modules.pluralkit.events.PKMessageUpdateEvent.old","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-update-event/old.html","searchKeys":["old","open val old: Message?","dev.kordex.modules.pluralkit.events.PKMessageUpdateEvent.old"]},{"name":"open val repliedToMessage: Message?","description":"dev.kordex.modules.pluralkit.events.PKMessageCreateEvent.repliedToMessage","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-create-event/replied-to-message.html","searchKeys":["repliedToMessage","open val repliedToMessage: Message?","dev.kordex.modules.pluralkit.events.PKMessageCreateEvent.repliedToMessage"]},{"name":"open val repliedToMessage: Message?","description":"dev.kordex.modules.pluralkit.events.PKMessageDeleteEvent.repliedToMessage","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-delete-event/replied-to-message.html","searchKeys":["repliedToMessage","open val repliedToMessage: Message?","dev.kordex.modules.pluralkit.events.PKMessageDeleteEvent.repliedToMessage"]},{"name":"open val repliedToMessage: Message?","description":"dev.kordex.modules.pluralkit.events.PKMessageUpdateEvent.repliedToMessage","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-update-event/replied-to-message.html","searchKeys":["repliedToMessage","open val repliedToMessage: Message?","dev.kordex.modules.pluralkit.events.PKMessageUpdateEvent.repliedToMessage"]},{"name":"sealed class PKMessageCreateEvent : KordExEvent, Strategizable, MessageEvent, GuildEvent, MemberEvent, ChannelEvent","description":"dev.kordex.modules.pluralkit.events.PKMessageCreateEvent","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-p-k-message-create-event/index.html","searchKeys":["PKMessageCreateEvent","sealed class PKMessageCreateEvent : KordExEvent, Strategizable, MessageEvent, GuildEvent, MemberEvent, ChannelEvent","dev.kordex.modules.pluralkit.events.PKMessageCreateEvent"]},{"name":"suspend fun getMessage(id: Snowflake): PKMessage","description":"dev.kordex.modules.pluralkit.api.PluralKit.getMessage","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.api/-plural-kit/get-message.html","searchKeys":["getMessage","suspend fun getMessage(id: Snowflake): PKMessage","dev.kordex.modules.pluralkit.api.PluralKit.getMessage"]},{"name":"suspend fun getMessage(id: String): PKMessage","description":"dev.kordex.modules.pluralkit.api.PluralKit.getMessage","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.api/-plural-kit/get-message.html","searchKeys":["getMessage","suspend fun getMessage(id: String): PKMessage","dev.kordex.modules.pluralkit.api.PluralKit.getMessage"]},{"name":"suspend fun getMessageOrNull(id: Snowflake): PKMessage?","description":"dev.kordex.modules.pluralkit.api.PluralKit.getMessageOrNull","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.api/-plural-kit/get-message-or-null.html","searchKeys":["getMessageOrNull","suspend fun getMessageOrNull(id: Snowflake): PKMessage?","dev.kordex.modules.pluralkit.api.PluralKit.getMessageOrNull"]},{"name":"suspend fun getMessageOrNull(id: String): PKMessage?","description":"dev.kordex.modules.pluralkit.api.PluralKit.getMessageOrNull","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.api/-plural-kit/get-message-or-null.html","searchKeys":["getMessageOrNull","suspend fun getMessageOrNull(id: String): PKMessage?","dev.kordex.modules.pluralkit.api.PluralKit.getMessageOrNull"]},{"name":"val avatarPrivacy: Boolean","description":"dev.kordex.modules.pluralkit.api.PKMemberPrivacy.avatarPrivacy","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.api/-p-k-member-privacy/avatar-privacy.html","searchKeys":["avatarPrivacy","val avatarPrivacy: Boolean","dev.kordex.modules.pluralkit.api.PKMemberPrivacy.avatarPrivacy"]},{"name":"val avatarPrivacy: Boolean","description":"dev.kordex.modules.pluralkit.api.PKSystemPrivacy.avatarPrivacy","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.api/-p-k-system-privacy/avatar-privacy.html","searchKeys":["avatarPrivacy","val avatarPrivacy: Boolean","dev.kordex.modules.pluralkit.api.PKSystemPrivacy.avatarPrivacy"]},{"name":"val avatarUrl: String?","description":"dev.kordex.modules.pluralkit.api.PKMember.avatarUrl","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.api/-p-k-member/avatar-url.html","searchKeys":["avatarUrl","val avatarUrl: String?","dev.kordex.modules.pluralkit.api.PKMember.avatarUrl"]},{"name":"val avatarUrl: String?","description":"dev.kordex.modules.pluralkit.api.PKSystem.avatarUrl","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.api/-p-k-system/avatar-url.html","searchKeys":["avatarUrl","val avatarUrl: String?","dev.kordex.modules.pluralkit.api.PKSystem.avatarUrl"]},{"name":"val banner: String?","description":"dev.kordex.modules.pluralkit.api.PKMember.banner","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.api/-p-k-member/banner.html","searchKeys":["banner","val banner: String?","dev.kordex.modules.pluralkit.api.PKMember.banner"]},{"name":"val banner: String?","description":"dev.kordex.modules.pluralkit.api.PKSystem.banner","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.api/-p-k-system/banner.html","searchKeys":["banner","val banner: String?","dev.kordex.modules.pluralkit.api.PKSystem.banner"]},{"name":"val birthday: String?","description":"dev.kordex.modules.pluralkit.api.PKMember.birthday","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.api/-p-k-member/birthday.html","searchKeys":["birthday","val birthday: String?","dev.kordex.modules.pluralkit.api.PKMember.birthday"]},{"name":"val birthdayPrivacy: Boolean","description":"dev.kordex.modules.pluralkit.api.PKMemberPrivacy.birthdayPrivacy","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.api/-p-k-member-privacy/birthday-privacy.html","searchKeys":["birthdayPrivacy","val birthdayPrivacy: Boolean","dev.kordex.modules.pluralkit.api.PKMemberPrivacy.birthdayPrivacy"]},{"name":"val birthdayPrivacy: Boolean","description":"dev.kordex.modules.pluralkit.api.PKSystemPrivacy.birthdayPrivacy","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.api/-p-k-system-privacy/birthday-privacy.html","searchKeys":["birthdayPrivacy","val birthdayPrivacy: Boolean","dev.kordex.modules.pluralkit.api.PKSystemPrivacy.birthdayPrivacy"]},{"name":"val bot: User?","description":"dev.kordex.modules.pluralkit.PKExtension.BotArgs.bot","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit/-p-k-extension/-bot-args/bot.html","searchKeys":["bot","val bot: User?","dev.kordex.modules.pluralkit.PKExtension.BotArgs.bot"]},{"name":"val channel: Snowflake","description":"dev.kordex.modules.pluralkit.api.PKMessage.channel","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.api/-p-k-message/channel.html","searchKeys":["channel","val channel: Snowflake","dev.kordex.modules.pluralkit.api.PKMessage.channel"]},{"name":"val color: String?","description":"dev.kordex.modules.pluralkit.api.PKMember.color","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.api/-p-k-member/color.html","searchKeys":["color","val color: String?","dev.kordex.modules.pluralkit.api.PKMember.color"]},{"name":"val color: String?","description":"dev.kordex.modules.pluralkit.api.PKSystem.color","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.api/-p-k-system/color.html","searchKeys":["color","val color: String?","dev.kordex.modules.pluralkit.api.PKSystem.color"]},{"name":"val config: PKConfigBuilder","description":"dev.kordex.modules.pluralkit.PKExtension.config","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit/-p-k-extension/config.html","searchKeys":["config","val config: PKConfigBuilder","dev.kordex.modules.pluralkit.PKExtension.config"]},{"name":"val created: Instant","description":"dev.kordex.modules.pluralkit.api.PKSystem.created","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.api/-p-k-system/created.html","searchKeys":["created","val created: Instant","dev.kordex.modules.pluralkit.api.PKSystem.created"]},{"name":"val created: Instant?","description":"dev.kordex.modules.pluralkit.api.PKMember.created","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.api/-p-k-member/created.html","searchKeys":["created","val created: Instant?","dev.kordex.modules.pluralkit.api.PKMember.created"]},{"name":"val description: String?","description":"dev.kordex.modules.pluralkit.api.PKMember.description","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.api/-p-k-member/description.html","searchKeys":["description","val description: String?","dev.kordex.modules.pluralkit.api.PKMember.description"]},{"name":"val description: String?","description":"dev.kordex.modules.pluralkit.api.PKSystem.description","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.api/-p-k-system/description.html","searchKeys":["description","val description: String?","dev.kordex.modules.pluralkit.api.PKSystem.description"]},{"name":"val descriptionPrivacy: Boolean","description":"dev.kordex.modules.pluralkit.api.PKMemberPrivacy.descriptionPrivacy","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.api/-p-k-member-privacy/description-privacy.html","searchKeys":["descriptionPrivacy","val descriptionPrivacy: Boolean","dev.kordex.modules.pluralkit.api.PKMemberPrivacy.descriptionPrivacy"]},{"name":"val descriptionPrivacy: Boolean","description":"dev.kordex.modules.pluralkit.api.PKSystemPrivacy.descriptionPrivacy","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.api/-p-k-system-privacy/description-privacy.html","searchKeys":["descriptionPrivacy","val descriptionPrivacy: Boolean","dev.kordex.modules.pluralkit.api.PKSystemPrivacy.descriptionPrivacy"]},{"name":"val displayName: String?","description":"dev.kordex.modules.pluralkit.api.PKMember.displayName","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.api/-p-k-member/display-name.html","searchKeys":["displayName","val displayName: String?","dev.kordex.modules.pluralkit.api.PKMember.displayName"]},{"name":"val domainRateLimiters: MutableMap<String, IntervalRateLimiter?>","description":"dev.kordex.modules.pluralkit.config.PKConfigBuilder.domainRateLimiters","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.config/-p-k-config-builder/domain-rate-limiters.html","searchKeys":["domainRateLimiters","val domainRateLimiters: MutableMap<String, IntervalRateLimiter?>","dev.kordex.modules.pluralkit.config.PKConfigBuilder.domainRateLimiters"]},{"name":"val id: Snowflake","description":"dev.kordex.modules.pluralkit.api.PKMessage.id","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.api/-p-k-message/id.html","searchKeys":["id","val id: Snowflake","dev.kordex.modules.pluralkit.api.PKMessage.id"]},{"name":"val id: String","description":"dev.kordex.modules.pluralkit.api.PKMember.id","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.api/-p-k-member/id.html","searchKeys":["id","val id: String","dev.kordex.modules.pluralkit.api.PKMember.id"]},{"name":"val id: String","description":"dev.kordex.modules.pluralkit.api.PKSystem.id","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.api/-p-k-system/id.html","searchKeys":["id","val id: String","dev.kordex.modules.pluralkit.api.PKSystem.id"]},{"name":"val keepProxy: Boolean","description":"dev.kordex.modules.pluralkit.api.PKMember.keepProxy","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.api/-p-k-member/keep-proxy.html","searchKeys":["keepProxy","val keepProxy: Boolean","dev.kordex.modules.pluralkit.api.PKMember.keepProxy"]},{"name":"val member: PKMember? = null","description":"dev.kordex.modules.pluralkit.api.PKMessage.member","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.api/-p-k-message/member.html","searchKeys":["member","val member: PKMember? = null","dev.kordex.modules.pluralkit.api.PKMessage.member"]},{"name":"val metadataPrivacy: Boolean","description":"dev.kordex.modules.pluralkit.api.PKMemberPrivacy.metadataPrivacy","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.api/-p-k-member-privacy/metadata-privacy.html","searchKeys":["metadataPrivacy","val metadataPrivacy: Boolean","dev.kordex.modules.pluralkit.api.PKMemberPrivacy.metadataPrivacy"]},{"name":"val metadataPrivacy: Boolean","description":"dev.kordex.modules.pluralkit.api.PKSystemPrivacy.metadataPrivacy","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.api/-p-k-system-privacy/metadata-privacy.html","searchKeys":["metadataPrivacy","val metadataPrivacy: Boolean","dev.kordex.modules.pluralkit.api.PKSystemPrivacy.metadataPrivacy"]},{"name":"val name: String","description":"dev.kordex.modules.pluralkit.api.PKMember.name","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.api/-p-k-member/name.html","searchKeys":["name","val name: String","dev.kordex.modules.pluralkit.api.PKMember.name"]},{"name":"val name: String?","description":"dev.kordex.modules.pluralkit.api.PKSystem.name","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.api/-p-k-system/name.html","searchKeys":["name","val name: String?","dev.kordex.modules.pluralkit.api.PKSystem.name"]},{"name":"val namePrivacy: Boolean","description":"dev.kordex.modules.pluralkit.api.PKMemberPrivacy.namePrivacy","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.api/-p-k-member-privacy/name-privacy.html","searchKeys":["namePrivacy","val namePrivacy: Boolean","dev.kordex.modules.pluralkit.api.PKMemberPrivacy.namePrivacy"]},{"name":"val namePrivacy: Boolean","description":"dev.kordex.modules.pluralkit.api.PKSystemPrivacy.namePrivacy","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.api/-p-k-system-privacy/name-privacy.html","searchKeys":["namePrivacy","val namePrivacy: Boolean","dev.kordex.modules.pluralkit.api.PKSystemPrivacy.namePrivacy"]},{"name":"val original: Snowflake","description":"dev.kordex.modules.pluralkit.api.PKMessage.original","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.api/-p-k-message/original.html","searchKeys":["original","val original: Snowflake","dev.kordex.modules.pluralkit.api.PKMessage.original"]},{"name":"val pkMessage: PKMessage","description":"dev.kordex.modules.pluralkit.events.ProxiedMessageCreateEvent.pkMessage","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-proxied-message-create-event/pk-message.html","searchKeys":["pkMessage","val pkMessage: PKMessage","dev.kordex.modules.pluralkit.events.ProxiedMessageCreateEvent.pkMessage"]},{"name":"val pkMessage: PKMessage","description":"dev.kordex.modules.pluralkit.events.ProxiedMessageDeleteEvent.pkMessage","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-proxied-message-delete-event/pk-message.html","searchKeys":["pkMessage","val pkMessage: PKMessage","dev.kordex.modules.pluralkit.events.ProxiedMessageDeleteEvent.pkMessage"]},{"name":"val pkMessage: PKMessage","description":"dev.kordex.modules.pluralkit.events.ProxiedMessageUpdateEvent.pkMessage","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.events/-proxied-message-update-event/pk-message.html","searchKeys":["pkMessage","val pkMessage: PKMessage","dev.kordex.modules.pluralkit.events.ProxiedMessageUpdateEvent.pkMessage"]},{"name":"val prefix: String?","description":"dev.kordex.modules.pluralkit.api.PKProxyTag.prefix","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.api/-p-k-proxy-tag/prefix.html","searchKeys":["prefix","val prefix: String?","dev.kordex.modules.pluralkit.api.PKProxyTag.prefix"]},{"name":"val privacy: PKMemberPrivacy?","description":"dev.kordex.modules.pluralkit.api.PKMember.privacy","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.api/-p-k-member/privacy.html","searchKeys":["privacy","val privacy: PKMemberPrivacy?","dev.kordex.modules.pluralkit.api.PKMember.privacy"]},{"name":"val privacy: PKSystemPrivacy?","description":"dev.kordex.modules.pluralkit.api.PKSystem.privacy","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.api/-p-k-system/privacy.html","searchKeys":["privacy","val privacy: PKSystemPrivacy?","dev.kordex.modules.pluralkit.api.PKSystem.privacy"]},{"name":"val pronounPrivacy: Boolean","description":"dev.kordex.modules.pluralkit.api.PKMemberPrivacy.pronounPrivacy","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.api/-p-k-member-privacy/pronoun-privacy.html","searchKeys":["pronounPrivacy","val pronounPrivacy: Boolean","dev.kordex.modules.pluralkit.api.PKMemberPrivacy.pronounPrivacy"]},{"name":"val pronounPrivacy: Boolean","description":"dev.kordex.modules.pluralkit.api.PKSystemPrivacy.pronounPrivacy","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.api/-p-k-system-privacy/pronoun-privacy.html","searchKeys":["pronounPrivacy","val pronounPrivacy: Boolean","dev.kordex.modules.pluralkit.api.PKSystemPrivacy.pronounPrivacy"]},{"name":"val pronouns: String?","description":"dev.kordex.modules.pluralkit.api.PKMember.pronouns","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.api/-p-k-member/pronouns.html","searchKeys":["pronouns","val pronouns: String?","dev.kordex.modules.pluralkit.api.PKMember.pronouns"]},{"name":"val proxyTags: List<PKProxyTag>","description":"dev.kordex.modules.pluralkit.api.PKMember.proxyTags","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.api/-p-k-member/proxy-tags.html","searchKeys":["proxyTags","val proxyTags: List<PKProxyTag>","dev.kordex.modules.pluralkit.api.PKMember.proxyTags"]},{"name":"val sender: Snowflake","description":"dev.kordex.modules.pluralkit.api.PKMessage.sender","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.api/-p-k-message/sender.html","searchKeys":["sender","val sender: Snowflake","dev.kordex.modules.pluralkit.api.PKMessage.sender"]},{"name":"val suffix: String?","description":"dev.kordex.modules.pluralkit.api.PKProxyTag.suffix","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.api/-p-k-proxy-tag/suffix.html","searchKeys":["suffix","val suffix: String?","dev.kordex.modules.pluralkit.api.PKProxyTag.suffix"]},{"name":"val system: PKSystem? = null","description":"dev.kordex.modules.pluralkit.api.PKMessage.system","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.api/-p-k-message/system.html","searchKeys":["system","val system: PKSystem? = null","dev.kordex.modules.pluralkit.api.PKMessage.system"]},{"name":"val tag: String?","description":"dev.kordex.modules.pluralkit.api.PKSystem.tag","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.api/-p-k-system/tag.html","searchKeys":["tag","val tag: String?","dev.kordex.modules.pluralkit.api.PKSystem.tag"]},{"name":"val timestamp: Instant","description":"dev.kordex.modules.pluralkit.api.PKMessage.timestamp","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.api/-p-k-message/timestamp.html","searchKeys":["timestamp","val timestamp: Instant","dev.kordex.modules.pluralkit.api.PKMessage.timestamp"]},{"name":"val timezone: String? = null","description":"dev.kordex.modules.pluralkit.api.PKSystem.timezone","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.api/-p-k-system/timezone.html","searchKeys":["timezone","val timezone: String? = null","dev.kordex.modules.pluralkit.api.PKSystem.timezone"]},{"name":"val toggle: Boolean?","description":"dev.kordex.modules.pluralkit.PKExtension.ToggleSupportArgs.toggle","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit/-p-k-extension/-toggle-support-args/toggle.html","searchKeys":["toggle","val toggle: Boolean?","dev.kordex.modules.pluralkit.PKExtension.ToggleSupportArgs.toggle"]},{"name":"val url: String?","description":"dev.kordex.modules.pluralkit.PKExtension.ApiUrlArgs.url","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit/-p-k-extension/-api-url-args/url.html","searchKeys":["url","val url: String?","dev.kordex.modules.pluralkit.PKExtension.ApiUrlArgs.url"]},{"name":"val uuid: String","description":"dev.kordex.modules.pluralkit.api.PKMember.uuid","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.api/-p-k-member/uuid.html","searchKeys":["uuid","val uuid: String","dev.kordex.modules.pluralkit.api.PKMember.uuid"]},{"name":"val uuid: String","description":"dev.kordex.modules.pluralkit.api.PKSystem.uuid","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.api/-p-k-system/uuid.html","searchKeys":["uuid","val uuid: String","dev.kordex.modules.pluralkit.api.PKSystem.uuid"]},{"name":"val visibility: Boolean","description":"dev.kordex.modules.pluralkit.api.PKMemberPrivacy.visibility","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.api/-p-k-member-privacy/visibility.html","searchKeys":["visibility","val visibility: Boolean","dev.kordex.modules.pluralkit.api.PKMemberPrivacy.visibility"]},{"name":"val visibility: Boolean","description":"dev.kordex.modules.pluralkit.api.PKSystemPrivacy.visibility","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.api/-p-k-system-privacy/visibility.html","searchKeys":["visibility","val visibility: Boolean","dev.kordex.modules.pluralkit.api.PKSystemPrivacy.visibility"]},{"name":"var apiUrl: String","description":"dev.kordex.modules.pluralkit.storage.PKGuildConfig.apiUrl","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.storage/-p-k-guild-config/api-url.html","searchKeys":["apiUrl","var apiUrl: String","dev.kordex.modules.pluralkit.storage.PKGuildConfig.apiUrl"]},{"name":"var botId: Snowflake","description":"dev.kordex.modules.pluralkit.storage.PKGuildConfig.botId","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.storage/-p-k-guild-config/bot-id.html","searchKeys":["botId","var botId: Snowflake","dev.kordex.modules.pluralkit.storage.PKGuildConfig.botId"]},{"name":"var defaultRateLimiter: IntervalRateLimiter?","description":"dev.kordex.modules.pluralkit.config.PKConfigBuilder.defaultRateLimiter","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.config/-p-k-config-builder/default-rate-limiter.html","searchKeys":["defaultRateLimiter","var defaultRateLimiter: IntervalRateLimiter?","dev.kordex.modules.pluralkit.config.PKConfigBuilder.defaultRateLimiter"]},{"name":"var enabled: Boolean","description":"dev.kordex.modules.pluralkit.storage.PKGuildConfig.enabled","location":"modules/integrations/pluralkit/dev.kordex.modules.pluralkit.storage/-p-k-guild-config/enabled.html","searchKeys":["enabled","var enabled: Boolean","dev.kordex.modules.pluralkit.storage.PKGuildConfig.enabled"]},{"name":"abstract val data: T","description":"dev.kordex.parser.tokens.Token.data","location":"token-parser/dev.kordex.parser.tokens/-token/data.html","searchKeys":["data","abstract val data: T","dev.kordex.parser.tokens.Token.data"]},{"name":"class Cursor(val input: String)","description":"dev.kordex.parser.Cursor","location":"token-parser/dev.kordex.parser/-cursor/index.html","searchKeys":["Cursor","class Cursor(val input: String)","dev.kordex.parser.Cursor"]},{"name":"constructor(data: String)","description":"dev.kordex.parser.tokens.PositionalArgumentToken.PositionalArgumentToken","location":"token-parser/dev.kordex.parser.tokens/-positional-argument-token/-positional-argument-token.html","searchKeys":["PositionalArgumentToken","constructor(data: String)","dev.kordex.parser.tokens.PositionalArgumentToken.PositionalArgumentToken"]},{"name":"constructor(input: String)","description":"dev.kordex.parser.Cursor.Cursor","location":"token-parser/dev.kordex.parser/-cursor/-cursor.html","searchKeys":["Cursor","constructor(input: String)","dev.kordex.parser.Cursor.Cursor"]},{"name":"constructor(input: String)","description":"dev.kordex.parser.StringParser.StringParser","location":"token-parser/dev.kordex.parser/-string-parser/-string-parser.html","searchKeys":["StringParser","constructor(input: String)","dev.kordex.parser.StringParser.StringParser"]},{"name":"constructor(name: String, data: String)","description":"dev.kordex.parser.tokens.NamedArgumentToken.NamedArgumentToken","location":"token-parser/dev.kordex.parser.tokens/-named-argument-token/-named-argument-token.html","searchKeys":["NamedArgumentToken","constructor(name: String, data: String)","dev.kordex.parser.tokens.NamedArgumentToken.NamedArgumentToken"]},{"name":"data class NamedArgumentToken(val name: String, val data: String) : Token<String> ","description":"dev.kordex.parser.tokens.NamedArgumentToken","location":"token-parser/dev.kordex.parser.tokens/-named-argument-token/index.html","searchKeys":["NamedArgumentToken","data class NamedArgumentToken(val name: String, val data: String) : Token<String> ","dev.kordex.parser.tokens.NamedArgumentToken"]},{"name":"data class PositionalArgumentToken(val data: String) : Token<String> ","description":"dev.kordex.parser.tokens.PositionalArgumentToken","location":"token-parser/dev.kordex.parser.tokens/-positional-argument-token/index.html","searchKeys":["PositionalArgumentToken","data class PositionalArgumentToken(val data: String) : Token<String> ","dev.kordex.parser.tokens.PositionalArgumentToken"]},{"name":"fun consumeNumber(amount: Int): String","description":"dev.kordex.parser.Cursor.consumeNumber","location":"token-parser/dev.kordex.parser/-cursor/consume-number.html","searchKeys":["consumeNumber","fun consumeNumber(amount: Int): String","dev.kordex.parser.Cursor.consumeNumber"]},{"name":"fun consumeRemaining(): String","description":"dev.kordex.parser.Cursor.consumeRemaining","location":"token-parser/dev.kordex.parser/-cursor/consume-remaining.html","searchKeys":["consumeRemaining","fun consumeRemaining(): String","dev.kordex.parser.Cursor.consumeRemaining"]},{"name":"fun consumeRemaining(): String","description":"dev.kordex.parser.StringParser.consumeRemaining","location":"token-parser/dev.kordex.parser/-string-parser/consume-remaining.html","searchKeys":["consumeRemaining","fun consumeRemaining(): String","dev.kordex.parser.StringParser.consumeRemaining"]},{"name":"fun consumeWhile(predicate: (Char) -> Boolean): String?","description":"dev.kordex.parser.Cursor.consumeWhile","location":"token-parser/dev.kordex.parser/-cursor/consume-while.html","searchKeys":["consumeWhile","fun consumeWhile(predicate: (Char) -> Boolean): String?","dev.kordex.parser.Cursor.consumeWhile"]},{"name":"fun consumeWhile(predicate: (Char) -> Boolean): String?","description":"dev.kordex.parser.StringParser.consumeWhile","location":"token-parser/dev.kordex.parser/-string-parser/consume-while.html","searchKeys":["consumeWhile","fun consumeWhile(predicate: (Char) -> Boolean): String?","dev.kordex.parser.StringParser.consumeWhile"]},{"name":"fun next(): Char","description":"dev.kordex.parser.Cursor.next","location":"token-parser/dev.kordex.parser/-cursor/next.html","searchKeys":["next","fun next(): Char","dev.kordex.parser.Cursor.next"]},{"name":"fun nextOrNull(): Char?","description":"dev.kordex.parser.Cursor.nextOrNull","location":"token-parser/dev.kordex.parser/-cursor/next-or-null.html","searchKeys":["nextOrNull","fun nextOrNull(): Char?","dev.kordex.parser.Cursor.nextOrNull"]},{"name":"fun parseNamed(): List<NamedArgumentToken>","description":"dev.kordex.parser.StringParser.parseNamed","location":"token-parser/dev.kordex.parser/-string-parser/parse-named.html","searchKeys":["parseNamed","fun parseNamed(): List<NamedArgumentToken>","dev.kordex.parser.StringParser.parseNamed"]},{"name":"fun parseNext(): PositionalArgumentToken?","description":"dev.kordex.parser.StringParser.parseNext","location":"token-parser/dev.kordex.parser/-string-parser/parse-next.html","searchKeys":["parseNext","fun parseNext(): PositionalArgumentToken?","dev.kordex.parser.StringParser.parseNext"]},{"name":"fun peek(): Char","description":"dev.kordex.parser.Cursor.peek","location":"token-parser/dev.kordex.parser/-cursor/peek.html","searchKeys":["peek","fun peek(): Char","dev.kordex.parser.Cursor.peek"]},{"name":"fun peekNext(): Char?","description":"dev.kordex.parser.Cursor.peekNext","location":"token-parser/dev.kordex.parser/-cursor/peek-next.html","searchKeys":["peekNext","fun peekNext(): Char?","dev.kordex.parser.Cursor.peekNext"]},{"name":"fun peekNext(): PositionalArgumentToken?","description":"dev.kordex.parser.StringParser.peekNext","location":"token-parser/dev.kordex.parser/-string-parser/peek-next.html","searchKeys":["peekNext","fun peekNext(): PositionalArgumentToken?","dev.kordex.parser.StringParser.peekNext"]},{"name":"fun peekPrevious(): Char?","description":"dev.kordex.parser.Cursor.peekPrevious","location":"token-parser/dev.kordex.parser/-cursor/peek-previous.html","searchKeys":["peekPrevious","fun peekPrevious(): Char?","dev.kordex.parser.Cursor.peekPrevious"]},{"name":"fun peekRemaining(): String","description":"dev.kordex.parser.StringParser.peekRemaining","location":"token-parser/dev.kordex.parser/-string-parser/peek-remaining.html","searchKeys":["peekRemaining","fun peekRemaining(): String","dev.kordex.parser.StringParser.peekRemaining"]},{"name":"fun peekWhile(predicate: (Char) -> Boolean): String?","description":"dev.kordex.parser.StringParser.peekWhile","location":"token-parser/dev.kordex.parser/-string-parser/peek-while.html","searchKeys":["peekWhile","fun peekWhile(predicate: (Char) -> Boolean): String?","dev.kordex.parser.StringParser.peekWhile"]},{"name":"fun previous(): Char","description":"dev.kordex.parser.Cursor.previous","location":"token-parser/dev.kordex.parser/-cursor/previous.html","searchKeys":["previous","fun previous(): Char","dev.kordex.parser.Cursor.previous"]},{"name":"fun previousOrNull(): Char?","description":"dev.kordex.parser.Cursor.previousOrNull","location":"token-parser/dev.kordex.parser/-cursor/previous-or-null.html","searchKeys":["previousOrNull","fun previousOrNull(): Char?","dev.kordex.parser.Cursor.previousOrNull"]},{"name":"fun skipWhitespace(): Boolean","description":"dev.kordex.parser.Cursor.skipWhitespace","location":"token-parser/dev.kordex.parser/-cursor/skip-whitespace.html","searchKeys":["skipWhitespace","fun skipWhitespace(): Boolean","dev.kordex.parser.Cursor.skipWhitespace"]},{"name":"interface Token<T>","description":"dev.kordex.parser.tokens.Token","location":"token-parser/dev.kordex.parser.tokens/-token/index.html","searchKeys":["Token","interface Token<T>","dev.kordex.parser.tokens.Token"]},{"name":"open class StringParser(val input: String)","description":"dev.kordex.parser.StringParser","location":"token-parser/dev.kordex.parser/-string-parser/index.html","searchKeys":["StringParser","open class StringParser(val input: String)","dev.kordex.parser.StringParser"]},{"name":"open override val data: String","description":"dev.kordex.parser.tokens.NamedArgumentToken.data","location":"token-parser/dev.kordex.parser.tokens/-named-argument-token/data.html","searchKeys":["data","open override val data: String","dev.kordex.parser.tokens.NamedArgumentToken.data"]},{"name":"open override val data: String","description":"dev.kordex.parser.tokens.PositionalArgumentToken.data","location":"token-parser/dev.kordex.parser.tokens/-positional-argument-token/data.html","searchKeys":["data","open override val data: String","dev.kordex.parser.tokens.PositionalArgumentToken.data"]},{"name":"open val input: String","description":"dev.kordex.parser.StringParser.input","location":"token-parser/dev.kordex.parser/-string-parser/input.html","searchKeys":["input","open val input: String","dev.kordex.parser.StringParser.input"]},{"name":"val hasNext: Boolean","description":"dev.kordex.parser.Cursor.hasNext","location":"token-parser/dev.kordex.parser/-cursor/has-next.html","searchKeys":["hasNext","val hasNext: Boolean","dev.kordex.parser.Cursor.hasNext"]},{"name":"val hasNext: Boolean","description":"dev.kordex.parser.StringParser.hasNext","location":"token-parser/dev.kordex.parser/-string-parser/has-next.html","searchKeys":["hasNext","val hasNext: Boolean","dev.kordex.parser.StringParser.hasNext"]},{"name":"val hasPrevious: Boolean","description":"dev.kordex.parser.Cursor.hasPrevious","location":"token-parser/dev.kordex.parser/-cursor/has-previous.html","searchKeys":["hasPrevious","val hasPrevious: Boolean","dev.kordex.parser.Cursor.hasPrevious"]},{"name":"val input: String","description":"dev.kordex.parser.Cursor.input","location":"token-parser/dev.kordex.parser/-cursor/input.html","searchKeys":["input","val input: String","dev.kordex.parser.Cursor.input"]},{"name":"val name: String","description":"dev.kordex.parser.tokens.NamedArgumentToken.name","location":"token-parser/dev.kordex.parser.tokens/-named-argument-token/name.html","searchKeys":["name","val name: String","dev.kordex.parser.tokens.NamedArgumentToken.name"]},{"name":"var cursor: Cursor","description":"dev.kordex.parser.StringParser.cursor","location":"token-parser/dev.kordex.parser/-string-parser/cursor.html","searchKeys":["cursor","var cursor: Cursor","dev.kordex.parser.StringParser.cursor"]},{"name":"var index: Int","description":"dev.kordex.parser.Cursor.index","location":"token-parser/dev.kordex.parser/-cursor/--index--.html","searchKeys":["index","var index: Int","dev.kordex.parser.Cursor.index"]},{"name":"ACTIVE","description":"dev.kordex.modules.func.welcome.enums.ThreadListType.ACTIVE","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.enums/-thread-list-type/-a-c-t-i-v-e/index.html","searchKeys":["ACTIVE","ACTIVE","dev.kordex.modules.func.welcome.enums.ThreadListType.ACTIVE"]},{"name":"NEWEST","description":"dev.kordex.modules.func.welcome.enums.ThreadListType.NEWEST","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.enums/-thread-list-type/-n-e-w-e-s-t/index.html","searchKeys":["NEWEST","NEWEST","dev.kordex.modules.func.welcome.enums.ThreadListType.NEWEST"]},{"name":"abstract class Block","description":"dev.kordex.modules.func.welcome.blocks.Block","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-block/index.html","searchKeys":["Block","abstract class Block","dev.kordex.modules.func.welcome.blocks.Block"]},{"name":"abstract class WelcomeChannelConfig","description":"dev.kordex.modules.func.welcome.config.WelcomeChannelConfig","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.config/-welcome-channel-config/index.html","searchKeys":["WelcomeChannelConfig","abstract class WelcomeChannelConfig","dev.kordex.modules.func.welcome.config.WelcomeChannelConfig"]},{"name":"abstract suspend fun create(builder: MessageCreateBuilder)","description":"dev.kordex.modules.func.welcome.blocks.Block.create","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-block/create.html","searchKeys":["create","abstract suspend fun create(builder: MessageCreateBuilder)","dev.kordex.modules.func.welcome.blocks.Block.create"]},{"name":"abstract suspend fun edit(builder: MessageModifyBuilder)","description":"dev.kordex.modules.func.welcome.blocks.Block.edit","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-block/edit.html","searchKeys":["edit","abstract suspend fun edit(builder: MessageModifyBuilder)","dev.kordex.modules.func.welcome.blocks.Block.edit"]},{"name":"abstract suspend fun getChannelURLs(): Map<Snowflake, String>","description":"dev.kordex.modules.func.welcome.data.WelcomeChannelData.getChannelURLs","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.data/-welcome-channel-data/get-channel-u-r-ls.html","searchKeys":["getChannelURLs","abstract suspend fun getChannelURLs(): Map<Snowflake, String>","dev.kordex.modules.func.welcome.data.WelcomeChannelData.getChannelURLs"]},{"name":"abstract suspend fun getLoggingChannel(channel: GuildMessageChannel, guild: Guild): GuildMessageChannel?","description":"dev.kordex.modules.func.welcome.config.WelcomeChannelConfig.getLoggingChannel","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.config/-welcome-channel-config/get-logging-channel.html","searchKeys":["getLoggingChannel","abstract suspend fun getLoggingChannel(channel: GuildMessageChannel, guild: Guild): GuildMessageChannel?","dev.kordex.modules.func.welcome.config.WelcomeChannelConfig.getLoggingChannel"]},{"name":"abstract suspend fun getRefreshDelay(): Duration?","description":"dev.kordex.modules.func.welcome.config.WelcomeChannelConfig.getRefreshDelay","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.config/-welcome-channel-config/get-refresh-delay.html","searchKeys":["getRefreshDelay","abstract suspend fun getRefreshDelay(): Duration?","dev.kordex.modules.func.welcome.config.WelcomeChannelConfig.getRefreshDelay"]},{"name":"abstract suspend fun getStaffCommandChecks(): List<Check<*>>","description":"dev.kordex.modules.func.welcome.config.WelcomeChannelConfig.getStaffCommandChecks","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.config/-welcome-channel-config/get-staff-command-checks.html","searchKeys":["getStaffCommandChecks","abstract suspend fun getStaffCommandChecks(): List<Check<*>>","dev.kordex.modules.func.welcome.config.WelcomeChannelConfig.getStaffCommandChecks"]},{"name":"abstract suspend fun getUrlForChannel(channelId: Snowflake): String?","description":"dev.kordex.modules.func.welcome.data.WelcomeChannelData.getUrlForChannel","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.data/-welcome-channel-data/get-url-for-channel.html","searchKeys":["getUrlForChannel","abstract suspend fun getUrlForChannel(channelId: Snowflake): String?","dev.kordex.modules.func.welcome.data.WelcomeChannelData.getUrlForChannel"]},{"name":"abstract suspend fun handleInteraction(event: InteractionCreateEvent)","description":"dev.kordex.modules.func.welcome.blocks.InteractionBlock.handleInteraction","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-interaction-block/handle-interaction.html","searchKeys":["handleInteraction","abstract suspend fun handleInteraction(event: InteractionCreateEvent)","dev.kordex.modules.func.welcome.blocks.InteractionBlock.handleInteraction"]},{"name":"abstract suspend fun removeChannel(channelId: Snowflake): String?","description":"dev.kordex.modules.func.welcome.data.WelcomeChannelData.removeChannel","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.data/-welcome-channel-data/remove-channel.html","searchKeys":["removeChannel","abstract suspend fun removeChannel(channelId: Snowflake): String?","dev.kordex.modules.func.welcome.data.WelcomeChannelData.removeChannel"]},{"name":"abstract suspend fun setUrlForChannel(channelId: Snowflake, url: String)","description":"dev.kordex.modules.func.welcome.data.WelcomeChannelData.setUrlForChannel","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.data/-welcome-channel-data/set-url-for-channel.html","searchKeys":["setUrlForChannel","abstract suspend fun setUrlForChannel(channelId: Snowflake, url: String)","dev.kordex.modules.func.welcome.data.WelcomeChannelData.setUrlForChannel"]},{"name":"class Builder","description":"dev.kordex.modules.func.welcome.config.SimpleWelcomeChannelConfig.Builder","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.config/-simple-welcome-channel-config/-builder/index.html","searchKeys":["Builder","class Builder","dev.kordex.modules.func.welcome.config.SimpleWelcomeChannelConfig.Builder"]},{"name":"class MemoryWelcomeChannelData : WelcomeChannelData","description":"dev.kordex.modules.func.welcome.data.MemoryWelcomeChannelData","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.data/-memory-welcome-channel-data/index.html","searchKeys":["MemoryWelcomeChannelData","class MemoryWelcomeChannelData : WelcomeChannelData","dev.kordex.modules.func.welcome.data.MemoryWelcomeChannelData"]},{"name":"class SimpleWelcomeChannelConfig(builder: SimpleWelcomeChannelConfig.Builder) : WelcomeChannelConfig","description":"dev.kordex.modules.func.welcome.config.SimpleWelcomeChannelConfig","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.config/-simple-welcome-channel-config/index.html","searchKeys":["SimpleWelcomeChannelConfig","class SimpleWelcomeChannelConfig(builder: SimpleWelcomeChannelConfig.Builder) : WelcomeChannelConfig","dev.kordex.modules.func.welcome.config.SimpleWelcomeChannelConfig"]},{"name":"class WelcomeChannel(val channel: GuildMessageChannel, val url: String) : KordExKoinComponent","description":"dev.kordex.modules.func.welcome.WelcomeChannel","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome/-welcome-channel/index.html","searchKeys":["WelcomeChannel","class WelcomeChannel(val channel: GuildMessageChannel, val url: String) : KordExKoinComponent","dev.kordex.modules.func.welcome.WelcomeChannel"]},{"name":"class WelcomeExtension : Extension","description":"dev.kordex.modules.func.welcome.WelcomeExtension","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome/-welcome-extension/index.html","searchKeys":["WelcomeExtension","class WelcomeExtension : Extension","dev.kordex.modules.func.welcome.WelcomeExtension"]},{"name":"constructor()","description":"dev.kordex.modules.func.welcome.WelcomeExtension.WelcomeExtension","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome/-welcome-extension/-welcome-extension.html","searchKeys":["WelcomeExtension","constructor()","dev.kordex.modules.func.welcome.WelcomeExtension.WelcomeExtension"]},{"name":"constructor()","description":"dev.kordex.modules.func.welcome.blocks.Block.Block","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-block/-block.html","searchKeys":["Block","constructor()","dev.kordex.modules.func.welcome.blocks.Block.Block"]},{"name":"constructor()","description":"dev.kordex.modules.func.welcome.config.SimpleWelcomeChannelConfig.Builder.Builder","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.config/-simple-welcome-channel-config/-builder/-builder.html","searchKeys":["Builder","constructor()","dev.kordex.modules.func.welcome.config.SimpleWelcomeChannelConfig.Builder.Builder"]},{"name":"constructor()","description":"dev.kordex.modules.func.welcome.config.WelcomeChannelConfig.WelcomeChannelConfig","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.config/-welcome-channel-config/-welcome-channel-config.html","searchKeys":["WelcomeChannelConfig","constructor()","dev.kordex.modules.func.welcome.config.WelcomeChannelConfig.WelcomeChannelConfig"]},{"name":"constructor()","description":"dev.kordex.modules.func.welcome.data.MemoryWelcomeChannelData.MemoryWelcomeChannelData","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.data/-memory-welcome-channel-data/-memory-welcome-channel-data.html","searchKeys":["MemoryWelcomeChannelData","constructor()","dev.kordex.modules.func.welcome.data.MemoryWelcomeChannelData.MemoryWelcomeChannelData"]},{"name":"constructor(builder: SimpleWelcomeChannelConfig.Builder)","description":"dev.kordex.modules.func.welcome.config.SimpleWelcomeChannelConfig.SimpleWelcomeChannelConfig","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.config/-simple-welcome-channel-config/-simple-welcome-channel-config.html","searchKeys":["SimpleWelcomeChannelConfig","constructor(builder: SimpleWelcomeChannelConfig.Builder)","dev.kordex.modules.func.welcome.config.SimpleWelcomeChannelConfig.SimpleWelcomeChannelConfig"]},{"name":"constructor(channel: GuildMessageChannel, url: String)","description":"dev.kordex.modules.func.welcome.WelcomeChannel.WelcomeChannel","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome/-welcome-channel/-welcome-channel.html","searchKeys":["WelcomeChannel","constructor(channel: GuildMessageChannel, url: String)","dev.kordex.modules.func.welcome.WelcomeChannel.WelcomeChannel"]},{"name":"constructor(description: String, emoji: String? = null)","description":"dev.kordex.modules.func.welcome.blocks.RoleItem.RoleItem","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-role-item/-role-item.html","searchKeys":["RoleItem","constructor(description: String, emoji: String? = null)","dev.kordex.modules.func.welcome.blocks.RoleItem.RoleItem"]},{"name":"constructor(embeds: List<EmbedData>, text: String? = null)","description":"dev.kordex.modules.func.welcome.blocks.EmbedBlock.EmbedBlock","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-embed-block/-embed-block.html","searchKeys":["EmbedBlock","constructor(embeds: List<EmbedData>, text: String? = null)","dev.kordex.modules.func.welcome.blocks.EmbedBlock.EmbedBlock"]},{"name":"constructor(id: String, role: Snowflake, title: String, buttonText: String, logChannel: Snowflake, complianceTypeUser: String, template: String = \"__**{TITLE}**__\\n\\n\" +\n\n\t\t\"By clicking the button below, you certify that:\\n\\n\" +\n\n\t\t\"**»** {COMPLIANCE_TYPE_USER}\\n\\n\" +\n\n\t\t\"**Please note:** Once you certify the above, you can't revoke your certification. If you decide to \" +\n\t\t\"certify the above when it's not true, you may be punished or removed from the server.\", complianceTypeLogs: String = complianceTypeUser\n\t\t.replace(\"You\", \"They\")\n\t\t.replace(\"you\", \"they\"))","description":"dev.kordex.modules.func.welcome.blocks.ComplianceBlock.ComplianceBlock","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-compliance-block/-compliance-block.html","searchKeys":["ComplianceBlock","constructor(id: String, role: Snowflake, title: String, buttonText: String, logChannel: Snowflake, complianceTypeUser: String, template: String = \"__**{TITLE}**__\\n\\n\" +\n\n\t\t\"By clicking the button below, you certify that:\\n\\n\" +\n\n\t\t\"**»** {COMPLIANCE_TYPE_USER}\\n\\n\" +\n\n\t\t\"**Please note:** Once you certify the above, you can't revoke your certification. If you decide to \" +\n\t\t\"certify the above when it's not true, you may be punished or removed from the server.\", complianceTypeLogs: String = complianceTypeUser\n\t\t.replace(\"You\", \"They\")\n\t\t.replace(\"you\", \"they\"))","dev.kordex.modules.func.welcome.blocks.ComplianceBlock.ComplianceBlock"]},{"name":"constructor(id: String, roles: Map<Snowflake, RoleItem>, title: String = \"Role Assignment\", description: String = \"Click the button below to assign yourself any of the following roles.\", color: Color = DISCORD_BLURPLE, template: String = \"**»** {MENTION} {DESCRIPTION}\")","description":"dev.kordex.modules.func.welcome.blocks.RolesBlock.RolesBlock","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-roles-block/-roles-block.html","searchKeys":["RolesBlock","constructor(id: String, roles: Map<Snowflake, RoleItem>, title: String = \"Role Assignment\", description: String = \"Click the button below to assign yourself any of the following roles.\", color: Color = DISCORD_BLURPLE, template: String = \"**»** {MENTION} {DESCRIPTION}\")","dev.kordex.modules.func.welcome.blocks.RolesBlock.RolesBlock"]},{"name":"constructor(messageUrl: String, color: Color = DISCORD_BLURPLE, template: String = \"{TEXT}\", title: String? = null, useEmbed: Boolean = false)","description":"dev.kordex.modules.func.welcome.blocks.MessageCopyBlock.MessageCopyBlock","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-message-copy-block/-message-copy-block.html","searchKeys":["MessageCopyBlock","constructor(messageUrl: String, color: Color = DISCORD_BLURPLE, template: String = \"{TEXT}\", title: String? = null, useEmbed: Boolean = false)","dev.kordex.modules.func.welcome.blocks.MessageCopyBlock.MessageCopyBlock"]},{"name":"constructor(mode: ThreadListType, limit: Int = 10, text: String? = null, description: String? = null, color: Color = DISCORD_BLURPLE, title: String = \" Threads\", template: String = \"**»** [{NAME}]({URL})\", activeEmoji: String? = null, archivedEmoji: String? = null, archiveStatusInName: Boolean = true, includeArchived: Boolean = true, includeNews: Boolean = true, includePublic: Boolean = true, includePrivate: Boolean = false, includeHidden: Boolean = false, includeHiddenChannels: Boolean = false)","description":"dev.kordex.modules.func.welcome.blocks.ThreadListBlock.ThreadListBlock","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-thread-list-block/-thread-list-block.html","searchKeys":["ThreadListBlock","constructor(mode: ThreadListType, limit: Int = 10, text: String? = null, description: String? = null, color: Color = DISCORD_BLURPLE, title: String = \" Threads\", template: String = \"**»** [{NAME}]({URL})\", activeEmoji: String? = null, archivedEmoji: String? = null, archiveStatusInName: Boolean = true, includeArchived: Boolean = true, includeNews: Boolean = true, includePublic: Boolean = true, includePrivate: Boolean = false, includeHidden: Boolean = false, includeHiddenChannels: Boolean = false)","dev.kordex.modules.func.welcome.blocks.ThreadListBlock.ThreadListBlock"]},{"name":"constructor(rules: LinkedHashMap<String, String>, text: String? = null, startingIndex: Int = 1, colors: List<Color> = listOf(\n\t\tColor(0xff0000),\n\t\tColor(0xff8c00),\n\t\tColor(0xe1ff00),\n\t\tColor(0x55ff00),\n\t\tColor(0x00ff37),\n\t\tColor(0x00ffc8),\n\t\tColor(0x00aaff),\n\t\tColor(0x001eff),\n\t\tColor(0x7300ff),\n\t\tColor(0xff00ff),\n\t))","description":"dev.kordex.modules.func.welcome.blocks.RulesBlock.RulesBlock","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-rules-block/-rules-block.html","searchKeys":["RulesBlock","constructor(rules: LinkedHashMap<String, String>, text: String? = null, startingIndex: Int = 1, colors: List<Color> = listOf(\n\t\tColor(0xff0000),\n\t\tColor(0xff8c00),\n\t\tColor(0xe1ff00),\n\t\tColor(0x55ff00),\n\t\tColor(0x00ff37),\n\t\tColor(0x00ffc8),\n\t\tColor(0x00aaff),\n\t\tColor(0x001eff),\n\t\tColor(0x7300ff),\n\t\tColor(0xff00ff),\n\t))","dev.kordex.modules.func.welcome.blocks.RulesBlock.RulesBlock"]},{"name":"constructor(text: String)","description":"dev.kordex.modules.func.welcome.blocks.TextBlock.TextBlock","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-text-block/-text-block.html","searchKeys":["TextBlock","constructor(text: String)","dev.kordex.modules.func.welcome.blocks.TextBlock.TextBlock"]},{"name":"constructor(title: String, links: Map<String, String>, text: String? = null, color: Color = DISCORD_BLURPLE, description: String? = null, template: String = \"**»** [{TEXT}]({URL})\")","description":"dev.kordex.modules.func.welcome.blocks.LinksBlock.LinksBlock","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-links-block/-links-block.html","searchKeys":["LinksBlock","constructor(title: String, links: Map<String, String>, text: String? = null, color: Color = DISCORD_BLURPLE, description: String? = null, template: String = \"**»** [{TEXT}]({URL})\")","dev.kordex.modules.func.welcome.blocks.LinksBlock.LinksBlock"]},{"name":"data class ComplianceBlock(val id: String, val role: Snowflake, val title: String, val buttonText: String, val logChannel: Snowflake, val complianceTypeUser: String, val template: String = \"__**{TITLE}**__\\n\\n\" +\n\n\t\t\"By clicking the button below, you certify that:\\n\\n\" +\n\n\t\t\"**»** {COMPLIANCE_TYPE_USER}\\n\\n\" +\n\n\t\t\"**Please note:** Once you certify the above, you can't revoke your certification. If you decide to \" +\n\t\t\"certify the above when it's not true, you may be punished or removed from the server.\", val complianceTypeLogs: String = complianceTypeUser\n\t\t.replace(\"You\", \"They\")\n\t\t.replace(\"you\", \"they\")) : Block, InteractionBlock, KordExKoinComponent","description":"dev.kordex.modules.func.welcome.blocks.ComplianceBlock","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-compliance-block/index.html","searchKeys":["ComplianceBlock","data class ComplianceBlock(val id: String, val role: Snowflake, val title: String, val buttonText: String, val logChannel: Snowflake, val complianceTypeUser: String, val template: String = \"__**{TITLE}**__\\n\\n\" +\n\n\t\t\"By clicking the button below, you certify that:\\n\\n\" +\n\n\t\t\"**»** {COMPLIANCE_TYPE_USER}\\n\\n\" +\n\n\t\t\"**Please note:** Once you certify the above, you can't revoke your certification. If you decide to \" +\n\t\t\"certify the above when it's not true, you may be punished or removed from the server.\", val complianceTypeLogs: String = complianceTypeUser\n\t\t.replace(\"You\", \"They\")\n\t\t.replace(\"you\", \"they\")) : Block, InteractionBlock, KordExKoinComponent","dev.kordex.modules.func.welcome.blocks.ComplianceBlock"]},{"name":"data class EmbedBlock(val embeds: List<EmbedData>, val text: String? = null) : Block, KordExKoinComponent","description":"dev.kordex.modules.func.welcome.blocks.EmbedBlock","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-embed-block/index.html","searchKeys":["EmbedBlock","data class EmbedBlock(val embeds: List<EmbedData>, val text: String? = null) : Block, KordExKoinComponent","dev.kordex.modules.func.welcome.blocks.EmbedBlock"]},{"name":"data class LinksBlock(val title: String, val links: Map<String, String>, val text: String? = null, val color: Color = DISCORD_BLURPLE, val description: String? = null, val template: String = \"**»** [{TEXT}]({URL})\") : Block","description":"dev.kordex.modules.func.welcome.blocks.LinksBlock","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-links-block/index.html","searchKeys":["LinksBlock","data class LinksBlock(val title: String, val links: Map<String, String>, val text: String? = null, val color: Color = DISCORD_BLURPLE, val description: String? = null, val template: String = \"**»** [{TEXT}]({URL})\") : Block","dev.kordex.modules.func.welcome.blocks.LinksBlock"]},{"name":"data class MessageCopyBlock(val messageUrl: String, val color: Color = DISCORD_BLURPLE, val template: String = \"{TEXT}\", val title: String? = null, val useEmbed: Boolean = false) : Block, KordExKoinComponent","description":"dev.kordex.modules.func.welcome.blocks.MessageCopyBlock","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-message-copy-block/index.html","searchKeys":["MessageCopyBlock","data class MessageCopyBlock(val messageUrl: String, val color: Color = DISCORD_BLURPLE, val template: String = \"{TEXT}\", val title: String? = null, val useEmbed: Boolean = false) : Block, KordExKoinComponent","dev.kordex.modules.func.welcome.blocks.MessageCopyBlock"]},{"name":"data class RoleItem(val description: String, val emoji: String? = null)","description":"dev.kordex.modules.func.welcome.blocks.RoleItem","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-role-item/index.html","searchKeys":["RoleItem","data class RoleItem(val description: String, val emoji: String? = null)","dev.kordex.modules.func.welcome.blocks.RoleItem"]},{"name":"data class RolesBlock(val id: String, val roles: Map<Snowflake, RoleItem>, val title: String = \"Role Assignment\", val description: String = \"Click the button below to assign yourself any of the following roles.\", val color: Color = DISCORD_BLURPLE, val template: String = \"**»** {MENTION} {DESCRIPTION}\") : Block, InteractionBlock, KordExKoinComponent","description":"dev.kordex.modules.func.welcome.blocks.RolesBlock","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-roles-block/index.html","searchKeys":["RolesBlock","data class RolesBlock(val id: String, val roles: Map<Snowflake, RoleItem>, val title: String = \"Role Assignment\", val description: String = \"Click the button below to assign yourself any of the following roles.\", val color: Color = DISCORD_BLURPLE, val template: String = \"**»** {MENTION} {DESCRIPTION}\") : Block, InteractionBlock, KordExKoinComponent","dev.kordex.modules.func.welcome.blocks.RolesBlock"]},{"name":"data class RulesBlock(val rules: LinkedHashMap<String, String>, val text: String? = null, val startingIndex: Int = 1, val colors: List<Color> = listOf(\n\t\tColor(0xff0000),\n\t\tColor(0xff8c00),\n\t\tColor(0xe1ff00),\n\t\tColor(0x55ff00),\n\t\tColor(0x00ff37),\n\t\tColor(0x00ffc8),\n\t\tColor(0x00aaff),\n\t\tColor(0x001eff),\n\t\tColor(0x7300ff),\n\t\tColor(0xff00ff),\n\t)) : Block","description":"dev.kordex.modules.func.welcome.blocks.RulesBlock","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-rules-block/index.html","searchKeys":["RulesBlock","data class RulesBlock(val rules: LinkedHashMap<String, String>, val text: String? = null, val startingIndex: Int = 1, val colors: List<Color> = listOf(\n\t\tColor(0xff0000),\n\t\tColor(0xff8c00),\n\t\tColor(0xe1ff00),\n\t\tColor(0x55ff00),\n\t\tColor(0x00ff37),\n\t\tColor(0x00ffc8),\n\t\tColor(0x00aaff),\n\t\tColor(0x001eff),\n\t\tColor(0x7300ff),\n\t\tColor(0xff00ff),\n\t)) : Block","dev.kordex.modules.func.welcome.blocks.RulesBlock"]},{"name":"data class TextBlock(val text: String) : Block","description":"dev.kordex.modules.func.welcome.blocks.TextBlock","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-text-block/index.html","searchKeys":["TextBlock","data class TextBlock(val text: String) : Block","dev.kordex.modules.func.welcome.blocks.TextBlock"]},{"name":"data class ThreadListBlock(val mode: ThreadListType, val limit: Int = 10, val text: String? = null, val description: String? = null, val color: Color = DISCORD_BLURPLE, val title: String = \" Threads\", val template: String = \"**»** [{NAME}]({URL})\", val activeEmoji: String? = null, val archivedEmoji: String? = null, val archiveStatusInName: Boolean = true, val includeArchived: Boolean = true, val includeNews: Boolean = true, val includePublic: Boolean = true, val includePrivate: Boolean = false, val includeHidden: Boolean = false, val includeHiddenChannels: Boolean = false) : Block","description":"dev.kordex.modules.func.welcome.blocks.ThreadListBlock","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-thread-list-block/index.html","searchKeys":["ThreadListBlock","data class ThreadListBlock(val mode: ThreadListType, val limit: Int = 10, val text: String? = null, val description: String? = null, val color: Color = DISCORD_BLURPLE, val title: String = \" Threads\", val template: String = \"**»** [{NAME}]({URL})\", val activeEmoji: String? = null, val archivedEmoji: String? = null, val archiveStatusInName: Boolean = true, val includeArchived: Boolean = true, val includeNews: Boolean = true, val includePublic: Boolean = true, val includePrivate: Boolean = false, val includeHidden: Boolean = false, val includeHiddenChannels: Boolean = false) : Block","dev.kordex.modules.func.welcome.blocks.ThreadListBlock"]},{"name":"enum ThreadListType : Enum<ThreadListType> ","description":"dev.kordex.modules.func.welcome.enums.ThreadListType","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.enums/-thread-list-type/index.html","searchKeys":["ThreadListType","enum ThreadListType : Enum<ThreadListType> ","dev.kordex.modules.func.welcome.enums.ThreadListType"]},{"name":"fun Channel.getJumpUrl(): String","description":"dev.kordex.modules.func.welcome.getJumpUrl","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome/get-jump-url.html","searchKeys":["getJumpUrl","fun Channel.getJumpUrl(): String","dev.kordex.modules.func.welcome.getJumpUrl"]},{"name":"fun EmbedBuilder.isSimilar(other: EmbedBuilder): Boolean","description":"dev.kordex.modules.func.welcome.isSimilar","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome/is-similar.html","searchKeys":["isSimilar","fun EmbedBuilder.isSimilar(other: EmbedBuilder): Boolean","dev.kordex.modules.func.welcome.isSimilar"]},{"name":"fun ExtensionsBuilder.welcomeChannel(config: WelcomeChannelConfig, data: WelcomeChannelData)","description":"dev.kordex.modules.func.welcome.welcomeChannel","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome/welcome-channel.html","searchKeys":["welcomeChannel","fun ExtensionsBuilder.welcomeChannel(config: WelcomeChannelConfig, data: WelcomeChannelData)","dev.kordex.modules.func.welcome.welcomeChannel"]},{"name":"fun ExtensionsBuilder.welcomeChannel(data: WelcomeChannelData, body: SimpleWelcomeChannelConfig.Builder.() -> Unit)","description":"dev.kordex.modules.func.welcome.welcomeChannel","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome/welcome-channel.html","searchKeys":["welcomeChannel","fun ExtensionsBuilder.welcomeChannel(data: WelcomeChannelData, body: SimpleWelcomeChannelConfig.Builder.() -> Unit)","dev.kordex.modules.func.welcome.welcomeChannel"]},{"name":"fun MessageCreateBuilder.isSimilar(other: Message): Boolean","description":"dev.kordex.modules.func.welcome.isSimilar","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome/is-similar.html","searchKeys":["isSimilar","fun MessageCreateBuilder.isSimilar(other: Message): Boolean","dev.kordex.modules.func.welcome.isSimilar"]},{"name":"fun SimpleWelcomeChannelConfig(body: SimpleWelcomeChannelConfig.Builder.() -> Unit): SimpleWelcomeChannelConfig","description":"dev.kordex.modules.func.welcome.config.SimpleWelcomeChannelConfig","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.config/-simple-welcome-channel-config.html","searchKeys":["SimpleWelcomeChannelConfig","fun SimpleWelcomeChannelConfig(body: SimpleWelcomeChannelConfig.Builder.() -> Unit): SimpleWelcomeChannelConfig","dev.kordex.modules.func.welcome.config.SimpleWelcomeChannelConfig"]},{"name":"fun componentsAreSimilar(builderComponents: List<DiscordComponent>, messageComponents: List<Component>): Boolean","description":"dev.kordex.modules.func.welcome.componentsAreSimilar","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome/components-are-similar.html","searchKeys":["componentsAreSimilar","fun componentsAreSimilar(builderComponents: List<DiscordComponent>, messageComponents: List<Component>): Boolean","dev.kordex.modules.func.welcome.componentsAreSimilar"]},{"name":"fun getBlocks(): List<Block>","description":"dev.kordex.modules.func.welcome.WelcomeChannel.getBlocks","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome/-welcome-channel/get-blocks.html","searchKeys":["getBlocks","fun getBlocks(): List<Block>","dev.kordex.modules.func.welcome.WelcomeChannel.getBlocks"]},{"name":"fun getLogChannel(body: LogChannelGetter)","description":"dev.kordex.modules.func.welcome.config.SimpleWelcomeChannelConfig.Builder.getLogChannel","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.config/-simple-welcome-channel-config/-builder/get-log-channel.html","searchKeys":["getLogChannel","fun getLogChannel(body: LogChannelGetter)","dev.kordex.modules.func.welcome.config.SimpleWelcomeChannelConfig.Builder.getLogChannel"]},{"name":"fun serializer(body: PolymorphicModuleBuilder<Block>.() -> Unit)","description":"dev.kordex.modules.func.welcome.config.SimpleWelcomeChannelConfig.Builder.serializer","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.config/-simple-welcome-channel-config/-builder/serializer.html","searchKeys":["serializer","fun serializer(body: PolymorphicModuleBuilder<Block>.() -> Unit)","dev.kordex.modules.func.welcome.config.SimpleWelcomeChannelConfig.Builder.serializer"]},{"name":"fun shutdown()","description":"dev.kordex.modules.func.welcome.WelcomeChannel.shutdown","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome/-welcome-channel/shutdown.html","searchKeys":["shutdown","fun shutdown()","dev.kordex.modules.func.welcome.WelcomeChannel.shutdown"]},{"name":"fun staffCommandCheck(body: Check<*>)","description":"dev.kordex.modules.func.welcome.config.SimpleWelcomeChannelConfig.Builder.staffCommandCheck","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.config/-simple-welcome-channel-config/-builder/staff-command-check.html","searchKeys":["staffCommandCheck","fun staffCommandCheck(body: Check<*>)","dev.kordex.modules.func.welcome.config.SimpleWelcomeChannelConfig.Builder.staffCommandCheck"]},{"name":"fun valueOf(value: String): ThreadListType","description":"dev.kordex.modules.func.welcome.enums.ThreadListType.valueOf","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.enums/-thread-list-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ThreadListType","dev.kordex.modules.func.welcome.enums.ThreadListType.valueOf"]},{"name":"fun values(): Array<ThreadListType>","description":"dev.kordex.modules.func.welcome.enums.ThreadListType.values","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.enums/-thread-list-type/values.html","searchKeys":["values","fun values(): Array<ThreadListType>","dev.kordex.modules.func.welcome.enums.ThreadListType.values"]},{"name":"inline fun <T, R> List<T>.ifNotEmpty(body: Collection<T>.() -> List<R>): List<R>","description":"dev.kordex.modules.func.welcome.ifNotEmpty","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome/if-not-empty.html","searchKeys":["ifNotEmpty","inline fun <T, R> List<T>.ifNotEmpty(body: Collection<T>.() -> List<R>): List<R>","dev.kordex.modules.func.welcome.ifNotEmpty"]},{"name":"interface InteractionBlock","description":"dev.kordex.modules.func.welcome.blocks.InteractionBlock","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-interaction-block/index.html","searchKeys":["InteractionBlock","interface InteractionBlock","dev.kordex.modules.func.welcome.blocks.InteractionBlock"]},{"name":"interface WelcomeChannelData","description":"dev.kordex.modules.func.welcome.data.WelcomeChannelData","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.data/-welcome-channel-data/index.html","searchKeys":["WelcomeChannelData","interface WelcomeChannelData","dev.kordex.modules.func.welcome.data.WelcomeChannelData"]},{"name":"lateinit var channel: GuildMessageChannel","description":"dev.kordex.modules.func.welcome.blocks.Block.channel","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-block/channel.html","searchKeys":["channel","lateinit var channel: GuildMessageChannel","dev.kordex.modules.func.welcome.blocks.Block.channel"]},{"name":"lateinit var guild: Guild","description":"dev.kordex.modules.func.welcome.blocks.Block.guild","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-block/guild.html","searchKeys":["guild","lateinit var guild: Guild","dev.kordex.modules.func.welcome.blocks.Block.guild"]},{"name":"open override val name: String","description":"dev.kordex.modules.func.welcome.WelcomeExtension.name","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome/-welcome-extension/name.html","searchKeys":["name","open override val name: String","dev.kordex.modules.func.welcome.WelcomeExtension.name"]},{"name":"open override val serializerBuilders: List<PolymorphicModuleBuilder<Block>.() -> Unit>","description":"dev.kordex.modules.func.welcome.config.SimpleWelcomeChannelConfig.serializerBuilders","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.config/-simple-welcome-channel-config/serializer-builders.html","searchKeys":["serializerBuilders","open override val serializerBuilders: List<PolymorphicModuleBuilder<Block>.() -> Unit>","dev.kordex.modules.func.welcome.config.SimpleWelcomeChannelConfig.serializerBuilders"]},{"name":"open suspend fun getSerializersModule(): SerializersModule","description":"dev.kordex.modules.func.welcome.config.WelcomeChannelConfig.getSerializersModule","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.config/-welcome-channel-config/get-serializers-module.html","searchKeys":["getSerializersModule","open suspend fun getSerializersModule(): SerializersModule","dev.kordex.modules.func.welcome.config.WelcomeChannelConfig.getSerializersModule"]},{"name":"open suspend override fun create(builder: MessageCreateBuilder)","description":"dev.kordex.modules.func.welcome.blocks.ComplianceBlock.create","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-compliance-block/create.html","searchKeys":["create","open suspend override fun create(builder: MessageCreateBuilder)","dev.kordex.modules.func.welcome.blocks.ComplianceBlock.create"]},{"name":"open suspend override fun create(builder: MessageCreateBuilder)","description":"dev.kordex.modules.func.welcome.blocks.EmbedBlock.create","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-embed-block/create.html","searchKeys":["create","open suspend override fun create(builder: MessageCreateBuilder)","dev.kordex.modules.func.welcome.blocks.EmbedBlock.create"]},{"name":"open suspend override fun create(builder: MessageCreateBuilder)","description":"dev.kordex.modules.func.welcome.blocks.LinksBlock.create","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-links-block/create.html","searchKeys":["create","open suspend override fun create(builder: MessageCreateBuilder)","dev.kordex.modules.func.welcome.blocks.LinksBlock.create"]},{"name":"open suspend override fun create(builder: MessageCreateBuilder)","description":"dev.kordex.modules.func.welcome.blocks.MessageCopyBlock.create","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-message-copy-block/create.html","searchKeys":["create","open suspend override fun create(builder: MessageCreateBuilder)","dev.kordex.modules.func.welcome.blocks.MessageCopyBlock.create"]},{"name":"open suspend override fun create(builder: MessageCreateBuilder)","description":"dev.kordex.modules.func.welcome.blocks.RolesBlock.create","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-roles-block/create.html","searchKeys":["create","open suspend override fun create(builder: MessageCreateBuilder)","dev.kordex.modules.func.welcome.blocks.RolesBlock.create"]},{"name":"open suspend override fun create(builder: MessageCreateBuilder)","description":"dev.kordex.modules.func.welcome.blocks.RulesBlock.create","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-rules-block/create.html","searchKeys":["create","open suspend override fun create(builder: MessageCreateBuilder)","dev.kordex.modules.func.welcome.blocks.RulesBlock.create"]},{"name":"open suspend override fun create(builder: MessageCreateBuilder)","description":"dev.kordex.modules.func.welcome.blocks.TextBlock.create","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-text-block/create.html","searchKeys":["create","open suspend override fun create(builder: MessageCreateBuilder)","dev.kordex.modules.func.welcome.blocks.TextBlock.create"]},{"name":"open suspend override fun create(builder: MessageCreateBuilder)","description":"dev.kordex.modules.func.welcome.blocks.ThreadListBlock.create","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-thread-list-block/create.html","searchKeys":["create","open suspend override fun create(builder: MessageCreateBuilder)","dev.kordex.modules.func.welcome.blocks.ThreadListBlock.create"]},{"name":"open suspend override fun edit(builder: MessageModifyBuilder)","description":"dev.kordex.modules.func.welcome.blocks.ComplianceBlock.edit","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-compliance-block/edit.html","searchKeys":["edit","open suspend override fun edit(builder: MessageModifyBuilder)","dev.kordex.modules.func.welcome.blocks.ComplianceBlock.edit"]},{"name":"open suspend override fun edit(builder: MessageModifyBuilder)","description":"dev.kordex.modules.func.welcome.blocks.EmbedBlock.edit","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-embed-block/edit.html","searchKeys":["edit","open suspend override fun edit(builder: MessageModifyBuilder)","dev.kordex.modules.func.welcome.blocks.EmbedBlock.edit"]},{"name":"open suspend override fun edit(builder: MessageModifyBuilder)","description":"dev.kordex.modules.func.welcome.blocks.LinksBlock.edit","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-links-block/edit.html","searchKeys":["edit","open suspend override fun edit(builder: MessageModifyBuilder)","dev.kordex.modules.func.welcome.blocks.LinksBlock.edit"]},{"name":"open suspend override fun edit(builder: MessageModifyBuilder)","description":"dev.kordex.modules.func.welcome.blocks.MessageCopyBlock.edit","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-message-copy-block/edit.html","searchKeys":["edit","open suspend override fun edit(builder: MessageModifyBuilder)","dev.kordex.modules.func.welcome.blocks.MessageCopyBlock.edit"]},{"name":"open suspend override fun edit(builder: MessageModifyBuilder)","description":"dev.kordex.modules.func.welcome.blocks.RolesBlock.edit","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-roles-block/edit.html","searchKeys":["edit","open suspend override fun edit(builder: MessageModifyBuilder)","dev.kordex.modules.func.welcome.blocks.RolesBlock.edit"]},{"name":"open suspend override fun edit(builder: MessageModifyBuilder)","description":"dev.kordex.modules.func.welcome.blocks.RulesBlock.edit","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-rules-block/edit.html","searchKeys":["edit","open suspend override fun edit(builder: MessageModifyBuilder)","dev.kordex.modules.func.welcome.blocks.RulesBlock.edit"]},{"name":"open suspend override fun edit(builder: MessageModifyBuilder)","description":"dev.kordex.modules.func.welcome.blocks.TextBlock.edit","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-text-block/edit.html","searchKeys":["edit","open suspend override fun edit(builder: MessageModifyBuilder)","dev.kordex.modules.func.welcome.blocks.TextBlock.edit"]},{"name":"open suspend override fun edit(builder: MessageModifyBuilder)","description":"dev.kordex.modules.func.welcome.blocks.ThreadListBlock.edit","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-thread-list-block/edit.html","searchKeys":["edit","open suspend override fun edit(builder: MessageModifyBuilder)","dev.kordex.modules.func.welcome.blocks.ThreadListBlock.edit"]},{"name":"open suspend override fun getChannelURLs(): Map<Snowflake, String>","description":"dev.kordex.modules.func.welcome.data.MemoryWelcomeChannelData.getChannelURLs","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.data/-memory-welcome-channel-data/get-channel-u-r-ls.html","searchKeys":["getChannelURLs","open suspend override fun getChannelURLs(): Map<Snowflake, String>","dev.kordex.modules.func.welcome.data.MemoryWelcomeChannelData.getChannelURLs"]},{"name":"open suspend override fun getLoggingChannel(channel: GuildMessageChannel, guild: Guild): GuildMessageChannel?","description":"dev.kordex.modules.func.welcome.config.SimpleWelcomeChannelConfig.getLoggingChannel","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.config/-simple-welcome-channel-config/get-logging-channel.html","searchKeys":["getLoggingChannel","open suspend override fun getLoggingChannel(channel: GuildMessageChannel, guild: Guild): GuildMessageChannel?","dev.kordex.modules.func.welcome.config.SimpleWelcomeChannelConfig.getLoggingChannel"]},{"name":"open suspend override fun getRefreshDelay(): Duration?","description":"dev.kordex.modules.func.welcome.config.SimpleWelcomeChannelConfig.getRefreshDelay","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.config/-simple-welcome-channel-config/get-refresh-delay.html","searchKeys":["getRefreshDelay","open suspend override fun getRefreshDelay(): Duration?","dev.kordex.modules.func.welcome.config.SimpleWelcomeChannelConfig.getRefreshDelay"]},{"name":"open suspend override fun getStaffCommandChecks(): List<Check<*>>","description":"dev.kordex.modules.func.welcome.config.SimpleWelcomeChannelConfig.getStaffCommandChecks","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.config/-simple-welcome-channel-config/get-staff-command-checks.html","searchKeys":["getStaffCommandChecks","open suspend override fun getStaffCommandChecks(): List<Check<*>>","dev.kordex.modules.func.welcome.config.SimpleWelcomeChannelConfig.getStaffCommandChecks"]},{"name":"open suspend override fun getUrlForChannel(channelId: Snowflake): String?","description":"dev.kordex.modules.func.welcome.data.MemoryWelcomeChannelData.getUrlForChannel","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.data/-memory-welcome-channel-data/get-url-for-channel.html","searchKeys":["getUrlForChannel","open suspend override fun getUrlForChannel(channelId: Snowflake): String?","dev.kordex.modules.func.welcome.data.MemoryWelcomeChannelData.getUrlForChannel"]},{"name":"open suspend override fun handleInteraction(event: InteractionCreateEvent)","description":"dev.kordex.modules.func.welcome.blocks.ComplianceBlock.handleInteraction","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-compliance-block/handle-interaction.html","searchKeys":["handleInteraction","open suspend override fun handleInteraction(event: InteractionCreateEvent)","dev.kordex.modules.func.welcome.blocks.ComplianceBlock.handleInteraction"]},{"name":"open suspend override fun handleInteraction(event: InteractionCreateEvent)","description":"dev.kordex.modules.func.welcome.blocks.RolesBlock.handleInteraction","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-roles-block/handle-interaction.html","searchKeys":["handleInteraction","open suspend override fun handleInteraction(event: InteractionCreateEvent)","dev.kordex.modules.func.welcome.blocks.RolesBlock.handleInteraction"]},{"name":"open suspend override fun removeChannel(channelId: Snowflake): String?","description":"dev.kordex.modules.func.welcome.data.MemoryWelcomeChannelData.removeChannel","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.data/-memory-welcome-channel-data/remove-channel.html","searchKeys":["removeChannel","open suspend override fun removeChannel(channelId: Snowflake): String?","dev.kordex.modules.func.welcome.data.MemoryWelcomeChannelData.removeChannel"]},{"name":"open suspend override fun setUrlForChannel(channelId: Snowflake, url: String)","description":"dev.kordex.modules.func.welcome.data.MemoryWelcomeChannelData.setUrlForChannel","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.data/-memory-welcome-channel-data/set-url-for-channel.html","searchKeys":["setUrlForChannel","open suspend override fun setUrlForChannel(channelId: Snowflake, url: String)","dev.kordex.modules.func.welcome.data.MemoryWelcomeChannelData.setUrlForChannel"]},{"name":"open suspend override fun setup()","description":"dev.kordex.modules.func.welcome.WelcomeExtension.setup","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome/-welcome-extension/setup.html","searchKeys":["setup","open suspend override fun setup()","dev.kordex.modules.func.welcome.WelcomeExtension.setup"]},{"name":"open suspend override fun unload()","description":"dev.kordex.modules.func.welcome.WelcomeExtension.unload","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome/-welcome-extension/unload.html","searchKeys":["unload","open suspend override fun unload()","dev.kordex.modules.func.welcome.WelcomeExtension.unload"]},{"name":"open val serializerBuilders: List<PolymorphicModuleBuilder<Block>.() -> Unit>","description":"dev.kordex.modules.func.welcome.config.WelcomeChannelConfig.serializerBuilders","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.config/-welcome-channel-config/serializer-builders.html","searchKeys":["serializerBuilders","open val serializerBuilders: List<PolymorphicModuleBuilder<Block>.() -> Unit>","dev.kordex.modules.func.welcome.config.WelcomeChannelConfig.serializerBuilders"]},{"name":"suspend fun MessageCopyBlock.retrieveMessage(url: String): Message","description":"dev.kordex.modules.func.welcome.blocks.retrieveMessage","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/retrieve-message.html","searchKeys":["retrieveMessage","suspend fun MessageCopyBlock.retrieveMessage(url: String): Message","dev.kordex.modules.func.welcome.blocks.retrieveMessage"]},{"name":"suspend fun clear()","description":"dev.kordex.modules.func.welcome.WelcomeChannel.clear","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome/-welcome-channel/clear.html","searchKeys":["clear","suspend fun clear()","dev.kordex.modules.func.welcome.WelcomeChannel.clear"]},{"name":"suspend fun handleInteraction(event: InteractionCreateEvent)","description":"dev.kordex.modules.func.welcome.WelcomeChannel.handleInteraction","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome/-welcome-channel/handle-interaction.html","searchKeys":["handleInteraction","suspend fun handleInteraction(event: InteractionCreateEvent)","dev.kordex.modules.func.welcome.WelcomeChannel.handleInteraction"]},{"name":"suspend fun log(builder: suspend UserMessageCreateBuilder.() -> Unit): Message?","description":"dev.kordex.modules.func.welcome.WelcomeChannel.log","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome/-welcome-channel/log.html","searchKeys":["log","suspend fun log(builder: suspend UserMessageCreateBuilder.() -> Unit): Message?","dev.kordex.modules.func.welcome.WelcomeChannel.log"]},{"name":"suspend fun log(channel: GuildMessageChannel, builder: UserMessageCreateBuilder.() -> Unit): Message?","description":"dev.kordex.modules.func.welcome.WelcomeExtension.log","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome/-welcome-extension/log.html","searchKeys":["log","suspend fun log(channel: GuildMessageChannel, builder: UserMessageCreateBuilder.() -> Unit): Message?","dev.kordex.modules.func.welcome.WelcomeExtension.log"]},{"name":"suspend fun populate()","description":"dev.kordex.modules.func.welcome.WelcomeChannel.populate","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome/-welcome-channel/populate.html","searchKeys":["populate","suspend fun populate()","dev.kordex.modules.func.welcome.WelcomeChannel.populate"]},{"name":"suspend fun setup()","description":"dev.kordex.modules.func.welcome.WelcomeChannel.setup","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome/-welcome-channel/setup.html","searchKeys":["setup","suspend fun setup()","dev.kordex.modules.func.welcome.WelcomeChannel.setup"]},{"name":"val activeEmoji: String? = null","description":"dev.kordex.modules.func.welcome.blocks.ThreadListBlock.activeEmoji","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-thread-list-block/active-emoji.html","searchKeys":["activeEmoji","val activeEmoji: String? = null","dev.kordex.modules.func.welcome.blocks.ThreadListBlock.activeEmoji"]},{"name":"val archiveStatusInName: Boolean = true","description":"dev.kordex.modules.func.welcome.blocks.ThreadListBlock.archiveStatusInName","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-thread-list-block/archive-status-in-name.html","searchKeys":["archiveStatusInName","val archiveStatusInName: Boolean = true","dev.kordex.modules.func.welcome.blocks.ThreadListBlock.archiveStatusInName"]},{"name":"val archivedEmoji: String? = null","description":"dev.kordex.modules.func.welcome.blocks.ThreadListBlock.archivedEmoji","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-thread-list-block/archived-emoji.html","searchKeys":["archivedEmoji","val archivedEmoji: String? = null","dev.kordex.modules.func.welcome.blocks.ThreadListBlock.archivedEmoji"]},{"name":"val buttonText: String","description":"dev.kordex.modules.func.welcome.blocks.ComplianceBlock.buttonText","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-compliance-block/button-text.html","searchKeys":["buttonText","val buttonText: String","dev.kordex.modules.func.welcome.blocks.ComplianceBlock.buttonText"]},{"name":"val channel: GuildMessageChannel","description":"dev.kordex.modules.func.welcome.WelcomeChannel.channel","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome/-welcome-channel/channel.html","searchKeys":["channel","val channel: GuildMessageChannel","dev.kordex.modules.func.welcome.WelcomeChannel.channel"]},{"name":"val color: Color","description":"dev.kordex.modules.func.welcome.blocks.LinksBlock.color","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-links-block/color.html","searchKeys":["color","val color: Color","dev.kordex.modules.func.welcome.blocks.LinksBlock.color"]},{"name":"val color: Color","description":"dev.kordex.modules.func.welcome.blocks.MessageCopyBlock.color","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-message-copy-block/color.html","searchKeys":["color","val color: Color","dev.kordex.modules.func.welcome.blocks.MessageCopyBlock.color"]},{"name":"val color: Color","description":"dev.kordex.modules.func.welcome.blocks.RolesBlock.color","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-roles-block/color.html","searchKeys":["color","val color: Color","dev.kordex.modules.func.welcome.blocks.RolesBlock.color"]},{"name":"val color: Color","description":"dev.kordex.modules.func.welcome.blocks.ThreadListBlock.color","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-thread-list-block/color.html","searchKeys":["color","val color: Color","dev.kordex.modules.func.welcome.blocks.ThreadListBlock.color"]},{"name":"val colors: List<Color>","description":"dev.kordex.modules.func.welcome.blocks.RulesBlock.colors","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-rules-block/colors.html","searchKeys":["colors","val colors: List<Color>","dev.kordex.modules.func.welcome.blocks.RulesBlock.colors"]},{"name":"val complianceTypeLogs: String","description":"dev.kordex.modules.func.welcome.blocks.ComplianceBlock.complianceTypeLogs","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-compliance-block/compliance-type-logs.html","searchKeys":["complianceTypeLogs","val complianceTypeLogs: String","dev.kordex.modules.func.welcome.blocks.ComplianceBlock.complianceTypeLogs"]},{"name":"val complianceTypeUser: String","description":"dev.kordex.modules.func.welcome.blocks.ComplianceBlock.complianceTypeUser","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-compliance-block/compliance-type-user.html","searchKeys":["complianceTypeUser","val complianceTypeUser: String","dev.kordex.modules.func.welcome.blocks.ComplianceBlock.complianceTypeUser"]},{"name":"val defaultSerializersModule: SerializersModule","description":"dev.kordex.modules.func.welcome.config.WelcomeChannelConfig.defaultSerializersModule","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.config/-welcome-channel-config/default-serializers-module.html","searchKeys":["defaultSerializersModule","val defaultSerializersModule: SerializersModule","dev.kordex.modules.func.welcome.config.WelcomeChannelConfig.defaultSerializersModule"]},{"name":"val description: String","description":"dev.kordex.modules.func.welcome.blocks.RoleItem.description","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-role-item/description.html","searchKeys":["description","val description: String","dev.kordex.modules.func.welcome.blocks.RoleItem.description"]},{"name":"val description: String","description":"dev.kordex.modules.func.welcome.blocks.RolesBlock.description","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-roles-block/description.html","searchKeys":["description","val description: String","dev.kordex.modules.func.welcome.blocks.RolesBlock.description"]},{"name":"val description: String? = null","description":"dev.kordex.modules.func.welcome.blocks.LinksBlock.description","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-links-block/description.html","searchKeys":["description","val description: String? = null","dev.kordex.modules.func.welcome.blocks.LinksBlock.description"]},{"name":"val description: String? = null","description":"dev.kordex.modules.func.welcome.blocks.ThreadListBlock.description","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-thread-list-block/description.html","searchKeys":["description","val description: String? = null","dev.kordex.modules.func.welcome.blocks.ThreadListBlock.description"]},{"name":"val embeds: List<EmbedData>","description":"dev.kordex.modules.func.welcome.blocks.EmbedBlock.embeds","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-embed-block/embeds.html","searchKeys":["embeds","val embeds: List<EmbedData>","dev.kordex.modules.func.welcome.blocks.EmbedBlock.embeds"]},{"name":"val emoji: String? = null","description":"dev.kordex.modules.func.welcome.blocks.RoleItem.emoji","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-role-item/emoji.html","searchKeys":["emoji","val emoji: String? = null","dev.kordex.modules.func.welcome.blocks.RoleItem.emoji"]},{"name":"val entries: EnumEntries<ThreadListType>","description":"dev.kordex.modules.func.welcome.enums.ThreadListType.entries","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.enums/-thread-list-type/entries.html","searchKeys":["entries","val entries: EnumEntries<ThreadListType>","dev.kordex.modules.func.welcome.enums.ThreadListType.entries"]},{"name":"val humanReadable: String","description":"dev.kordex.modules.func.welcome.enums.ThreadListType.humanReadable","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.enums/-thread-list-type/human-readable.html","searchKeys":["humanReadable","val humanReadable: String","dev.kordex.modules.func.welcome.enums.ThreadListType.humanReadable"]},{"name":"val id: String","description":"dev.kordex.modules.func.welcome.blocks.ComplianceBlock.id","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-compliance-block/id.html","searchKeys":["id","val id: String","dev.kordex.modules.func.welcome.blocks.ComplianceBlock.id"]},{"name":"val id: String","description":"dev.kordex.modules.func.welcome.blocks.RolesBlock.id","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-roles-block/id.html","searchKeys":["id","val id: String","dev.kordex.modules.func.welcome.blocks.RolesBlock.id"]},{"name":"val includeArchived: Boolean = true","description":"dev.kordex.modules.func.welcome.blocks.ThreadListBlock.includeArchived","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-thread-list-block/include-archived.html","searchKeys":["includeArchived","val includeArchived: Boolean = true","dev.kordex.modules.func.welcome.blocks.ThreadListBlock.includeArchived"]},{"name":"val includeHidden: Boolean = false","description":"dev.kordex.modules.func.welcome.blocks.ThreadListBlock.includeHidden","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-thread-list-block/include-hidden.html","searchKeys":["includeHidden","val includeHidden: Boolean = false","dev.kordex.modules.func.welcome.blocks.ThreadListBlock.includeHidden"]},{"name":"val includeHiddenChannels: Boolean = false","description":"dev.kordex.modules.func.welcome.blocks.ThreadListBlock.includeHiddenChannels","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-thread-list-block/include-hidden-channels.html","searchKeys":["includeHiddenChannels","val includeHiddenChannels: Boolean = false","dev.kordex.modules.func.welcome.blocks.ThreadListBlock.includeHiddenChannels"]},{"name":"val includeNews: Boolean = true","description":"dev.kordex.modules.func.welcome.blocks.ThreadListBlock.includeNews","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-thread-list-block/include-news.html","searchKeys":["includeNews","val includeNews: Boolean = true","dev.kordex.modules.func.welcome.blocks.ThreadListBlock.includeNews"]},{"name":"val includePrivate: Boolean = false","description":"dev.kordex.modules.func.welcome.blocks.ThreadListBlock.includePrivate","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-thread-list-block/include-private.html","searchKeys":["includePrivate","val includePrivate: Boolean = false","dev.kordex.modules.func.welcome.blocks.ThreadListBlock.includePrivate"]},{"name":"val includePublic: Boolean = true","description":"dev.kordex.modules.func.welcome.blocks.ThreadListBlock.includePublic","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-thread-list-block/include-public.html","searchKeys":["includePublic","val includePublic: Boolean = true","dev.kordex.modules.func.welcome.blocks.ThreadListBlock.includePublic"]},{"name":"val kord: Kord","description":"dev.kordex.modules.func.welcome.blocks.ComplianceBlock.kord","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-compliance-block/kord.html","searchKeys":["kord","val kord: Kord","dev.kordex.modules.func.welcome.blocks.ComplianceBlock.kord"]},{"name":"val kord: Kord","description":"dev.kordex.modules.func.welcome.blocks.EmbedBlock.kord","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-embed-block/kord.html","searchKeys":["kord","val kord: Kord","dev.kordex.modules.func.welcome.blocks.EmbedBlock.kord"]},{"name":"val kord: Kord","description":"dev.kordex.modules.func.welcome.blocks.MessageCopyBlock.kord","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-message-copy-block/kord.html","searchKeys":["kord","val kord: Kord","dev.kordex.modules.func.welcome.blocks.MessageCopyBlock.kord"]},{"name":"val kord: Kord","description":"dev.kordex.modules.func.welcome.blocks.RolesBlock.kord","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-roles-block/kord.html","searchKeys":["kord","val kord: Kord","dev.kordex.modules.func.welcome.blocks.RolesBlock.kord"]},{"name":"val limit: Int = 10","description":"dev.kordex.modules.func.welcome.blocks.ThreadListBlock.limit","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-thread-list-block/limit.html","searchKeys":["limit","val limit: Int = 10","dev.kordex.modules.func.welcome.blocks.ThreadListBlock.limit"]},{"name":"val links: Map<String, String>","description":"dev.kordex.modules.func.welcome.blocks.LinksBlock.links","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-links-block/links.html","searchKeys":["links","val links: Map<String, String>","dev.kordex.modules.func.welcome.blocks.LinksBlock.links"]},{"name":"val logChannel: Snowflake","description":"dev.kordex.modules.func.welcome.blocks.ComplianceBlock.logChannel","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-compliance-block/log-channel.html","searchKeys":["logChannel","val logChannel: Snowflake","dev.kordex.modules.func.welcome.blocks.ComplianceBlock.logChannel"]},{"name":"val messageUrl: String","description":"dev.kordex.modules.func.welcome.blocks.MessageCopyBlock.messageUrl","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-message-copy-block/message-url.html","searchKeys":["messageUrl","val messageUrl: String","dev.kordex.modules.func.welcome.blocks.MessageCopyBlock.messageUrl"]},{"name":"val mode: ThreadListType","description":"dev.kordex.modules.func.welcome.blocks.ThreadListBlock.mode","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-thread-list-block/mode.html","searchKeys":["mode","val mode: ThreadListType","dev.kordex.modules.func.welcome.blocks.ThreadListBlock.mode"]},{"name":"val role: Snowflake","description":"dev.kordex.modules.func.welcome.blocks.ComplianceBlock.role","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-compliance-block/role.html","searchKeys":["role","val role: Snowflake","dev.kordex.modules.func.welcome.blocks.ComplianceBlock.role"]},{"name":"val roles: Map<Snowflake, RoleItem>","description":"dev.kordex.modules.func.welcome.blocks.RolesBlock.roles","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-roles-block/roles.html","searchKeys":["roles","val roles: Map<Snowflake, RoleItem>","dev.kordex.modules.func.welcome.blocks.RolesBlock.roles"]},{"name":"val rules: LinkedHashMap<String, String>","description":"dev.kordex.modules.func.welcome.blocks.RulesBlock.rules","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-rules-block/rules.html","searchKeys":["rules","val rules: LinkedHashMap<String, String>","dev.kordex.modules.func.welcome.blocks.RulesBlock.rules"]},{"name":"val scheduler: Scheduler","description":"dev.kordex.modules.func.welcome.WelcomeChannel.scheduler","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome/-welcome-channel/scheduler.html","searchKeys":["scheduler","val scheduler: Scheduler","dev.kordex.modules.func.welcome.WelcomeChannel.scheduler"]},{"name":"val serializerBuilders: MutableList<PolymorphicModuleBuilder<Block>.() -> Unit>","description":"dev.kordex.modules.func.welcome.config.SimpleWelcomeChannelConfig.Builder.serializerBuilders","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.config/-simple-welcome-channel-config/-builder/serializer-builders.html","searchKeys":["serializerBuilders","val serializerBuilders: MutableList<PolymorphicModuleBuilder<Block>.() -> Unit>","dev.kordex.modules.func.welcome.config.SimpleWelcomeChannelConfig.Builder.serializerBuilders"]},{"name":"val startingIndex: Int = 1","description":"dev.kordex.modules.func.welcome.blocks.RulesBlock.startingIndex","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-rules-block/starting-index.html","searchKeys":["startingIndex","val startingIndex: Int = 1","dev.kordex.modules.func.welcome.blocks.RulesBlock.startingIndex"]},{"name":"val template: String","description":"dev.kordex.modules.func.welcome.blocks.ComplianceBlock.template","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-compliance-block/template.html","searchKeys":["template","val template: String","dev.kordex.modules.func.welcome.blocks.ComplianceBlock.template"]},{"name":"val template: String","description":"dev.kordex.modules.func.welcome.blocks.LinksBlock.template","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-links-block/template.html","searchKeys":["template","val template: String","dev.kordex.modules.func.welcome.blocks.LinksBlock.template"]},{"name":"val template: String","description":"dev.kordex.modules.func.welcome.blocks.MessageCopyBlock.template","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-message-copy-block/template.html","searchKeys":["template","val template: String","dev.kordex.modules.func.welcome.blocks.MessageCopyBlock.template"]},{"name":"val template: String","description":"dev.kordex.modules.func.welcome.blocks.RolesBlock.template","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-roles-block/template.html","searchKeys":["template","val template: String","dev.kordex.modules.func.welcome.blocks.RolesBlock.template"]},{"name":"val template: String","description":"dev.kordex.modules.func.welcome.blocks.ThreadListBlock.template","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-thread-list-block/template.html","searchKeys":["template","val template: String","dev.kordex.modules.func.welcome.blocks.ThreadListBlock.template"]},{"name":"val text: String","description":"dev.kordex.modules.func.welcome.blocks.TextBlock.text","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-text-block/text.html","searchKeys":["text","val text: String","dev.kordex.modules.func.welcome.blocks.TextBlock.text"]},{"name":"val text: String? = null","description":"dev.kordex.modules.func.welcome.blocks.EmbedBlock.text","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-embed-block/text.html","searchKeys":["text","val text: String? = null","dev.kordex.modules.func.welcome.blocks.EmbedBlock.text"]},{"name":"val text: String? = null","description":"dev.kordex.modules.func.welcome.blocks.LinksBlock.text","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-links-block/text.html","searchKeys":["text","val text: String? = null","dev.kordex.modules.func.welcome.blocks.LinksBlock.text"]},{"name":"val text: String? = null","description":"dev.kordex.modules.func.welcome.blocks.RulesBlock.text","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-rules-block/text.html","searchKeys":["text","val text: String? = null","dev.kordex.modules.func.welcome.blocks.RulesBlock.text"]},{"name":"val text: String? = null","description":"dev.kordex.modules.func.welcome.blocks.ThreadListBlock.text","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-thread-list-block/text.html","searchKeys":["text","val text: String? = null","dev.kordex.modules.func.welcome.blocks.ThreadListBlock.text"]},{"name":"val title: String","description":"dev.kordex.modules.func.welcome.blocks.ComplianceBlock.title","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-compliance-block/title.html","searchKeys":["title","val title: String","dev.kordex.modules.func.welcome.blocks.ComplianceBlock.title"]},{"name":"val title: String","description":"dev.kordex.modules.func.welcome.blocks.LinksBlock.title","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-links-block/title.html","searchKeys":["title","val title: String","dev.kordex.modules.func.welcome.blocks.LinksBlock.title"]},{"name":"val title: String","description":"dev.kordex.modules.func.welcome.blocks.RolesBlock.title","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-roles-block/title.html","searchKeys":["title","val title: String","dev.kordex.modules.func.welcome.blocks.RolesBlock.title"]},{"name":"val title: String","description":"dev.kordex.modules.func.welcome.blocks.ThreadListBlock.title","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-thread-list-block/title.html","searchKeys":["title","val title: String","dev.kordex.modules.func.welcome.blocks.ThreadListBlock.title"]},{"name":"val title: String? = null","description":"dev.kordex.modules.func.welcome.blocks.MessageCopyBlock.title","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-message-copy-block/title.html","searchKeys":["title","val title: String? = null","dev.kordex.modules.func.welcome.blocks.MessageCopyBlock.title"]},{"name":"val url: String","description":"dev.kordex.modules.func.welcome.WelcomeChannel.url","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome/-welcome-channel/url.html","searchKeys":["url","val url: String","dev.kordex.modules.func.welcome.WelcomeChannel.url"]},{"name":"val useEmbed: Boolean = false","description":"dev.kordex.modules.func.welcome.blocks.MessageCopyBlock.useEmbed","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.blocks/-message-copy-block/use-embed.html","searchKeys":["useEmbed","val useEmbed: Boolean = false","dev.kordex.modules.func.welcome.blocks.MessageCopyBlock.useEmbed"]},{"name":"var refreshDuration: Duration?","description":"dev.kordex.modules.func.welcome.config.SimpleWelcomeChannelConfig.Builder.refreshDuration","location":"modules/functionality/func-welcome/dev.kordex.modules.func.welcome.config/-simple-welcome-channel-config/-builder/refresh-duration.html","searchKeys":["refreshDuration","var refreshDuration: Duration?","dev.kordex.modules.func.welcome.config.SimpleWelcomeChannelConfig.Builder.refreshDuration"]},{"name":"class ConverterBuilderClassBuilder : KoinComponent","description":"dev.kordex.core.annotations.converters.builders.ConverterBuilderClassBuilder","location":"annotations/annotation-processor/dev.kordex.core.annotations.converters.builders/-converter-builder-class-builder/index.html","searchKeys":["ConverterBuilderClassBuilder","class ConverterBuilderClassBuilder : KoinComponent","dev.kordex.core.annotations.converters.builders.ConverterBuilderClassBuilder"]},{"name":"class ConverterBuilderFunctionBuilder : KoinComponent","description":"dev.kordex.core.annotations.converters.builders.ConverterBuilderFunctionBuilder","location":"annotations/annotation-processor/dev.kordex.core.annotations.converters.builders/-converter-builder-function-builder/index.html","searchKeys":["ConverterBuilderFunctionBuilder","class ConverterBuilderFunctionBuilder : KoinComponent","dev.kordex.core.annotations.converters.builders.ConverterBuilderFunctionBuilder"]},{"name":"class ConverterFunctionBuilder(val name: String) : KoinComponent","description":"dev.kordex.core.annotations.converters.ConverterFunctionBuilder","location":"annotations/annotation-processor/dev.kordex.core.annotations.converters/-converter-function-builder/index.html","searchKeys":["ConverterFunctionBuilder","class ConverterFunctionBuilder(val name: String) : KoinComponent","dev.kordex.core.annotations.converters.ConverterFunctionBuilder"]},{"name":"class ConverterProcessor(generator: CodeGenerator, logger: KSPLogger) : SymbolProcessor","description":"dev.kordex.core.annotations.converters.ConverterProcessor","location":"annotations/annotation-processor/dev.kordex.core.annotations.converters/-converter-processor/index.html","searchKeys":["ConverterProcessor","class ConverterProcessor(generator: CodeGenerator, logger: KSPLogger) : SymbolProcessor","dev.kordex.core.annotations.converters.ConverterProcessor"]},{"name":"class ConverterProcessorProvider : SymbolProcessorProvider","description":"dev.kordex.core.annotations.ConverterProcessorProvider","location":"annotations/annotation-processor/dev.kordex.core.annotations/-converter-processor-provider/index.html","searchKeys":["ConverterProcessorProvider","class ConverterProcessorProvider : SymbolProcessorProvider","dev.kordex.core.annotations.ConverterProcessorProvider"]},{"name":"constructor()","description":"dev.kordex.core.annotations.ConverterProcessorProvider.ConverterProcessorProvider","location":"annotations/annotation-processor/dev.kordex.core.annotations/-converter-processor-provider/-converter-processor-provider.html","searchKeys":["ConverterProcessorProvider","constructor()","dev.kordex.core.annotations.ConverterProcessorProvider.ConverterProcessorProvider"]},{"name":"constructor()","description":"dev.kordex.core.annotations.converters.ConverterProcessor.ConverterVisitor.ConverterVisitor","location":"annotations/annotation-processor/dev.kordex.core.annotations.converters/-converter-processor/-converter-visitor/-converter-visitor.html","searchKeys":["ConverterVisitor","constructor()","dev.kordex.core.annotations.converters.ConverterProcessor.ConverterVisitor.ConverterVisitor"]},{"name":"constructor()","description":"dev.kordex.core.annotations.converters.builders.ConverterBuilderClassBuilder.ConverterBuilderClassBuilder","location":"annotations/annotation-processor/dev.kordex.core.annotations.converters.builders/-converter-builder-class-builder/-converter-builder-class-builder.html","searchKeys":["ConverterBuilderClassBuilder","constructor()","dev.kordex.core.annotations.converters.builders.ConverterBuilderClassBuilder.ConverterBuilderClassBuilder"]},{"name":"constructor()","description":"dev.kordex.core.annotations.converters.builders.ConverterBuilderFunctionBuilder.ConverterBuilderFunctionBuilder","location":"annotations/annotation-processor/dev.kordex.core.annotations.converters.builders/-converter-builder-function-builder/-converter-builder-function-builder.html","searchKeys":["ConverterBuilderFunctionBuilder","constructor()","dev.kordex.core.annotations.converters.builders.ConverterBuilderFunctionBuilder.ConverterBuilderFunctionBuilder"]},{"name":"constructor(annotation: KSAnnotation, logger: KSPLogger)","description":"dev.kordex.core.annotations.converters.ConverterAnnotationArgs.ConverterAnnotationArgs","location":"annotations/annotation-processor/dev.kordex.core.annotations.converters/-converter-annotation-args/-converter-annotation-args.html","searchKeys":["ConverterAnnotationArgs","constructor(annotation: KSAnnotation, logger: KSPLogger)","dev.kordex.core.annotations.converters.ConverterAnnotationArgs.ConverterAnnotationArgs"]},{"name":"constructor(generator: CodeGenerator, logger: KSPLogger)","description":"dev.kordex.core.annotations.converters.ConverterProcessor.ConverterProcessor","location":"annotations/annotation-processor/dev.kordex.core.annotations.converters/-converter-processor/-converter-processor.html","searchKeys":["ConverterProcessor","constructor(generator: CodeGenerator, logger: KSPLogger)","dev.kordex.core.annotations.converters.ConverterProcessor.ConverterProcessor"]},{"name":"constructor(name: String)","description":"dev.kordex.core.annotations.converters.ConverterFunctionBuilder.ConverterFunctionBuilder","location":"annotations/annotation-processor/dev.kordex.core.annotations.converters/-converter-function-builder/-converter-function-builder.html","searchKeys":["ConverterFunctionBuilder","constructor(name: String)","dev.kordex.core.annotations.converters.ConverterFunctionBuilder.ConverterFunctionBuilder"]},{"name":"data class ConverterAnnotationArgs(val annotation: KSAnnotation, logger: KSPLogger)","description":"dev.kordex.core.annotations.converters.ConverterAnnotationArgs","location":"annotations/annotation-processor/dev.kordex.core.annotations.converters/-converter-annotation-args/index.html","searchKeys":["ConverterAnnotationArgs","data class ConverterAnnotationArgs(val annotation: KSAnnotation, logger: KSPLogger)","dev.kordex.core.annotations.converters.ConverterAnnotationArgs"]},{"name":"fun <T> Collection<T>.containsAny(vararg items: T): Boolean","description":"dev.kordex.core.annotations.containsAny","location":"annotations/annotation-processor/dev.kordex.core.annotations/contains-any.html","searchKeys":["containsAny","fun <T> Collection<T>.containsAny(vararg items: T): Boolean","dev.kordex.core.annotations.containsAny"]},{"name":"fun <T> List<T>.permutations(): Set<List<T>>","description":"dev.kordex.core.annotations.permutations","location":"annotations/annotation-processor/dev.kordex.core.annotations/permutations.html","searchKeys":["permutations","fun <T> List<T>.permutations(): Set<List<T>>","dev.kordex.core.annotations.permutations"]},{"name":"fun ConverterFunctionBuilder(name: String, body: ConverterFunctionBuilder.() -> Unit): String","description":"dev.kordex.core.annotations.converters.ConverterFunctionBuilder","location":"annotations/annotation-processor/dev.kordex.core.annotations.converters/-converter-function-builder.html","searchKeys":["ConverterFunctionBuilder","fun ConverterFunctionBuilder(name: String, body: ConverterFunctionBuilder.() -> Unit): String","dev.kordex.core.annotations.converters.ConverterFunctionBuilder"]},{"name":"fun KSNode.validateIgnoringFunctions(): Boolean","description":"dev.kordex.core.annotations.validateIgnoringFunctions","location":"annotations/annotation-processor/dev.kordex.core.annotations/validate-ignoring-functions.html","searchKeys":["validateIgnoringFunctions","fun KSNode.validateIgnoringFunctions(): Boolean","dev.kordex.core.annotations.validateIgnoringFunctions"]},{"name":"fun String.argument(name: String, type: String): String","description":"dev.kordex.core.annotations.argument","location":"annotations/annotation-processor/dev.kordex.core.annotations/argument.html","searchKeys":["argument","fun String.argument(name: String, type: String): String","dev.kordex.core.annotations.argument"]},{"name":"fun String.argument(name: String, type: String, default: String): String","description":"dev.kordex.core.annotations.argument","location":"annotations/annotation-processor/dev.kordex.core.annotations/argument.html","searchKeys":["argument","fun String.argument(name: String, type: String, default: String): String","dev.kordex.core.annotations.argument"]},{"name":"fun String.closeBrace(): String","description":"dev.kordex.core.annotations.closeBrace","location":"annotations/annotation-processor/dev.kordex.core.annotations/close-brace.html","searchKeys":["closeBrace","fun String.closeBrace(): String","dev.kordex.core.annotations.closeBrace"]},{"name":"fun String.function(name: String): String","description":"dev.kordex.core.annotations.function","location":"annotations/annotation-processor/dev.kordex.core.annotations/function.html","searchKeys":["function","fun String.function(name: String): String","dev.kordex.core.annotations.function"]},{"name":"fun String.function(name: String, receiver: String): String","description":"dev.kordex.core.annotations.function","location":"annotations/annotation-processor/dev.kordex.core.annotations/function.html","searchKeys":["function","fun String.function(name: String, receiver: String): String","dev.kordex.core.annotations.function"]},{"name":"fun String.line(line: String): String","description":"dev.kordex.core.annotations.line","location":"annotations/annotation-processor/dev.kordex.core.annotations/line.html","searchKeys":["line","fun String.line(line: String): String","dev.kordex.core.annotations.line"]},{"name":"fun String.maybe(bool: Boolean, callback: (String) -> String): String","description":"dev.kordex.core.annotations.maybe","location":"annotations/annotation-processor/dev.kordex.core.annotations/maybe.html","searchKeys":["maybe","fun String.maybe(bool: Boolean, callback: (String) -> String): String","dev.kordex.core.annotations.maybe"]},{"name":"fun String.maybe(predicate: () -> Boolean, callback: (String) -> String): String","description":"dev.kordex.core.annotations.maybe","location":"annotations/annotation-processor/dev.kordex.core.annotations/maybe.html","searchKeys":["maybe","fun String.maybe(predicate: () -> Boolean, callback: (String) -> String): String","dev.kordex.core.annotations.maybe"]},{"name":"fun String.returnsBrace(type: String): String","description":"dev.kordex.core.annotations.returnsBrace","location":"annotations/annotation-processor/dev.kordex.core.annotations/returns-brace.html","searchKeys":["returnsBrace","fun String.returnsBrace(type: String): String","dev.kordex.core.annotations.returnsBrace"]},{"name":"fun String.returnsStatement(type: String): String","description":"dev.kordex.core.annotations.returnsStatement","location":"annotations/annotation-processor/dev.kordex.core.annotations/returns-statement.html","searchKeys":["returnsStatement","fun String.returnsStatement(type: String): String","dev.kordex.core.annotations.returnsStatement"]},{"name":"fun String?.orNull(): String?","description":"dev.kordex.core.annotations.orNull","location":"annotations/annotation-processor/dev.kordex.core.annotations/or-null.html","searchKeys":["orNull","fun String?.orNull(): String?","dev.kordex.core.annotations.orNull"]},{"name":"fun build(): String","description":"dev.kordex.core.annotations.converters.ConverterFunctionBuilder.build","location":"annotations/annotation-processor/dev.kordex.core.annotations.converters/-converter-function-builder/build.html","searchKeys":["build","fun build(): String","dev.kordex.core.annotations.converters.ConverterFunctionBuilder.build"]},{"name":"fun build(): String","description":"dev.kordex.core.annotations.converters.builders.ConverterBuilderClassBuilder.build","location":"annotations/annotation-processor/dev.kordex.core.annotations.converters.builders/-converter-builder-class-builder/build.html","searchKeys":["build","fun build(): String","dev.kordex.core.annotations.converters.builders.ConverterBuilderClassBuilder.build"]},{"name":"fun build(): String","description":"dev.kordex.core.annotations.converters.builders.ConverterBuilderFunctionBuilder.build","location":"annotations/annotation-processor/dev.kordex.core.annotations.converters.builders/-converter-builder-function-builder/build.html","searchKeys":["build","fun build(): String","dev.kordex.core.annotations.converters.builders.ConverterBuilderFunctionBuilder.build"]},{"name":"fun builderArg(arg: String)","description":"dev.kordex.core.annotations.converters.builders.ConverterBuilderClassBuilder.builderArg","location":"annotations/annotation-processor/dev.kordex.core.annotations.converters.builders/-converter-builder-class-builder/builder-arg.html","searchKeys":["builderArg","fun builderArg(arg: String)","dev.kordex.core.annotations.converters.builders.ConverterBuilderClassBuilder.builderArg"]},{"name":"fun builderArg(arg: String): Boolean","description":"dev.kordex.core.annotations.converters.builders.ConverterBuilderFunctionBuilder.builderArg","location":"annotations/annotation-processor/dev.kordex.core.annotations.converters.builders/-converter-builder-function-builder/builder-arg.html","searchKeys":["builderArg","fun builderArg(arg: String): Boolean","dev.kordex.core.annotations.converters.builders.ConverterBuilderFunctionBuilder.builderArg"]},{"name":"fun builderBuildFunctionPreStatement(line: String)","description":"dev.kordex.core.annotations.converters.builders.ConverterBuilderClassBuilder.builderBuildFunctionPreStatement","location":"annotations/annotation-processor/dev.kordex.core.annotations.converters.builders/-converter-builder-class-builder/builder-build-function-pre-statement.html","searchKeys":["builderBuildFunctionPreStatement","fun builderBuildFunctionPreStatement(line: String)","dev.kordex.core.annotations.converters.builders.ConverterBuilderClassBuilder.builderBuildFunctionPreStatement"]},{"name":"fun builderBuildFunctionStatement(line: String)","description":"dev.kordex.core.annotations.converters.builders.ConverterBuilderClassBuilder.builderBuildFunctionStatement","location":"annotations/annotation-processor/dev.kordex.core.annotations.converters.builders/-converter-builder-class-builder/builder-build-function-statement.html","searchKeys":["builderBuildFunctionStatement","fun builderBuildFunctionStatement(line: String)","dev.kordex.core.annotations.converters.builders.ConverterBuilderClassBuilder.builderBuildFunctionStatement"]},{"name":"fun builderClass(body: ConverterBuilderClassBuilder.() -> Unit): ConverterBuilderClassBuilder","description":"dev.kordex.core.annotations.converters.builders.builderClass","location":"annotations/annotation-processor/dev.kordex.core.annotations.converters.builders/builder-class.html","searchKeys":["builderClass","fun builderClass(body: ConverterBuilderClassBuilder.() -> Unit): ConverterBuilderClassBuilder","dev.kordex.core.annotations.converters.builders.builderClass"]},{"name":"fun builderExtraStatement(line: String)","description":"dev.kordex.core.annotations.converters.builders.ConverterBuilderClassBuilder.builderExtraStatement","location":"annotations/annotation-processor/dev.kordex.core.annotations.converters.builders/-converter-builder-class-builder/builder-extra-statement.html","searchKeys":["builderExtraStatement","fun builderExtraStatement(line: String)","dev.kordex.core.annotations.converters.builders.ConverterBuilderClassBuilder.builderExtraStatement"]},{"name":"fun builderField(field: String)","description":"dev.kordex.core.annotations.converters.builders.ConverterBuilderClassBuilder.builderField","location":"annotations/annotation-processor/dev.kordex.core.annotations.converters.builders/-converter-builder-class-builder/builder-field.html","searchKeys":["builderField","fun builderField(field: String)","dev.kordex.core.annotations.converters.builders.ConverterBuilderClassBuilder.builderField"]},{"name":"fun builderFunction(body: ConverterBuilderFunctionBuilder.() -> Unit): String","description":"dev.kordex.core.annotations.converters.builders.builderFunction","location":"annotations/annotation-processor/dev.kordex.core.annotations.converters.builders/builder-function.html","searchKeys":["builderFunction","fun builderFunction(body: ConverterBuilderFunctionBuilder.() -> Unit): String","dev.kordex.core.annotations.converters.builders.builderFunction"]},{"name":"fun builderInitStatement(line: String)","description":"dev.kordex.core.annotations.converters.builders.ConverterBuilderClassBuilder.builderInitStatement","location":"annotations/annotation-processor/dev.kordex.core.annotations.converters.builders/-converter-builder-class-builder/builder-init-statement.html","searchKeys":["builderInitStatement","fun builderInitStatement(line: String)","dev.kordex.core.annotations.converters.builders.ConverterBuilderClassBuilder.builderInitStatement"]},{"name":"fun comment(lines: String): ConverterFunctionBuilder","description":"dev.kordex.core.annotations.converters.ConverterFunctionBuilder.comment","location":"annotations/annotation-processor/dev.kordex.core.annotations.converters/-converter-function-builder/comment.html","searchKeys":["comment","fun comment(lines: String): ConverterFunctionBuilder","dev.kordex.core.annotations.converters.ConverterFunctionBuilder.comment"]},{"name":"fun converter(name: String): ConverterFunctionBuilder","description":"dev.kordex.core.annotations.converters.ConverterFunctionBuilder.converter","location":"annotations/annotation-processor/dev.kordex.core.annotations.converters/-converter-function-builder/converter.html","searchKeys":["converter","fun converter(name: String): ConverterFunctionBuilder","dev.kordex.core.annotations.converters.ConverterFunctionBuilder.converter"]},{"name":"fun converterArg(name: String): ConverterFunctionBuilder","description":"dev.kordex.core.annotations.converters.ConverterFunctionBuilder.converterArg","location":"annotations/annotation-processor/dev.kordex.core.annotations.converters/-converter-function-builder/converter-arg.html","searchKeys":["converterArg","fun converterArg(name: String): ConverterFunctionBuilder","dev.kordex.core.annotations.converters.ConverterFunctionBuilder.converterArg"]},{"name":"fun converterArg(name: String, value: String): ConverterFunctionBuilder","description":"dev.kordex.core.annotations.converters.ConverterFunctionBuilder.converterArg","location":"annotations/annotation-processor/dev.kordex.core.annotations.converters/-converter-function-builder/converter-arg.html","searchKeys":["converterArg","fun converterArg(name: String, value: String): ConverterFunctionBuilder","dev.kordex.core.annotations.converters.ConverterFunctionBuilder.converterArg"]},{"name":"fun defaultFirstArgs(): ConverterFunctionBuilder","description":"dev.kordex.core.annotations.converters.ConverterFunctionBuilder.defaultFirstArgs","location":"annotations/annotation-processor/dev.kordex.core.annotations.converters/-converter-function-builder/default-first-args.html","searchKeys":["defaultFirstArgs","fun defaultFirstArgs(): ConverterFunctionBuilder","dev.kordex.core.annotations.converters.ConverterFunctionBuilder.defaultFirstArgs"]},{"name":"fun defaultLastArgs(typeParam: String): ConverterFunctionBuilder","description":"dev.kordex.core.annotations.converters.ConverterFunctionBuilder.defaultLastArgs","location":"annotations/annotation-processor/dev.kordex.core.annotations.converters/-converter-function-builder/default-last-args.html","searchKeys":["defaultLastArgs","fun defaultLastArgs(typeParam: String): ConverterFunctionBuilder","dev.kordex.core.annotations.converters.ConverterFunctionBuilder.defaultLastArgs"]},{"name":"fun docComment(comment: String): String","description":"dev.kordex.core.annotations.docComment","location":"annotations/annotation-processor/dev.kordex.core.annotations/doc-comment.html","searchKeys":["docComment","fun docComment(comment: String): String","dev.kordex.core.annotations.docComment"]},{"name":"fun explicitReturn(): ConverterFunctionBuilder","description":"dev.kordex.core.annotations.converters.ConverterFunctionBuilder.explicitReturn","location":"annotations/annotation-processor/dev.kordex.core.annotations.converters/-converter-function-builder/explicit-return.html","searchKeys":["explicitReturn","fun explicitReturn(): ConverterFunctionBuilder","dev.kordex.core.annotations.converters.ConverterFunctionBuilder.explicitReturn"]},{"name":"fun function(name: String): String","description":"dev.kordex.core.annotations.function","location":"annotations/annotation-processor/dev.kordex.core.annotations/function.html","searchKeys":["function","fun function(name: String): String","dev.kordex.core.annotations.function"]},{"name":"fun function(name: String, receiver: String): String","description":"dev.kordex.core.annotations.function","location":"annotations/annotation-processor/dev.kordex.core.annotations/function.html","searchKeys":["function","fun function(name: String, receiver: String): String","dev.kordex.core.annotations.function"]},{"name":"fun generic(name: String, type: String): ConverterFunctionBuilder","description":"dev.kordex.core.annotations.converters.ConverterFunctionBuilder.generic","location":"annotations/annotation-processor/dev.kordex.core.annotations.converters/-converter-function-builder/generic.html","searchKeys":["generic","fun generic(name: String, type: String): ConverterFunctionBuilder","dev.kordex.core.annotations.converters.ConverterFunctionBuilder.generic"]},{"name":"fun line(line: String): ConverterFunctionBuilder","description":"dev.kordex.core.annotations.converters.ConverterFunctionBuilder.line","location":"annotations/annotation-processor/dev.kordex.core.annotations.converters/-converter-function-builder/line.html","searchKeys":["line","fun line(line: String): ConverterFunctionBuilder","dev.kordex.core.annotations.converters.ConverterFunctionBuilder.line"]},{"name":"fun maybe(bool: Boolean, callback: ConverterFunctionBuilder.() -> Unit): ConverterFunctionBuilder","description":"dev.kordex.core.annotations.converters.ConverterFunctionBuilder.maybe","location":"annotations/annotation-processor/dev.kordex.core.annotations.converters/-converter-function-builder/maybe.html","searchKeys":["maybe","fun maybe(bool: Boolean, callback: ConverterFunctionBuilder.() -> Unit): ConverterFunctionBuilder","dev.kordex.core.annotations.converters.ConverterFunctionBuilder.maybe"]},{"name":"fun maybe(predicate: () -> Boolean, callback: ConverterFunctionBuilder.() -> Unit): ConverterFunctionBuilder","description":"dev.kordex.core.annotations.converters.ConverterFunctionBuilder.maybe","location":"annotations/annotation-processor/dev.kordex.core.annotations.converters/-converter-function-builder/maybe.html","searchKeys":["maybe","fun maybe(predicate: () -> Boolean, callback: ConverterFunctionBuilder.() -> Unit): ConverterFunctionBuilder","dev.kordex.core.annotations.converters.ConverterFunctionBuilder.maybe"]},{"name":"fun optionalFunArg(name: String, type: String, default: String): ConverterFunctionBuilder","description":"dev.kordex.core.annotations.converters.ConverterFunctionBuilder.optionalFunArg","location":"annotations/annotation-processor/dev.kordex.core.annotations.converters/-converter-function-builder/optional-fun-arg.html","searchKeys":["optionalFunArg","fun optionalFunArg(name: String, type: String, default: String): ConverterFunctionBuilder","dev.kordex.core.annotations.converters.ConverterFunctionBuilder.optionalFunArg"]},{"name":"fun rawFunArg(line: String): ConverterFunctionBuilder","description":"dev.kordex.core.annotations.converters.ConverterFunctionBuilder.rawFunArg","location":"annotations/annotation-processor/dev.kordex.core.annotations.converters/-converter-function-builder/raw-fun-arg.html","searchKeys":["rawFunArg","fun rawFunArg(line: String): ConverterFunctionBuilder","dev.kordex.core.annotations.converters.ConverterFunctionBuilder.rawFunArg"]},{"name":"fun rawGeneric(generic: String): ConverterFunctionBuilder","description":"dev.kordex.core.annotations.converters.ConverterFunctionBuilder.rawGeneric","location":"annotations/annotation-processor/dev.kordex.core.annotations.converters/-converter-function-builder/raw-generic.html","searchKeys":["rawGeneric","fun rawGeneric(generic: String): ConverterFunctionBuilder","dev.kordex.core.annotations.converters.ConverterFunctionBuilder.rawGeneric"]},{"name":"fun requiredFunArg(name: String, type: String): ConverterFunctionBuilder","description":"dev.kordex.core.annotations.converters.ConverterFunctionBuilder.requiredFunArg","location":"annotations/annotation-processor/dev.kordex.core.annotations.converters/-converter-function-builder/required-fun-arg.html","searchKeys":["requiredFunArg","fun requiredFunArg(name: String, type: String): ConverterFunctionBuilder","dev.kordex.core.annotations.converters.ConverterFunctionBuilder.requiredFunArg"]},{"name":"fun returnType(type: String): ConverterFunctionBuilder","description":"dev.kordex.core.annotations.converters.ConverterFunctionBuilder.returnType","location":"annotations/annotation-processor/dev.kordex.core.annotations.converters/-converter-function-builder/return-type.html","searchKeys":["returnType","fun returnType(type: String): ConverterFunctionBuilder","dev.kordex.core.annotations.converters.ConverterFunctionBuilder.returnType"]},{"name":"fun types(types: Collection<ConverterType>)","description":"dev.kordex.core.annotations.converters.builders.ConverterBuilderClassBuilder.types","location":"annotations/annotation-processor/dev.kordex.core.annotations.converters.builders/-converter-builder-class-builder/types.html","searchKeys":["types","fun types(types: Collection<ConverterType>)","dev.kordex.core.annotations.converters.builders.ConverterBuilderClassBuilder.types"]},{"name":"fun types(vararg types: ConverterType)","description":"dev.kordex.core.annotations.converters.builders.ConverterBuilderClassBuilder.types","location":"annotations/annotation-processor/dev.kordex.core.annotations.converters.builders/-converter-builder-class-builder/types.html","searchKeys":["types","fun types(vararg types: ConverterType)","dev.kordex.core.annotations.converters.builders.ConverterBuilderClassBuilder.types"]},{"name":"fun wrapper(name: String): ConverterFunctionBuilder","description":"dev.kordex.core.annotations.converters.ConverterFunctionBuilder.wrapper","location":"annotations/annotation-processor/dev.kordex.core.annotations.converters/-converter-function-builder/wrapper.html","searchKeys":["wrapper","fun wrapper(name: String): ConverterFunctionBuilder","dev.kordex.core.annotations.converters.ConverterFunctionBuilder.wrapper"]},{"name":"fun wrapperArg(name: String): ConverterFunctionBuilder","description":"dev.kordex.core.annotations.converters.ConverterFunctionBuilder.wrapperArg","location":"annotations/annotation-processor/dev.kordex.core.annotations.converters/-converter-function-builder/wrapper-arg.html","searchKeys":["wrapperArg","fun wrapperArg(name: String): ConverterFunctionBuilder","dev.kordex.core.annotations.converters.ConverterFunctionBuilder.wrapperArg"]},{"name":"fun wrapperArg(name: String, value: String): ConverterFunctionBuilder","description":"dev.kordex.core.annotations.converters.ConverterFunctionBuilder.wrapperArg","location":"annotations/annotation-processor/dev.kordex.core.annotations.converters/-converter-function-builder/wrapper-arg.html","searchKeys":["wrapperArg","fun wrapperArg(name: String, value: String): ConverterFunctionBuilder","dev.kordex.core.annotations.converters.ConverterFunctionBuilder.wrapperArg"]},{"name":"inner class ConverterVisitor : KSVisitorVoid","description":"dev.kordex.core.annotations.converters.ConverterProcessor.ConverterVisitor","location":"annotations/annotation-processor/dev.kordex.core.annotations.converters/-converter-processor/-converter-visitor/index.html","searchKeys":["ConverterVisitor","inner class ConverterVisitor : KSVisitorVoid","dev.kordex.core.annotations.converters.ConverterProcessor.ConverterVisitor"]},{"name":"lateinit var argumentType: String","description":"dev.kordex.core.annotations.converters.builders.ConverterBuilderClassBuilder.argumentType","location":"annotations/annotation-processor/dev.kordex.core.annotations.converters.builders/-converter-builder-class-builder/argument-type.html","searchKeys":["argumentType","lateinit var argumentType: String","dev.kordex.core.annotations.converters.builders.ConverterBuilderClassBuilder.argumentType"]},{"name":"lateinit var argumentType: String","description":"dev.kordex.core.annotations.converters.builders.ConverterBuilderFunctionBuilder.argumentType","location":"annotations/annotation-processor/dev.kordex.core.annotations.converters.builders/-converter-builder-function-builder/argument-type.html","searchKeys":["argumentType","lateinit var argumentType: String","dev.kordex.core.annotations.converters.builders.ConverterBuilderFunctionBuilder.argumentType"]},{"name":"lateinit var builderType: String","description":"dev.kordex.core.annotations.converters.builders.ConverterBuilderFunctionBuilder.builderType","location":"annotations/annotation-processor/dev.kordex.core.annotations.converters.builders/-converter-builder-function-builder/builder-type.html","searchKeys":["builderType","lateinit var builderType: String","dev.kordex.core.annotations.converters.builders.ConverterBuilderFunctionBuilder.builderType"]},{"name":"lateinit var converterClass: String","description":"dev.kordex.core.annotations.converters.builders.ConverterBuilderClassBuilder.converterClass","location":"annotations/annotation-processor/dev.kordex.core.annotations.converters.builders/-converter-builder-class-builder/converter-class.html","searchKeys":["converterClass","lateinit var converterClass: String","dev.kordex.core.annotations.converters.builders.ConverterBuilderClassBuilder.converterClass"]},{"name":"lateinit var converterType: String","description":"dev.kordex.core.annotations.converters.builders.ConverterBuilderFunctionBuilder.converterType","location":"annotations/annotation-processor/dev.kordex.core.annotations.converters.builders/-converter-builder-function-builder/converter-type.html","searchKeys":["converterType","lateinit var converterType: String","dev.kordex.core.annotations.converters.builders.ConverterBuilderFunctionBuilder.converterType"]},{"name":"lateinit var name: String","description":"dev.kordex.core.annotations.converters.builders.ConverterBuilderClassBuilder.name","location":"annotations/annotation-processor/dev.kordex.core.annotations.converters.builders/-converter-builder-class-builder/name.html","searchKeys":["name","lateinit var name: String","dev.kordex.core.annotations.converters.builders.ConverterBuilderClassBuilder.name"]},{"name":"lateinit var name: String","description":"dev.kordex.core.annotations.converters.builders.ConverterBuilderFunctionBuilder.name","location":"annotations/annotation-processor/dev.kordex.core.annotations.converters.builders/-converter-builder-function-builder/name.html","searchKeys":["name","lateinit var name: String","dev.kordex.core.annotations.converters.builders.ConverterBuilderFunctionBuilder.name"]},{"name":"open override fun create(environment: SymbolProcessorEnvironment): SymbolProcessor","description":"dev.kordex.core.annotations.ConverterProcessorProvider.create","location":"annotations/annotation-processor/dev.kordex.core.annotations/-converter-processor-provider/create.html","searchKeys":["create","open override fun create(environment: SymbolProcessorEnvironment): SymbolProcessor","dev.kordex.core.annotations.ConverterProcessorProvider.create"]},{"name":"open override fun process(resolver: Resolver): List<KSAnnotated>","description":"dev.kordex.core.annotations.converters.ConverterProcessor.process","location":"annotations/annotation-processor/dev.kordex.core.annotations.converters/-converter-processor/process.html","searchKeys":["process","open override fun process(resolver: Resolver): List<KSAnnotated>","dev.kordex.core.annotations.converters.ConverterProcessor.process"]},{"name":"open override fun visitClassDeclaration(classDeclaration: KSClassDeclaration, data: Unit)","description":"dev.kordex.core.annotations.converters.ConverterProcessor.ConverterVisitor.visitClassDeclaration","location":"annotations/annotation-processor/dev.kordex.core.annotations.converters/-converter-processor/-converter-visitor/visit-class-declaration.html","searchKeys":["visitClassDeclaration","open override fun visitClassDeclaration(classDeclaration: KSClassDeclaration, data: Unit)","dev.kordex.core.annotations.converters.ConverterProcessor.ConverterVisitor.visitClassDeclaration"]},{"name":"val annotation: KSAnnotation","description":"dev.kordex.core.annotations.converters.ConverterAnnotationArgs.annotation","location":"annotations/annotation-processor/dev.kordex.core.annotations.converters/-converter-annotation-args/annotation.html","searchKeys":["annotation","val annotation: KSAnnotation","dev.kordex.core.annotations.converters.ConverterAnnotationArgs.annotation"]},{"name":"val name: String","description":"dev.kordex.core.annotations.converters.ConverterFunctionBuilder.name","location":"annotations/annotation-processor/dev.kordex.core.annotations.converters/-converter-function-builder/name.html","searchKeys":["name","val name: String","dev.kordex.core.annotations.converters.ConverterFunctionBuilder.name"]},{"name":"var builderGeneric: String?","description":"dev.kordex.core.annotations.converters.builders.ConverterBuilderClassBuilder.builderGeneric","location":"annotations/annotation-processor/dev.kordex.core.annotations.converters.builders/-converter-builder-class-builder/builder-generic.html","searchKeys":["builderGeneric","var builderGeneric: String?","dev.kordex.core.annotations.converters.builders.ConverterBuilderClassBuilder.builderGeneric"]},{"name":"var builderGeneric: String?","description":"dev.kordex.core.annotations.converters.builders.ConverterBuilderFunctionBuilder.builderGeneric","location":"annotations/annotation-processor/dev.kordex.core.annotations.converters.builders/-converter-builder-function-builder/builder-generic.html","searchKeys":["builderGeneric","var builderGeneric: String?","dev.kordex.core.annotations.converters.builders.ConverterBuilderFunctionBuilder.builderGeneric"]},{"name":"var comment: String?","description":"dev.kordex.core.annotations.converters.builders.ConverterBuilderClassBuilder.comment","location":"annotations/annotation-processor/dev.kordex.core.annotations.converters.builders/-converter-builder-class-builder/comment.html","searchKeys":["comment","var comment: String?","dev.kordex.core.annotations.converters.builders.ConverterBuilderClassBuilder.comment"]},{"name":"var comment: String?","description":"dev.kordex.core.annotations.converters.builders.ConverterBuilderFunctionBuilder.comment","location":"annotations/annotation-processor/dev.kordex.core.annotations.converters.builders/-converter-builder-function-builder/comment.html","searchKeys":["comment","var comment: String?","dev.kordex.core.annotations.converters.builders.ConverterBuilderFunctionBuilder.comment"]},{"name":"var functionGeneric: String?","description":"dev.kordex.core.annotations.converters.builders.ConverterBuilderFunctionBuilder.functionGeneric","location":"annotations/annotation-processor/dev.kordex.core.annotations.converters.builders/-converter-builder-function-builder/function-generic.html","searchKeys":["functionGeneric","var functionGeneric: String?","dev.kordex.core.annotations.converters.builders.ConverterBuilderFunctionBuilder.functionGeneric"]},{"name":"var result: String?","description":"dev.kordex.core.annotations.converters.builders.ConverterBuilderClassBuilder.result","location":"annotations/annotation-processor/dev.kordex.core.annotations.converters.builders/-converter-builder-class-builder/result.html","searchKeys":["result","var result: String?","dev.kordex.core.annotations.converters.builders.ConverterBuilderClassBuilder.result"]},{"name":"var whereSuffix: String?","description":"dev.kordex.core.annotations.converters.builders.ConverterBuilderClassBuilder.whereSuffix","location":"annotations/annotation-processor/dev.kordex.core.annotations.converters.builders/-converter-builder-class-builder/where-suffix.html","searchKeys":["whereSuffix","var whereSuffix: String?","dev.kordex.core.annotations.converters.builders.ConverterBuilderClassBuilder.whereSuffix"]},{"name":"var whereSuffix: String?","description":"dev.kordex.core.annotations.converters.builders.ConverterBuilderFunctionBuilder.whereSuffix","location":"annotations/annotation-processor/dev.kordex.core.annotations.converters.builders/-converter-builder-function-builder/where-suffix.html","searchKeys":["whereSuffix","var whereSuffix: String?","dev.kordex.core.annotations.converters.builders.ConverterBuilderFunctionBuilder.whereSuffix"]},{"name":"class MongoDBDataAdapter : DataAdapter<String> , KordExKoinComponent","description":"dev.kordex.modules.data.mongodb.MongoDBDataAdapter","location":"modules/data/data-mongodb/dev.kordex.modules.data.mongodb/-mongo-d-b-data-adapter/index.html","searchKeys":["MongoDBDataAdapter","class MongoDBDataAdapter : DataAdapter<String> , KordExKoinComponent","dev.kordex.modules.data.mongodb.MongoDBDataAdapter"]},{"name":"constructor()","description":"dev.kordex.modules.data.mongodb.MongoDBDataAdapter.MongoDBDataAdapter","location":"modules/data/data-mongodb/dev.kordex.modules.data.mongodb/-mongo-d-b-data-adapter/-mongo-d-b-data-adapter.html","searchKeys":["MongoDBDataAdapter","constructor()","dev.kordex.modules.data.mongodb.MongoDBDataAdapter.MongoDBDataAdapter"]},{"name":"open suspend override fun <R : Data> delete(unit: StorageUnit<R>): Boolean","description":"dev.kordex.modules.data.mongodb.MongoDBDataAdapter.delete","location":"modules/data/data-mongodb/dev.kordex.modules.data.mongodb/-mongo-d-b-data-adapter/delete.html","searchKeys":["delete","open suspend override fun <R : Data> delete(unit: StorageUnit<R>): Boolean","dev.kordex.modules.data.mongodb.MongoDBDataAdapter.delete"]},{"name":"open suspend override fun <R : Data> get(unit: StorageUnit<R>): R?","description":"dev.kordex.modules.data.mongodb.MongoDBDataAdapter.get","location":"modules/data/data-mongodb/dev.kordex.modules.data.mongodb/-mongo-d-b-data-adapter/get.html","searchKeys":["get","open suspend override fun <R : Data> get(unit: StorageUnit<R>): R?","dev.kordex.modules.data.mongodb.MongoDBDataAdapter.get"]},{"name":"open suspend override fun <R : Data> reload(unit: StorageUnit<R>): R?","description":"dev.kordex.modules.data.mongodb.MongoDBDataAdapter.reload","location":"modules/data/data-mongodb/dev.kordex.modules.data.mongodb/-mongo-d-b-data-adapter/reload.html","searchKeys":["reload","open suspend override fun <R : Data> reload(unit: StorageUnit<R>): R?","dev.kordex.modules.data.mongodb.MongoDBDataAdapter.reload"]},{"name":"open suspend override fun <R : Data> save(unit: StorageUnit<R>): R?","description":"dev.kordex.modules.data.mongodb.MongoDBDataAdapter.save","location":"modules/data/data-mongodb/dev.kordex.modules.data.mongodb/-mongo-d-b-data-adapter/save.html","searchKeys":["save","open suspend override fun <R : Data> save(unit: StorageUnit<R>): R?","dev.kordex.modules.data.mongodb.MongoDBDataAdapter.save"]},{"name":"open suspend override fun <R : Data> save(unit: StorageUnit<R>, data: R): R","description":"dev.kordex.modules.data.mongodb.MongoDBDataAdapter.save","location":"modules/data/data-mongodb/dev.kordex.modules.data.mongodb/-mongo-d-b-data-adapter/save.html","searchKeys":["save","open suspend override fun <R : Data> save(unit: StorageUnit<R>, data: R): R","dev.kordex.modules.data.mongodb.MongoDBDataAdapter.save"]},{"name":"suspend fun ExtensibleBotBuilder.mongoDB()","description":"dev.kordex.modules.data.mongodb.mongoDB","location":"modules/data/data-mongodb/dev.kordex.modules.data.mongodb/mongo-d-b.html","searchKeys":["mongoDB","suspend fun ExtensibleBotBuilder.mongoDB()","dev.kordex.modules.data.mongodb.mongoDB"]},{"name":"val kordExCodecRegistry: CodecRegistry","description":"dev.kordex.modules.data.mongodb.kordExCodecRegistry","location":"modules/data/data-mongodb/dev.kordex.modules.data.mongodb/kord-ex-codec-registry.html","searchKeys":["kordExCodecRegistry","val kordExCodecRegistry: CodecRegistry","dev.kordex.modules.data.mongodb.kordExCodecRegistry"]},{"name":"class T4JDurationCoalescingConverter(val longHelp: Boolean = true, shouldThrow: Boolean = false, var validator: Validator<Duration<IsoUnit>> = null) : CoalescingConverter<Duration<IsoUnit>> ","description":"dev.kordex.modules.dev.time4j.T4JDurationCoalescingConverter","location":"modules/dev/dev-time4j/dev.kordex.modules.dev.time4j/-t4-j-duration-coalescing-converter/index.html","searchKeys":["T4JDurationCoalescingConverter","class T4JDurationCoalescingConverter(val longHelp: Boolean = true, shouldThrow: Boolean = false, var validator: Validator<Duration<IsoUnit>> = null) : CoalescingConverter<Duration<IsoUnit>> ","dev.kordex.modules.dev.time4j.T4JDurationCoalescingConverter"]},{"name":"class T4JDurationConverter(val longHelp: Boolean = true, var validator: Validator<Duration<IsoUnit>> = null) : SingleConverter<Duration<IsoUnit>> ","description":"dev.kordex.modules.dev.time4j.T4JDurationConverter","location":"modules/dev/dev-time4j/dev.kordex.modules.dev.time4j/-t4-j-duration-converter/index.html","searchKeys":["T4JDurationConverter","class T4JDurationConverter(val longHelp: Boolean = true, var validator: Validator<Duration<IsoUnit>> = null) : SingleConverter<Duration<IsoUnit>> ","dev.kordex.modules.dev.time4j.T4JDurationConverter"]},{"name":"constructor(longHelp: Boolean = true, shouldThrow: Boolean = false, validator: Validator<Duration<IsoUnit>> = null)","description":"dev.kordex.modules.dev.time4j.T4JDurationCoalescingConverter.T4JDurationCoalescingConverter","location":"modules/dev/dev-time4j/dev.kordex.modules.dev.time4j/-t4-j-duration-coalescing-converter/-t4-j-duration-coalescing-converter.html","searchKeys":["T4JDurationCoalescingConverter","constructor(longHelp: Boolean = true, shouldThrow: Boolean = false, validator: Validator<Duration<IsoUnit>> = null)","dev.kordex.modules.dev.time4j.T4JDurationCoalescingConverter.T4JDurationCoalescingConverter"]},{"name":"constructor(longHelp: Boolean = true, validator: Validator<Duration<IsoUnit>> = null)","description":"dev.kordex.modules.dev.time4j.T4JDurationConverter.T4JDurationConverter","location":"modules/dev/dev-time4j/dev.kordex.modules.dev.time4j/-t4-j-duration-converter/-t4-j-duration-converter.html","searchKeys":["T4JDurationConverter","constructor(longHelp: Boolean = true, validator: Validator<Duration<IsoUnit>> = null)","dev.kordex.modules.dev.time4j.T4JDurationConverter.T4JDurationConverter"]},{"name":"fun Duration<IsoUnit>.toHuman(locale: Locale, relativeTo: PlainTimestamp = PlainTimestamp.nowInSystemTime()): String?","description":"dev.kordex.modules.dev.time4j.toHuman","location":"modules/dev/dev-time4j/dev.kordex.modules.dev.time4j/to-human.html","searchKeys":["toHuman","fun Duration<IsoUnit>.toHuman(locale: Locale, relativeTo: PlainTimestamp = PlainTimestamp.nowInSystemTime()): String?","dev.kordex.modules.dev.time4j.toHuman"]},{"name":"fun GeneralTimestamp<*>.toDiscord(format: TimestampType = TimestampType.Default): String","description":"dev.kordex.modules.dev.time4j.toDiscord","location":"modules/dev/dev-time4j/dev.kordex.modules.dev.time4j/to-discord.html","searchKeys":["toDiscord","fun GeneralTimestamp<*>.toDiscord(format: TimestampType = TimestampType.Default): String","dev.kordex.modules.dev.time4j.toDiscord"]},{"name":"fun Moment.toDiscord(format: TimestampType = TimestampType.Default): String","description":"dev.kordex.modules.dev.time4j.toDiscord","location":"modules/dev/dev-time4j/dev.kordex.modules.dev.time4j/to-discord.html","searchKeys":["toDiscord","fun Moment.toDiscord(format: TimestampType = TimestampType.Default): String","dev.kordex.modules.dev.time4j.toDiscord"]},{"name":"fun PlainTimestamp.toDiscord(format: TimestampType = TimestampType.Default): String","description":"dev.kordex.modules.dev.time4j.toDiscord","location":"modules/dev/dev-time4j/dev.kordex.modules.dev.time4j/to-discord.html","searchKeys":["toDiscord","fun PlainTimestamp.toDiscord(format: TimestampType = TimestampType.Default): String","dev.kordex.modules.dev.time4j.toDiscord"]},{"name":"fun charValid(char: Char, locale: Locale): Boolean","description":"dev.kordex.modules.dev.time4j.T4JDurationParser.charValid","location":"modules/dev/dev-time4j/dev.kordex.modules.dev.time4j/-t4-j-duration-parser/char-valid.html","searchKeys":["charValid","fun charValid(char: Char, locale: Locale): Boolean","dev.kordex.modules.dev.time4j.T4JDurationParser.charValid"]},{"name":"fun formatT4JDuration(duration: Duration<IsoUnit>, locale: Locale, relativeTo: PlainTimestamp = PlainTimestamp.nowInSystemTime()): String?","description":"dev.kordex.modules.dev.time4j.formatT4JDuration","location":"modules/dev/dev-time4j/dev.kordex.modules.dev.time4j/format-t4-j-duration.html","searchKeys":["formatT4JDuration","fun formatT4JDuration(duration: Duration<IsoUnit>, locale: Locale, relativeTo: PlainTimestamp = PlainTimestamp.nowInSystemTime()): String?","dev.kordex.modules.dev.time4j.formatT4JDuration"]},{"name":"fun getUnits(locale: Locale): StringUnitMap","description":"dev.kordex.modules.dev.time4j.T4JTimeUnitCache.getUnits","location":"modules/dev/dev-time4j/dev.kordex.modules.dev.time4j/-t4-j-time-unit-cache/get-units.html","searchKeys":["getUnits","fun getUnits(locale: Locale): StringUnitMap","dev.kordex.modules.dev.time4j.T4JTimeUnitCache.getUnits"]},{"name":"fun parse(input: String, locale: Locale): Duration<IsoUnit>","description":"dev.kordex.modules.dev.time4j.T4JDurationParser.parse","location":"modules/dev/dev-time4j/dev.kordex.modules.dev.time4j/-t4-j-duration-parser/parse.html","searchKeys":["parse","fun parse(input: String, locale: Locale): Duration<IsoUnit>","dev.kordex.modules.dev.time4j.T4JDurationParser.parse"]},{"name":"object T4JDurationParser : KordExKoinComponent","description":"dev.kordex.modules.dev.time4j.T4JDurationParser","location":"modules/dev/dev-time4j/dev.kordex.modules.dev.time4j/-t4-j-duration-parser/index.html","searchKeys":["T4JDurationParser","object T4JDurationParser : KordExKoinComponent","dev.kordex.modules.dev.time4j.T4JDurationParser"]},{"name":"object T4JTimeUnitCache : KordExKoinComponent","description":"dev.kordex.modules.dev.time4j.T4JTimeUnitCache","location":"modules/dev/dev-time4j/dev.kordex.modules.dev.time4j/-t4-j-time-unit-cache/index.html","searchKeys":["T4JTimeUnitCache","object T4JTimeUnitCache : KordExKoinComponent","dev.kordex.modules.dev.time4j.T4JTimeUnitCache"]},{"name":"open override val signatureType: Key","description":"dev.kordex.modules.dev.time4j.T4JDurationCoalescingConverter.signatureType","location":"modules/dev/dev-time4j/dev.kordex.modules.dev.time4j/-t4-j-duration-coalescing-converter/signature-type.html","searchKeys":["signatureType","open override val signatureType: Key","dev.kordex.modules.dev.time4j.T4JDurationCoalescingConverter.signatureType"]},{"name":"open override val signatureType: Key","description":"dev.kordex.modules.dev.time4j.T4JDurationConverter.signatureType","location":"modules/dev/dev-time4j/dev.kordex.modules.dev.time4j/-t4-j-duration-converter/signature-type.html","searchKeys":["signatureType","open override val signatureType: Key","dev.kordex.modules.dev.time4j.T4JDurationConverter.signatureType"]},{"name":"open override var validator: Validator<Duration<IsoUnit>>","description":"dev.kordex.modules.dev.time4j.T4JDurationCoalescingConverter.validator","location":"modules/dev/dev-time4j/dev.kordex.modules.dev.time4j/-t4-j-duration-coalescing-converter/validator.html","searchKeys":["validator","open override var validator: Validator<Duration<IsoUnit>>","dev.kordex.modules.dev.time4j.T4JDurationCoalescingConverter.validator"]},{"name":"open override var validator: Validator<Duration<IsoUnit>>","description":"dev.kordex.modules.dev.time4j.T4JDurationConverter.validator","location":"modules/dev/dev-time4j/dev.kordex.modules.dev.time4j/-t4-j-duration-converter/validator.html","searchKeys":["validator","open override var validator: Validator<Duration<IsoUnit>>","dev.kordex.modules.dev.time4j.T4JDurationConverter.validator"]},{"name":"open suspend override fun parse(parser: StringParser?, context: CommandContext, named: List<String>?): Int","description":"dev.kordex.modules.dev.time4j.T4JDurationCoalescingConverter.parse","location":"modules/dev/dev-time4j/dev.kordex.modules.dev.time4j/-t4-j-duration-coalescing-converter/parse.html","searchKeys":["parse","open suspend override fun parse(parser: StringParser?, context: CommandContext, named: List<String>?): Int","dev.kordex.modules.dev.time4j.T4JDurationCoalescingConverter.parse"]},{"name":"open suspend override fun parse(parser: StringParser?, context: CommandContext, named: String?): Boolean","description":"dev.kordex.modules.dev.time4j.T4JDurationConverter.parse","location":"modules/dev/dev-time4j/dev.kordex.modules.dev.time4j/-t4-j-duration-converter/parse.html","searchKeys":["parse","open suspend override fun parse(parser: StringParser?, context: CommandContext, named: String?): Boolean","dev.kordex.modules.dev.time4j.T4JDurationConverter.parse"]},{"name":"open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","description":"dev.kordex.modules.dev.time4j.T4JDurationCoalescingConverter.parseOption","location":"modules/dev/dev-time4j/dev.kordex.modules.dev.time4j/-t4-j-duration-coalescing-converter/parse-option.html","searchKeys":["parseOption","open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","dev.kordex.modules.dev.time4j.T4JDurationCoalescingConverter.parseOption"]},{"name":"open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","description":"dev.kordex.modules.dev.time4j.T4JDurationConverter.parseOption","location":"modules/dev/dev-time4j/dev.kordex.modules.dev.time4j/-t4-j-duration-converter/parse-option.html","searchKeys":["parseOption","open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","dev.kordex.modules.dev.time4j.T4JDurationConverter.parseOption"]},{"name":"open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<StringChoiceBuilder>","description":"dev.kordex.modules.dev.time4j.T4JDurationCoalescingConverter.toSlashOption","location":"modules/dev/dev-time4j/dev.kordex.modules.dev.time4j/-t4-j-duration-coalescing-converter/to-slash-option.html","searchKeys":["toSlashOption","open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<StringChoiceBuilder>","dev.kordex.modules.dev.time4j.T4JDurationCoalescingConverter.toSlashOption"]},{"name":"open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<StringChoiceBuilder>","description":"dev.kordex.modules.dev.time4j.T4JDurationConverter.toSlashOption","location":"modules/dev/dev-time4j/dev.kordex.modules.dev.time4j/-t4-j-duration-converter/to-slash-option.html","searchKeys":["toSlashOption","open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<StringChoiceBuilder>","dev.kordex.modules.dev.time4j.T4JDurationConverter.toSlashOption"]},{"name":"suspend fun Duration<IsoUnit>.toHuman(context: CommandContext, relativeTo: PlainTimestamp = PlainTimestamp.nowInSystemTime()): String?","description":"dev.kordex.modules.dev.time4j.toHuman","location":"modules/dev/dev-time4j/dev.kordex.modules.dev.time4j/to-human.html","searchKeys":["toHuman","suspend fun Duration<IsoUnit>.toHuman(context: CommandContext, relativeTo: PlainTimestamp = PlainTimestamp.nowInSystemTime()): String?","dev.kordex.modules.dev.time4j.toHuman"]},{"name":"val longHelp: Boolean = true","description":"dev.kordex.modules.dev.time4j.T4JDurationCoalescingConverter.longHelp","location":"modules/dev/dev-time4j/dev.kordex.modules.dev.time4j/-t4-j-duration-coalescing-converter/long-help.html","searchKeys":["longHelp","val longHelp: Boolean = true","dev.kordex.modules.dev.time4j.T4JDurationCoalescingConverter.longHelp"]},{"name":"val longHelp: Boolean = true","description":"dev.kordex.modules.dev.time4j.T4JDurationConverter.longHelp","location":"modules/dev/dev-time4j/dev.kordex.modules.dev.time4j/-t4-j-duration-converter/long-help.html","searchKeys":["longHelp","val longHelp: Boolean = true","dev.kordex.modules.dev.time4j.T4JDurationConverter.longHelp"]},{"name":"class ChronoContainer","description":"dev.kordex.modules.dev.java.time.ChronoContainer","location":"modules/dev/dev-java-time/dev.kordex.modules.dev.java.time/-chrono-container/index.html","searchKeys":["ChronoContainer","class ChronoContainer","dev.kordex.modules.dev.java.time.ChronoContainer"]},{"name":"class ChronoContainerSerializer : KSerializer<ChronoContainer> ","description":"dev.kordex.modules.dev.java.time.ChronoContainerSerializer","location":"modules/dev/dev-java-time/dev.kordex.modules.dev.java.time/-chrono-container-serializer/index.html","searchKeys":["ChronoContainerSerializer","class ChronoContainerSerializer : KSerializer<ChronoContainer> ","dev.kordex.modules.dev.java.time.ChronoContainerSerializer"]},{"name":"class J8DurationCoalescingConverter(val longHelp: Boolean = true, val positiveOnly: Boolean = true, shouldThrow: Boolean = false, var validator: Validator<ChronoContainer> = null) : CoalescingConverter<ChronoContainer> ","description":"dev.kordex.modules.dev.java.time.J8DurationCoalescingConverter","location":"modules/dev/dev-java-time/dev.kordex.modules.dev.java.time/-j8-duration-coalescing-converter/index.html","searchKeys":["J8DurationCoalescingConverter","class J8DurationCoalescingConverter(val longHelp: Boolean = true, val positiveOnly: Boolean = true, shouldThrow: Boolean = false, var validator: Validator<ChronoContainer> = null) : CoalescingConverter<ChronoContainer> ","dev.kordex.modules.dev.java.time.J8DurationCoalescingConverter"]},{"name":"class J8DurationConverter(val longHelp: Boolean = true, val positiveOnly: Boolean = true, var validator: Validator<ChronoContainer> = null) : SingleConverter<ChronoContainer> ","description":"dev.kordex.modules.dev.java.time.J8DurationConverter","location":"modules/dev/dev-java-time/dev.kordex.modules.dev.java.time/-j8-duration-converter/index.html","searchKeys":["J8DurationConverter","class J8DurationConverter(val longHelp: Boolean = true, val positiveOnly: Boolean = true, var validator: Validator<ChronoContainer> = null) : SingleConverter<ChronoContainer> ","dev.kordex.modules.dev.java.time.J8DurationConverter"]},{"name":"constructor()","description":"dev.kordex.modules.dev.java.time.ChronoContainer.ChronoContainer","location":"modules/dev/dev-java-time/dev.kordex.modules.dev.java.time/-chrono-container/-chrono-container.html","searchKeys":["ChronoContainer","constructor()","dev.kordex.modules.dev.java.time.ChronoContainer.ChronoContainer"]},{"name":"constructor()","description":"dev.kordex.modules.dev.java.time.ChronoContainerSerializer.ChronoContainerSerializer","location":"modules/dev/dev-java-time/dev.kordex.modules.dev.java.time/-chrono-container-serializer/-chrono-container-serializer.html","searchKeys":["ChronoContainerSerializer","constructor()","dev.kordex.modules.dev.java.time.ChronoContainerSerializer.ChronoContainerSerializer"]},{"name":"constructor(longHelp: Boolean = true, positiveOnly: Boolean = true, shouldThrow: Boolean = false, validator: Validator<ChronoContainer> = null)","description":"dev.kordex.modules.dev.java.time.J8DurationCoalescingConverter.J8DurationCoalescingConverter","location":"modules/dev/dev-java-time/dev.kordex.modules.dev.java.time/-j8-duration-coalescing-converter/-j8-duration-coalescing-converter.html","searchKeys":["J8DurationCoalescingConverter","constructor(longHelp: Boolean = true, positiveOnly: Boolean = true, shouldThrow: Boolean = false, validator: Validator<ChronoContainer> = null)","dev.kordex.modules.dev.java.time.J8DurationCoalescingConverter.J8DurationCoalescingConverter"]},{"name":"constructor(longHelp: Boolean = true, positiveOnly: Boolean = true, validator: Validator<ChronoContainer> = null)","description":"dev.kordex.modules.dev.java.time.J8DurationConverter.J8DurationConverter","location":"modules/dev/dev-java-time/dev.kordex.modules.dev.java.time/-j8-duration-converter/-j8-duration-converter.html","searchKeys":["J8DurationConverter","constructor(longHelp: Boolean = true, positiveOnly: Boolean = true, validator: Validator<ChronoContainer> = null)","dev.kordex.modules.dev.java.time.J8DurationConverter.J8DurationConverter"]},{"name":"fun <T : Temporal> apply(target: T): T","description":"dev.kordex.modules.dev.java.time.ChronoContainer.apply","location":"modules/dev/dev-java-time/dev.kordex.modules.dev.java.time/-chrono-container/apply.html","searchKeys":["apply","fun <T : Temporal> apply(target: T): T","dev.kordex.modules.dev.java.time.ChronoContainer.apply"]},{"name":"fun ChronoContainer.toHuman(locale: Locale, relativeTo: LocalDateTime = LocalDateTime.now()): String?","description":"dev.kordex.modules.dev.java.time.toHuman","location":"modules/dev/dev-java-time/dev.kordex.modules.dev.java.time/to-human.html","searchKeys":["toHuman","fun ChronoContainer.toHuman(locale: Locale, relativeTo: LocalDateTime = LocalDateTime.now()): String?","dev.kordex.modules.dev.java.time.toHuman"]},{"name":"fun Instant.toDiscord(format: TimestampType = TimestampType.Default): String","description":"dev.kordex.modules.dev.java.time.toDiscord","location":"modules/dev/dev-java-time/dev.kordex.modules.dev.java.time/to-discord.html","searchKeys":["toDiscord","fun Instant.toDiscord(format: TimestampType = TimestampType.Default): String","dev.kordex.modules.dev.java.time.toDiscord"]},{"name":"fun between(before: LocalDate, after: LocalDate): ChronoContainer","description":"dev.kordex.modules.dev.java.time.ChronoContainer.Companion.between","location":"modules/dev/dev-java-time/dev.kordex.modules.dev.java.time/-chrono-container/-companion/between.html","searchKeys":["between","fun between(before: LocalDate, after: LocalDate): ChronoContainer","dev.kordex.modules.dev.java.time.ChronoContainer.Companion.between"]},{"name":"fun between(before: LocalDateTime, after: LocalDateTime): ChronoContainer","description":"dev.kordex.modules.dev.java.time.ChronoContainer.Companion.between","location":"modules/dev/dev-java-time/dev.kordex.modules.dev.java.time/-chrono-container/-companion/between.html","searchKeys":["between","fun between(before: LocalDateTime, after: LocalDateTime): ChronoContainer","dev.kordex.modules.dev.java.time.ChronoContainer.Companion.between"]},{"name":"fun between(before: LocalTime, after: LocalTime): ChronoContainer","description":"dev.kordex.modules.dev.java.time.ChronoContainer.Companion.between","location":"modules/dev/dev-java-time/dev.kordex.modules.dev.java.time/-chrono-container/-companion/between.html","searchKeys":["between","fun between(before: LocalTime, after: LocalTime): ChronoContainer","dev.kordex.modules.dev.java.time.ChronoContainer.Companion.between"]},{"name":"fun charValid(char: Char, locale: Locale): Boolean","description":"dev.kordex.modules.dev.java.time.J8DurationParser.charValid","location":"modules/dev/dev-java-time/dev.kordex.modules.dev.java.time/-j8-duration-parser/char-valid.html","searchKeys":["charValid","fun charValid(char: Char, locale: Locale): Boolean","dev.kordex.modules.dev.java.time.J8DurationParser.charValid"]},{"name":"fun clone(): ChronoContainer","description":"dev.kordex.modules.dev.java.time.ChronoContainer.clone","location":"modules/dev/dev-java-time/dev.kordex.modules.dev.java.time/-chrono-container/clone.html","searchKeys":["clone","fun clone(): ChronoContainer","dev.kordex.modules.dev.java.time.ChronoContainer.clone"]},{"name":"fun copyFrom(duration: Duration)","description":"dev.kordex.modules.dev.java.time.ChronoContainer.copyFrom","location":"modules/dev/dev-java-time/dev.kordex.modules.dev.java.time/-chrono-container/copy-from.html","searchKeys":["copyFrom","fun copyFrom(duration: Duration)","dev.kordex.modules.dev.java.time.ChronoContainer.copyFrom"]},{"name":"fun copyFrom(duration: Duration, period: Period)","description":"dev.kordex.modules.dev.java.time.ChronoContainer.copyFrom","location":"modules/dev/dev-java-time/dev.kordex.modules.dev.java.time/-chrono-container/copy-from.html","searchKeys":["copyFrom","fun copyFrom(duration: Duration, period: Period)","dev.kordex.modules.dev.java.time.ChronoContainer.copyFrom"]},{"name":"fun copyFrom(period: Period)","description":"dev.kordex.modules.dev.java.time.ChronoContainer.copyFrom","location":"modules/dev/dev-java-time/dev.kordex.modules.dev.java.time/-chrono-container/copy-from.html","searchKeys":["copyFrom","fun copyFrom(period: Period)","dev.kordex.modules.dev.java.time.ChronoContainer.copyFrom"]},{"name":"fun formatChronoContainer(container: ChronoContainer, locale: Locale, relativeTo: LocalDateTime = LocalDateTime.now()): String?","description":"dev.kordex.modules.dev.java.time.formatChronoContainer","location":"modules/dev/dev-java-time/dev.kordex.modules.dev.java.time/format-chrono-container.html","searchKeys":["formatChronoContainer","fun formatChronoContainer(container: ChronoContainer, locale: Locale, relativeTo: LocalDateTime = LocalDateTime.now()): String?","dev.kordex.modules.dev.java.time.formatChronoContainer"]},{"name":"fun get(unit: ChronoUnit): Long","description":"dev.kordex.modules.dev.java.time.ChronoContainer.get","location":"modules/dev/dev-java-time/dev.kordex.modules.dev.java.time/-chrono-container/get.html","searchKeys":["get","fun get(unit: ChronoUnit): Long","dev.kordex.modules.dev.java.time.ChronoContainer.get"]},{"name":"fun getUnits(locale: Locale): StringUnitMap","description":"dev.kordex.modules.dev.java.time.J8TimeUnitCache.getUnits","location":"modules/dev/dev-java-time/dev.kordex.modules.dev.java.time/-j8-time-unit-cache/get-units.html","searchKeys":["getUnits","fun getUnits(locale: Locale): StringUnitMap","dev.kordex.modules.dev.java.time.J8TimeUnitCache.getUnits"]},{"name":"fun isConverted(unit: ChronoUnit): Boolean","description":"dev.kordex.modules.dev.java.time.ChronoContainer.isConverted","location":"modules/dev/dev-java-time/dev.kordex.modules.dev.java.time/-chrono-container/is-converted.html","searchKeys":["isConverted","fun isConverted(unit: ChronoUnit): Boolean","dev.kordex.modules.dev.java.time.ChronoContainer.isConverted"]},{"name":"fun isPositive(): Boolean","description":"dev.kordex.modules.dev.java.time.ChronoContainer.isPositive","location":"modules/dev/dev-java-time/dev.kordex.modules.dev.java.time/-chrono-container/is-positive.html","searchKeys":["isPositive","fun isPositive(): Boolean","dev.kordex.modules.dev.java.time.ChronoContainer.isPositive"]},{"name":"fun isSupported(unit: ChronoUnit): Boolean","description":"dev.kordex.modules.dev.java.time.ChronoContainer.isSupported","location":"modules/dev/dev-java-time/dev.kordex.modules.dev.java.time/-chrono-container/is-supported.html","searchKeys":["isSupported","fun isSupported(unit: ChronoUnit): Boolean","dev.kordex.modules.dev.java.time.ChronoContainer.isSupported"]},{"name":"fun minus(value: Long, unit: ChronoUnit)","description":"dev.kordex.modules.dev.java.time.ChronoContainer.minus","location":"modules/dev/dev-java-time/dev.kordex.modules.dev.java.time/-chrono-container/minus.html","searchKeys":["minus","fun minus(value: Long, unit: ChronoUnit)","dev.kordex.modules.dev.java.time.ChronoContainer.minus"]},{"name":"fun normalize(dateTime: LocalDateTime = LocalDateTime.now())","description":"dev.kordex.modules.dev.java.time.ChronoContainer.normalize","location":"modules/dev/dev-java-time/dev.kordex.modules.dev.java.time/-chrono-container/normalize.html","searchKeys":["normalize","fun normalize(dateTime: LocalDateTime = LocalDateTime.now())","dev.kordex.modules.dev.java.time.ChronoContainer.normalize"]},{"name":"fun of(duration: Duration): ChronoContainer","description":"dev.kordex.modules.dev.java.time.ChronoContainer.Companion.of","location":"modules/dev/dev-java-time/dev.kordex.modules.dev.java.time/-chrono-container/-companion/of.html","searchKeys":["of","fun of(duration: Duration): ChronoContainer","dev.kordex.modules.dev.java.time.ChronoContainer.Companion.of"]},{"name":"fun of(duration: Duration, period: Period): ChronoContainer","description":"dev.kordex.modules.dev.java.time.ChronoContainer.Companion.of","location":"modules/dev/dev-java-time/dev.kordex.modules.dev.java.time/-chrono-container/-companion/of.html","searchKeys":["of","fun of(duration: Duration, period: Period): ChronoContainer","dev.kordex.modules.dev.java.time.ChronoContainer.Companion.of"]},{"name":"fun of(period: Period): ChronoContainer","description":"dev.kordex.modules.dev.java.time.ChronoContainer.Companion.of","location":"modules/dev/dev-java-time/dev.kordex.modules.dev.java.time/-chrono-container/-companion/of.html","searchKeys":["of","fun of(period: Period): ChronoContainer","dev.kordex.modules.dev.java.time.ChronoContainer.Companion.of"]},{"name":"fun parse(input: String, locale: Locale): ChronoContainer","description":"dev.kordex.modules.dev.java.time.J8DurationParser.parse","location":"modules/dev/dev-java-time/dev.kordex.modules.dev.java.time/-j8-duration-parser/parse.html","searchKeys":["parse","fun parse(input: String, locale: Locale): ChronoContainer","dev.kordex.modules.dev.java.time.J8DurationParser.parse"]},{"name":"fun plus(value: Long, unit: ChronoUnit)","description":"dev.kordex.modules.dev.java.time.ChronoContainer.plus","location":"modules/dev/dev-java-time/dev.kordex.modules.dev.java.time/-chrono-container/plus.html","searchKeys":["plus","fun plus(value: Long, unit: ChronoUnit)","dev.kordex.modules.dev.java.time.ChronoContainer.plus"]},{"name":"fun set(value: Long, unit: ChronoUnit)","description":"dev.kordex.modules.dev.java.time.ChronoContainer.set","location":"modules/dev/dev-java-time/dev.kordex.modules.dev.java.time/-chrono-container/set.html","searchKeys":["set","fun set(value: Long, unit: ChronoUnit)","dev.kordex.modules.dev.java.time.ChronoContainer.set"]},{"name":"object Companion","description":"dev.kordex.modules.dev.java.time.ChronoContainer.Companion","location":"modules/dev/dev-java-time/dev.kordex.modules.dev.java.time/-chrono-container/-companion/index.html","searchKeys":["Companion","object Companion","dev.kordex.modules.dev.java.time.ChronoContainer.Companion"]},{"name":"object J8DurationParser : KordExKoinComponent","description":"dev.kordex.modules.dev.java.time.J8DurationParser","location":"modules/dev/dev-java-time/dev.kordex.modules.dev.java.time/-j8-duration-parser/index.html","searchKeys":["J8DurationParser","object J8DurationParser : KordExKoinComponent","dev.kordex.modules.dev.java.time.J8DurationParser"]},{"name":"object J8TimeUnitCache : KordExKoinComponent","description":"dev.kordex.modules.dev.java.time.J8TimeUnitCache","location":"modules/dev/dev-java-time/dev.kordex.modules.dev.java.time/-j8-time-unit-cache/index.html","searchKeys":["J8TimeUnitCache","object J8TimeUnitCache : KordExKoinComponent","dev.kordex.modules.dev.java.time.J8TimeUnitCache"]},{"name":"open override fun deserialize(decoder: Decoder): ChronoContainer","description":"dev.kordex.modules.dev.java.time.ChronoContainerSerializer.deserialize","location":"modules/dev/dev-java-time/dev.kordex.modules.dev.java.time/-chrono-container-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): ChronoContainer","dev.kordex.modules.dev.java.time.ChronoContainerSerializer.deserialize"]},{"name":"open override fun serialize(encoder: Encoder, value: ChronoContainer)","description":"dev.kordex.modules.dev.java.time.ChronoContainerSerializer.serialize","location":"modules/dev/dev-java-time/dev.kordex.modules.dev.java.time/-chrono-container-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: ChronoContainer)","dev.kordex.modules.dev.java.time.ChronoContainerSerializer.serialize"]},{"name":"open override val descriptor: SerialDescriptor","description":"dev.kordex.modules.dev.java.time.ChronoContainerSerializer.descriptor","location":"modules/dev/dev-java-time/dev.kordex.modules.dev.java.time/-chrono-container-serializer/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","dev.kordex.modules.dev.java.time.ChronoContainerSerializer.descriptor"]},{"name":"open override val signatureType: Key","description":"dev.kordex.modules.dev.java.time.J8DurationCoalescingConverter.signatureType","location":"modules/dev/dev-java-time/dev.kordex.modules.dev.java.time/-j8-duration-coalescing-converter/signature-type.html","searchKeys":["signatureType","open override val signatureType: Key","dev.kordex.modules.dev.java.time.J8DurationCoalescingConverter.signatureType"]},{"name":"open override val signatureType: Key","description":"dev.kordex.modules.dev.java.time.J8DurationConverter.signatureType","location":"modules/dev/dev-java-time/dev.kordex.modules.dev.java.time/-j8-duration-converter/signature-type.html","searchKeys":["signatureType","open override val signatureType: Key","dev.kordex.modules.dev.java.time.J8DurationConverter.signatureType"]},{"name":"open override var validator: Validator<ChronoContainer>","description":"dev.kordex.modules.dev.java.time.J8DurationCoalescingConverter.validator","location":"modules/dev/dev-java-time/dev.kordex.modules.dev.java.time/-j8-duration-coalescing-converter/validator.html","searchKeys":["validator","open override var validator: Validator<ChronoContainer>","dev.kordex.modules.dev.java.time.J8DurationCoalescingConverter.validator"]},{"name":"open override var validator: Validator<ChronoContainer>","description":"dev.kordex.modules.dev.java.time.J8DurationConverter.validator","location":"modules/dev/dev-java-time/dev.kordex.modules.dev.java.time/-j8-duration-converter/validator.html","searchKeys":["validator","open override var validator: Validator<ChronoContainer>","dev.kordex.modules.dev.java.time.J8DurationConverter.validator"]},{"name":"open suspend override fun parse(parser: StringParser?, context: CommandContext, named: List<String>?): Int","description":"dev.kordex.modules.dev.java.time.J8DurationCoalescingConverter.parse","location":"modules/dev/dev-java-time/dev.kordex.modules.dev.java.time/-j8-duration-coalescing-converter/parse.html","searchKeys":["parse","open suspend override fun parse(parser: StringParser?, context: CommandContext, named: List<String>?): Int","dev.kordex.modules.dev.java.time.J8DurationCoalescingConverter.parse"]},{"name":"open suspend override fun parse(parser: StringParser?, context: CommandContext, named: String?): Boolean","description":"dev.kordex.modules.dev.java.time.J8DurationConverter.parse","location":"modules/dev/dev-java-time/dev.kordex.modules.dev.java.time/-j8-duration-converter/parse.html","searchKeys":["parse","open suspend override fun parse(parser: StringParser?, context: CommandContext, named: String?): Boolean","dev.kordex.modules.dev.java.time.J8DurationConverter.parse"]},{"name":"open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","description":"dev.kordex.modules.dev.java.time.J8DurationCoalescingConverter.parseOption","location":"modules/dev/dev-java-time/dev.kordex.modules.dev.java.time/-j8-duration-coalescing-converter/parse-option.html","searchKeys":["parseOption","open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","dev.kordex.modules.dev.java.time.J8DurationCoalescingConverter.parseOption"]},{"name":"open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","description":"dev.kordex.modules.dev.java.time.J8DurationConverter.parseOption","location":"modules/dev/dev-java-time/dev.kordex.modules.dev.java.time/-j8-duration-converter/parse-option.html","searchKeys":["parseOption","open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","dev.kordex.modules.dev.java.time.J8DurationConverter.parseOption"]},{"name":"open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<StringChoiceBuilder>","description":"dev.kordex.modules.dev.java.time.J8DurationCoalescingConverter.toSlashOption","location":"modules/dev/dev-java-time/dev.kordex.modules.dev.java.time/-j8-duration-coalescing-converter/to-slash-option.html","searchKeys":["toSlashOption","open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<StringChoiceBuilder>","dev.kordex.modules.dev.java.time.J8DurationCoalescingConverter.toSlashOption"]},{"name":"open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<StringChoiceBuilder>","description":"dev.kordex.modules.dev.java.time.J8DurationConverter.toSlashOption","location":"modules/dev/dev-java-time/dev.kordex.modules.dev.java.time/-j8-duration-converter/to-slash-option.html","searchKeys":["toSlashOption","open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<StringChoiceBuilder>","dev.kordex.modules.dev.java.time.J8DurationConverter.toSlashOption"]},{"name":"suspend fun ChronoContainer.toHuman(context: CommandContext, relativeTo: LocalDateTime = LocalDateTime.now()): String?","description":"dev.kordex.modules.dev.java.time.toHuman","location":"modules/dev/dev-java-time/dev.kordex.modules.dev.java.time/to-human.html","searchKeys":["toHuman","suspend fun ChronoContainer.toHuman(context: CommandContext, relativeTo: LocalDateTime = LocalDateTime.now()): String?","dev.kordex.modules.dev.java.time.toHuman"]},{"name":"val longHelp: Boolean = true","description":"dev.kordex.modules.dev.java.time.J8DurationCoalescingConverter.longHelp","location":"modules/dev/dev-java-time/dev.kordex.modules.dev.java.time/-j8-duration-coalescing-converter/long-help.html","searchKeys":["longHelp","val longHelp: Boolean = true","dev.kordex.modules.dev.java.time.J8DurationCoalescingConverter.longHelp"]},{"name":"val longHelp: Boolean = true","description":"dev.kordex.modules.dev.java.time.J8DurationConverter.longHelp","location":"modules/dev/dev-java-time/dev.kordex.modules.dev.java.time/-j8-duration-converter/long-help.html","searchKeys":["longHelp","val longHelp: Boolean = true","dev.kordex.modules.dev.java.time.J8DurationConverter.longHelp"]},{"name":"val positiveOnly: Boolean = true","description":"dev.kordex.modules.dev.java.time.J8DurationCoalescingConverter.positiveOnly","location":"modules/dev/dev-java-time/dev.kordex.modules.dev.java.time/-j8-duration-coalescing-converter/positive-only.html","searchKeys":["positiveOnly","val positiveOnly: Boolean = true","dev.kordex.modules.dev.java.time.J8DurationCoalescingConverter.positiveOnly"]},{"name":"val positiveOnly: Boolean = true","description":"dev.kordex.modules.dev.java.time.J8DurationConverter.positiveOnly","location":"modules/dev/dev-java-time/dev.kordex.modules.dev.java.time/-j8-duration-converter/positive-only.html","searchKeys":["positiveOnly","val positiveOnly: Boolean = true","dev.kordex.modules.dev.java.time.J8DurationConverter.positiveOnly"]},{"name":"Approved","description":"dev.kordex.core.events.extra.models.ApplicationStatus.Approved","location":"kord-extensions/dev.kordex.core.events.extra.models/-application-status/-approved/index.html","searchKeys":["Approved","Approved","dev.kordex.core.events.extra.models.ApplicationStatus.Approved"]},{"name":"Config","description":"dev.kordex.core.storage.StorageType.Config","location":"kord-extensions/dev.kordex.core.storage/-storage-type/-config/index.html","searchKeys":["Config","Config","dev.kordex.core.storage.StorageType.Config"]},{"name":"Data","description":"dev.kordex.core.storage.StorageType.Data","location":"kord-extensions/dev.kordex.core.storage/-storage-type/-data/index.html","searchKeys":["Data","Data","dev.kordex.core.storage.StorageType.Data"]},{"name":"FAILED_LOADING","description":"dev.kordex.core.extensions.ExtensionState.FAILED_LOADING","location":"kord-extensions/dev.kordex.core.extensions/-extension-state/-f-a-i-l-e-d_-l-o-a-d-i-n-g/index.html","searchKeys":["FAILED_LOADING","FAILED_LOADING","dev.kordex.core.extensions.ExtensionState.FAILED_LOADING"]},{"name":"FAILED_UNLOADING","description":"dev.kordex.core.extensions.ExtensionState.FAILED_UNLOADING","location":"kord-extensions/dev.kordex.core.extensions/-extension-state/-f-a-i-l-e-d_-u-n-l-o-a-d-i-n-g/index.html","searchKeys":["FAILED_UNLOADING","FAILED_UNLOADING","dev.kordex.core.extensions.ExtensionState.FAILED_UNLOADING"]},{"name":"FIRST","description":"dev.kordex.core.i18n.types.PlaceholderPosition.FIRST","location":"kord-extensions/dev.kordex.core.i18n.types/-placeholder-position/-f-i-r-s-t/index.html","searchKeys":["FIRST","FIRST","dev.kordex.core.i18n.types.PlaceholderPosition.FIRST"]},{"name":"LAST","description":"dev.kordex.core.i18n.types.PlaceholderPosition.LAST","location":"kord-extensions/dev.kordex.core.i18n.types/-placeholder-position/-l-a-s-t/index.html","searchKeys":["LAST","LAST","dev.kordex.core.i18n.types.PlaceholderPosition.LAST"]},{"name":"LOADED","description":"dev.kordex.core.extensions.ExtensionState.LOADED","location":"kord-extensions/dev.kordex.core.extensions/-extension-state/-l-o-a-d-e-d/index.html","searchKeys":["LOADED","LOADED","dev.kordex.core.extensions.ExtensionState.LOADED"]},{"name":"LOADING","description":"dev.kordex.core.extensions.ExtensionState.LOADING","location":"kord-extensions/dev.kordex.core.extensions/-extension-state/-l-o-a-d-i-n-g/index.html","searchKeys":["LOADING","LOADING","dev.kordex.core.extensions.ExtensionState.LOADING"]},{"name":"Rejected","description":"dev.kordex.core.events.extra.models.ApplicationStatus.Rejected","location":"kord-extensions/dev.kordex.core.events.extra.models/-application-status/-rejected/index.html","searchKeys":["Rejected","Rejected","dev.kordex.core.events.extra.models.ApplicationStatus.Rejected"]},{"name":"Submitted","description":"dev.kordex.core.events.extra.models.ApplicationStatus.Submitted","location":"kord-extensions/dev.kordex.core.events.extra.models/-application-status/-submitted/index.html","searchKeys":["Submitted","Submitted","dev.kordex.core.events.extra.models.ApplicationStatus.Submitted"]},{"name":"UNLOADED","description":"dev.kordex.core.extensions.ExtensionState.UNLOADED","location":"kord-extensions/dev.kordex.core.extensions/-extension-state/-u-n-l-o-a-d-e-d/index.html","searchKeys":["UNLOADED","UNLOADED","dev.kordex.core.extensions.ExtensionState.UNLOADED"]},{"name":"UNLOADING","description":"dev.kordex.core.extensions.ExtensionState.UNLOADING","location":"kord-extensions/dev.kordex.core.extensions/-extension-state/-u-n-l-o-a-d-i-n-g/index.html","searchKeys":["UNLOADING","UNLOADING","dev.kordex.core.extensions.ExtensionState.UNLOADING"]},{"name":"abstract class AbstractDeconstructingApplicationCommandRegistryStorage<T : ApplicationCommand<*>> : RegistryStorage<Snowflake, T> ","description":"dev.kordex.core.registry.AbstractDeconstructingApplicationCommandRegistryStorage","location":"kord-extensions/dev.kordex.core.registry/-abstract-deconstructing-application-command-registry-storage/index.html","searchKeys":["AbstractDeconstructingApplicationCommandRegistryStorage","abstract class AbstractDeconstructingApplicationCommandRegistryStorage<T : ApplicationCommand<*>> : RegistryStorage<Snowflake, T> ","dev.kordex.core.registry.AbstractDeconstructingApplicationCommandRegistryStorage"]},{"name":"abstract class ApplicationCommand<E : InteractionCreateEvent>(val extension: Extension) : Command, KordExKoinComponent","description":"dev.kordex.core.commands.application.ApplicationCommand","location":"kord-extensions/dev.kordex.core.commands.application/-application-command/index.html","searchKeys":["ApplicationCommand","abstract class ApplicationCommand<E : InteractionCreateEvent>(val extension: Extension) : Command, KordExKoinComponent","dev.kordex.core.commands.application.ApplicationCommand"]},{"name":"abstract class ApplicationCommandContext(val genericEvent: ApplicationCommandInteractionCreateEvent, val genericCommand: ApplicationCommand<*>, val cache: MutableStringKeyedMap<Any>) : CommandContext","description":"dev.kordex.core.commands.application.ApplicationCommandContext","location":"kord-extensions/dev.kordex.core.commands.application/-application-command-context/index.html","searchKeys":["ApplicationCommandContext","abstract class ApplicationCommandContext(val genericEvent: ApplicationCommandInteractionCreateEvent, val genericCommand: ApplicationCommand<*>, val cache: MutableStringKeyedMap<Any>) : CommandContext","dev.kordex.core.commands.application.ApplicationCommandContext"]},{"name":"abstract class ApplicationCommandRegistry : KordExKoinComponent","description":"dev.kordex.core.commands.application.ApplicationCommandRegistry","location":"kord-extensions/dev.kordex.core.commands.application/-application-command-registry/index.html","searchKeys":["ApplicationCommandRegistry","abstract class ApplicationCommandRegistry : KordExKoinComponent","dev.kordex.core.commands.application.ApplicationCommandRegistry"]},{"name":"abstract class BaseButtonPaginator(val pages: Pages, val chunkedPages: Int = 1, val owner: UserBehavior? = null, val timeoutSeconds: Long? = null, val keepEmbed: Boolean = true, val switchEmoji: ReactionEmoji = if (pages.groups.size == 2) EXPAND_EMOJI else SWITCH_EMOJI, val mutator: PageTransitionCallback? = null, locale: Locale? = null) : BasePaginator","description":"dev.kordex.core.pagination.BaseButtonPaginator","location":"kord-extensions/dev.kordex.core.pagination/-base-button-paginator/index.html","searchKeys":["BaseButtonPaginator","abstract class BaseButtonPaginator(val pages: Pages, val chunkedPages: Int = 1, val owner: UserBehavior? = null, val timeoutSeconds: Long? = null, val keepEmbed: Boolean = true, val switchEmoji: ReactionEmoji = if (pages.groups.size == 2) EXPAND_EMOJI else SWITCH_EMOJI, val mutator: PageTransitionCallback? = null, locale: Locale? = null) : BasePaginator","dev.kordex.core.pagination.BaseButtonPaginator"]},{"name":"abstract class BasePaginator(val pages: Pages, val chunkedPages: Int = 1, val owner: UserBehavior? = null, val timeoutSeconds: Long? = null, val keepEmbed: Boolean = true, val switchEmoji: ReactionEmoji = if (pages.groups.size == 2) EXPAND_EMOJI else SWITCH_EMOJI, val mutator: PageTransitionCallback? = null, locale: Locale? = null) : KordExKoinComponent","description":"dev.kordex.core.pagination.BasePaginator","location":"kord-extensions/dev.kordex.core.pagination/-base-paginator/index.html","searchKeys":["BasePaginator","abstract class BasePaginator(val pages: Pages, val chunkedPages: Int = 1, val owner: UserBehavior? = null, val timeoutSeconds: Long? = null, val keepEmbed: Boolean = true, val switchEmoji: ReactionEmoji = if (pages.groups.size == 2) EXPAND_EMOJI else SWITCH_EMOJI, val mutator: PageTransitionCallback? = null, locale: Locale? = null) : KordExKoinComponent","dev.kordex.core.pagination.BasePaginator"]},{"name":"abstract class ChannelSelectMenuContext(component: SelectMenu<*, *>, event: SelectMenuInteractionCreateEvent, cache: MutableStringKeyedMap<Any>) : SelectMenuContext","description":"dev.kordex.core.components.menus.channel.ChannelSelectMenuContext","location":"kord-extensions/dev.kordex.core.components.menus.channel/-channel-select-menu-context/index.html","searchKeys":["ChannelSelectMenuContext","abstract class ChannelSelectMenuContext(component: SelectMenu<*, *>, event: SelectMenuInteractionCreateEvent, cache: MutableStringKeyedMap<Any>) : SelectMenuContext","dev.kordex.core.components.menus.channel.ChannelSelectMenuContext"]},{"name":"abstract class ChoiceConverter<T : Any>(val choices: Map<Key, T>) : SingleConverter<T> ","description":"dev.kordex.core.commands.application.slash.converters.ChoiceConverter","location":"kord-extensions/dev.kordex.core.commands.application.slash.converters/-choice-converter/index.html","searchKeys":["ChoiceConverter","abstract class ChoiceConverter<T : Any>(val choices: Map<Key, T>) : SingleConverter<T> ","dev.kordex.core.commands.application.slash.converters.ChoiceConverter"]},{"name":"abstract class CoalescingConverter<T : Any>(val shouldThrow: Boolean = false, var validator: Validator<T> = null) : MultiNamedInputConverter<List<T>, T, Int> , SlashCommandConverter","description":"dev.kordex.core.commands.converters.CoalescingConverter","location":"kord-extensions/dev.kordex.core.commands.converters/-coalescing-converter/index.html","searchKeys":["CoalescingConverter","abstract class CoalescingConverter<T : Any>(val shouldThrow: Boolean = false, var validator: Validator<T> = null) : MultiNamedInputConverter<List<T>, T, Int> , SlashCommandConverter","dev.kordex.core.commands.converters.CoalescingConverter"]},{"name":"abstract class CoalescingConverterBuilder<T> : ConverterBuilder<T> ","description":"dev.kordex.core.commands.converters.builders.CoalescingConverterBuilder","location":"kord-extensions/dev.kordex.core.commands.converters.builders/-coalescing-converter-builder/index.html","searchKeys":["CoalescingConverterBuilder","abstract class CoalescingConverterBuilder<T> : ConverterBuilder<T> ","dev.kordex.core.commands.converters.builders.CoalescingConverterBuilder"]},{"name":"abstract class Command(val extension: Extension) : Lockable, KordExKoinComponent","description":"dev.kordex.core.commands.Command","location":"kord-extensions/dev.kordex.core.commands/-command/index.html","searchKeys":["Command","abstract class Command(val extension: Extension) : Lockable, KordExKoinComponent","dev.kordex.core.commands.Command"]},{"name":"abstract class CommandContext(val command: Command, val eventObj: Event, val commandName: Key, val cache: MutableStringKeyedMap<Any>) : KordExKoinComponent, TranslatableContext","description":"dev.kordex.core.commands.CommandContext","location":"kord-extensions/dev.kordex.core.commands/-command-context/index.html","searchKeys":["CommandContext","abstract class CommandContext(val command: Command, val eventObj: Event, val commandName: Key, val cache: MutableStringKeyedMap<Any>) : KordExKoinComponent, TranslatableContext","dev.kordex.core.commands.CommandContext"]},{"name":"abstract class Component : KordExKoinComponent","description":"dev.kordex.core.components.Component","location":"kord-extensions/dev.kordex.core.components/-component/index.html","searchKeys":["Component","abstract class Component : KordExKoinComponent","dev.kordex.core.components.Component"]},{"name":"abstract class ComponentContext<E : ComponentInteractionCreateEvent>(val component: Component, val event: E, val cache: MutableStringKeyedMap<Any>) : KordExKoinComponent, TranslatableContext","description":"dev.kordex.core.components.ComponentContext","location":"kord-extensions/dev.kordex.core.components/-component-context/index.html","searchKeys":["ComponentContext","abstract class ComponentContext<E : ComponentInteractionCreateEvent>(val component: Component, val event: E, val cache: MutableStringKeyedMap<Any>) : KordExKoinComponent, TranslatableContext","dev.kordex.core.components.ComponentContext"]},{"name":"abstract class ComponentWithAction<E : ComponentInteractionCreateEvent, C : ComponentContext<*>, M : ModalForm>(val timeoutTask: Task?, val modal: () -> M? = null) : ComponentWithID, Lockable","description":"dev.kordex.core.components.ComponentWithAction","location":"kord-extensions/dev.kordex.core.components/-component-with-action/index.html","searchKeys":["ComponentWithAction","abstract class ComponentWithAction<E : ComponentInteractionCreateEvent, C : ComponentContext<*>, M : ModalForm>(val timeoutTask: Task?, val modal: () -> M? = null) : ComponentWithID, Lockable","dev.kordex.core.components.ComponentWithAction"]},{"name":"abstract class ComponentWithID : Component","description":"dev.kordex.core.components.ComponentWithID","location":"kord-extensions/dev.kordex.core.components/-component-with-i-d/index.html","searchKeys":["ComponentWithID","abstract class ComponentWithID : Component","dev.kordex.core.components.ComponentWithID"]},{"name":"abstract class Converter<InputType, OutputType, NamedInputType : Any, ResultType : Any>(val required: Boolean = true) : KordExKoinComponent","description":"dev.kordex.core.commands.converters.Converter","location":"kord-extensions/dev.kordex.core.commands.converters/-converter/index.html","searchKeys":["Converter","abstract class Converter<InputType, OutputType, NamedInputType : Any, ResultType : Any>(val required: Boolean = true) : KordExKoinComponent","dev.kordex.core.commands.converters.Converter"]},{"name":"abstract class ConverterBuilder<T>","description":"dev.kordex.core.commands.converters.builders.ConverterBuilder","location":"kord-extensions/dev.kordex.core.commands.converters.builders/-converter-builder/index.html","searchKeys":["ConverterBuilder","abstract class ConverterBuilder<T>","dev.kordex.core.commands.converters.builders.ConverterBuilder"]},{"name":"abstract class DataAdapter<ID : Any>","description":"dev.kordex.core.storage.DataAdapter","location":"kord-extensions/dev.kordex.core.storage/-data-adapter/index.html","searchKeys":["DataAdapter","abstract class DataAdapter<ID : Any>","dev.kordex.core.storage.DataAdapter"]},{"name":"abstract class DefaultingCoalescingConverter<T : Any>(defaultValue: T, val outputError: Boolean = false, var validator: Validator<T> = null) : MultiNamedInputConverter<List<T>, T, Int> , SlashCommandConverter","description":"dev.kordex.core.commands.converters.DefaultingCoalescingConverter","location":"kord-extensions/dev.kordex.core.commands.converters/-defaulting-coalescing-converter/index.html","searchKeys":["DefaultingCoalescingConverter","abstract class DefaultingCoalescingConverter<T : Any>(defaultValue: T, val outputError: Boolean = false, var validator: Validator<T> = null) : MultiNamedInputConverter<List<T>, T, Int> , SlashCommandConverter","dev.kordex.core.commands.converters.DefaultingCoalescingConverter"]},{"name":"abstract class DefaultingCoalescingConverterBuilder<T : Any> : CoalescingConverterBuilder<T> ","description":"dev.kordex.core.commands.converters.builders.DefaultingCoalescingConverterBuilder","location":"kord-extensions/dev.kordex.core.commands.converters.builders/-defaulting-coalescing-converter-builder/index.html","searchKeys":["DefaultingCoalescingConverterBuilder","abstract class DefaultingCoalescingConverterBuilder<T : Any> : CoalescingConverterBuilder<T> ","dev.kordex.core.commands.converters.builders.DefaultingCoalescingConverterBuilder"]},{"name":"abstract class DefaultingConverter<T : Any>(defaultValue: T, val outputError: Boolean = false, var validator: Validator<T> = null) : SingleNamedInputConverter<T, T, Boolean> , SlashCommandConverter","description":"dev.kordex.core.commands.converters.DefaultingConverter","location":"kord-extensions/dev.kordex.core.commands.converters/-defaulting-converter/index.html","searchKeys":["DefaultingConverter","abstract class DefaultingConverter<T : Any>(defaultValue: T, val outputError: Boolean = false, var validator: Validator<T> = null) : SingleNamedInputConverter<T, T, Boolean> , SlashCommandConverter","dev.kordex.core.commands.converters.DefaultingConverter"]},{"name":"abstract class DefaultingConverterBuilder<T : Any> : ConverterBuilder<T> ","description":"dev.kordex.core.commands.converters.builders.DefaultingConverterBuilder","location":"kord-extensions/dev.kordex.core.commands.converters.builders/-defaulting-converter-builder/index.html","searchKeys":["DefaultingConverterBuilder","abstract class DefaultingConverterBuilder<T : Any> : ConverterBuilder<T> ","dev.kordex.core.commands.converters.builders.DefaultingConverterBuilder"]},{"name":"abstract class EphemeralSelectMenu<C : SelectMenuContext, EphemeralInteractionContext, M : ModalForm>(timeoutTask: Task?, val modal: () -> M? = null, var initialResponseBuilder: InitialEphemeralSelectMenuResponseBuilder = null) : SelectMenu<C, M> ","description":"dev.kordex.core.components.menus.EphemeralSelectMenu","location":"kord-extensions/dev.kordex.core.components.menus/-ephemeral-select-menu/index.html","searchKeys":["EphemeralSelectMenu","abstract class EphemeralSelectMenu<C : SelectMenuContext, EphemeralInteractionContext, M : ModalForm>(timeoutTask: Task?, val modal: () -> M? = null, var initialResponseBuilder: InitialEphemeralSelectMenuResponseBuilder = null) : SelectMenu<C, M> ","dev.kordex.core.components.menus.EphemeralSelectMenu"]},{"name":"abstract class Extension : KordExKoinComponent","description":"dev.kordex.core.extensions.Extension","location":"kord-extensions/dev.kordex.core.extensions/-extension/index.html","searchKeys":["Extension","abstract class Extension : KordExKoinComponent","dev.kordex.core.extensions.Extension"]},{"name":"abstract class Form","description":"dev.kordex.core.components.forms.Form","location":"kord-extensions/dev.kordex.core.components.forms/-form/index.html","searchKeys":["Form","abstract class Form","dev.kordex.core.components.forms.Form"]},{"name":"abstract class InteractionButton : Component, HasPartialEmoji","description":"dev.kordex.core.components.buttons.InteractionButton","location":"kord-extensions/dev.kordex.core.components.buttons/-interaction-button/index.html","searchKeys":["InteractionButton","abstract class InteractionButton : Component, HasPartialEmoji","dev.kordex.core.components.buttons.InteractionButton"]},{"name":"abstract class InteractionButtonContext(component: Component, event: ButtonInteractionCreateEvent, cache: MutableStringKeyedMap<Any>) : ComponentContext<ButtonInteractionCreateEvent> ","description":"dev.kordex.core.components.buttons.InteractionButtonContext","location":"kord-extensions/dev.kordex.core.components.buttons/-interaction-button-context/index.html","searchKeys":["InteractionButtonContext","abstract class InteractionButtonContext(component: Component, event: ButtonInteractionCreateEvent, cache: MutableStringKeyedMap<Any>) : ComponentContext<ButtonInteractionCreateEvent> ","dev.kordex.core.components.buttons.InteractionButtonContext"]},{"name":"abstract class InteractionButtonWithAction<C : InteractionButtonContext, M : ModalForm>(timeoutTask: Task?) : ComponentWithAction<ButtonInteractionCreateEvent, C, M> , HasPartialEmoji","description":"dev.kordex.core.components.buttons.InteractionButtonWithAction","location":"kord-extensions/dev.kordex.core.components.buttons/-interaction-button-with-action/index.html","searchKeys":["InteractionButtonWithAction","abstract class InteractionButtonWithAction<C : InteractionButtonContext, M : ModalForm>(timeoutTask: Task?) : ComponentWithAction<ButtonInteractionCreateEvent, C, M> , HasPartialEmoji","dev.kordex.core.components.buttons.InteractionButtonWithAction"]},{"name":"abstract class InteractionButtonWithID : ComponentWithID, HasPartialEmoji","description":"dev.kordex.core.components.buttons.InteractionButtonWithID","location":"kord-extensions/dev.kordex.core.components.buttons/-interaction-button-with-i-d/index.html","searchKeys":["InteractionButtonWithID","abstract class InteractionButtonWithID : ComponentWithID, HasPartialEmoji","dev.kordex.core.components.buttons.InteractionButtonWithID"]},{"name":"abstract class KordExPlugin : Plugin, KordExKoinComponent","description":"dev.kordex.core.plugins.KordExPlugin","location":"kord-extensions/dev.kordex.core.plugins/-kord-ex-plugin/index.html","searchKeys":["KordExPlugin","abstract class KordExPlugin : Plugin, KordExKoinComponent","dev.kordex.core.plugins.KordExPlugin"]},{"name":"abstract class ListConverter<T : Any>(required: Boolean = true, var validator: Validator<List<T>> = null) : MultiNamedInputConverter<List<T>, List<T>, Int> , SlashCommandConverter","description":"dev.kordex.core.commands.converters.ListConverter","location":"kord-extensions/dev.kordex.core.commands.converters/-list-converter/index.html","searchKeys":["ListConverter","abstract class ListConverter<T : Any>(required: Boolean = true, var validator: Validator<List<T>> = null) : MultiNamedInputConverter<List<T>, List<T>, Int> , SlashCommandConverter","dev.kordex.core.commands.converters.ListConverter"]},{"name":"abstract class ListConverterBuilder<T : Any> : ConverterBuilder<List<T>> ","description":"dev.kordex.core.commands.converters.builders.ListConverterBuilder","location":"kord-extensions/dev.kordex.core.commands.converters.builders/-list-converter-builder/index.html","searchKeys":["ListConverterBuilder","abstract class ListConverterBuilder<T : Any> : ConverterBuilder<List<T>> ","dev.kordex.core.commands.converters.builders.ListConverterBuilder"]},{"name":"abstract class MentionableSelectMenuContext(component: SelectMenu<*, *>, event: SelectMenuInteractionCreateEvent, cache: MutableStringKeyedMap<Any>) : SelectMenuContext","description":"dev.kordex.core.components.menus.mentionable.MentionableSelectMenuContext","location":"kord-extensions/dev.kordex.core.components.menus.mentionable/-mentionable-select-menu-context/index.html","searchKeys":["MentionableSelectMenuContext","abstract class MentionableSelectMenuContext(component: SelectMenu<*, *>, event: SelectMenuInteractionCreateEvent, cache: MutableStringKeyedMap<Any>) : SelectMenuContext","dev.kordex.core.components.menus.mentionable.MentionableSelectMenuContext"]},{"name":"abstract class MessageCommand<C : MessageCommandContext<C, M>, M : ModalForm>(extension: Extension, val modal: () -> M? = null) : ApplicationCommand<MessageCommandInteractionCreateEvent> ","description":"dev.kordex.core.commands.application.message.MessageCommand","location":"kord-extensions/dev.kordex.core.commands.application.message/-message-command/index.html","searchKeys":["MessageCommand","abstract class MessageCommand<C : MessageCommandContext<C, M>, M : ModalForm>(extension: Extension, val modal: () -> M? = null) : ApplicationCommand<MessageCommandInteractionCreateEvent> ","dev.kordex.core.commands.application.message.MessageCommand"]},{"name":"abstract class MessageCommandContext<C : MessageCommandContext<C, M>, M : ModalForm>(val event: MessageCommandInteractionCreateEvent, val command: MessageCommand<C, M>, val cache: MutableStringKeyedMap<Any>) : ApplicationCommandContext","description":"dev.kordex.core.commands.application.message.MessageCommandContext","location":"kord-extensions/dev.kordex.core.commands.application.message/-message-command-context/index.html","searchKeys":["MessageCommandContext","abstract class MessageCommandContext<C : MessageCommandContext<C, M>, M : ModalForm>(val event: MessageCommandInteractionCreateEvent, val command: MessageCommand<C, M>, val cache: MutableStringKeyedMap<Any>) : ApplicationCommandContext","dev.kordex.core.commands.application.message.MessageCommandContext"]},{"name":"abstract class ModalForm : Form, KordExKoinComponent","description":"dev.kordex.core.components.forms.ModalForm","location":"kord-extensions/dev.kordex.core.components.forms/-modal-form/index.html","searchKeys":["ModalForm","abstract class ModalForm : Form, KordExKoinComponent","dev.kordex.core.components.forms.ModalForm"]},{"name":"abstract class MultiNamedInputConverter<InputType, OutputType, ResultType : Any>(val required: Boolean = true) : Converter<InputType, OutputType, List<String>, ResultType> ","description":"dev.kordex.core.commands.converters.types.MultiNamedInputConverter","location":"kord-extensions/dev.kordex.core.commands.converters.types/-multi-named-input-converter/index.html","searchKeys":["MultiNamedInputConverter","abstract class MultiNamedInputConverter<InputType, OutputType, ResultType : Any>(val required: Boolean = true) : Converter<InputType, OutputType, List<String>, ResultType> ","dev.kordex.core.commands.converters.types.MultiNamedInputConverter"]},{"name":"abstract class OptionalCoalescingConverter<T : Any>(val outputError: Boolean = false, var validator: Validator<T?> = null) : MultiNamedInputConverter<List<T>, T?, Int> , SlashCommandConverter","description":"dev.kordex.core.commands.converters.OptionalCoalescingConverter","location":"kord-extensions/dev.kordex.core.commands.converters/-optional-coalescing-converter/index.html","searchKeys":["OptionalCoalescingConverter","abstract class OptionalCoalescingConverter<T : Any>(val outputError: Boolean = false, var validator: Validator<T?> = null) : MultiNamedInputConverter<List<T>, T?, Int> , SlashCommandConverter","dev.kordex.core.commands.converters.OptionalCoalescingConverter"]},{"name":"abstract class OptionalCoalescingConverterBuilder<T : Any> : CoalescingConverterBuilder<T?> ","description":"dev.kordex.core.commands.converters.builders.OptionalCoalescingConverterBuilder","location":"kord-extensions/dev.kordex.core.commands.converters.builders/-optional-coalescing-converter-builder/index.html","searchKeys":["OptionalCoalescingConverterBuilder","abstract class OptionalCoalescingConverterBuilder<T : Any> : CoalescingConverterBuilder<T?> ","dev.kordex.core.commands.converters.builders.OptionalCoalescingConverterBuilder"]},{"name":"abstract class OptionalConverter<T : Any>(val outputError: Boolean = false, var validator: Validator<T?> = null) : SingleNamedInputConverter<T, T?, Boolean> , SlashCommandConverter","description":"dev.kordex.core.commands.converters.OptionalConverter","location":"kord-extensions/dev.kordex.core.commands.converters/-optional-converter/index.html","searchKeys":["OptionalConverter","abstract class OptionalConverter<T : Any>(val outputError: Boolean = false, var validator: Validator<T?> = null) : SingleNamedInputConverter<T, T?, Boolean> , SlashCommandConverter","dev.kordex.core.commands.converters.OptionalConverter"]},{"name":"abstract class OptionalConverterBuilder<T : Any> : ConverterBuilder<T?> ","description":"dev.kordex.core.commands.converters.builders.OptionalConverterBuilder","location":"kord-extensions/dev.kordex.core.commands.converters.builders/-optional-converter-builder/index.html","searchKeys":["OptionalConverterBuilder","abstract class OptionalConverterBuilder<T : Any> : ConverterBuilder<T?> ","dev.kordex.core.commands.converters.builders.OptionalConverterBuilder"]},{"name":"abstract class PublicSelectMenu<C : SelectMenuContext, PublicInteractionContext, M : ModalForm>(timeoutTask: Task?, val modal: () -> M? = null, var initialResponseBuilder: InitialEphemeralSelectMenuResponseBuilder = null) : SelectMenu<C, M> ","description":"dev.kordex.core.components.menus.PublicSelectMenu","location":"kord-extensions/dev.kordex.core.components.menus/-public-select-menu/index.html","searchKeys":["PublicSelectMenu","abstract class PublicSelectMenu<C : SelectMenuContext, PublicInteractionContext, M : ModalForm>(timeoutTask: Task?, val modal: () -> M? = null, var initialResponseBuilder: InitialEphemeralSelectMenuResponseBuilder = null) : SelectMenu<C, M> ","dev.kordex.core.components.menus.PublicSelectMenu"]},{"name":"abstract class RoleSelectMenuContext(component: SelectMenu<*, *>, event: SelectMenuInteractionCreateEvent, cache: MutableStringKeyedMap<Any>) : SelectMenuContext","description":"dev.kordex.core.components.menus.role.RoleSelectMenuContext","location":"kord-extensions/dev.kordex.core.components.menus.role/-role-select-menu-context/index.html","searchKeys":["RoleSelectMenuContext","abstract class RoleSelectMenuContext(component: SelectMenu<*, *>, event: SelectMenuInteractionCreateEvent, cache: MutableStringKeyedMap<Any>) : SelectMenuContext","dev.kordex.core.components.menus.role.RoleSelectMenuContext"]},{"name":"abstract class SelectMenu<C : SelectMenuContext, M : ModalForm>(timeoutTask: Task?) : ComponentWithAction<SelectMenuInteractionCreateEvent, C, M> ","description":"dev.kordex.core.components.menus.SelectMenu","location":"kord-extensions/dev.kordex.core.components.menus/-select-menu/index.html","searchKeys":["SelectMenu","abstract class SelectMenu<C : SelectMenuContext, M : ModalForm>(timeoutTask: Task?) : ComponentWithAction<SelectMenuInteractionCreateEvent, C, M> ","dev.kordex.core.components.menus.SelectMenu"]},{"name":"abstract class SelectMenuContext(component: SelectMenu<*, *>, event: SelectMenuInteractionCreateEvent, cache: MutableStringKeyedMap<Any>) : ComponentContext<SelectMenuInteractionCreateEvent> ","description":"dev.kordex.core.components.menus.SelectMenuContext","location":"kord-extensions/dev.kordex.core.components.menus/-select-menu-context/index.html","searchKeys":["SelectMenuContext","abstract class SelectMenuContext(component: SelectMenu<*, *>, event: SelectMenuInteractionCreateEvent, cache: MutableStringKeyedMap<Any>) : ComponentContext<SelectMenuInteractionCreateEvent> ","dev.kordex.core.components.menus.SelectMenuContext"]},{"name":"abstract class SentryCapture : KordExKoinComponent","description":"dev.kordex.core.sentry.captures.SentryCapture","location":"kord-extensions/dev.kordex.core.sentry.captures/-sentry-capture/index.html","searchKeys":["SentryCapture","abstract class SentryCapture : KordExKoinComponent","dev.kordex.core.sentry.captures.SentryCapture"]},{"name":"abstract class SingleConverter<T : Any>(var validator: Validator<T> = null) : SingleNamedInputConverter<T, T, Boolean> , SlashCommandConverter","description":"dev.kordex.core.commands.converters.SingleConverter","location":"kord-extensions/dev.kordex.core.commands.converters/-single-converter/index.html","searchKeys":["SingleConverter","abstract class SingleConverter<T : Any>(var validator: Validator<T> = null) : SingleNamedInputConverter<T, T, Boolean> , SlashCommandConverter","dev.kordex.core.commands.converters.SingleConverter"]},{"name":"abstract class SingleNamedInputConverter<InputType, OutputType, ResultType : Any>(val required: Boolean = true) : Converter<InputType, OutputType, String, ResultType> ","description":"dev.kordex.core.commands.converters.types.SingleNamedInputConverter","location":"kord-extensions/dev.kordex.core.commands.converters.types/-single-named-input-converter/index.html","searchKeys":["SingleNamedInputConverter","abstract class SingleNamedInputConverter<InputType, OutputType, ResultType : Any>(val required: Boolean = true) : Converter<InputType, OutputType, String, ResultType> ","dev.kordex.core.commands.converters.types.SingleNamedInputConverter"]},{"name":"abstract class SlashCommand<C : SlashCommandContext<*, A, M>, A : Arguments, M : ModalForm>(extension: Extension, val arguments: () -> A? = null, val modal: () -> M? = null, val parentCommand: SlashCommand<*, *, *>? = null, val parentGroup: SlashGroup? = null) : ApplicationCommand<ChatInputCommandInteractionCreateEvent> ","description":"dev.kordex.core.commands.application.slash.SlashCommand","location":"kord-extensions/dev.kordex.core.commands.application.slash/-slash-command/index.html","searchKeys":["SlashCommand","abstract class SlashCommand<C : SlashCommandContext<*, A, M>, A : Arguments, M : ModalForm>(extension: Extension, val arguments: () -> A? = null, val modal: () -> M? = null, val parentCommand: SlashCommand<*, *, *>? = null, val parentGroup: SlashGroup? = null) : ApplicationCommand<ChatInputCommandInteractionCreateEvent> ","dev.kordex.core.commands.application.slash.SlashCommand"]},{"name":"abstract class StringSelectMenuContext(component: SelectMenu<*, *>, event: SelectMenuInteractionCreateEvent, cache: MutableStringKeyedMap<Any>) : SelectMenuContext","description":"dev.kordex.core.components.menus.string.StringSelectMenuContext","location":"kord-extensions/dev.kordex.core.components.menus.string/-string-select-menu-context/index.html","searchKeys":["StringSelectMenuContext","abstract class StringSelectMenuContext(component: SelectMenu<*, *>, event: SelectMenuInteractionCreateEvent, cache: MutableStringKeyedMap<Any>) : SelectMenuContext","dev.kordex.core.components.menus.string.StringSelectMenuContext"]},{"name":"abstract class TextInputWidget<T : TextInputWidget<T>> : Widget<String?> , KordExKoinComponent","description":"dev.kordex.core.components.forms.widgets.TextInputWidget","location":"kord-extensions/dev.kordex.core.components.forms.widgets/-text-input-widget/index.html","searchKeys":["TextInputWidget","abstract class TextInputWidget<T : TextInputWidget<T>> : Widget<String?> , KordExKoinComponent","dev.kordex.core.components.forms.widgets.TextInputWidget"]},{"name":"abstract class TranslationsProvider(val defaultLocaleBuilder: () -> Locale) : KordExKoinComponent","description":"dev.kordex.core.i18n.TranslationsProvider","location":"kord-extensions/dev.kordex.core.i18n/-translations-provider/index.html","searchKeys":["TranslationsProvider","abstract class TranslationsProvider(val defaultLocaleBuilder: () -> Locale) : KordExKoinComponent","dev.kordex.core.i18n.TranslationsProvider"]},{"name":"abstract class UserCommand<C : UserCommandContext<C, M>, M : ModalForm>(extension: Extension, val modal: () -> M? = null) : ApplicationCommand<UserCommandInteractionCreateEvent> ","description":"dev.kordex.core.commands.application.user.UserCommand","location":"kord-extensions/dev.kordex.core.commands.application.user/-user-command/index.html","searchKeys":["UserCommand","abstract class UserCommand<C : UserCommandContext<C, M>, M : ModalForm>(extension: Extension, val modal: () -> M? = null) : ApplicationCommand<UserCommandInteractionCreateEvent> ","dev.kordex.core.commands.application.user.UserCommand"]},{"name":"abstract class UserCommandContext<C : UserCommandContext<C, M>, M : ModalForm>(val event: UserCommandInteractionCreateEvent, val command: UserCommand<C, M>, val cache: MutableStringKeyedMap<Any>) : ApplicationCommandContext","description":"dev.kordex.core.commands.application.user.UserCommandContext","location":"kord-extensions/dev.kordex.core.commands.application.user/-user-command-context/index.html","searchKeys":["UserCommandContext","abstract class UserCommandContext<C : UserCommandContext<C, M>, M : ModalForm>(val event: UserCommandInteractionCreateEvent, val command: UserCommand<C, M>, val cache: MutableStringKeyedMap<Any>) : ApplicationCommandContext","dev.kordex.core.commands.application.user.UserCommandContext"]},{"name":"abstract class UserSelectMenuContext(component: SelectMenu<*, *>, event: SelectMenuInteractionCreateEvent, cache: MutableStringKeyedMap<Any>) : SelectMenuContext","description":"dev.kordex.core.components.menus.user.UserSelectMenuContext","location":"kord-extensions/dev.kordex.core.components.menus.user/-user-select-menu-context/index.html","searchKeys":["UserSelectMenuContext","abstract class UserSelectMenuContext(component: SelectMenu<*, *>, event: SelectMenuInteractionCreateEvent, cache: MutableStringKeyedMap<Any>) : SelectMenuContext","dev.kordex.core.components.menus.user.UserSelectMenuContext"]},{"name":"abstract class Widget<T>","description":"dev.kordex.core.components.forms.widgets.Widget","location":"kord-extensions/dev.kordex.core.components.forms.widgets/-widget/index.html","searchKeys":["Widget","abstract class Widget<T>","dev.kordex.core.components.forms.widgets.Widget"]},{"name":"abstract fun apply(builder: ActionRowBuilder)","description":"dev.kordex.core.components.Component.apply","location":"kord-extensions/dev.kordex.core.components/-component/apply.html","searchKeys":["apply","abstract fun apply(builder: ActionRowBuilder)","dev.kordex.core.components.Component.apply"]},{"name":"abstract fun build(arguments: Arguments): Converter<*, *, *, *>","description":"dev.kordex.core.commands.converters.builders.ConverterBuilder.build","location":"kord-extensions/dev.kordex.core.commands.converters.builders/-converter-builder/build.html","searchKeys":["build","abstract fun build(arguments: Arguments): Converter<*, *, *, *>","dev.kordex.core.commands.converters.builders.ConverterBuilder.build"]},{"name":"abstract fun constructUniqueIdentifier(data: T): String","description":"dev.kordex.core.registry.RegistryStorage.constructUniqueIdentifier","location":"kord-extensions/dev.kordex.core.registry/-registry-storage/construct-unique-identifier.html","searchKeys":["constructUniqueIdentifier","abstract fun constructUniqueIdentifier(data: T): String","dev.kordex.core.registry.RegistryStorage.constructUniqueIdentifier"]},{"name":"abstract fun createContext(event: SelectMenuInteractionCreateEvent, interactionResponse: EphemeralMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>): C","description":"dev.kordex.core.components.menus.EphemeralSelectMenu.createContext","location":"kord-extensions/dev.kordex.core.components.menus/-ephemeral-select-menu/create-context.html","searchKeys":["createContext","abstract fun createContext(event: SelectMenuInteractionCreateEvent, interactionResponse: EphemeralMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>): C","dev.kordex.core.components.menus.EphemeralSelectMenu.createContext"]},{"name":"abstract fun createContext(event: SelectMenuInteractionCreateEvent, interactionResponse: PublicMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>): C","description":"dev.kordex.core.components.menus.PublicSelectMenu.createContext","location":"kord-extensions/dev.kordex.core.components.menus/-public-select-menu/create-context.html","searchKeys":["createContext","abstract fun createContext(event: SelectMenuInteractionCreateEvent, interactionResponse: PublicMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>): C","dev.kordex.core.components.menus.PublicSelectMenu.createContext"]},{"name":"abstract fun editingPaginator(defaultGroup: Key = EMPTY_KEY, locale: Locale? = null, builder: PaginatorBuilder.() -> Unit): BaseButtonPaginator","description":"dev.kordex.core.types.InteractionContext.editingPaginator","location":"kord-extensions/dev.kordex.core.types/-interaction-context/editing-paginator.html","searchKeys":["editingPaginator","abstract fun editingPaginator(defaultGroup: Key = EMPTY_KEY, locale: Locale? = null, builder: PaginatorBuilder.() -> Unit): BaseButtonPaginator","dev.kordex.core.types.InteractionContext.editingPaginator"]},{"name":"abstract fun entryFlow(): Flow<RegistryStorage.StorageEntry<K, T>>","description":"dev.kordex.core.registry.RegistryStorage.entryFlow","location":"kord-extensions/dev.kordex.core.registry/-registry-storage/entry-flow.html","searchKeys":["entryFlow","abstract fun entryFlow(): Flow<RegistryStorage.StorageEntry<K, T>>","dev.kordex.core.registry.RegistryStorage.entryFlow"]},{"name":"abstract fun get(key: Key): String","description":"dev.kordex.core.i18n.TranslationsProvider.get","location":"kord-extensions/dev.kordex.core.i18n/-translations-provider/get.html","searchKeys":["get","abstract fun get(key: Key): String","dev.kordex.core.i18n.TranslationsProvider.get"]},{"name":"abstract fun hasKey(key: Key): Boolean","description":"dev.kordex.core.i18n.TranslationsProvider.hasKey","location":"kord-extensions/dev.kordex.core.i18n/-translations-provider/has-key.html","searchKeys":["hasKey","abstract fun hasKey(key: Key): Boolean","dev.kordex.core.i18n.TranslationsProvider.hasKey"]},{"name":"abstract fun translate(key: Key, replacements: Array<Any?> = arrayOf()): String","description":"dev.kordex.core.i18n.TranslationsProvider.translate","location":"kord-extensions/dev.kordex.core.i18n/-translations-provider/translate.html","searchKeys":["translate","abstract fun translate(key: Key, replacements: Array<Any?> = arrayOf()): String","dev.kordex.core.i18n.TranslationsProvider.translate"]},{"name":"abstract fun translateNamed(key: Key, replacements: Map<String, Any?>): String","description":"dev.kordex.core.i18n.TranslationsProvider.translateNamed","location":"kord-extensions/dev.kordex.core.i18n/-translations-provider/translate-named.html","searchKeys":["translateNamed","abstract fun translateNamed(key: Key, replacements: Map<String, Any?>): String","dev.kordex.core.i18n.TranslationsProvider.translateNamed"]},{"name":"abstract fun validate()","description":"dev.kordex.core.components.Component.validate","location":"kord-extensions/dev.kordex.core.components/-component/validate.html","searchKeys":["validate","abstract fun validate()","dev.kordex.core.components.Component.validate"]},{"name":"abstract fun validate()","description":"dev.kordex.core.components.forms.widgets.Widget.validate","location":"kord-extensions/dev.kordex.core.components.forms.widgets/-widget/validate.html","searchKeys":["validate","abstract fun validate()","dev.kordex.core.components.forms.widgets.Widget.validate"]},{"name":"abstract suspend fun <R : Data> delete(unit: StorageUnit<R>): Boolean","description":"dev.kordex.core.storage.DataAdapter.delete","location":"kord-extensions/dev.kordex.core.storage/-data-adapter/delete.html","searchKeys":["delete","abstract suspend fun <R : Data> delete(unit: StorageUnit<R>): Boolean","dev.kordex.core.storage.DataAdapter.delete"]},{"name":"abstract suspend fun <R : Data> get(unit: StorageUnit<R>): R?","description":"dev.kordex.core.storage.DataAdapter.get","location":"kord-extensions/dev.kordex.core.storage/-data-adapter/get.html","searchKeys":["get","abstract suspend fun <R : Data> get(unit: StorageUnit<R>): R?","dev.kordex.core.storage.DataAdapter.get"]},{"name":"abstract suspend fun <R : Data> reload(unit: StorageUnit<R>): R?","description":"dev.kordex.core.storage.DataAdapter.reload","location":"kord-extensions/dev.kordex.core.storage/-data-adapter/reload.html","searchKeys":["reload","abstract suspend fun <R : Data> reload(unit: StorageUnit<R>): R?","dev.kordex.core.storage.DataAdapter.reload"]},{"name":"abstract suspend fun <R : Data> save(unit: StorageUnit<R>): R?","description":"dev.kordex.core.storage.DataAdapter.save","location":"kord-extensions/dev.kordex.core.storage/-data-adapter/save.html","searchKeys":["save","abstract suspend fun <R : Data> save(unit: StorageUnit<R>): R?","dev.kordex.core.storage.DataAdapter.save"]},{"name":"abstract suspend fun <R : Data> save(unit: StorageUnit<R>, data: R): R","description":"dev.kordex.core.storage.DataAdapter.save","location":"kord-extensions/dev.kordex.core.storage/-data-adapter/save.html","searchKeys":["save","abstract suspend fun <R : Data> save(unit: StorageUnit<R>, data: R): R","dev.kordex.core.storage.DataAdapter.save"]},{"name":"abstract suspend fun apply(builder: ActionRowBuilder, locale: Locale)","description":"dev.kordex.core.components.forms.widgets.Widget.apply","location":"kord-extensions/dev.kordex.core.components.forms.widgets/-widget/apply.html","searchKeys":["apply","abstract suspend fun apply(builder: ActionRowBuilder, locale: Locale)","dev.kordex.core.components.forms.widgets.Widget.apply"]},{"name":"abstract suspend fun call(event: E, cache: MutableStringKeyedMap<Any>)","description":"dev.kordex.core.commands.application.ApplicationCommand.call","location":"kord-extensions/dev.kordex.core.commands.application/-application-command/call.html","searchKeys":["call","abstract suspend fun call(event: E, cache: MutableStringKeyedMap<Any>)","dev.kordex.core.commands.application.ApplicationCommand.call"]},{"name":"abstract suspend fun destroy()","description":"dev.kordex.core.pagination.BasePaginator.destroy","location":"kord-extensions/dev.kordex.core.pagination/-base-paginator/destroy.html","searchKeys":["destroy","abstract suspend fun destroy()","dev.kordex.core.pagination.BasePaginator.destroy"]},{"name":"abstract suspend fun edit(builder: suspend InteractionResponseModifyBuilder.() -> Unit): ResponseType","description":"dev.kordex.core.types.InteractionContext.edit","location":"kord-extensions/dev.kordex.core.types/-interaction-context/edit.html","searchKeys":["edit","abstract suspend fun edit(builder: suspend InteractionResponseModifyBuilder.() -> Unit): ResponseType","dev.kordex.core.types.InteractionContext.edit"]},{"name":"abstract suspend fun formatCommandHelp(prefix: String, event: MessageCreateEvent, command: ChatCommand<out Arguments>, longDescription: Boolean = false): Triple<String, String, String>","description":"dev.kordex.core.extensions.base.HelpProvider.formatCommandHelp","location":"kord-extensions/dev.kordex.core.extensions.base/-help-provider/format-command-help.html","searchKeys":["formatCommandHelp","abstract suspend fun formatCommandHelp(prefix: String, event: MessageCreateEvent, command: ChatCommand<out Arguments>, longDescription: Boolean = false): Triple<String, String, String>","dev.kordex.core.extensions.base.HelpProvider.formatCommandHelp"]},{"name":"abstract suspend fun gatherCommands(event: MessageCreateEvent): List<ChatCommand<out Arguments>>","description":"dev.kordex.core.extensions.base.HelpProvider.gatherCommands","location":"kord-extensions/dev.kordex.core.extensions.base/-help-provider/gather-commands.html","searchKeys":["gatherCommands","abstract suspend fun gatherCommands(event: MessageCreateEvent): List<ChatCommand<out Arguments>>","dev.kordex.core.extensions.base.HelpProvider.gatherCommands"]},{"name":"abstract suspend fun get(id: K): T?","description":"dev.kordex.core.registry.RegistryStorage.get","location":"kord-extensions/dev.kordex.core.registry/-registry-storage/get.html","searchKeys":["get","abstract suspend fun get(id: K): T?","dev.kordex.core.registry.RegistryStorage.get"]},{"name":"abstract suspend fun getChannel(): Channel","description":"dev.kordex.core.events.interfaces.ChannelEvent.getChannel","location":"kord-extensions/dev.kordex.core.events.interfaces/-channel-event/get-channel.html","searchKeys":["getChannel","abstract suspend fun getChannel(): Channel","dev.kordex.core.events.interfaces.ChannelEvent.getChannel"]},{"name":"abstract suspend fun getChannel(): ChannelBehavior","description":"dev.kordex.core.commands.CommandContext.getChannel","location":"kord-extensions/dev.kordex.core.commands/-command-context/get-channel.html","searchKeys":["getChannel","abstract suspend fun getChannel(): ChannelBehavior","dev.kordex.core.commands.CommandContext.getChannel"]},{"name":"abstract suspend fun getChannelOrNull(): Channel?","description":"dev.kordex.core.events.interfaces.ChannelEvent.getChannelOrNull","location":"kord-extensions/dev.kordex.core.events.interfaces/-channel-event/get-channel-or-null.html","searchKeys":["getChannelOrNull","abstract suspend fun getChannelOrNull(): Channel?","dev.kordex.core.events.interfaces.ChannelEvent.getChannelOrNull"]},{"name":"abstract suspend fun getCommand(event: MessageCreateEvent, args: List<String>): ChatCommand<out Arguments>?","description":"dev.kordex.core.extensions.base.HelpProvider.getCommand","location":"kord-extensions/dev.kordex.core.extensions.base/-help-provider/get-command.html","searchKeys":["getCommand","abstract suspend fun getCommand(event: MessageCreateEvent, args: List<String>): ChatCommand<out Arguments>?","dev.kordex.core.extensions.base.HelpProvider.getCommand"]},{"name":"abstract suspend fun getCommandHelpPaginator(event: MessageCreateEvent, prefix: String, args: List<String>): BasePaginator","description":"dev.kordex.core.extensions.base.HelpProvider.getCommandHelpPaginator","location":"kord-extensions/dev.kordex.core.extensions.base/-help-provider/get-command-help-paginator.html","searchKeys":["getCommandHelpPaginator","abstract suspend fun getCommandHelpPaginator(event: MessageCreateEvent, prefix: String, args: List<String>): BasePaginator","dev.kordex.core.extensions.base.HelpProvider.getCommandHelpPaginator"]},{"name":"abstract suspend fun getCommandHelpPaginator(event: MessageCreateEvent, prefix: String, command: ChatCommand<out Arguments>?): BasePaginator","description":"dev.kordex.core.extensions.base.HelpProvider.getCommandHelpPaginator","location":"kord-extensions/dev.kordex.core.extensions.base/-help-provider/get-command-help-paginator.html","searchKeys":["getCommandHelpPaginator","abstract suspend fun getCommandHelpPaginator(event: MessageCreateEvent, prefix: String, command: ChatCommand<out Arguments>?): BasePaginator","dev.kordex.core.extensions.base.HelpProvider.getCommandHelpPaginator"]},{"name":"abstract suspend fun getGuild(): Guild","description":"dev.kordex.core.events.interfaces.GuildEvent.getGuild","location":"kord-extensions/dev.kordex.core.events.interfaces/-guild-event/get-guild.html","searchKeys":["getGuild","abstract suspend fun getGuild(): Guild","dev.kordex.core.events.interfaces.GuildEvent.getGuild"]},{"name":"abstract suspend fun getGuild(): GuildBehavior?","description":"dev.kordex.core.commands.CommandContext.getGuild","location":"kord-extensions/dev.kordex.core.commands/-command-context/get-guild.html","searchKeys":["getGuild","abstract suspend fun getGuild(): GuildBehavior?","dev.kordex.core.commands.CommandContext.getGuild"]},{"name":"abstract suspend fun getGuildOrNull(): Guild?","description":"dev.kordex.core.events.interfaces.GuildEvent.getGuildOrNull","location":"kord-extensions/dev.kordex.core.events.interfaces/-guild-event/get-guild-or-null.html","searchKeys":["getGuildOrNull","abstract suspend fun getGuildOrNull(): Guild?","dev.kordex.core.events.interfaces.GuildEvent.getGuildOrNull"]},{"name":"abstract suspend fun getLocale(): Locale","description":"dev.kordex.core.types.TranslatableContext.getLocale","location":"kord-extensions/dev.kordex.core.types/-translatable-context/get-locale.html","searchKeys":["getLocale","abstract suspend fun getLocale(): Locale","dev.kordex.core.types.TranslatableContext.getLocale"]},{"name":"abstract suspend fun getMainHelpPaginator(event: MessageCreateEvent, prefix: String): BasePaginator","description":"dev.kordex.core.extensions.base.HelpProvider.getMainHelpPaginator","location":"kord-extensions/dev.kordex.core.extensions.base/-help-provider/get-main-help-paginator.html","searchKeys":["getMainHelpPaginator","abstract suspend fun getMainHelpPaginator(event: MessageCreateEvent, prefix: String): BasePaginator","dev.kordex.core.extensions.base.HelpProvider.getMainHelpPaginator"]},{"name":"abstract suspend fun getMember(): Member","description":"dev.kordex.core.events.interfaces.MemberEvent.getMember","location":"kord-extensions/dev.kordex.core.events.interfaces/-member-event/get-member.html","searchKeys":["getMember","abstract suspend fun getMember(): Member","dev.kordex.core.events.interfaces.MemberEvent.getMember"]},{"name":"abstract suspend fun getMember(): MemberBehavior?","description":"dev.kordex.core.commands.CommandContext.getMember","location":"kord-extensions/dev.kordex.core.commands/-command-context/get-member.html","searchKeys":["getMember","abstract suspend fun getMember(): MemberBehavior?","dev.kordex.core.commands.CommandContext.getMember"]},{"name":"abstract suspend fun getMemberOrNull(): Member?","description":"dev.kordex.core.events.interfaces.MemberEvent.getMemberOrNull","location":"kord-extensions/dev.kordex.core.events.interfaces/-member-event/get-member-or-null.html","searchKeys":["getMemberOrNull","abstract suspend fun getMemberOrNull(): Member?","dev.kordex.core.events.interfaces.MemberEvent.getMemberOrNull"]},{"name":"abstract suspend fun getMessage(): Message","description":"dev.kordex.core.events.interfaces.MessageEvent.getMessage","location":"kord-extensions/dev.kordex.core.events.interfaces/-message-event/get-message.html","searchKeys":["getMessage","abstract suspend fun getMessage(): Message","dev.kordex.core.events.interfaces.MessageEvent.getMessage"]},{"name":"abstract suspend fun getMessageOrNull(): Message?","description":"dev.kordex.core.events.interfaces.MessageEvent.getMessageOrNull","location":"kord-extensions/dev.kordex.core.events.interfaces/-message-event/get-message-or-null.html","searchKeys":["getMessageOrNull","abstract suspend fun getMessageOrNull(): Message?","dev.kordex.core.events.interfaces.MessageEvent.getMessageOrNull"]},{"name":"abstract suspend fun getRole(): Role","description":"dev.kordex.core.events.interfaces.RoleEvent.getRole","location":"kord-extensions/dev.kordex.core.events.interfaces/-role-event/get-role.html","searchKeys":["getRole","abstract suspend fun getRole(): Role","dev.kordex.core.events.interfaces.RoleEvent.getRole"]},{"name":"abstract suspend fun getRoleOrNull(): Role?","description":"dev.kordex.core.events.interfaces.RoleEvent.getRoleOrNull","location":"kord-extensions/dev.kordex.core.events.interfaces/-role-event/get-role-or-null.html","searchKeys":["getRoleOrNull","abstract suspend fun getRoleOrNull(): Role?","dev.kordex.core.events.interfaces.RoleEvent.getRoleOrNull"]},{"name":"abstract suspend fun getUser(): User","description":"dev.kordex.core.events.interfaces.UserEvent.getUser","location":"kord-extensions/dev.kordex.core.events.interfaces/-user-event/get-user.html","searchKeys":["getUser","abstract suspend fun getUser(): User","dev.kordex.core.events.interfaces.UserEvent.getUser"]},{"name":"abstract suspend fun getUser(): UserBehavior?","description":"dev.kordex.core.commands.CommandContext.getUser","location":"kord-extensions/dev.kordex.core.commands/-command-context/get-user.html","searchKeys":["getUser","abstract suspend fun getUser(): UserBehavior?","dev.kordex.core.commands.CommandContext.getUser"]},{"name":"abstract suspend fun getUserOrNull(): User?","description":"dev.kordex.core.events.interfaces.UserEvent.getUserOrNull","location":"kord-extensions/dev.kordex.core.events.interfaces/-user-event/get-user-or-null.html","searchKeys":["getUserOrNull","abstract suspend fun getUserOrNull(): User?","dev.kordex.core.events.interfaces.UserEvent.getUserOrNull"]},{"name":"abstract suspend fun goToPage(page: Int)","description":"dev.kordex.core.pagination.BasePaginator.goToPage","location":"kord-extensions/dev.kordex.core.pagination/-base-paginator/go-to-page.html","searchKeys":["goToPage","abstract suspend fun goToPage(page: Int)","dev.kordex.core.pagination.BasePaginator.goToPage"]},{"name":"abstract suspend fun handle(event: AutoCompleteInteractionCreateEvent)","description":"dev.kordex.core.commands.application.ApplicationCommandRegistry.handle","location":"kord-extensions/dev.kordex.core.commands.application/-application-command-registry/handle.html","searchKeys":["handle","abstract suspend fun handle(event: AutoCompleteInteractionCreateEvent)","dev.kordex.core.commands.application.ApplicationCommandRegistry.handle"]},{"name":"abstract suspend fun handle(event: ChatInputCommandInteractionCreateEvent)","description":"dev.kordex.core.commands.application.ApplicationCommandRegistry.handle","location":"kord-extensions/dev.kordex.core.commands.application/-application-command-registry/handle.html","searchKeys":["handle","abstract suspend fun handle(event: ChatInputCommandInteractionCreateEvent)","dev.kordex.core.commands.application.ApplicationCommandRegistry.handle"]},{"name":"abstract suspend fun handle(event: MessageCommandInteractionCreateEvent)","description":"dev.kordex.core.commands.application.ApplicationCommandRegistry.handle","location":"kord-extensions/dev.kordex.core.commands.application/-application-command-registry/handle.html","searchKeys":["handle","abstract suspend fun handle(event: MessageCommandInteractionCreateEvent)","dev.kordex.core.commands.application.ApplicationCommandRegistry.handle"]},{"name":"abstract suspend fun handle(event: UserCommandInteractionCreateEvent)","description":"dev.kordex.core.commands.application.ApplicationCommandRegistry.handle","location":"kord-extensions/dev.kordex.core.commands.application/-application-command-registry/handle.html","searchKeys":["handle","abstract suspend fun handle(event: UserCommandInteractionCreateEvent)","dev.kordex.core.commands.application.ApplicationCommandRegistry.handle"]},{"name":"abstract suspend fun nextGroup()","description":"dev.kordex.core.pagination.BasePaginator.nextGroup","location":"kord-extensions/dev.kordex.core.pagination/-base-paginator/next-group.html","searchKeys":["nextGroup","abstract suspend fun nextGroup()","dev.kordex.core.pagination.BasePaginator.nextGroup"]},{"name":"abstract suspend fun parse(parser: StringParser?, context: CommandContext, named: NamedInputType? = null): ResultType","description":"dev.kordex.core.commands.converters.Converter.parse","location":"kord-extensions/dev.kordex.core.commands.converters/-converter/parse.html","searchKeys":["parse","abstract suspend fun parse(parser: StringParser?, context: CommandContext, named: NamedInputType? = null): ResultType","dev.kordex.core.commands.converters.Converter.parse"]},{"name":"abstract suspend fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","description":"dev.kordex.core.commands.converters.SlashCommandConverter.parseOption","location":"kord-extensions/dev.kordex.core.commands.converters/-slash-command-converter/parse-option.html","searchKeys":["parseOption","abstract suspend fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","dev.kordex.core.commands.converters.SlashCommandConverter.parseOption"]},{"name":"abstract suspend fun populate()","description":"dev.kordex.core.commands.CommandContext.populate","location":"kord-extensions/dev.kordex.core.commands/-command-context/populate.html","searchKeys":["populate","abstract suspend fun populate()","dev.kordex.core.commands.CommandContext.populate"]},{"name":"abstract suspend fun register(command: MessageCommand<*, *>): MessageCommand<*, *>?","description":"dev.kordex.core.commands.application.ApplicationCommandRegistry.register","location":"kord-extensions/dev.kordex.core.commands.application/-application-command-registry/register.html","searchKeys":["register","abstract suspend fun register(command: MessageCommand<*, *>): MessageCommand<*, *>?","dev.kordex.core.commands.application.ApplicationCommandRegistry.register"]},{"name":"abstract suspend fun register(command: SlashCommand<*, *, *>): SlashCommand<*, *, *>?","description":"dev.kordex.core.commands.application.ApplicationCommandRegistry.register","location":"kord-extensions/dev.kordex.core.commands.application/-application-command-registry/register.html","searchKeys":["register","abstract suspend fun register(command: SlashCommand<*, *, *>): SlashCommand<*, *, *>?","dev.kordex.core.commands.application.ApplicationCommandRegistry.register"]},{"name":"abstract suspend fun register(command: UserCommand<*, *>): UserCommand<*, *>?","description":"dev.kordex.core.commands.application.ApplicationCommandRegistry.register","location":"kord-extensions/dev.kordex.core.commands.application/-application-command-registry/register.html","searchKeys":["register","abstract suspend fun register(command: UserCommand<*, *>): UserCommand<*, *>?","dev.kordex.core.commands.application.ApplicationCommandRegistry.register"]},{"name":"abstract suspend fun register(data: T)","description":"dev.kordex.core.registry.RegistryStorage.register","location":"kord-extensions/dev.kordex.core.registry/-registry-storage/register.html","searchKeys":["register","abstract suspend fun register(data: T)","dev.kordex.core.registry.RegistryStorage.register"]},{"name":"abstract suspend fun remove(id: K): T?","description":"dev.kordex.core.registry.RegistryStorage.remove","location":"kord-extensions/dev.kordex.core.registry/-registry-storage/remove.html","searchKeys":["remove","abstract suspend fun remove(id: K): T?","dev.kordex.core.registry.RegistryStorage.remove"]},{"name":"abstract suspend fun respond(builder: suspend FollowupMessageCreateBuilder.() -> Unit): FollowupType","description":"dev.kordex.core.types.InteractionContext.respond","location":"kord-extensions/dev.kordex.core.types/-interaction-context/respond.html","searchKeys":["respond","abstract suspend fun respond(builder: suspend FollowupMessageCreateBuilder.() -> Unit): FollowupType","dev.kordex.core.types.InteractionContext.respond"]},{"name":"abstract suspend fun respondOpposite(builder: suspend FollowupMessageCreateBuilder.() -> Unit): OppositeFollowupType","description":"dev.kordex.core.types.InteractionContext.respondOpposite","location":"kord-extensions/dev.kordex.core.types/-interaction-context/respond-opposite.html","searchKeys":["respondOpposite","abstract suspend fun respondOpposite(builder: suspend FollowupMessageCreateBuilder.() -> Unit): OppositeFollowupType","dev.kordex.core.types.InteractionContext.respondOpposite"]},{"name":"abstract suspend fun respondText(context: C, message: Key, failureType: FailureReason<*>)","description":"dev.kordex.core.commands.application.message.MessageCommand.respondText","location":"kord-extensions/dev.kordex.core.commands.application.message/-message-command/respond-text.html","searchKeys":["respondText","abstract suspend fun respondText(context: C, message: Key, failureType: FailureReason<*>)","dev.kordex.core.commands.application.message.MessageCommand.respondText"]},{"name":"abstract suspend fun respondText(context: C, message: Key, failureType: FailureReason<*>)","description":"dev.kordex.core.commands.application.slash.SlashCommand.respondText","location":"kord-extensions/dev.kordex.core.commands.application.slash/-slash-command/respond-text.html","searchKeys":["respondText","abstract suspend fun respondText(context: C, message: Key, failureType: FailureReason<*>)","dev.kordex.core.commands.application.slash.SlashCommand.respondText"]},{"name":"abstract suspend fun respondText(context: C, message: Key, failureType: FailureReason<*>)","description":"dev.kordex.core.commands.application.user.UserCommand.respondText","location":"kord-extensions/dev.kordex.core.commands.application.user/-user-command/respond-text.html","searchKeys":["respondText","abstract suspend fun respondText(context: C, message: Key, failureType: FailureReason<*>)","dev.kordex.core.commands.application.user.UserCommand.respondText"]},{"name":"abstract suspend fun respondText(context: C, message: Key, failureType: FailureReason<*>)","description":"dev.kordex.core.components.buttons.InteractionButtonWithAction.respondText","location":"kord-extensions/dev.kordex.core.components.buttons/-interaction-button-with-action/respond-text.html","searchKeys":["respondText","abstract suspend fun respondText(context: C, message: Key, failureType: FailureReason<*>)","dev.kordex.core.components.buttons.InteractionButtonWithAction.respondText"]},{"name":"abstract suspend fun respondText(context: C, message: Key, failureType: FailureReason<*>)","description":"dev.kordex.core.components.menus.SelectMenu.respondText","location":"kord-extensions/dev.kordex.core.components.menus/-select-menu/respond-text.html","searchKeys":["respondText","abstract suspend fun respondText(context: C, message: Key, failureType: FailureReason<*>)","dev.kordex.core.components.menus.SelectMenu.respondText"]},{"name":"abstract suspend fun respondingPaginator(defaultGroup: Key = EMPTY_KEY, locale: Locale? = null, builder: suspend PaginatorBuilder.() -> Unit): BaseButtonPaginator","description":"dev.kordex.core.types.InteractionContext.respondingPaginator","location":"kord-extensions/dev.kordex.core.types/-interaction-context/responding-paginator.html","searchKeys":["respondingPaginator","abstract suspend fun respondingPaginator(defaultGroup: Key = EMPTY_KEY, locale: Locale? = null, builder: suspend PaginatorBuilder.() -> Unit): BaseButtonPaginator","dev.kordex.core.types.InteractionContext.respondingPaginator"]},{"name":"abstract suspend fun run(event: ChatInputCommandInteractionCreateEvent, cache: MutableStringKeyedMap<Any>)","description":"dev.kordex.core.commands.application.slash.SlashCommand.run","location":"kord-extensions/dev.kordex.core.commands.application.slash/-slash-command/run.html","searchKeys":["run","abstract suspend fun run(event: ChatInputCommandInteractionCreateEvent, cache: MutableStringKeyedMap<Any>)","dev.kordex.core.commands.application.slash.SlashCommand.run"]},{"name":"abstract suspend fun send()","description":"dev.kordex.core.pagination.BasePaginator.send","location":"kord-extensions/dev.kordex.core.pagination/-base-paginator/send.html","searchKeys":["send","abstract suspend fun send()","dev.kordex.core.pagination.BasePaginator.send"]},{"name":"abstract suspend fun set(id: K, data: T)","description":"dev.kordex.core.registry.RegistryStorage.set","location":"kord-extensions/dev.kordex.core.registry/-registry-storage/set.html","searchKeys":["set","abstract suspend fun set(id: K, data: T)","dev.kordex.core.registry.RegistryStorage.set"]},{"name":"abstract suspend fun setup()","description":"dev.kordex.core.extensions.Extension.setup","location":"kord-extensions/dev.kordex.core.extensions/-extension/setup.html","searchKeys":["setup","abstract suspend fun setup()","dev.kordex.core.extensions.Extension.setup"]},{"name":"abstract suspend fun setup()","description":"dev.kordex.core.pagination.BasePaginator.setup","location":"kord-extensions/dev.kordex.core.pagination/-base-paginator/setup.html","searchKeys":["setup","abstract suspend fun setup()","dev.kordex.core.pagination.BasePaginator.setup"]},{"name":"abstract suspend fun setup()","description":"dev.kordex.core.plugins.KordExPlugin.setup","location":"kord-extensions/dev.kordex.core.plugins/-kord-ex-plugin/setup.html","searchKeys":["setup","abstract suspend fun setup()","dev.kordex.core.plugins.KordExPlugin.setup"]},{"name":"abstract suspend fun toSlashOption(arg: Argument<*>): OptionWrapper<*>","description":"dev.kordex.core.commands.converters.SlashCommandConverter.toSlashOption","location":"kord-extensions/dev.kordex.core.commands.converters/-slash-command-converter/to-slash-option.html","searchKeys":["toSlashOption","abstract suspend fun toSlashOption(arg: Argument<*>): OptionWrapper<*>","dev.kordex.core.commands.converters.SlashCommandConverter.toSlashOption"]},{"name":"abstract suspend fun unregister(command: MessageCommand<*, *>, delete: Boolean = true): MessageCommand<*, *>?","description":"dev.kordex.core.commands.application.ApplicationCommandRegistry.unregister","location":"kord-extensions/dev.kordex.core.commands.application/-application-command-registry/unregister.html","searchKeys":["unregister","abstract suspend fun unregister(command: MessageCommand<*, *>, delete: Boolean = true): MessageCommand<*, *>?","dev.kordex.core.commands.application.ApplicationCommandRegistry.unregister"]},{"name":"abstract suspend fun unregister(command: SlashCommand<*, *, *>, delete: Boolean = true): SlashCommand<*, *, *>?","description":"dev.kordex.core.commands.application.ApplicationCommandRegistry.unregister","location":"kord-extensions/dev.kordex.core.commands.application/-application-command-registry/unregister.html","searchKeys":["unregister","abstract suspend fun unregister(command: SlashCommand<*, *, *>, delete: Boolean = true): SlashCommand<*, *, *>?","dev.kordex.core.commands.application.ApplicationCommandRegistry.unregister"]},{"name":"abstract suspend fun unregister(command: UserCommand<*, *>, delete: Boolean = true): UserCommand<*, *>?","description":"dev.kordex.core.commands.application.ApplicationCommandRegistry.unregister","location":"kord-extensions/dev.kordex.core.commands.application/-application-command-registry/unregister.html","searchKeys":["unregister","abstract suspend fun unregister(command: UserCommand<*, *>, delete: Boolean = true): UserCommand<*, *>?","dev.kordex.core.commands.application.ApplicationCommandRegistry.unregister"]},{"name":"abstract suspend override fun call(event: ChatInputCommandInteractionCreateEvent, cache: MutableStringKeyedMap<Any>)","description":"dev.kordex.core.commands.application.slash.SlashCommand.call","location":"kord-extensions/dev.kordex.core.commands.application.slash/-slash-command/call.html","searchKeys":["call","abstract suspend override fun call(event: ChatInputCommandInteractionCreateEvent, cache: MutableStringKeyedMap<Any>)","dev.kordex.core.commands.application.slash.SlashCommand.call"]},{"name":"abstract suspend override fun call(event: MessageCommandInteractionCreateEvent, cache: MutableStringKeyedMap<Any>)","description":"dev.kordex.core.commands.application.message.MessageCommand.call","location":"kord-extensions/dev.kordex.core.commands.application.message/-message-command/call.html","searchKeys":["call","abstract suspend override fun call(event: MessageCommandInteractionCreateEvent, cache: MutableStringKeyedMap<Any>)","dev.kordex.core.commands.application.message.MessageCommand.call"]},{"name":"abstract suspend override fun call(event: UserCommandInteractionCreateEvent, cache: MutableStringKeyedMap<Any>)","description":"dev.kordex.core.commands.application.user.UserCommand.call","location":"kord-extensions/dev.kordex.core.commands.application.user/-user-command/call.html","searchKeys":["call","abstract suspend override fun call(event: UserCommandInteractionCreateEvent, cache: MutableStringKeyedMap<Any>)","dev.kordex.core.commands.application.user.UserCommand.call"]},{"name":"abstract val channel: ChannelBehavior?","description":"dev.kordex.core.events.interfaces.ChannelEvent.channel","location":"kord-extensions/dev.kordex.core.events.interfaces/-channel-event/channel.html","searchKeys":["channel","abstract val channel: ChannelBehavior?","dev.kordex.core.events.interfaces.ChannelEvent.channel"]},{"name":"abstract val command: C","description":"dev.kordex.core.commands.events.CommandEvent.command","location":"kord-extensions/dev.kordex.core.commands.events/-command-event/command.html","searchKeys":["command","abstract val command: C","dev.kordex.core.commands.events.CommandEvent.command"]},{"name":"abstract val event: E","description":"dev.kordex.core.commands.events.CommandEvent.event","location":"kord-extensions/dev.kordex.core.commands.events/-command-event/event.html","searchKeys":["event","abstract val event: E","dev.kordex.core.commands.events.CommandEvent.event"]},{"name":"abstract val exception: ArgumentParsingException","description":"dev.kordex.core.commands.events.CommandFailedParsingEvent.exception","location":"kord-extensions/dev.kordex.core.commands.events/-command-failed-parsing-event/exception.html","searchKeys":["exception","abstract val exception: ArgumentParsingException","dev.kordex.core.commands.events.CommandFailedParsingEvent.exception"]},{"name":"abstract val guild: GuildBehavior?","description":"dev.kordex.core.events.interfaces.GuildEvent.guild","location":"kord-extensions/dev.kordex.core.events.interfaces/-guild-event/guild.html","searchKeys":["guild","abstract val guild: GuildBehavior?","dev.kordex.core.events.interfaces.GuildEvent.guild"]},{"name":"abstract val interactionResponse: ResponseBehavior","description":"dev.kordex.core.types.InteractionContext.interactionResponse","location":"kord-extensions/dev.kordex.core.types/-interaction-context/interaction-response.html","searchKeys":["interactionResponse","abstract val interactionResponse: ResponseBehavior","dev.kordex.core.types.InteractionContext.interactionResponse"]},{"name":"abstract val label: String","description":"dev.kordex.core.events.extra.models.GuildJoinRequestResponse.label","location":"kord-extensions/dev.kordex.core.events.extra.models/-guild-join-request-response/label.html","searchKeys":["label","abstract val label: String","dev.kordex.core.events.extra.models.GuildJoinRequestResponse.label"]},{"name":"abstract val member: MemberBehavior?","description":"dev.kordex.core.events.interfaces.MemberEvent.member","location":"kord-extensions/dev.kordex.core.events.interfaces/-member-event/member.html","searchKeys":["member","abstract val member: MemberBehavior?","dev.kordex.core.events.interfaces.MemberEvent.member"]},{"name":"abstract val message: MessageBehavior?","description":"dev.kordex.core.events.interfaces.MessageEvent.message","location":"kord-extensions/dev.kordex.core.events.interfaces/-message-event/message.html","searchKeys":["message","abstract val message: MessageBehavior?","dev.kordex.core.events.interfaces.MessageEvent.message"]},{"name":"abstract val name: String","description":"dev.kordex.core.extensions.Extension.name","location":"kord-extensions/dev.kordex.core.extensions/-extension/name.html","searchKeys":["name","abstract val name: String","dev.kordex.core.extensions.Extension.name"]},{"name":"abstract val options: MutableList<SelectOptionBuilder>","description":"dev.kordex.core.components.menus.string.StringSelectMenu.options","location":"kord-extensions/dev.kordex.core.components.menus.string/-string-select-menu/options.html","searchKeys":["options","abstract val options: MutableList<SelectOptionBuilder>","dev.kordex.core.components.menus.string.StringSelectMenu.options"]},{"name":"abstract val readableName: Key","description":"dev.kordex.core.commands.application.slash.converters.ChoiceEnum.readableName","location":"kord-extensions/dev.kordex.core.commands.application.slash.converters/-choice-enum/readable-name.html","searchKeys":["readableName","abstract val readableName: Key","dev.kordex.core.commands.application.slash.converters.ChoiceEnum.readableName"]},{"name":"abstract val reason: Key","description":"dev.kordex.core.commands.events.CommandFailedChecksEvent.reason","location":"kord-extensions/dev.kordex.core.commands.events/-command-failed-checks-event/reason.html","searchKeys":["reason","abstract val reason: Key","dev.kordex.core.commands.events.CommandFailedChecksEvent.reason"]},{"name":"abstract val required: Boolean","description":"dev.kordex.core.events.extra.models.GuildJoinRequestResponse.required","location":"kord-extensions/dev.kordex.core.events.extra.models/-guild-join-request-response/required.html","searchKeys":["required","abstract val required: Boolean","dev.kordex.core.events.extra.models.GuildJoinRequestResponse.required"]},{"name":"abstract val role: RoleBehavior?","description":"dev.kordex.core.events.interfaces.RoleEvent.role","location":"kord-extensions/dev.kordex.core.events.interfaces/-role-event/role.html","searchKeys":["role","abstract val role: RoleBehavior?","dev.kordex.core.events.interfaces.RoleEvent.role"]},{"name":"abstract val signatureType: Key","description":"dev.kordex.core.commands.converters.Converter.signatureType","location":"kord-extensions/dev.kordex.core.commands.converters/-converter/signature-type.html","searchKeys":["signatureType","abstract val signatureType: Key","dev.kordex.core.commands.converters.Converter.signatureType"]},{"name":"abstract val style: TextInputStyle","description":"dev.kordex.core.components.forms.widgets.TextInputWidget.style","location":"kord-extensions/dev.kordex.core.components.forms.widgets/-text-input-widget/style.html","searchKeys":["style","abstract val style: TextInputStyle","dev.kordex.core.components.forms.widgets.TextInputWidget.style"]},{"name":"abstract val throwable: Throwable","description":"dev.kordex.core.commands.events.CommandFailedWithExceptionEvent.throwable","location":"kord-extensions/dev.kordex.core.commands.events/-command-failed-with-exception-event/throwable.html","searchKeys":["throwable","abstract val throwable: Throwable","dev.kordex.core.commands.events.CommandFailedWithExceptionEvent.throwable"]},{"name":"abstract val type: ApplicationCommandType","description":"dev.kordex.core.commands.application.ApplicationCommand.type","location":"kord-extensions/dev.kordex.core.commands.application/-application-command/type.html","searchKeys":["type","abstract val type: ApplicationCommandType","dev.kordex.core.commands.application.ApplicationCommand.type"]},{"name":"abstract val user: UserBehavior?","description":"dev.kordex.core.events.interfaces.UserEvent.user","location":"kord-extensions/dev.kordex.core.events.interfaces/-user-event/user.html","searchKeys":["user","abstract val user: UserBehavior?","dev.kordex.core.events.interfaces.UserEvent.user"]},{"name":"abstract var channelTypes: MutableList<ChannelType>","description":"dev.kordex.core.components.menus.channel.ChannelSelectMenu.channelTypes","location":"kord-extensions/dev.kordex.core.components.menus.channel/-channel-select-menu/channel-types.html","searchKeys":["channelTypes","abstract var channelTypes: MutableList<ChannelType>","dev.kordex.core.components.menus.channel.ChannelSelectMenu.channelTypes"]},{"name":"abstract var choices: MutableMap<Key, T>","description":"dev.kordex.core.commands.converters.builders.ChoiceConverterBuilder.choices","location":"kord-extensions/dev.kordex.core.commands.converters.builders/-choice-converter-builder/choices.html","searchKeys":["choices","abstract var choices: MutableMap<Key, T>","dev.kordex.core.commands.converters.builders.ChoiceConverterBuilder.choices"]},{"name":"abstract var defaultChannels: MutableList<Snowflake>","description":"dev.kordex.core.components.menus.channel.ChannelSelectMenu.defaultChannels","location":"kord-extensions/dev.kordex.core.components.menus.channel/-channel-select-menu/default-channels.html","searchKeys":["defaultChannels","abstract var defaultChannels: MutableList<Snowflake>","dev.kordex.core.components.menus.channel.ChannelSelectMenu.defaultChannels"]},{"name":"abstract var defaultRoles: MutableList<Snowflake>","description":"dev.kordex.core.components.menus.mentionable.MentionableSelectMenu.defaultRoles","location":"kord-extensions/dev.kordex.core.components.menus.mentionable/-mentionable-select-menu/default-roles.html","searchKeys":["defaultRoles","abstract var defaultRoles: MutableList<Snowflake>","dev.kordex.core.components.menus.mentionable.MentionableSelectMenu.defaultRoles"]},{"name":"abstract var defaultRoles: MutableList<Snowflake>","description":"dev.kordex.core.components.menus.role.RoleSelectMenu.defaultRoles","location":"kord-extensions/dev.kordex.core.components.menus.role/-role-select-menu/default-roles.html","searchKeys":["defaultRoles","abstract var defaultRoles: MutableList<Snowflake>","dev.kordex.core.components.menus.role.RoleSelectMenu.defaultRoles"]},{"name":"abstract var defaultUsers: MutableList<Snowflake>","description":"dev.kordex.core.components.menus.mentionable.MentionableSelectMenu.defaultUsers","location":"kord-extensions/dev.kordex.core.components.menus.mentionable/-mentionable-select-menu/default-users.html","searchKeys":["defaultUsers","abstract var defaultUsers: MutableList<Snowflake>","dev.kordex.core.components.menus.mentionable.MentionableSelectMenu.defaultUsers"]},{"name":"abstract var defaultUsers: MutableList<Snowflake>","description":"dev.kordex.core.components.menus.user.UserSelectMenu.defaultUsers","location":"kord-extensions/dev.kordex.core.components.menus.user/-user-select-menu/default-users.html","searchKeys":["defaultUsers","abstract var defaultUsers: MutableList<Snowflake>","dev.kordex.core.components.menus.user.UserSelectMenu.defaultUsers"]},{"name":"abstract var height: Int","description":"dev.kordex.core.components.forms.widgets.Widget.height","location":"kord-extensions/dev.kordex.core.components.forms.widgets/-widget/height.html","searchKeys":["height","abstract var height: Int","dev.kordex.core.components.forms.widgets.Widget.height"]},{"name":"abstract var locking: Boolean","description":"dev.kordex.core.types.Lockable.locking","location":"kord-extensions/dev.kordex.core.types/-lockable/locking.html","searchKeys":["locking","abstract var locking: Boolean","dev.kordex.core.types.Lockable.locking"]},{"name":"abstract var mutex: Mutex?","description":"dev.kordex.core.types.Lockable.mutex","location":"kord-extensions/dev.kordex.core.types/-lockable/mutex.html","searchKeys":["mutex","abstract var mutex: Mutex?","dev.kordex.core.types.Lockable.mutex"]},{"name":"abstract var parsed: OutputType","description":"dev.kordex.core.commands.converters.Converter.parsed","location":"kord-extensions/dev.kordex.core.commands.converters/-converter/parsed.html","searchKeys":["parsed","abstract var parsed: OutputType","dev.kordex.core.commands.converters.Converter.parsed"]},{"name":"abstract var partialEmoji: DiscordPartialEmoji?","description":"dev.kordex.core.components.types.HasPartialEmoji.partialEmoji","location":"kord-extensions/dev.kordex.core.components.types/-has-partial-emoji/partial-emoji.html","searchKeys":["partialEmoji","abstract var partialEmoji: DiscordPartialEmoji?","dev.kordex.core.components.types.HasPartialEmoji.partialEmoji"]},{"name":"abstract var resolvedLocale: Locale?","description":"dev.kordex.core.types.TranslatableContext.resolvedLocale","location":"kord-extensions/dev.kordex.core.types/-translatable-context/resolved-locale.html","searchKeys":["resolvedLocale","abstract var resolvedLocale: Locale?","dev.kordex.core.types.TranslatableContext.resolvedLocale"]},{"name":"abstract var title: Key","description":"dev.kordex.core.components.forms.ModalForm.title","location":"kord-extensions/dev.kordex.core.components.forms/-modal-form/title.html","searchKeys":["title","abstract var title: Key","dev.kordex.core.components.forms.ModalForm.title"]},{"name":"abstract var value: T","description":"dev.kordex.core.components.forms.widgets.Widget.value","location":"kord-extensions/dev.kordex.core.components.forms.widgets/-widget/value.html","searchKeys":["value","abstract var value: T","dev.kordex.core.components.forms.widgets.Widget.value"]},{"name":"abstract var width: Int","description":"dev.kordex.core.components.forms.widgets.Widget.width","location":"kord-extensions/dev.kordex.core.components.forms.widgets/-widget/width.html","searchKeys":["width","abstract var width: Int","dev.kordex.core.components.forms.widgets.Widget.width"]},{"name":"annotation class AlwaysPublicResponse","description":"dev.kordex.core.annotations.AlwaysPublicResponse","location":"kord-extensions/dev.kordex.core.annotations/-always-public-response/index.html","searchKeys":["AlwaysPublicResponse","annotation class AlwaysPublicResponse","dev.kordex.core.annotations.AlwaysPublicResponse"]},{"name":"annotation class BotBuilderDSL","description":"dev.kordex.core.annotations.BotBuilderDSL","location":"kord-extensions/dev.kordex.core.annotations/-bot-builder-d-s-l/index.html","searchKeys":["BotBuilderDSL","annotation class BotBuilderDSL","dev.kordex.core.annotations.BotBuilderDSL"]},{"name":"annotation class ConverterToDefaulting","description":"dev.kordex.core.commands.converters.ConverterToDefaulting","location":"kord-extensions/dev.kordex.core.commands.converters/-converter-to-defaulting/index.html","searchKeys":["ConverterToDefaulting","annotation class ConverterToDefaulting","dev.kordex.core.commands.converters.ConverterToDefaulting"]},{"name":"annotation class ConverterToMulti","description":"dev.kordex.core.commands.converters.ConverterToMulti","location":"kord-extensions/dev.kordex.core.commands.converters/-converter-to-multi/index.html","searchKeys":["ConverterToMulti","annotation class ConverterToMulti","dev.kordex.core.commands.converters.ConverterToMulti"]},{"name":"annotation class ConverterToOptional","description":"dev.kordex.core.commands.converters.ConverterToOptional","location":"kord-extensions/dev.kordex.core.commands.converters/-converter-to-optional/index.html","searchKeys":["ConverterToOptional","annotation class ConverterToOptional","dev.kordex.core.commands.converters.ConverterToOptional"]},{"name":"annotation class DoNotChain","description":"dev.kordex.core.annotations.DoNotChain","location":"kord-extensions/dev.kordex.core.annotations/-do-not-chain/index.html","searchKeys":["DoNotChain","annotation class DoNotChain","dev.kordex.core.annotations.DoNotChain"]},{"name":"annotation class ExtensionDSL","description":"dev.kordex.core.annotations.ExtensionDSL","location":"kord-extensions/dev.kordex.core.annotations/-extension-d-s-l/index.html","searchKeys":["ExtensionDSL","annotation class ExtensionDSL","dev.kordex.core.annotations.ExtensionDSL"]},{"name":"annotation class InternalAPI","description":"dev.kordex.core.annotations.InternalAPI","location":"kord-extensions/dev.kordex.core.annotations/-internal-a-p-i/index.html","searchKeys":["InternalAPI","annotation class InternalAPI","dev.kordex.core.annotations.InternalAPI"]},{"name":"annotation class NotTranslated","description":"dev.kordex.core.annotations.NotTranslated","location":"kord-extensions/dev.kordex.core.annotations/-not-translated/index.html","searchKeys":["NotTranslated","annotation class NotTranslated","dev.kordex.core.annotations.NotTranslated"]},{"name":"annotation class UnexpectedFunctionBehaviour","description":"dev.kordex.core.annotations.UnexpectedFunctionBehaviour","location":"kord-extensions/dev.kordex.core.annotations/-unexpected-function-behaviour/index.html","searchKeys":["UnexpectedFunctionBehaviour","annotation class UnexpectedFunctionBehaviour","dev.kordex.core.annotations.UnexpectedFunctionBehaviour"]},{"name":"class AboutBuilder : KordExKoinComponent","description":"dev.kordex.core.builders.AboutBuilder","location":"kord-extensions/dev.kordex.core.builders/-about-builder/index.html","searchKeys":["AboutBuilder","class AboutBuilder : KordExKoinComponent","dev.kordex.core.builders.AboutBuilder"]},{"name":"class AboutExtension : Extension","description":"dev.kordex.core.extensions.impl.AboutExtension","location":"kord-extensions/dev.kordex.core.extensions.impl/-about-extension/index.html","searchKeys":["AboutExtension","class AboutExtension : Extension","dev.kordex.core.extensions.impl.AboutExtension"]},{"name":"class ApplicationCommandsBuilder","description":"dev.kordex.core.builders.ApplicationCommandsBuilder","location":"kord-extensions/dev.kordex.core.builders/-application-commands-builder/index.html","searchKeys":["ApplicationCommandsBuilder","class ApplicationCommandsBuilder","dev.kordex.core.builders.ApplicationCommandsBuilder"]},{"name":"class ArgumentParsingFailure(error: ArgumentParsingException) : FailureReason<ArgumentParsingException> ","description":"dev.kordex.core.types.FailureReason.ArgumentParsingFailure","location":"kord-extensions/dev.kordex.core.types/-failure-reason/-argument-parsing-failure/index.html","searchKeys":["ArgumentParsingFailure","class ArgumentParsingFailure(error: ArgumentParsingException) : FailureReason<ArgumentParsingException> ","dev.kordex.core.types.FailureReason.ArgumentParsingFailure"]},{"name":"class AttachmentConverter(var validator: Validator<Attachment> = null) : SingleConverter<Attachment> ","description":"dev.kordex.core.commands.converters.impl.AttachmentConverter","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-attachment-converter/index.html","searchKeys":["AttachmentConverter","class AttachmentConverter(var validator: Validator<Attachment> = null) : SingleConverter<Attachment> ","dev.kordex.core.commands.converters.impl.AttachmentConverter"]},{"name":"class BooleanConverter(var validator: Validator<Boolean> = null) : SingleConverter<Boolean> ","description":"dev.kordex.core.commands.converters.impl.BooleanConverter","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-boolean-converter/index.html","searchKeys":["BooleanConverter","class BooleanConverter(var validator: Validator<Boolean> = null) : SingleConverter<Boolean> ","dev.kordex.core.commands.converters.impl.BooleanConverter"]},{"name":"class CacheBuilder","description":"dev.kordex.core.builders.CacheBuilder","location":"kord-extensions/dev.kordex.core.builders/-cache-builder/index.html","searchKeys":["CacheBuilder","class CacheBuilder","dev.kordex.core.builders.CacheBuilder"]},{"name":"class ChangeSet(val clazz: KClass<*>)","description":"dev.kordex.core.utils.deltas.ChangeSet","location":"kord-extensions/dev.kordex.core.utils.deltas/-change-set/index.html","searchKeys":["ChangeSet","class ChangeSet(val clazz: KClass<*>)","dev.kordex.core.utils.deltas.ChangeSet"]},{"name":"class ChannelConverter(requireSameGuild: Boolean = true, requiredGuild: suspend () -> Snowflake? = null, requiredChannelTypes: Set<ChannelType> = setOf(), var validator: Validator<Channel> = null) : SingleConverter<Channel> ","description":"dev.kordex.core.commands.converters.impl.ChannelConverter","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-channel-converter/index.html","searchKeys":["ChannelConverter","class ChannelConverter(requireSameGuild: Boolean = true, requiredGuild: suspend () -> Snowflake? = null, requiredChannelTypes: Set<ChannelType> = setOf(), var validator: Validator<Channel> = null) : SingleConverter<Channel> ","dev.kordex.core.commands.converters.impl.ChannelConverter"]},{"name":"class ChatCommandsBuilder","description":"dev.kordex.core.builders.ChatCommandsBuilder","location":"kord-extensions/dev.kordex.core.builders/-chat-commands-builder/index.html","searchKeys":["ChatCommandsBuilder","class ChatCommandsBuilder","dev.kordex.core.builders.ChatCommandsBuilder"]},{"name":"class CheckContextWithCache<out T : Event>(event: T, locale: Locale, val cache: MutableStringKeyedMap<Any>) : CheckContext<T> ","description":"dev.kordex.core.checks.types.CheckContextWithCache","location":"kord-extensions/dev.kordex.core.checks.types/-check-context-with-cache/index.html","searchKeys":["CheckContextWithCache","class CheckContextWithCache<out T : Event>(event: T, locale: Locale, val cache: MutableStringKeyedMap<Any>) : CheckContext<T> ","dev.kordex.core.checks.types.CheckContextWithCache"]},{"name":"class CoalescingToDefaultingConverter<T : Any>(val coalescingConverter: CoalescingConverter<T>, defaultValue: T, outputError: Boolean = false, newSignatureType: Key? = null, newShowTypeInSignature: Boolean? = null, newErrorType: Key? = null, var validator: Validator<T> = null) : DefaultingCoalescingConverter<T> ","description":"dev.kordex.core.commands.converters.CoalescingToDefaultingConverter","location":"kord-extensions/dev.kordex.core.commands.converters/-coalescing-to-defaulting-converter/index.html","searchKeys":["CoalescingToDefaultingConverter","class CoalescingToDefaultingConverter<T : Any>(val coalescingConverter: CoalescingConverter<T>, defaultValue: T, outputError: Boolean = false, newSignatureType: Key? = null, newShowTypeInSignature: Boolean? = null, newErrorType: Key? = null, var validator: Validator<T> = null) : DefaultingCoalescingConverter<T> ","dev.kordex.core.commands.converters.CoalescingToDefaultingConverter"]},{"name":"class CoalescingToOptionalConverter<T : Any>(val coalescingConverter: CoalescingConverter<T>, newSignatureType: Key? = null, newShowTypeInSignature: Boolean? = null, newErrorType: Key? = null, outputError: Boolean = false, var validator: Validator<T?> = null) : OptionalCoalescingConverter<T> ","description":"dev.kordex.core.commands.converters.CoalescingToOptionalConverter","location":"kord-extensions/dev.kordex.core.commands.converters/-coalescing-to-optional-converter/index.html","searchKeys":["CoalescingToOptionalConverter","class CoalescingToOptionalConverter<T : Any>(val coalescingConverter: CoalescingConverter<T>, newSignatureType: Key? = null, newShowTypeInSignature: Boolean? = null, newErrorType: Key? = null, outputError: Boolean = false, var validator: Validator<T?> = null) : OptionalCoalescingConverter<T> ","dev.kordex.core.commands.converters.CoalescingToOptionalConverter"]},{"name":"class ColorConverter(var validator: Validator<Color> = null) : SingleConverter<Color> ","description":"dev.kordex.core.commands.converters.impl.ColorConverter","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-color-converter/index.html","searchKeys":["ColorConverter","class ColorConverter(var validator: Validator<Color> = null) : SingleConverter<Color> ","dev.kordex.core.commands.converters.impl.ColorConverter"]},{"name":"class CommandRegistrationException(val name: Key, val reason: String) : KordExException","description":"dev.kordex.core.CommandRegistrationException","location":"kord-extensions/dev.kordex.core/-command-registration-exception/index.html","searchKeys":["CommandRegistrationException","class CommandRegistrationException(val name: Key, val reason: String) : KordExException","dev.kordex.core.CommandRegistrationException"]},{"name":"class ComponentsBuilder","description":"dev.kordex.core.builders.ComponentsBuilder","location":"kord-extensions/dev.kordex.core.builders/-components-builder/index.html","searchKeys":["ComponentsBuilder","class ComponentsBuilder","dev.kordex.core.builders.ComponentsBuilder"]},{"name":"class DataCollector(val level: DataCollection) : KordExKoinComponent","description":"dev.kordex.core.datacollection.DataCollector","location":"kord-extensions/dev.kordex.core.datacollection/-data-collector/index.html","searchKeys":["DataCollector","class DataCollector(val level: DataCollection) : KordExKoinComponent","dev.kordex.core.datacollection.DataCollector"]},{"name":"class DecimalConverter(val maxValue: Double? = null, val minValue: Double? = null, var validator: Validator<Double> = null) : SingleConverter<Double> ","description":"dev.kordex.core.commands.converters.impl.DecimalConverter","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-decimal-converter/index.html","searchKeys":["DecimalConverter","class DecimalConverter(val maxValue: Double? = null, val minValue: Double? = null, var validator: Validator<Double> = null) : SingleConverter<Double> ","dev.kordex.core.commands.converters.impl.DecimalConverter"]},{"name":"class DummyAutocompleteCommandContext(val command: Command, event: AutoCompleteInteractionCreateEvent, val commandName: Key) : CommandContext","description":"dev.kordex.core.commands.application.DummyAutocompleteCommandContext","location":"kord-extensions/dev.kordex.core.commands.application/-dummy-autocomplete-command-context/index.html","searchKeys":["DummyAutocompleteCommandContext","class DummyAutocompleteCommandContext(val command: Command, event: AutoCompleteInteractionCreateEvent, val commandName: Key) : CommandContext","dev.kordex.core.commands.application.DummyAutocompleteCommandContext"]},{"name":"class DummyRoleSelectMenuContext(component: SelectMenu<*, *>, event: SelectMenuInteractionCreateEvent, cache: MutableStringKeyedMap<Any>) : RoleSelectMenuContext","description":"dev.kordex.core.components.menus.mentionable.DummyRoleSelectMenuContext","location":"kord-extensions/dev.kordex.core.components.menus.mentionable/-dummy-role-select-menu-context/index.html","searchKeys":["DummyRoleSelectMenuContext","class DummyRoleSelectMenuContext(component: SelectMenu<*, *>, event: SelectMenuInteractionCreateEvent, cache: MutableStringKeyedMap<Any>) : RoleSelectMenuContext","dev.kordex.core.components.menus.mentionable.DummyRoleSelectMenuContext"]},{"name":"class DummyUserSelectMenuContext(component: SelectMenu<*, *>, event: SelectMenuInteractionCreateEvent, cache: MutableStringKeyedMap<Any>) : UserSelectMenuContext","description":"dev.kordex.core.components.menus.mentionable.DummyUserSelectMenuContext","location":"kord-extensions/dev.kordex.core.components.menus.mentionable/-dummy-user-select-menu-context/index.html","searchKeys":["DummyUserSelectMenuContext","class DummyUserSelectMenuContext(component: SelectMenu<*, *>, event: SelectMenuInteractionCreateEvent, cache: MutableStringKeyedMap<Any>) : UserSelectMenuContext","dev.kordex.core.components.menus.mentionable.DummyUserSelectMenuContext"]},{"name":"class DurationCoalescingConverter(val longHelp: Boolean = true, val positiveOnly: Boolean = true, shouldThrow: Boolean = false, var validator: Validator<DateTimePeriod> = null) : CoalescingConverter<DateTimePeriod> ","description":"dev.kordex.core.commands.converters.impl.DurationCoalescingConverter","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-duration-coalescing-converter/index.html","searchKeys":["DurationCoalescingConverter","class DurationCoalescingConverter(val longHelp: Boolean = true, val positiveOnly: Boolean = true, shouldThrow: Boolean = false, var validator: Validator<DateTimePeriod> = null) : CoalescingConverter<DateTimePeriod> ","dev.kordex.core.commands.converters.impl.DurationCoalescingConverter"]},{"name":"class DurationConverter(val longHelp: Boolean = true, val positiveOnly: Boolean = true, var validator: Validator<DateTimePeriod> = null) : SingleConverter<DateTimePeriod> ","description":"dev.kordex.core.commands.converters.impl.DurationConverter","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-duration-converter/index.html","searchKeys":["DurationConverter","class DurationConverter(val longHelp: Boolean = true, val positiveOnly: Boolean = true, var validator: Validator<DateTimePeriod> = null) : SingleConverter<DateTimePeriod> ","dev.kordex.core.commands.converters.impl.DurationConverter"]},{"name":"class EmailConverter(var validator: Validator<String> = null) : SingleConverter<String> ","description":"dev.kordex.core.commands.converters.impl.EmailConverter","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-email-converter/index.html","searchKeys":["EmailConverter","class EmailConverter(var validator: Validator<String> = null) : SingleConverter<String> ","dev.kordex.core.commands.converters.impl.EmailConverter"]},{"name":"class EmojiConverter(var validator: Validator<Emoji> = null) : SingleConverter<Emoji> ","description":"dev.kordex.core.commands.converters.impl.EmojiConverter","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-emoji-converter/index.html","searchKeys":["EmojiConverter","class EmojiConverter(var validator: Validator<Emoji> = null) : SingleConverter<Emoji> ","dev.kordex.core.commands.converters.impl.EmojiConverter"]},{"name":"class EnumChoiceConverter<E : Enum<E>, ChoiceEnum>(typeName: Key, getter: suspend (String, Locale) -> E?, choices: Map<Key, E>, var validator: Validator<E> = null) : ChoiceConverter<E> ","description":"dev.kordex.core.commands.application.slash.converters.impl.EnumChoiceConverter","location":"kord-extensions/dev.kordex.core.commands.application.slash.converters.impl/-enum-choice-converter/index.html","searchKeys":["EnumChoiceConverter","class EnumChoiceConverter<E : Enum<E>, ChoiceEnum>(typeName: Key, getter: suspend (String, Locale) -> E?, choices: Map<Key, E>, var validator: Validator<E> = null) : ChoiceConverter<E> ","dev.kordex.core.commands.application.slash.converters.impl.EnumChoiceConverter"]},{"name":"class EnumConverter<E : Enum<E>>(typeName: Key, getter: suspend (String, Locale) -> E?, var validator: Validator<E> = null) : SingleConverter<E> ","description":"dev.kordex.core.commands.converters.impl.EnumConverter","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-enum-converter/index.html","searchKeys":["EnumConverter","class EnumConverter<E : Enum<E>>(typeName: Key, getter: suspend (String, Locale) -> E?, var validator: Validator<E> = null) : SingleConverter<E> ","dev.kordex.core.commands.converters.impl.EnumConverter"]},{"name":"class EphemeralChannelSelectMenuContext<M : ModalForm>(val component: EphemeralChannelSelectMenu<M>, val event: SelectMenuInteractionCreateEvent, val interactionResponse: EphemeralMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>) : ChannelSelectMenuContext, EphemeralInteractionContext","description":"dev.kordex.core.components.menus.channel.EphemeralChannelSelectMenuContext","location":"kord-extensions/dev.kordex.core.components.menus.channel/-ephemeral-channel-select-menu-context/index.html","searchKeys":["EphemeralChannelSelectMenuContext","class EphemeralChannelSelectMenuContext<M : ModalForm>(val component: EphemeralChannelSelectMenu<M>, val event: SelectMenuInteractionCreateEvent, val interactionResponse: EphemeralMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>) : ChannelSelectMenuContext, EphemeralInteractionContext","dev.kordex.core.components.menus.channel.EphemeralChannelSelectMenuContext"]},{"name":"class EphemeralInteractionButtonContext<M : ModalForm>(val component: EphemeralInteractionButton<M>, val event: ButtonInteractionCreateEvent, val interactionResponse: EphemeralMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>) : InteractionButtonContext, EphemeralInteractionContext","description":"dev.kordex.core.components.buttons.EphemeralInteractionButtonContext","location":"kord-extensions/dev.kordex.core.components.buttons/-ephemeral-interaction-button-context/index.html","searchKeys":["EphemeralInteractionButtonContext","class EphemeralInteractionButtonContext<M : ModalForm>(val component: EphemeralInteractionButton<M>, val event: ButtonInteractionCreateEvent, val interactionResponse: EphemeralMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>) : InteractionButtonContext, EphemeralInteractionContext","dev.kordex.core.components.buttons.EphemeralInteractionButtonContext"]},{"name":"class EphemeralMentionableSelectMenuContext<M : ModalForm>(val component: EphemeralMentionableSelectMenu<M>, val event: SelectMenuInteractionCreateEvent, val interactionResponse: EphemeralMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>) : MentionableSelectMenuContext, EphemeralInteractionContext","description":"dev.kordex.core.components.menus.mentionable.EphemeralMentionableSelectMenuContext","location":"kord-extensions/dev.kordex.core.components.menus.mentionable/-ephemeral-mentionable-select-menu-context/index.html","searchKeys":["EphemeralMentionableSelectMenuContext","class EphemeralMentionableSelectMenuContext<M : ModalForm>(val component: EphemeralMentionableSelectMenu<M>, val event: SelectMenuInteractionCreateEvent, val interactionResponse: EphemeralMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>) : MentionableSelectMenuContext, EphemeralInteractionContext","dev.kordex.core.components.menus.mentionable.EphemeralMentionableSelectMenuContext"]},{"name":"class EphemeralMessageCommand<M : ModalForm>(extension: Extension, val modal: () -> M? = null) : MessageCommand<EphemeralMessageCommandContext<M>, M> ","description":"dev.kordex.core.commands.application.message.EphemeralMessageCommand","location":"kord-extensions/dev.kordex.core.commands.application.message/-ephemeral-message-command/index.html","searchKeys":["EphemeralMessageCommand","class EphemeralMessageCommand<M : ModalForm>(extension: Extension, val modal: () -> M? = null) : MessageCommand<EphemeralMessageCommandContext<M>, M> ","dev.kordex.core.commands.application.message.EphemeralMessageCommand"]},{"name":"class EphemeralMessageCommandContext<M : ModalForm>(val event: MessageCommandInteractionCreateEvent, val command: MessageCommand<EphemeralMessageCommandContext<M>, M>, val interactionResponse: EphemeralMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>) : MessageCommandContext<EphemeralMessageCommandContext<M>, M> , EphemeralInteractionContext","description":"dev.kordex.core.commands.application.message.EphemeralMessageCommandContext","location":"kord-extensions/dev.kordex.core.commands.application.message/-ephemeral-message-command-context/index.html","searchKeys":["EphemeralMessageCommandContext","class EphemeralMessageCommandContext<M : ModalForm>(val event: MessageCommandInteractionCreateEvent, val command: MessageCommand<EphemeralMessageCommandContext<M>, M>, val interactionResponse: EphemeralMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>) : MessageCommandContext<EphemeralMessageCommandContext<M>, M> , EphemeralInteractionContext","dev.kordex.core.commands.application.message.EphemeralMessageCommandContext"]},{"name":"class EphemeralResponsePaginator(val pages: Pages, val owner: UserBehavior? = null, val chunkedPages: Int = 1, val timeoutSeconds: Long? = null, val switchEmoji: ReactionEmoji = if (pages.groups.size == 2) EXPAND_EMOJI else SWITCH_EMOJI, val mutator: PageTransitionCallback? = null, locale: Locale? = null, val interaction: EphemeralMessageInteractionResponseBehavior) : BaseButtonPaginator","description":"dev.kordex.core.pagination.EphemeralResponsePaginator","location":"kord-extensions/dev.kordex.core.pagination/-ephemeral-response-paginator/index.html","searchKeys":["EphemeralResponsePaginator","class EphemeralResponsePaginator(val pages: Pages, val owner: UserBehavior? = null, val chunkedPages: Int = 1, val timeoutSeconds: Long? = null, val switchEmoji: ReactionEmoji = if (pages.groups.size == 2) EXPAND_EMOJI else SWITCH_EMOJI, val mutator: PageTransitionCallback? = null, locale: Locale? = null, val interaction: EphemeralMessageInteractionResponseBehavior) : BaseButtonPaginator","dev.kordex.core.pagination.EphemeralResponsePaginator"]},{"name":"class EphemeralRoleSelectMenuContext<M : ModalForm>(val component: EphemeralRoleSelectMenu<M>, val event: SelectMenuInteractionCreateEvent, val interactionResponse: EphemeralMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>) : RoleSelectMenuContext, EphemeralInteractionContext","description":"dev.kordex.core.components.menus.role.EphemeralRoleSelectMenuContext","location":"kord-extensions/dev.kordex.core.components.menus.role/-ephemeral-role-select-menu-context/index.html","searchKeys":["EphemeralRoleSelectMenuContext","class EphemeralRoleSelectMenuContext<M : ModalForm>(val component: EphemeralRoleSelectMenu<M>, val event: SelectMenuInteractionCreateEvent, val interactionResponse: EphemeralMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>) : RoleSelectMenuContext, EphemeralInteractionContext","dev.kordex.core.components.menus.role.EphemeralRoleSelectMenuContext"]},{"name":"class EphemeralSlashCommand<A : Arguments, M : ModalForm>(extension: Extension, val arguments: () -> A? = null, val modal: () -> M? = null, val parentCommand: SlashCommand<*, *, *>? = null, val parentGroup: SlashGroup? = null) : SlashCommand<EphemeralSlashCommandContext<A, M>, A, M> ","description":"dev.kordex.core.commands.application.slash.EphemeralSlashCommand","location":"kord-extensions/dev.kordex.core.commands.application.slash/-ephemeral-slash-command/index.html","searchKeys":["EphemeralSlashCommand","class EphemeralSlashCommand<A : Arguments, M : ModalForm>(extension: Extension, val arguments: () -> A? = null, val modal: () -> M? = null, val parentCommand: SlashCommand<*, *, *>? = null, val parentGroup: SlashGroup? = null) : SlashCommand<EphemeralSlashCommandContext<A, M>, A, M> ","dev.kordex.core.commands.application.slash.EphemeralSlashCommand"]},{"name":"class EphemeralSlashCommandContext<A : Arguments, M : ModalForm>(val event: ChatInputCommandInteractionCreateEvent, val command: SlashCommand<EphemeralSlashCommandContext<A, M>, A, M>, val interactionResponse: EphemeralMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>) : SlashCommandContext<EphemeralSlashCommandContext<A, M>, A, M> , EphemeralInteractionContext","description":"dev.kordex.core.commands.application.slash.EphemeralSlashCommandContext","location":"kord-extensions/dev.kordex.core.commands.application.slash/-ephemeral-slash-command-context/index.html","searchKeys":["EphemeralSlashCommandContext","class EphemeralSlashCommandContext<A : Arguments, M : ModalForm>(val event: ChatInputCommandInteractionCreateEvent, val command: SlashCommand<EphemeralSlashCommandContext<A, M>, A, M>, val interactionResponse: EphemeralMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>) : SlashCommandContext<EphemeralSlashCommandContext<A, M>, A, M> , EphemeralInteractionContext","dev.kordex.core.commands.application.slash.EphemeralSlashCommandContext"]},{"name":"class EphemeralStringSelectMenuContext<M : ModalForm>(val component: EphemeralStringSelectMenu<M>, val event: SelectMenuInteractionCreateEvent, val interactionResponse: EphemeralMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>) : StringSelectMenuContext, EphemeralInteractionContext","description":"dev.kordex.core.components.menus.string.EphemeralStringSelectMenuContext","location":"kord-extensions/dev.kordex.core.components.menus.string/-ephemeral-string-select-menu-context/index.html","searchKeys":["EphemeralStringSelectMenuContext","class EphemeralStringSelectMenuContext<M : ModalForm>(val component: EphemeralStringSelectMenu<M>, val event: SelectMenuInteractionCreateEvent, val interactionResponse: EphemeralMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>) : StringSelectMenuContext, EphemeralInteractionContext","dev.kordex.core.components.menus.string.EphemeralStringSelectMenuContext"]},{"name":"class EphemeralUserCommand<M : ModalForm>(extension: Extension, val modal: () -> M? = null) : UserCommand<EphemeralUserCommandContext<M>, M> ","description":"dev.kordex.core.commands.application.user.EphemeralUserCommand","location":"kord-extensions/dev.kordex.core.commands.application.user/-ephemeral-user-command/index.html","searchKeys":["EphemeralUserCommand","class EphemeralUserCommand<M : ModalForm>(extension: Extension, val modal: () -> M? = null) : UserCommand<EphemeralUserCommandContext<M>, M> ","dev.kordex.core.commands.application.user.EphemeralUserCommand"]},{"name":"class EphemeralUserCommandContext<M : ModalForm>(val event: UserCommandInteractionCreateEvent, val command: UserCommand<EphemeralUserCommandContext<M>, M>, val interactionResponse: EphemeralMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>) : UserCommandContext<EphemeralUserCommandContext<M>, M> , EphemeralInteractionContext","description":"dev.kordex.core.commands.application.user.EphemeralUserCommandContext","location":"kord-extensions/dev.kordex.core.commands.application.user/-ephemeral-user-command-context/index.html","searchKeys":["EphemeralUserCommandContext","class EphemeralUserCommandContext<M : ModalForm>(val event: UserCommandInteractionCreateEvent, val command: UserCommand<EphemeralUserCommandContext<M>, M>, val interactionResponse: EphemeralMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>) : UserCommandContext<EphemeralUserCommandContext<M>, M> , EphemeralInteractionContext","dev.kordex.core.commands.application.user.EphemeralUserCommandContext"]},{"name":"class EphemeralUserSelectMenuContext<M : ModalForm>(val component: EphemeralUserSelectMenu<M>, val event: SelectMenuInteractionCreateEvent, val interactionResponse: EphemeralMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>) : UserSelectMenuContext, EphemeralInteractionContext","description":"dev.kordex.core.components.menus.user.EphemeralUserSelectMenuContext","location":"kord-extensions/dev.kordex.core.components.menus.user/-ephemeral-user-select-menu-context/index.html","searchKeys":["EphemeralUserSelectMenuContext","class EphemeralUserSelectMenuContext<M : ModalForm>(val component: EphemeralUserSelectMenu<M>, val event: SelectMenuInteractionCreateEvent, val interactionResponse: EphemeralMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>) : UserSelectMenuContext, EphemeralInteractionContext","dev.kordex.core.components.menus.user.EphemeralUserSelectMenuContext"]},{"name":"class EventHandlerRegistrationException(val reason: String) : KordExException","description":"dev.kordex.core.EventHandlerRegistrationException","location":"kord-extensions/dev.kordex.core/-event-handler-registration-exception/index.html","searchKeys":["EventHandlerRegistrationException","class EventHandlerRegistrationException(val reason: String) : KordExException","dev.kordex.core.EventHandlerRegistrationException"]},{"name":"class ExecutionError(error: Throwable) : FailureReason<Throwable> ","description":"dev.kordex.core.types.FailureReason.ExecutionError","location":"kord-extensions/dev.kordex.core.types/-failure-reason/-execution-error/index.html","searchKeys":["ExecutionError","class ExecutionError(error: Throwable) : FailureReason<Throwable> ","dev.kordex.core.types.FailureReason.ExecutionError"]},{"name":"class FeedbackMessageArgs : Arguments","description":"dev.kordex.core.extensions.impl.SentryExtension.FeedbackMessageArgs","location":"kord-extensions/dev.kordex.core.extensions.impl/-sentry-extension/-feedback-message-args/index.html","searchKeys":["FeedbackMessageArgs","class FeedbackMessageArgs : Arguments","dev.kordex.core.extensions.impl.SentryExtension.FeedbackMessageArgs"]},{"name":"class FeedbackSlashArgs : Arguments","description":"dev.kordex.core.extensions.impl.SentryExtension.FeedbackSlashArgs","location":"kord-extensions/dev.kordex.core.extensions.impl/-sentry-extension/-feedback-slash-args/index.html","searchKeys":["FeedbackSlashArgs","class FeedbackSlashArgs : Arguments","dev.kordex.core.extensions.impl.SentryExtension.FeedbackSlashArgs"]},{"name":"class FixedLengthQueue<E>(val maxSize: Int) : Queue<E> ","description":"dev.kordex.core.utils.collections.FixedLengthQueue","location":"kord-extensions/dev.kordex.core.utils.collections/-fixed-length-queue/index.html","searchKeys":["FixedLengthQueue","class FixedLengthQueue<E>(val maxSize: Int) : Queue<E> ","dev.kordex.core.utils.collections.FixedLengthQueue"]},{"name":"class FixedLengthQueueSerializer<T>(dataSerializer: KSerializer<T>) : KSerializer<FixedLengthQueue<T>> ","description":"dev.kordex.core.utils.collections.serializers.FixedLengthQueueSerializer","location":"kord-extensions/dev.kordex.core.utils.collections.serializers/-fixed-length-queue-serializer/index.html","searchKeys":["FixedLengthQueueSerializer","class FixedLengthQueueSerializer<T>(dataSerializer: KSerializer<T>) : KSerializer<FixedLengthQueue<T>> ","dev.kordex.core.utils.collections.serializers.FixedLengthQueueSerializer"]},{"name":"class GuildConverter(var validator: Validator<Guild> = null) : SingleConverter<Guild> ","description":"dev.kordex.core.commands.converters.impl.GuildConverter","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-guild-converter/index.html","searchKeys":["GuildConverter","class GuildConverter(var validator: Validator<Guild> = null) : SingleConverter<Guild> ","dev.kordex.core.commands.converters.impl.GuildConverter"]},{"name":"class GuildJoinRequestDeleteEvent(val data: GuildJoinRequestDelete, val kord: Kord = getKoin().get(), val supplier: EntitySupplier = kord.defaultSupplier) : KordExEvent, Strategizable, MemberEvent","description":"dev.kordex.core.events.extra.GuildJoinRequestDeleteEvent","location":"kord-extensions/dev.kordex.core.events.extra/-guild-join-request-delete-event/index.html","searchKeys":["GuildJoinRequestDeleteEvent","class GuildJoinRequestDeleteEvent(val data: GuildJoinRequestDelete, val kord: Kord = getKoin().get(), val supplier: EntitySupplier = kord.defaultSupplier) : KordExEvent, Strategizable, MemberEvent","dev.kordex.core.events.extra.GuildJoinRequestDeleteEvent"]},{"name":"class GuildJoinRequestUpdateEvent(val data: GuildJoinRequestUpdate, val kord: Kord = getKoin().get(), val supplier: EntitySupplier = kord.defaultSupplier) : KordExEvent, Strategizable, MemberEvent","description":"dev.kordex.core.events.extra.GuildJoinRequestUpdateEvent","location":"kord-extensions/dev.kordex.core.events.extra/-guild-join-request-update-event/index.html","searchKeys":["GuildJoinRequestUpdateEvent","class GuildJoinRequestUpdateEvent(val data: GuildJoinRequestUpdate, val kord: Kord = getKoin().get(), val supplier: EntitySupplier = kord.defaultSupplier) : KordExEvent, Strategizable, MemberEvent","dev.kordex.core.events.extra.GuildJoinRequestUpdateEvent"]},{"name":"class HelpArguments : Arguments","description":"dev.kordex.core.extensions.impl.HelpExtension.HelpArguments","location":"kord-extensions/dev.kordex.core.extensions.impl/-help-extension/-help-arguments/index.html","searchKeys":["HelpArguments","class HelpArguments : Arguments","dev.kordex.core.extensions.impl.HelpExtension.HelpArguments"]},{"name":"class HelpExtension : Extension, HelpProvider","description":"dev.kordex.core.extensions.impl.HelpExtension","location":"kord-extensions/dev.kordex.core.extensions.impl/-help-extension/index.html","searchKeys":["HelpExtension","class HelpExtension : Extension, HelpProvider","dev.kordex.core.extensions.impl.HelpExtension"]},{"name":"class HooksBuilder","description":"dev.kordex.core.builders.HooksBuilder","location":"kord-extensions/dev.kordex.core.builders/-hooks-builder/index.html","searchKeys":["HooksBuilder","class HooksBuilder","dev.kordex.core.builders.HooksBuilder"]},{"name":"class I18nBuilder","description":"dev.kordex.core.builders.I18nBuilder","location":"kord-extensions/dev.kordex.core.builders/-i18n-builder/index.html","searchKeys":["I18nBuilder","class I18nBuilder","dev.kordex.core.builders.I18nBuilder"]},{"name":"class IntConverter(radix: Int = DEFAULT_RADIX, val maxValue: Int? = null, val minValue: Int? = null, var validator: Validator<Int> = null) : SingleConverter<Int> ","description":"dev.kordex.core.commands.converters.impl.IntConverter","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-int-converter/index.html","searchKeys":["IntConverter","class IntConverter(radix: Int = DEFAULT_RADIX, val maxValue: Int? = null, val minValue: Int? = null, var validator: Validator<Int> = null) : SingleConverter<Int> ","dev.kordex.core.commands.converters.impl.IntConverter"]},{"name":"class Integer constructor(displayName: Key, description: Key, body: suspend IntegerOptionBuilder.() -> Unit) : ChoiceOptionWrapper<IntegerOptionBuilder, Long> ","description":"dev.kordex.core.commands.ChoiceOptionWrapper.Integer","location":"kord-extensions/dev.kordex.core.commands/-choice-option-wrapper/-integer/index.html","searchKeys":["Integer","class Integer constructor(displayName: Key, description: Key, body: suspend IntegerOptionBuilder.() -> Unit) : ChoiceOptionWrapper<IntegerOptionBuilder, Long> ","dev.kordex.core.commands.ChoiceOptionWrapper.Integer"]},{"name":"class InvalidArgumentException(val builder: ConverterBuilder<*>, val reason: String) : KordExException","description":"dev.kordex.core.InvalidArgumentException","location":"kord-extensions/dev.kordex.core/-invalid-argument-exception/index.html","searchKeys":["InvalidArgumentException","class InvalidArgumentException(val builder: ConverterBuilder<*>, val reason: String) : KordExException","dev.kordex.core.InvalidArgumentException"]},{"name":"class InvalidCommandException(val name: Key?, val reason: String) : KordExException","description":"dev.kordex.core.InvalidCommandException","location":"kord-extensions/dev.kordex.core/-invalid-command-exception/index.html","searchKeys":["InvalidCommandException","class InvalidCommandException(val name: Key?, val reason: String) : KordExException","dev.kordex.core.InvalidCommandException"]},{"name":"class InvalidEventHandlerException(val reason: String) : KordExException","description":"dev.kordex.core.InvalidEventHandlerException","location":"kord-extensions/dev.kordex.core/-invalid-event-handler-exception/index.html","searchKeys":["InvalidEventHandlerException","class InvalidEventHandlerException(val reason: String) : KordExException","dev.kordex.core.InvalidEventHandlerException"]},{"name":"class InvalidExtensionException(val clazz: KClass<out Extension>, val reason: String?) : KordExException","description":"dev.kordex.core.InvalidExtensionException","location":"kord-extensions/dev.kordex.core/-invalid-extension-exception/index.html","searchKeys":["InvalidExtensionException","class InvalidExtensionException(val clazz: KClass<out Extension>, val reason: String?) : KordExException","dev.kordex.core.InvalidExtensionException"]},{"name":"class InvalidTimeUnitException(val unit: String) : DurationParserException","description":"dev.kordex.core.parsers.InvalidTimeUnitException","location":"kord-extensions/dev.kordex.core.parsers/-invalid-time-unit-exception/index.html","searchKeys":["InvalidTimeUnitException","class InvalidTimeUnitException(val unit: String) : DurationParserException","dev.kordex.core.parsers.InvalidTimeUnitException"]},{"name":"class LineTextWidget : TextInputWidget<LineTextWidget> ","description":"dev.kordex.core.components.forms.widgets.LineTextWidget","location":"kord-extensions/dev.kordex.core.components.forms.widgets/-line-text-widget/index.html","searchKeys":["LineTextWidget","class LineTextWidget : TextInputWidget<LineTextWidget> ","dev.kordex.core.components.forms.widgets.LineTextWidget"]},{"name":"class LocaleSerializer : KSerializer<Locale> ","description":"dev.kordex.core.i18n.serializers.LocaleSerializer","location":"kord-extensions/dev.kordex.core.i18n.serializers/-locale-serializer/index.html","searchKeys":["LocaleSerializer","class LocaleSerializer : KSerializer<Locale> ","dev.kordex.core.i18n.serializers.LocaleSerializer"]},{"name":"class LongConverter(radix: Int = DEFAULT_RADIX, val maxValue: Long? = null, val minValue: Long? = null, var validator: Validator<Long> = null) : SingleConverter<Long> ","description":"dev.kordex.core.commands.converters.impl.LongConverter","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-long-converter/index.html","searchKeys":["LongConverter","class LongConverter(radix: Int = DEFAULT_RADIX, val maxValue: Long? = null, val minValue: Long? = null, var validator: Validator<Long> = null) : SingleConverter<Long> ","dev.kordex.core.commands.converters.impl.LongConverter"]},{"name":"class MemberConverter(requiredGuild: suspend () -> Snowflake? = null, useReply: Boolean = true, requireSameGuild: Boolean = true, var validator: Validator<Member> = null) : SingleConverter<Member> ","description":"dev.kordex.core.commands.converters.impl.MemberConverter","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-member-converter/index.html","searchKeys":["MemberConverter","class MemberConverter(requiredGuild: suspend () -> Snowflake? = null, useReply: Boolean = true, requireSameGuild: Boolean = true, var validator: Validator<Member> = null) : SingleConverter<Member> ","dev.kordex.core.commands.converters.impl.MemberConverter"]},{"name":"class MemberDelta(val avatar: Optional<Asset?>, val username: Optional<String>, val discriminator: Optional<String>, val flags: Optional<UserFlags?>, val nickname: Optional<String?>, val boosting: Optional<Instant?>, val roles: Optional<RoleDelta>, val owner: Optional<Boolean>, val pending: Optional<Boolean>) : UserDelta","description":"dev.kordex.core.utils.deltas.MemberDelta","location":"kord-extensions/dev.kordex.core.utils.deltas/-member-delta/index.html","searchKeys":["MemberDelta","class MemberDelta(val avatar: Optional<Asset?>, val username: Optional<String>, val discriminator: Optional<String>, val flags: Optional<UserFlags?>, val nickname: Optional<String?>, val boosting: Optional<Instant?>, val roles: Optional<RoleDelta>, val owner: Optional<Boolean>, val pending: Optional<Boolean>) : UserDelta","dev.kordex.core.utils.deltas.MemberDelta"]},{"name":"class MembersBuilder","description":"dev.kordex.core.builders.MembersBuilder","location":"kord-extensions/dev.kordex.core.builders/-members-builder/index.html","searchKeys":["MembersBuilder","class MembersBuilder","dev.kordex.core.builders.MembersBuilder"]},{"name":"class MessageButtonPaginator(val pages: Pages, val chunkedPages: Int = 1, val owner: UserBehavior? = null, val timeoutSeconds: Long? = null, val keepEmbed: Boolean = true, val switchEmoji: ReactionEmoji = if (pages.groups.size == 2) EXPAND_EMOJI else SWITCH_EMOJI, val mutator: PageTransitionCallback? = null, locale: Locale? = null, val pingInReply: Boolean = true, val targetChannel: MessageChannelBehavior? = null, val targetMessage: Message? = null) : BaseButtonPaginator","description":"dev.kordex.core.pagination.MessageButtonPaginator","location":"kord-extensions/dev.kordex.core.pagination/-message-button-paginator/index.html","searchKeys":["MessageButtonPaginator","class MessageButtonPaginator(val pages: Pages, val chunkedPages: Int = 1, val owner: UserBehavior? = null, val timeoutSeconds: Long? = null, val keepEmbed: Boolean = true, val switchEmoji: ReactionEmoji = if (pages.groups.size == 2) EXPAND_EMOJI else SWITCH_EMOJI, val mutator: PageTransitionCallback? = null, locale: Locale? = null, val pingInReply: Boolean = true, val targetChannel: MessageChannelBehavior? = null, val targetMessage: Message? = null) : BaseButtonPaginator","dev.kordex.core.pagination.MessageButtonPaginator"]},{"name":"class MessageConverter(requireGuild: Boolean = false, requiredGuild: suspend () -> Snowflake? = null, useReply: Boolean = true, var validator: Validator<Message> = null) : SingleConverter<Message> ","description":"dev.kordex.core.commands.converters.impl.MessageConverter","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-message-converter/index.html","searchKeys":["MessageConverter","class MessageConverter(requireGuild: Boolean = false, requiredGuild: suspend () -> Snowflake? = null, useReply: Boolean = true, var validator: Validator<Message> = null) : SingleConverter<Message> ","dev.kordex.core.commands.converters.impl.MessageConverter"]},{"name":"class ModalInteractionCompleteEvent(val id: String, val interaction: ModalSubmitInteraction) : KordExEvent","description":"dev.kordex.core.events.ModalInteractionCompleteEvent","location":"kord-extensions/dev.kordex.core.events/-modal-interaction-complete-event/index.html","searchKeys":["ModalInteractionCompleteEvent","class ModalInteractionCompleteEvent(val id: String, val interaction: ModalSubmitInteraction) : KordExEvent","dev.kordex.core.events.ModalInteractionCompleteEvent"]},{"name":"class MultipleChoiceResponse(val required: Boolean, val label: String, val response: Int, val choices: List<String>) : GuildJoinRequestResponse","description":"dev.kordex.core.events.extra.models.GuildJoinRequestResponse.MultipleChoiceResponse","location":"kord-extensions/dev.kordex.core.events.extra.models/-guild-join-request-response/-multiple-choice-response/index.html","searchKeys":["MultipleChoiceResponse","class MultipleChoiceResponse(val required: Boolean, val label: String, val response: Int, val choices: List<String>) : GuildJoinRequestResponse","dev.kordex.core.events.extra.models.GuildJoinRequestResponse.MultipleChoiceResponse"]},{"name":"class NumberChoiceConverter(radix: Int = DEFAULT_RADIX, choices: Map<Key, Long>, var validator: Validator<Long> = null) : ChoiceConverter<Long> ","description":"dev.kordex.core.commands.application.slash.converters.impl.NumberChoiceConverter","location":"kord-extensions/dev.kordex.core.commands.application.slash.converters.impl/-number-choice-converter/index.html","searchKeys":["NumberChoiceConverter","class NumberChoiceConverter(radix: Int = DEFAULT_RADIX, choices: Map<Key, Long>, var validator: Validator<Long> = null) : ChoiceConverter<Long> ","dev.kordex.core.commands.application.slash.converters.impl.NumberChoiceConverter"]},{"name":"class Number constructor(displayName: Key, description: Key, body: suspend NumberOptionBuilder.() -> Unit) : ChoiceOptionWrapper<NumberOptionBuilder, Double> ","description":"dev.kordex.core.commands.ChoiceOptionWrapper.Number","location":"kord-extensions/dev.kordex.core.commands/-choice-option-wrapper/-number/index.html","searchKeys":["Number","class Number constructor(displayName: Key, description: Key, body: suspend NumberOptionBuilder.() -> Unit) : ChoiceOptionWrapper<NumberOptionBuilder, Double> ","dev.kordex.core.commands.ChoiceOptionWrapper.Number"]},{"name":"class OwnPermissionsCheckFailure(error: DiscordRelayedException) : FailureReason.BaseCheckFailure<DiscordRelayedException> ","description":"dev.kordex.core.types.FailureReason.OwnPermissionsCheckFailure","location":"kord-extensions/dev.kordex.core.types/-failure-reason/-own-permissions-check-failure/index.html","searchKeys":["OwnPermissionsCheckFailure","class OwnPermissionsCheckFailure(error: DiscordRelayedException) : FailureReason.BaseCheckFailure<DiscordRelayedException> ","dev.kordex.core.types.FailureReason.OwnPermissionsCheckFailure"]},{"name":"class PageTransitionCallback","description":"dev.kordex.core.pagination.builders.PageTransitionCallback","location":"kord-extensions/dev.kordex.core.pagination.builders/-page-transition-callback/index.html","searchKeys":["PageTransitionCallback","class PageTransitionCallback","dev.kordex.core.pagination.builders.PageTransitionCallback"]},{"name":"class PaginatorBuilder(var locale: Locale? = null, val defaultGroup: Key = EMPTY_KEY)","description":"dev.kordex.core.pagination.builders.PaginatorBuilder","location":"kord-extensions/dev.kordex.core.pagination.builders/-paginator-builder/index.html","searchKeys":["PaginatorBuilder","class PaginatorBuilder(var locale: Locale? = null, val defaultGroup: Key = EMPTY_KEY)","dev.kordex.core.pagination.builders.PaginatorBuilder"]},{"name":"class ParagraphResponse(val required: Boolean, val label: String, val placeholder: String?, val response: String) : GuildJoinRequestResponse","description":"dev.kordex.core.events.extra.models.GuildJoinRequestResponse.ParagraphResponse","location":"kord-extensions/dev.kordex.core.events.extra.models/-guild-join-request-response/-paragraph-response/index.html","searchKeys":["ParagraphResponse","class ParagraphResponse(val required: Boolean, val label: String, val placeholder: String?, val response: String) : GuildJoinRequestResponse","dev.kordex.core.events.extra.models.GuildJoinRequestResponse.ParagraphResponse"]},{"name":"class ParagraphTextWidget : TextInputWidget<ParagraphTextWidget> ","description":"dev.kordex.core.components.forms.widgets.ParagraphTextWidget","location":"kord-extensions/dev.kordex.core.components.forms.widgets/-paragraph-text-widget/index.html","searchKeys":["ParagraphTextWidget","class ParagraphTextWidget : TextInputWidget<ParagraphTextWidget> ","dev.kordex.core.components.forms.widgets.ParagraphTextWidget"]},{"name":"class PluginBuilder(val parent: ExtensibleBotBuilder)","description":"dev.kordex.core.builders.PluginBuilder","location":"kord-extensions/dev.kordex.core.builders/-plugin-builder/index.html","searchKeys":["PluginBuilder","class PluginBuilder(val parent: ExtensibleBotBuilder)","dev.kordex.core.builders.PluginBuilder"]},{"name":"class ProvidedCheckFailure(error: DiscordRelayedException) : FailureReason.BaseCheckFailure<DiscordRelayedException> ","description":"dev.kordex.core.types.FailureReason.ProvidedCheckFailure","location":"kord-extensions/dev.kordex.core.types/-failure-reason/-provided-check-failure/index.html","searchKeys":["ProvidedCheckFailure","class ProvidedCheckFailure(error: DiscordRelayedException) : FailureReason.BaseCheckFailure<DiscordRelayedException> ","dev.kordex.core.types.FailureReason.ProvidedCheckFailure"]},{"name":"class PublicChannelSelectMenuContext<M : ModalForm>(val component: PublicChannelSelectMenu<M>, val event: SelectMenuInteractionCreateEvent, val interactionResponse: PublicMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>) : ChannelSelectMenuContext, PublicInteractionContext","description":"dev.kordex.core.components.menus.channel.PublicChannelSelectMenuContext","location":"kord-extensions/dev.kordex.core.components.menus.channel/-public-channel-select-menu-context/index.html","searchKeys":["PublicChannelSelectMenuContext","class PublicChannelSelectMenuContext<M : ModalForm>(val component: PublicChannelSelectMenu<M>, val event: SelectMenuInteractionCreateEvent, val interactionResponse: PublicMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>) : ChannelSelectMenuContext, PublicInteractionContext","dev.kordex.core.components.menus.channel.PublicChannelSelectMenuContext"]},{"name":"class PublicFollowUpPaginator(val pages: Pages, val chunkedPages: Int = 1, val owner: UserBehavior? = null, val timeoutSeconds: Long? = null, val keepEmbed: Boolean = true, val switchEmoji: ReactionEmoji = if (pages.groups.size == 2) EXPAND_EMOJI else SWITCH_EMOJI, val mutator: PageTransitionCallback? = null, locale: Locale? = null, val interaction: FollowupPermittingInteractionResponseBehavior) : BaseButtonPaginator","description":"dev.kordex.core.pagination.PublicFollowUpPaginator","location":"kord-extensions/dev.kordex.core.pagination/-public-follow-up-paginator/index.html","searchKeys":["PublicFollowUpPaginator","class PublicFollowUpPaginator(val pages: Pages, val chunkedPages: Int = 1, val owner: UserBehavior? = null, val timeoutSeconds: Long? = null, val keepEmbed: Boolean = true, val switchEmoji: ReactionEmoji = if (pages.groups.size == 2) EXPAND_EMOJI else SWITCH_EMOJI, val mutator: PageTransitionCallback? = null, locale: Locale? = null, val interaction: FollowupPermittingInteractionResponseBehavior) : BaseButtonPaginator","dev.kordex.core.pagination.PublicFollowUpPaginator"]},{"name":"class PublicInteractionButtonContext<M : ModalForm>(component: PublicInteractionButton<M>, event: ButtonInteractionCreateEvent, val interactionResponse: PublicMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>) : InteractionButtonContext, PublicInteractionContext","description":"dev.kordex.core.components.buttons.PublicInteractionButtonContext","location":"kord-extensions/dev.kordex.core.components.buttons/-public-interaction-button-context/index.html","searchKeys":["PublicInteractionButtonContext","class PublicInteractionButtonContext<M : ModalForm>(component: PublicInteractionButton<M>, event: ButtonInteractionCreateEvent, val interactionResponse: PublicMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>) : InteractionButtonContext, PublicInteractionContext","dev.kordex.core.components.buttons.PublicInteractionButtonContext"]},{"name":"class PublicMentionableSelectMenuContext<M : ModalForm>(val component: PublicMentionableSelectMenu<M>, val event: SelectMenuInteractionCreateEvent, val interactionResponse: PublicMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>) : MentionableSelectMenuContext, PublicInteractionContext","description":"dev.kordex.core.components.menus.mentionable.PublicMentionableSelectMenuContext","location":"kord-extensions/dev.kordex.core.components.menus.mentionable/-public-mentionable-select-menu-context/index.html","searchKeys":["PublicMentionableSelectMenuContext","class PublicMentionableSelectMenuContext<M : ModalForm>(val component: PublicMentionableSelectMenu<M>, val event: SelectMenuInteractionCreateEvent, val interactionResponse: PublicMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>) : MentionableSelectMenuContext, PublicInteractionContext","dev.kordex.core.components.menus.mentionable.PublicMentionableSelectMenuContext"]},{"name":"class PublicMessageCommand<M : ModalForm>(extension: Extension, val modal: () -> M? = null) : MessageCommand<PublicMessageCommandContext<M>, M> ","description":"dev.kordex.core.commands.application.message.PublicMessageCommand","location":"kord-extensions/dev.kordex.core.commands.application.message/-public-message-command/index.html","searchKeys":["PublicMessageCommand","class PublicMessageCommand<M : ModalForm>(extension: Extension, val modal: () -> M? = null) : MessageCommand<PublicMessageCommandContext<M>, M> ","dev.kordex.core.commands.application.message.PublicMessageCommand"]},{"name":"class PublicMessageCommandContext<M : ModalForm>(val event: MessageCommandInteractionCreateEvent, val command: MessageCommand<PublicMessageCommandContext<M>, M>, val interactionResponse: PublicMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>) : MessageCommandContext<PublicMessageCommandContext<M>, M> , PublicInteractionContext","description":"dev.kordex.core.commands.application.message.PublicMessageCommandContext","location":"kord-extensions/dev.kordex.core.commands.application.message/-public-message-command-context/index.html","searchKeys":["PublicMessageCommandContext","class PublicMessageCommandContext<M : ModalForm>(val event: MessageCommandInteractionCreateEvent, val command: MessageCommand<PublicMessageCommandContext<M>, M>, val interactionResponse: PublicMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>) : MessageCommandContext<PublicMessageCommandContext<M>, M> , PublicInteractionContext","dev.kordex.core.commands.application.message.PublicMessageCommandContext"]},{"name":"class PublicResponsePaginator(val pages: Pages, val chunkedPages: Int = 1, val owner: UserBehavior? = null, val timeoutSeconds: Long? = null, val keepEmbed: Boolean = true, val switchEmoji: ReactionEmoji = if (pages.groups.size == 2) EXPAND_EMOJI else SWITCH_EMOJI, val mutator: PageTransitionCallback? = null, locale: Locale? = null, val interaction: PublicMessageInteractionResponseBehavior) : BaseButtonPaginator","description":"dev.kordex.core.pagination.PublicResponsePaginator","location":"kord-extensions/dev.kordex.core.pagination/-public-response-paginator/index.html","searchKeys":["PublicResponsePaginator","class PublicResponsePaginator(val pages: Pages, val chunkedPages: Int = 1, val owner: UserBehavior? = null, val timeoutSeconds: Long? = null, val keepEmbed: Boolean = true, val switchEmoji: ReactionEmoji = if (pages.groups.size == 2) EXPAND_EMOJI else SWITCH_EMOJI, val mutator: PageTransitionCallback? = null, locale: Locale? = null, val interaction: PublicMessageInteractionResponseBehavior) : BaseButtonPaginator","dev.kordex.core.pagination.PublicResponsePaginator"]},{"name":"class PublicRoleSelectMenuContext<M : ModalForm>(val component: PublicRoleSelectMenu<M>, val event: SelectMenuInteractionCreateEvent, val interactionResponse: PublicMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>) : RoleSelectMenuContext, PublicInteractionContext","description":"dev.kordex.core.components.menus.role.PublicRoleSelectMenuContext","location":"kord-extensions/dev.kordex.core.components.menus.role/-public-role-select-menu-context/index.html","searchKeys":["PublicRoleSelectMenuContext","class PublicRoleSelectMenuContext<M : ModalForm>(val component: PublicRoleSelectMenu<M>, val event: SelectMenuInteractionCreateEvent, val interactionResponse: PublicMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>) : RoleSelectMenuContext, PublicInteractionContext","dev.kordex.core.components.menus.role.PublicRoleSelectMenuContext"]},{"name":"class PublicSlashCommand<A : Arguments, M : ModalForm>(extension: Extension, val arguments: () -> A? = null, val modal: () -> M? = null, val parentCommand: SlashCommand<*, *, *>? = null, val parentGroup: SlashGroup? = null) : SlashCommand<PublicSlashCommandContext<A, M>, A, M> ","description":"dev.kordex.core.commands.application.slash.PublicSlashCommand","location":"kord-extensions/dev.kordex.core.commands.application.slash/-public-slash-command/index.html","searchKeys":["PublicSlashCommand","class PublicSlashCommand<A : Arguments, M : ModalForm>(extension: Extension, val arguments: () -> A? = null, val modal: () -> M? = null, val parentCommand: SlashCommand<*, *, *>? = null, val parentGroup: SlashGroup? = null) : SlashCommand<PublicSlashCommandContext<A, M>, A, M> ","dev.kordex.core.commands.application.slash.PublicSlashCommand"]},{"name":"class PublicSlashCommandContext<A : Arguments, M : ModalForm>(val event: ChatInputCommandInteractionCreateEvent, val command: SlashCommand<PublicSlashCommandContext<A, M>, A, M>, val interactionResponse: PublicMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>) : SlashCommandContext<PublicSlashCommandContext<A, M>, A, M> , PublicInteractionContext","description":"dev.kordex.core.commands.application.slash.PublicSlashCommandContext","location":"kord-extensions/dev.kordex.core.commands.application.slash/-public-slash-command-context/index.html","searchKeys":["PublicSlashCommandContext","class PublicSlashCommandContext<A : Arguments, M : ModalForm>(val event: ChatInputCommandInteractionCreateEvent, val command: SlashCommand<PublicSlashCommandContext<A, M>, A, M>, val interactionResponse: PublicMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>) : SlashCommandContext<PublicSlashCommandContext<A, M>, A, M> , PublicInteractionContext","dev.kordex.core.commands.application.slash.PublicSlashCommandContext"]},{"name":"class PublicStringSelectMenuContext<M : ModalForm>(val component: PublicStringSelectMenu<M>, val event: SelectMenuInteractionCreateEvent, val interactionResponse: PublicMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>) : StringSelectMenuContext, PublicInteractionContext","description":"dev.kordex.core.components.menus.string.PublicStringSelectMenuContext","location":"kord-extensions/dev.kordex.core.components.menus.string/-public-string-select-menu-context/index.html","searchKeys":["PublicStringSelectMenuContext","class PublicStringSelectMenuContext<M : ModalForm>(val component: PublicStringSelectMenu<M>, val event: SelectMenuInteractionCreateEvent, val interactionResponse: PublicMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>) : StringSelectMenuContext, PublicInteractionContext","dev.kordex.core.components.menus.string.PublicStringSelectMenuContext"]},{"name":"class PublicUserCommand<M : ModalForm>(extension: Extension, val modal: () -> M? = null) : UserCommand<PublicUserCommandContext<M>, M> ","description":"dev.kordex.core.commands.application.user.PublicUserCommand","location":"kord-extensions/dev.kordex.core.commands.application.user/-public-user-command/index.html","searchKeys":["PublicUserCommand","class PublicUserCommand<M : ModalForm>(extension: Extension, val modal: () -> M? = null) : UserCommand<PublicUserCommandContext<M>, M> ","dev.kordex.core.commands.application.user.PublicUserCommand"]},{"name":"class PublicUserCommandContext<M : ModalForm>(val event: UserCommandInteractionCreateEvent, val command: UserCommand<PublicUserCommandContext<M>, M>, val interactionResponse: PublicMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>) : UserCommandContext<PublicUserCommandContext<M>, M> , PublicInteractionContext","description":"dev.kordex.core.commands.application.user.PublicUserCommandContext","location":"kord-extensions/dev.kordex.core.commands.application.user/-public-user-command-context/index.html","searchKeys":["PublicUserCommandContext","class PublicUserCommandContext<M : ModalForm>(val event: UserCommandInteractionCreateEvent, val command: UserCommand<PublicUserCommandContext<M>, M>, val interactionResponse: PublicMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>) : UserCommandContext<PublicUserCommandContext<M>, M> , PublicInteractionContext","dev.kordex.core.commands.application.user.PublicUserCommandContext"]},{"name":"class PublicUserSelectMenuContext<M : ModalForm>(val component: PublicUserSelectMenu<M>, val event: SelectMenuInteractionCreateEvent, val interactionResponse: PublicMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>) : UserSelectMenuContext, PublicInteractionContext","description":"dev.kordex.core.components.menus.user.PublicUserSelectMenuContext","location":"kord-extensions/dev.kordex.core.components.menus.user/-public-user-select-menu-context/index.html","searchKeys":["PublicUserSelectMenuContext","class PublicUserSelectMenuContext<M : ModalForm>(val component: PublicUserSelectMenu<M>, val event: SelectMenuInteractionCreateEvent, val interactionResponse: PublicMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>) : UserSelectMenuContext, PublicInteractionContext","dev.kordex.core.components.menus.user.PublicUserSelectMenuContext"]},{"name":"class RegexCoalescingConverter(options: Set<RegexOption> = setOf(), shouldThrow: Boolean = false, var validator: Validator<Regex> = null) : CoalescingConverter<Regex> ","description":"dev.kordex.core.commands.converters.impl.RegexCoalescingConverter","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-regex-coalescing-converter/index.html","searchKeys":["RegexCoalescingConverter","class RegexCoalescingConverter(options: Set<RegexOption> = setOf(), shouldThrow: Boolean = false, var validator: Validator<Regex> = null) : CoalescingConverter<Regex> ","dev.kordex.core.commands.converters.impl.RegexCoalescingConverter"]},{"name":"class RegexConverter(options: Set<RegexOption> = setOf(), var validator: Validator<Regex> = null) : SingleConverter<Regex> ","description":"dev.kordex.core.commands.converters.impl.RegexConverter","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-regex-converter/index.html","searchKeys":["RegexConverter","class RegexConverter(options: Set<RegexOption> = setOf(), var validator: Validator<Regex> = null) : SingleConverter<Regex> ","dev.kordex.core.commands.converters.impl.RegexConverter"]},{"name":"class RelayedFailure(error: DiscordRelayedException) : FailureReason<DiscordRelayedException> ","description":"dev.kordex.core.types.FailureReason.RelayedFailure","location":"kord-extensions/dev.kordex.core.types/-failure-reason/-relayed-failure/index.html","searchKeys":["RelayedFailure","class RelayedFailure(error: DiscordRelayedException) : FailureReason<DiscordRelayedException> ","dev.kordex.core.types.FailureReason.RelayedFailure"]},{"name":"class RoleConverter(requiredGuild: suspend () -> Snowflake? = null, var validator: Validator<Role> = null) : SingleConverter<Role> ","description":"dev.kordex.core.commands.converters.impl.RoleConverter","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-role-converter/index.html","searchKeys":["RoleConverter","class RoleConverter(requiredGuild: suspend () -> Snowflake? = null, var validator: Validator<Role> = null) : SingleConverter<Role> ","dev.kordex.core.commands.converters.impl.RoleConverter"]},{"name":"class Section(val name: Key, val description: Key) : KordExKoinComponent","description":"dev.kordex.core.builders.about.Section","location":"kord-extensions/dev.kordex.core.builders.about/-section/index.html","searchKeys":["Section","class Section(val name: Key, val description: Key) : KordExKoinComponent","dev.kordex.core.builders.about.Section"]},{"name":"class SentryBreadcrumbCapture(val type: BreadcrumbType = BreadcrumbType.Default) : SentryCapture","description":"dev.kordex.core.sentry.captures.SentryBreadcrumbCapture","location":"kord-extensions/dev.kordex.core.sentry.captures/-sentry-breadcrumb-capture/index.html","searchKeys":["SentryBreadcrumbCapture","class SentryBreadcrumbCapture(val type: BreadcrumbType = BreadcrumbType.Default) : SentryCapture","dev.kordex.core.sentry.captures.SentryBreadcrumbCapture"]},{"name":"class SentryContext : KordExKoinComponent","description":"dev.kordex.core.sentry.SentryContext","location":"kord-extensions/dev.kordex.core.sentry/-sentry-context/index.html","searchKeys":["SentryContext","class SentryContext : KordExKoinComponent","dev.kordex.core.sentry.SentryContext"]},{"name":"class SentryExceptionCapture(val throwable: Throwable) : SentryScopeCapture","description":"dev.kordex.core.sentry.captures.SentryExceptionCapture","location":"kord-extensions/dev.kordex.core.sentry.captures/-sentry-exception-capture/index.html","searchKeys":["SentryExceptionCapture","class SentryExceptionCapture(val throwable: Throwable) : SentryScopeCapture","dev.kordex.core.sentry.captures.SentryExceptionCapture"]},{"name":"class SentryExtension : Extension","description":"dev.kordex.core.extensions.impl.SentryExtension","location":"kord-extensions/dev.kordex.core.extensions.impl/-sentry-extension/index.html","searchKeys":["SentryExtension","class SentryExtension : Extension","dev.kordex.core.extensions.impl.SentryExtension"]},{"name":"class SentryExtensionDataTypeBuilder","description":"dev.kordex.core.builders.extensions.SentryExtensionBuilder.SentryExtensionDataTypeBuilder","location":"kord-extensions/dev.kordex.core.builders.extensions/-sentry-extension-builder/-sentry-extension-data-type-builder/index.html","searchKeys":["SentryExtensionDataTypeBuilder","class SentryExtensionDataTypeBuilder","dev.kordex.core.builders.extensions.SentryExtensionBuilder.SentryExtensionDataTypeBuilder"]},{"name":"class SentryIdConverter(var validator: Validator<SentryId> = null) : SingleConverter<SentryId> ","description":"dev.kordex.core.sentry.SentryIdConverter","location":"kord-extensions/dev.kordex.core.sentry/-sentry-id-converter/index.html","searchKeys":["SentryIdConverter","class SentryIdConverter(var validator: Validator<SentryId> = null) : SingleConverter<SentryId> ","dev.kordex.core.sentry.SentryIdConverter"]},{"name":"class SingleToDefaultingConverter<T : Any>(val singleConverter: SingleConverter<T>, defaultValue: T, outputError: Boolean = false, newSignatureType: Key? = null, newShowTypeInSignature: Boolean? = null, newErrorType: Key? = null, var validator: Validator<T> = null) : DefaultingConverter<T> ","description":"dev.kordex.core.commands.converters.SingleToDefaultingConverter","location":"kord-extensions/dev.kordex.core.commands.converters/-single-to-defaulting-converter/index.html","searchKeys":["SingleToDefaultingConverter","class SingleToDefaultingConverter<T : Any>(val singleConverter: SingleConverter<T>, defaultValue: T, outputError: Boolean = false, newSignatureType: Key? = null, newShowTypeInSignature: Boolean? = null, newErrorType: Key? = null, var validator: Validator<T> = null) : DefaultingConverter<T> ","dev.kordex.core.commands.converters.SingleToDefaultingConverter"]},{"name":"class SingleToListConverter<T : Any>(required: Boolean = true, val singleConverter: SingleConverter<T>, newSignatureType: Key? = null, newShowTypeInSignature: Boolean? = null, newErrorType: Key? = null, var validator: Validator<List<T>> = null) : ListConverter<T> ","description":"dev.kordex.core.commands.converters.SingleToListConverter","location":"kord-extensions/dev.kordex.core.commands.converters/-single-to-list-converter/index.html","searchKeys":["SingleToListConverter","class SingleToListConverter<T : Any>(required: Boolean = true, val singleConverter: SingleConverter<T>, newSignatureType: Key? = null, newShowTypeInSignature: Boolean? = null, newErrorType: Key? = null, var validator: Validator<List<T>> = null) : ListConverter<T> ","dev.kordex.core.commands.converters.SingleToListConverter"]},{"name":"class SingleToOptionalConverter<T : Any>(val singleConverter: SingleConverter<T>, newSignatureType: Key? = null, newShowTypeInSignature: Boolean? = null, newErrorType: Key? = null, outputError: Boolean = false, var validator: Validator<T?> = null) : OptionalConverter<T> ","description":"dev.kordex.core.commands.converters.SingleToOptionalConverter","location":"kord-extensions/dev.kordex.core.commands.converters/-single-to-optional-converter/index.html","searchKeys":["SingleToOptionalConverter","class SingleToOptionalConverter<T : Any>(val singleConverter: SingleConverter<T>, newSignatureType: Key? = null, newShowTypeInSignature: Boolean? = null, newErrorType: Key? = null, outputError: Boolean = false, var validator: Validator<T?> = null) : OptionalConverter<T> ","dev.kordex.core.commands.converters.SingleToOptionalConverter"]},{"name":"class SlashGroup(val name: Key, val parent: SlashCommand<*, *, *>) : KordExKoinComponent","description":"dev.kordex.core.commands.application.slash.SlashGroup","location":"kord-extensions/dev.kordex.core.commands.application.slash/-slash-group/index.html","searchKeys":["SlashGroup","class SlashGroup(val name: Key, val parent: SlashCommand<*, *, *>) : KordExKoinComponent","dev.kordex.core.commands.application.slash.SlashGroup"]},{"name":"class SnowflakeConverter(var validator: Validator<Snowflake> = null) : SingleConverter<Snowflake> ","description":"dev.kordex.core.commands.converters.impl.SnowflakeConverter","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-snowflake-converter/index.html","searchKeys":["SnowflakeConverter","class SnowflakeConverter(var validator: Validator<Snowflake> = null) : SingleConverter<Snowflake> ","dev.kordex.core.commands.converters.impl.SnowflakeConverter"]},{"name":"class StorageTypeSerializer : KSerializer<StorageType> ","description":"dev.kordex.core.storage.StorageTypeSerializer","location":"kord-extensions/dev.kordex.core.storage/-storage-type-serializer/index.html","searchKeys":["StorageTypeSerializer","class StorageTypeSerializer : KSerializer<StorageType> ","dev.kordex.core.storage.StorageTypeSerializer"]},{"name":"class StringChoiceConverter(choices: Map<Key, String>, var validator: Validator<String> = null) : ChoiceConverter<String> ","description":"dev.kordex.core.commands.application.slash.converters.impl.StringChoiceConverter","location":"kord-extensions/dev.kordex.core.commands.application.slash.converters.impl/-string-choice-converter/index.html","searchKeys":["StringChoiceConverter","class StringChoiceConverter(choices: Map<Key, String>, var validator: Validator<String> = null) : ChoiceConverter<String> ","dev.kordex.core.commands.application.slash.converters.impl.StringChoiceConverter"]},{"name":"class StringCoalescingConverter(shouldThrow: Boolean = false, var validator: Validator<String> = null) : CoalescingConverter<String> ","description":"dev.kordex.core.commands.converters.impl.StringCoalescingConverter","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-string-coalescing-converter/index.html","searchKeys":["StringCoalescingConverter","class StringCoalescingConverter(shouldThrow: Boolean = false, var validator: Validator<String> = null) : CoalescingConverter<String> ","dev.kordex.core.commands.converters.impl.StringCoalescingConverter"]},{"name":"class StringConverter(val maxLength: Int? = null, val minLength: Int? = null, var validator: Validator<String> = null) : SingleConverter<String> ","description":"dev.kordex.core.commands.converters.impl.StringConverter","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-string-converter/index.html","searchKeys":["StringConverter","class StringConverter(val maxLength: Int? = null, val minLength: Int? = null, var validator: Validator<String> = null) : SingleConverter<String> ","dev.kordex.core.commands.converters.impl.StringConverter"]},{"name":"class StringSelectOption(var label: Key, var value: String)","description":"dev.kordex.core.components.menus.string.StringSelectOption","location":"kord-extensions/dev.kordex.core.components.menus.string/-string-select-option/index.html","searchKeys":["StringSelectOption","class StringSelectOption(var label: Key, var value: String)","dev.kordex.core.components.menus.string.StringSelectOption"]},{"name":"class String constructor(displayName: Key, description: Key, body: suspend StringChoiceBuilder.() -> Unit) : ChoiceOptionWrapper<StringChoiceBuilder, String> ","description":"dev.kordex.core.commands.ChoiceOptionWrapper.String","location":"kord-extensions/dev.kordex.core.commands/-choice-option-wrapper/-string/index.html","searchKeys":["String","class String constructor(displayName: Key, description: Key, body: suspend StringChoiceBuilder.() -> Unit) : ChoiceOptionWrapper<StringChoiceBuilder, String> ","dev.kordex.core.commands.ChoiceOptionWrapper.String"]},{"name":"class SupportedLocaleConverter(var validator: Validator<Locale> = null) : SingleConverter<Locale> ","description":"dev.kordex.core.commands.converters.impl.SupportedLocaleConverter","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-supported-locale-converter/index.html","searchKeys":["SupportedLocaleConverter","class SupportedLocaleConverter(var validator: Validator<Locale> = null) : SingleConverter<Locale> ","dev.kordex.core.commands.converters.impl.SupportedLocaleConverter"]},{"name":"class TagConverter(channelGetter: suspend () -> ForumChannel?? = null, var validator: Validator<ForumTag> = null) : SingleConverter<ForumTag> ","description":"dev.kordex.core.commands.converters.impl.TagConverter","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-tag-converter/index.html","searchKeys":["TagConverter","class TagConverter(channelGetter: suspend () -> ForumChannel?? = null, var validator: Validator<ForumTag> = null) : SingleConverter<ForumTag> ","dev.kordex.core.commands.converters.impl.TagConverter"]},{"name":"class TermsResponse(val required: Boolean, val label: String, val response: Boolean, val values: List<String>) : GuildJoinRequestResponse","description":"dev.kordex.core.events.extra.models.GuildJoinRequestResponse.TermsResponse","location":"kord-extensions/dev.kordex.core.events.extra.models/-guild-join-request-response/-terms-response/index.html","searchKeys":["TermsResponse","class TermsResponse(val required: Boolean, val label: String, val response: Boolean, val values: List<String>) : GuildJoinRequestResponse","dev.kordex.core.events.extra.models.GuildJoinRequestResponse.TermsResponse"]},{"name":"class TimestampConverter(var validator: Validator<FormattedTimestamp> = null) : SingleConverter<FormattedTimestamp> ","description":"dev.kordex.core.commands.converters.impl.TimestampConverter","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-timestamp-converter/index.html","searchKeys":["TimestampConverter","class TimestampConverter(var validator: Validator<FormattedTimestamp> = null) : SingleConverter<FormattedTimestamp> ","dev.kordex.core.commands.converters.impl.TimestampConverter"]},{"name":"class UserConverter(useReply: Boolean = true, var validator: Validator<User> = null) : SingleConverter<User> ","description":"dev.kordex.core.commands.converters.impl.UserConverter","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-user-converter/index.html","searchKeys":["UserConverter","class UserConverter(useReply: Boolean = true, var validator: Validator<User> = null) : SingleConverter<User> ","dev.kordex.core.commands.converters.impl.UserConverter"]},{"name":"class ValidationContext<out T>(val value: T, val context: CommandContext) : KordExKoinComponent","description":"dev.kordex.core.commands.converters.builders.ValidationContext","location":"kord-extensions/dev.kordex.core.commands.converters.builders/-validation-context/index.html","searchKeys":["ValidationContext","class ValidationContext<out T>(val value: T, val context: CommandContext) : KordExKoinComponent","dev.kordex.core.commands.converters.builders.ValidationContext"]},{"name":"const val BASE_URL: String","description":"dev.kordex.core.datacollection.BASE_URL","location":"kord-extensions/dev.kordex.core.datacollection/-b-a-s-e_-u-r-l.html","searchKeys":["BASE_URL","const val BASE_URL: String","dev.kordex.core.datacollection.BASE_URL"]},{"name":"const val DEFAULT_BUNDLE_SUFFIX: String","description":"dev.kordex.core.i18n.DEFAULT_BUNDLE_SUFFIX","location":"kord-extensions/dev.kordex.core.i18n/-d-e-f-a-u-l-t_-b-u-n-d-l-e_-s-u-f-f-i-x.html","searchKeys":["DEFAULT_BUNDLE_SUFFIX","const val DEFAULT_BUNDLE_SUFFIX: String","dev.kordex.core.i18n.DEFAULT_BUNDLE_SUFFIX"]},{"name":"const val DESCRIPTION_MAX: Int = 100","description":"dev.kordex.core.components.menus.DESCRIPTION_MAX","location":"kord-extensions/dev.kordex.core.components.menus/-d-e-s-c-r-i-p-t-i-o-n_-m-a-x.html","searchKeys":["DESCRIPTION_MAX","const val DESCRIPTION_MAX: Int = 100","dev.kordex.core.components.menus.DESCRIPTION_MAX"]},{"name":"const val EMPTY_VALUE_STRING: String","description":"dev.kordex.core.i18n.EMPTY_VALUE_STRING","location":"kord-extensions/dev.kordex.core.i18n/-e-m-p-t-y_-v-a-l-u-e_-s-t-r-i-n-g.html","searchKeys":["EMPTY_VALUE_STRING","const val EMPTY_VALUE_STRING: String","dev.kordex.core.i18n.EMPTY_VALUE_STRING"]},{"name":"const val GRID_CAPACITY: Int","description":"dev.kordex.core.components.forms.GRID_CAPACITY","location":"kord-extensions/dev.kordex.core.components.forms/-g-r-i-d_-c-a-p-a-c-i-t-y.html","searchKeys":["GRID_CAPACITY","const val GRID_CAPACITY: Int","dev.kordex.core.components.forms.GRID_CAPACITY"]},{"name":"const val GRID_HEIGHT: Int = 5","description":"dev.kordex.core.components.forms.GRID_HEIGHT","location":"kord-extensions/dev.kordex.core.components.forms/-g-r-i-d_-h-e-i-g-h-t.html","searchKeys":["GRID_HEIGHT","const val GRID_HEIGHT: Int = 5","dev.kordex.core.components.forms.GRID_HEIGHT"]},{"name":"const val GRID_WIDTH: Int = 5","description":"dev.kordex.core.components.forms.GRID_WIDTH","location":"kord-extensions/dev.kordex.core.components.forms/-g-r-i-d_-w-i-d-t-h.html","searchKeys":["GRID_WIDTH","const val GRID_WIDTH: Int = 5","dev.kordex.core.components.forms.GRID_WIDTH"]},{"name":"const val GuildBrowseChannels: String","description":"dev.kordex.core.utils.Mentions.GuildBrowseChannels","location":"kord-extensions/dev.kordex.core.utils/-mentions/-guild-browse-channels.html","searchKeys":["GuildBrowseChannels","const val GuildBrowseChannels: String","dev.kordex.core.utils.Mentions.GuildBrowseChannels"]},{"name":"const val GuildCustomizeCommunity: String","description":"dev.kordex.core.utils.Mentions.GuildCustomizeCommunity","location":"kord-extensions/dev.kordex.core.utils/-mentions/-guild-customize-community.html","searchKeys":["GuildCustomizeCommunity","const val GuildCustomizeCommunity: String","dev.kordex.core.utils.Mentions.GuildCustomizeCommunity"]},{"name":"const val GuildHome: String","description":"dev.kordex.core.utils.Mentions.GuildHome","location":"kord-extensions/dev.kordex.core.utils/-mentions/-guild-home.html","searchKeys":["GuildHome","const val GuildHome: String","dev.kordex.core.utils.Mentions.GuildHome"]},{"name":"const val HELP_PER_PAGE: Int = 4","description":"dev.kordex.core.extensions.impl.HELP_PER_PAGE","location":"kord-extensions/dev.kordex.core.extensions.impl/-h-e-l-p_-p-e-r_-p-a-g-e.html","searchKeys":["HELP_PER_PAGE","const val HELP_PER_PAGE: Int = 4","dev.kordex.core.extensions.impl.HELP_PER_PAGE"]},{"name":"const val KORDEX_KEY: String","description":"dev.kordex.core.i18n.KORDEX_KEY","location":"kord-extensions/dev.kordex.core.i18n/-k-o-r-d-e-x_-k-e-y.html","searchKeys":["KORDEX_KEY","const val KORDEX_KEY: String","dev.kordex.core.i18n.KORDEX_KEY"]},{"name":"const val LABEL_LENGTH: Int = 45","description":"dev.kordex.core.components.forms.widgets.LABEL_LENGTH","location":"kord-extensions/dev.kordex.core.components.forms.widgets/-l-a-b-e-l_-l-e-n-g-t-h.html","searchKeys":["LABEL_LENGTH","const val LABEL_LENGTH: Int = 45","dev.kordex.core.components.forms.widgets.LABEL_LENGTH"]},{"name":"const val LABEL_MAX: Int = 100","description":"dev.kordex.core.components.menus.LABEL_MAX","location":"kord-extensions/dev.kordex.core.components.menus/-l-a-b-e-l_-m-a-x.html","searchKeys":["LABEL_MAX","const val LABEL_MAX: Int = 100","dev.kordex.core.components.menus.LABEL_MAX"]},{"name":"const val MAX_LENGTH: Int = 4000","description":"dev.kordex.core.components.forms.widgets.MAX_LENGTH","location":"kord-extensions/dev.kordex.core.components.forms.widgets/-m-a-x_-l-e-n-g-t-h.html","searchKeys":["MAX_LENGTH","const val MAX_LENGTH: Int = 4000","dev.kordex.core.components.forms.widgets.MAX_LENGTH"]},{"name":"const val MAX_SUGGESTIONS: Int = 25","description":"dev.kordex.core.utils.MAX_SUGGESTIONS","location":"kord-extensions/dev.kordex.core.utils/-m-a-x_-s-u-g-g-e-s-t-i-o-n-s.html","searchKeys":["MAX_SUGGESTIONS","const val MAX_SUGGESTIONS: Int = 25","dev.kordex.core.utils.MAX_SUGGESTIONS"]},{"name":"const val MIN_LENGTH: Int = 0","description":"dev.kordex.core.components.forms.widgets.MIN_LENGTH","location":"kord-extensions/dev.kordex.core.components.forms.widgets/-m-i-n_-l-e-n-g-t-h.html","searchKeys":["MIN_LENGTH","const val MIN_LENGTH: Int = 0","dev.kordex.core.components.forms.widgets.MIN_LENGTH"]},{"name":"const val OPTIONS_MAX: Int = 25","description":"dev.kordex.core.components.menus.OPTIONS_MAX","location":"kord-extensions/dev.kordex.core.components.menus/-o-p-t-i-o-n-s_-m-a-x.html","searchKeys":["OPTIONS_MAX","const val OPTIONS_MAX: Int = 25","dev.kordex.core.components.menus.OPTIONS_MAX"]},{"name":"const val PLACEHOLDER_LENGTH: Int = 100","description":"dev.kordex.core.components.forms.widgets.PLACEHOLDER_LENGTH","location":"kord-extensions/dev.kordex.core.components.forms.widgets/-p-l-a-c-e-h-o-l-d-e-r_-l-e-n-g-t-h.html","searchKeys":["PLACEHOLDER_LENGTH","const val PLACEHOLDER_LENGTH: Int = 100","dev.kordex.core.components.forms.widgets.PLACEHOLDER_LENGTH"]},{"name":"const val PLACEHOLDER_MAX: Int = 100","description":"dev.kordex.core.components.menus.PLACEHOLDER_MAX","location":"kord-extensions/dev.kordex.core.components.menus/-p-l-a-c-e-h-o-l-d-e-r_-m-a-x.html","searchKeys":["PLACEHOLDER_MAX","const val PLACEHOLDER_MAX: Int = 100","dev.kordex.core.components.menus.PLACEHOLDER_MAX"]},{"name":"const val ROW_SIZE: Int = 5","description":"dev.kordex.core.components.ROW_SIZE","location":"kord-extensions/dev.kordex.core.components/-r-o-w_-s-i-z-e.html","searchKeys":["ROW_SIZE","const val ROW_SIZE: Int = 5","dev.kordex.core.components.ROW_SIZE"]},{"name":"const val SENTRY_EXTENSION_NAME: String","description":"dev.kordex.core.extensions.impl.SENTRY_EXTENSION_NAME","location":"kord-extensions/dev.kordex.core.extensions.impl/-s-e-n-t-r-y_-e-x-t-e-n-s-i-o-n_-n-a-m-e.html","searchKeys":["SENTRY_EXTENSION_NAME","const val SENTRY_EXTENSION_NAME: String","dev.kordex.core.extensions.impl.SENTRY_EXTENSION_NAME"]},{"name":"const val VALUE_MAX: Int = 100","description":"dev.kordex.core.components.menus.VALUE_MAX","location":"kord-extensions/dev.kordex.core.components.menus/-v-a-l-u-e_-m-a-x.html","searchKeys":["VALUE_MAX","const val VALUE_MAX: Int = 100","dev.kordex.core.components.menus.VALUE_MAX"]},{"name":"constructor()","description":"dev.kordex.core.KordExException.KordExException","location":"kord-extensions/dev.kordex.core/-kord-ex-exception/-kord-ex-exception.html","searchKeys":["KordExException","constructor()","dev.kordex.core.KordExException.KordExException"]},{"name":"constructor()","description":"dev.kordex.core.builders.AboutBuilder.AboutBuilder","location":"kord-extensions/dev.kordex.core.builders/-about-builder/-about-builder.html","searchKeys":["AboutBuilder","constructor()","dev.kordex.core.builders.AboutBuilder.AboutBuilder"]},{"name":"constructor()","description":"dev.kordex.core.builders.ApplicationCommandsBuilder.ApplicationCommandsBuilder","location":"kord-extensions/dev.kordex.core.builders/-application-commands-builder/-application-commands-builder.html","searchKeys":["ApplicationCommandsBuilder","constructor()","dev.kordex.core.builders.ApplicationCommandsBuilder.ApplicationCommandsBuilder"]},{"name":"constructor()","description":"dev.kordex.core.builders.CacheBuilder.CacheBuilder","location":"kord-extensions/dev.kordex.core.builders/-cache-builder/-cache-builder.html","searchKeys":["CacheBuilder","constructor()","dev.kordex.core.builders.CacheBuilder.CacheBuilder"]},{"name":"constructor()","description":"dev.kordex.core.builders.ChatCommandsBuilder.ChatCommandsBuilder","location":"kord-extensions/dev.kordex.core.builders/-chat-commands-builder/-chat-commands-builder.html","searchKeys":["ChatCommandsBuilder","constructor()","dev.kordex.core.builders.ChatCommandsBuilder.ChatCommandsBuilder"]},{"name":"constructor()","description":"dev.kordex.core.builders.ComponentsBuilder.ComponentsBuilder","location":"kord-extensions/dev.kordex.core.builders/-components-builder/-components-builder.html","searchKeys":["ComponentsBuilder","constructor()","dev.kordex.core.builders.ComponentsBuilder.ComponentsBuilder"]},{"name":"constructor()","description":"dev.kordex.core.builders.ExtensibleBotBuilder.ExtensibleBotBuilder","location":"kord-extensions/dev.kordex.core.builders/-extensible-bot-builder/-extensible-bot-builder.html","searchKeys":["ExtensibleBotBuilder","constructor()","dev.kordex.core.builders.ExtensibleBotBuilder.ExtensibleBotBuilder"]},{"name":"constructor()","description":"dev.kordex.core.builders.ExtensionsBuilder.ExtensionsBuilder","location":"kord-extensions/dev.kordex.core.builders/-extensions-builder/-extensions-builder.html","searchKeys":["ExtensionsBuilder","constructor()","dev.kordex.core.builders.ExtensionsBuilder.ExtensionsBuilder"]},{"name":"constructor()","description":"dev.kordex.core.builders.HooksBuilder.HooksBuilder","location":"kord-extensions/dev.kordex.core.builders/-hooks-builder/-hooks-builder.html","searchKeys":["HooksBuilder","constructor()","dev.kordex.core.builders.HooksBuilder.HooksBuilder"]},{"name":"constructor()","description":"dev.kordex.core.builders.I18nBuilder.I18nBuilder","location":"kord-extensions/dev.kordex.core.builders/-i18n-builder/-i18n-builder.html","searchKeys":["I18nBuilder","constructor()","dev.kordex.core.builders.I18nBuilder.I18nBuilder"]},{"name":"constructor()","description":"dev.kordex.core.builders.MembersBuilder.MembersBuilder","location":"kord-extensions/dev.kordex.core.builders/-members-builder/-members-builder.html","searchKeys":["MembersBuilder","constructor()","dev.kordex.core.builders.MembersBuilder.MembersBuilder"]},{"name":"constructor()","description":"dev.kordex.core.builders.extensions.HelpExtensionBuilder.HelpExtensionBuilder","location":"kord-extensions/dev.kordex.core.builders.extensions/-help-extension-builder/-help-extension-builder.html","searchKeys":["HelpExtensionBuilder","constructor()","dev.kordex.core.builders.extensions.HelpExtensionBuilder.HelpExtensionBuilder"]},{"name":"constructor()","description":"dev.kordex.core.builders.extensions.SentryExtensionBuilder.SentryExtensionBuilder","location":"kord-extensions/dev.kordex.core.builders.extensions/-sentry-extension-builder/-sentry-extension-builder.html","searchKeys":["SentryExtensionBuilder","constructor()","dev.kordex.core.builders.extensions.SentryExtensionBuilder.SentryExtensionBuilder"]},{"name":"constructor()","description":"dev.kordex.core.builders.extensions.SentryExtensionBuilder.SentryExtensionDataTypeBuilder.SentryExtensionDataTypeBuilder","location":"kord-extensions/dev.kordex.core.builders.extensions/-sentry-extension-builder/-sentry-extension-data-type-builder/-sentry-extension-data-type-builder.html","searchKeys":["SentryExtensionDataTypeBuilder","constructor()","dev.kordex.core.builders.extensions.SentryExtensionBuilder.SentryExtensionDataTypeBuilder.SentryExtensionDataTypeBuilder"]},{"name":"constructor()","description":"dev.kordex.core.commands.Arguments.Arguments","location":"kord-extensions/dev.kordex.core.commands/-arguments/-arguments.html","searchKeys":["Arguments","constructor()","dev.kordex.core.commands.Arguments.Arguments"]},{"name":"constructor()","description":"dev.kordex.core.commands.application.ApplicationCommandRegistry.ApplicationCommandRegistry","location":"kord-extensions/dev.kordex.core.commands.application/-application-command-registry/-application-command-registry.html","searchKeys":["ApplicationCommandRegistry","constructor()","dev.kordex.core.commands.application.ApplicationCommandRegistry.ApplicationCommandRegistry"]},{"name":"constructor()","description":"dev.kordex.core.commands.application.DefaultApplicationCommandRegistry.DefaultApplicationCommandRegistry","location":"kord-extensions/dev.kordex.core.commands.application/-default-application-command-registry/-default-application-command-registry.html","searchKeys":["DefaultApplicationCommandRegistry","constructor()","dev.kordex.core.commands.application.DefaultApplicationCommandRegistry.DefaultApplicationCommandRegistry"]},{"name":"constructor()","description":"dev.kordex.core.commands.application.slash.SlashCommandParser.SlashCommandParser","location":"kord-extensions/dev.kordex.core.commands.application.slash/-slash-command-parser/-slash-command-parser.html","searchKeys":["SlashCommandParser","constructor()","dev.kordex.core.commands.application.slash.SlashCommandParser.SlashCommandParser"]},{"name":"constructor()","description":"dev.kordex.core.commands.chat.ChatCommandParser.ChatCommandParser","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-command-parser/-chat-command-parser.html","searchKeys":["ChatCommandParser","constructor()","dev.kordex.core.commands.chat.ChatCommandParser.ChatCommandParser"]},{"name":"constructor()","description":"dev.kordex.core.commands.chat.ChatCommandRegistry.ChatCommandRegistry","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-command-registry/-chat-command-registry.html","searchKeys":["ChatCommandRegistry","constructor()","dev.kordex.core.commands.chat.ChatCommandRegistry.ChatCommandRegistry"]},{"name":"constructor()","description":"dev.kordex.core.commands.converters.builders.CoalescingConverterBuilder.CoalescingConverterBuilder","location":"kord-extensions/dev.kordex.core.commands.converters.builders/-coalescing-converter-builder/-coalescing-converter-builder.html","searchKeys":["CoalescingConverterBuilder","constructor()","dev.kordex.core.commands.converters.builders.CoalescingConverterBuilder.CoalescingConverterBuilder"]},{"name":"constructor()","description":"dev.kordex.core.commands.converters.builders.ConverterBuilder.ConverterBuilder","location":"kord-extensions/dev.kordex.core.commands.converters.builders/-converter-builder/-converter-builder.html","searchKeys":["ConverterBuilder","constructor()","dev.kordex.core.commands.converters.builders.ConverterBuilder.ConverterBuilder"]},{"name":"constructor()","description":"dev.kordex.core.commands.converters.builders.DefaultingCoalescingConverterBuilder.DefaultingCoalescingConverterBuilder","location":"kord-extensions/dev.kordex.core.commands.converters.builders/-defaulting-coalescing-converter-builder/-defaulting-coalescing-converter-builder.html","searchKeys":["DefaultingCoalescingConverterBuilder","constructor()","dev.kordex.core.commands.converters.builders.DefaultingCoalescingConverterBuilder.DefaultingCoalescingConverterBuilder"]},{"name":"constructor()","description":"dev.kordex.core.commands.converters.builders.DefaultingConverterBuilder.DefaultingConverterBuilder","location":"kord-extensions/dev.kordex.core.commands.converters.builders/-defaulting-converter-builder/-defaulting-converter-builder.html","searchKeys":["DefaultingConverterBuilder","constructor()","dev.kordex.core.commands.converters.builders.DefaultingConverterBuilder.DefaultingConverterBuilder"]},{"name":"constructor()","description":"dev.kordex.core.commands.converters.builders.ListConverterBuilder.ListConverterBuilder","location":"kord-extensions/dev.kordex.core.commands.converters.builders/-list-converter-builder/-list-converter-builder.html","searchKeys":["ListConverterBuilder","constructor()","dev.kordex.core.commands.converters.builders.ListConverterBuilder.ListConverterBuilder"]},{"name":"constructor()","description":"dev.kordex.core.commands.converters.builders.OptionalCoalescingConverterBuilder.OptionalCoalescingConverterBuilder","location":"kord-extensions/dev.kordex.core.commands.converters.builders/-optional-coalescing-converter-builder/-optional-coalescing-converter-builder.html","searchKeys":["OptionalCoalescingConverterBuilder","constructor()","dev.kordex.core.commands.converters.builders.OptionalCoalescingConverterBuilder.OptionalCoalescingConverterBuilder"]},{"name":"constructor()","description":"dev.kordex.core.commands.converters.builders.OptionalConverterBuilder.OptionalConverterBuilder","location":"kord-extensions/dev.kordex.core.commands.converters.builders/-optional-converter-builder/-optional-converter-builder.html","searchKeys":["OptionalConverterBuilder","constructor()","dev.kordex.core.commands.converters.builders.OptionalConverterBuilder.OptionalConverterBuilder"]},{"name":"constructor()","description":"dev.kordex.core.components.Component.Component","location":"kord-extensions/dev.kordex.core.components/-component/-component.html","searchKeys":["Component","constructor()","dev.kordex.core.components.Component.Component"]},{"name":"constructor()","description":"dev.kordex.core.components.ComponentRegistry.ComponentRegistry","location":"kord-extensions/dev.kordex.core.components/-component-registry/-component-registry.html","searchKeys":["ComponentRegistry","constructor()","dev.kordex.core.components.ComponentRegistry.ComponentRegistry"]},{"name":"constructor()","description":"dev.kordex.core.components.ComponentWithID.ComponentWithID","location":"kord-extensions/dev.kordex.core.components/-component-with-i-d/-component-with-i-d.html","searchKeys":["ComponentWithID","constructor()","dev.kordex.core.components.ComponentWithID.ComponentWithID"]},{"name":"constructor()","description":"dev.kordex.core.components.buttons.DisabledInteractionButton.DisabledInteractionButton","location":"kord-extensions/dev.kordex.core.components.buttons/-disabled-interaction-button/-disabled-interaction-button.html","searchKeys":["DisabledInteractionButton","constructor()","dev.kordex.core.components.buttons.DisabledInteractionButton.DisabledInteractionButton"]},{"name":"constructor()","description":"dev.kordex.core.components.buttons.InteractionButton.InteractionButton","location":"kord-extensions/dev.kordex.core.components.buttons/-interaction-button/-interaction-button.html","searchKeys":["InteractionButton","constructor()","dev.kordex.core.components.buttons.InteractionButton.InteractionButton"]},{"name":"constructor()","description":"dev.kordex.core.components.buttons.InteractionButtonWithID.InteractionButtonWithID","location":"kord-extensions/dev.kordex.core.components.buttons/-interaction-button-with-i-d/-interaction-button-with-i-d.html","searchKeys":["InteractionButtonWithID","constructor()","dev.kordex.core.components.buttons.InteractionButtonWithID.InteractionButtonWithID"]},{"name":"constructor()","description":"dev.kordex.core.components.buttons.LinkInteractionButton.LinkInteractionButton","location":"kord-extensions/dev.kordex.core.components.buttons/-link-interaction-button/-link-interaction-button.html","searchKeys":["LinkInteractionButton","constructor()","dev.kordex.core.components.buttons.LinkInteractionButton.LinkInteractionButton"]},{"name":"constructor()","description":"dev.kordex.core.components.forms.Form.Form","location":"kord-extensions/dev.kordex.core.components.forms/-form/-form.html","searchKeys":["Form","constructor()","dev.kordex.core.components.forms.Form.Form"]},{"name":"constructor()","description":"dev.kordex.core.components.forms.ModalForm.ModalForm","location":"kord-extensions/dev.kordex.core.components.forms/-modal-form/-modal-form.html","searchKeys":["ModalForm","constructor()","dev.kordex.core.components.forms.ModalForm.ModalForm"]},{"name":"constructor()","description":"dev.kordex.core.components.forms.widgets.LineTextWidget.LineTextWidget","location":"kord-extensions/dev.kordex.core.components.forms.widgets/-line-text-widget/-line-text-widget.html","searchKeys":["LineTextWidget","constructor()","dev.kordex.core.components.forms.widgets.LineTextWidget.LineTextWidget"]},{"name":"constructor()","description":"dev.kordex.core.components.forms.widgets.ParagraphTextWidget.ParagraphTextWidget","location":"kord-extensions/dev.kordex.core.components.forms.widgets/-paragraph-text-widget/-paragraph-text-widget.html","searchKeys":["ParagraphTextWidget","constructor()","dev.kordex.core.components.forms.widgets.ParagraphTextWidget.ParagraphTextWidget"]},{"name":"constructor()","description":"dev.kordex.core.components.forms.widgets.TextInputWidget.TextInputWidget","location":"kord-extensions/dev.kordex.core.components.forms.widgets/-text-input-widget/-text-input-widget.html","searchKeys":["TextInputWidget","constructor()","dev.kordex.core.components.forms.widgets.TextInputWidget.TextInputWidget"]},{"name":"constructor()","description":"dev.kordex.core.components.forms.widgets.Widget.Widget","location":"kord-extensions/dev.kordex.core.components.forms.widgets/-widget/-widget.html","searchKeys":["Widget","constructor()","dev.kordex.core.components.forms.widgets.Widget.Widget"]},{"name":"constructor()","description":"dev.kordex.core.extensions.Extension.Extension","location":"kord-extensions/dev.kordex.core.extensions/-extension/-extension.html","searchKeys":["Extension","constructor()","dev.kordex.core.extensions.Extension.Extension"]},{"name":"constructor()","description":"dev.kordex.core.extensions.impl.AboutExtension.AboutExtension","location":"kord-extensions/dev.kordex.core.extensions.impl/-about-extension/-about-extension.html","searchKeys":["AboutExtension","constructor()","dev.kordex.core.extensions.impl.AboutExtension.AboutExtension"]},{"name":"constructor()","description":"dev.kordex.core.extensions.impl.HelpExtension.HelpArguments.HelpArguments","location":"kord-extensions/dev.kordex.core.extensions.impl/-help-extension/-help-arguments/-help-arguments.html","searchKeys":["HelpArguments","constructor()","dev.kordex.core.extensions.impl.HelpExtension.HelpArguments.HelpArguments"]},{"name":"constructor()","description":"dev.kordex.core.extensions.impl.HelpExtension.HelpExtension","location":"kord-extensions/dev.kordex.core.extensions.impl/-help-extension/-help-extension.html","searchKeys":["HelpExtension","constructor()","dev.kordex.core.extensions.impl.HelpExtension.HelpExtension"]},{"name":"constructor()","description":"dev.kordex.core.extensions.impl.SentryExtension.FeedbackMessageArgs.FeedbackMessageArgs","location":"kord-extensions/dev.kordex.core.extensions.impl/-sentry-extension/-feedback-message-args/-feedback-message-args.html","searchKeys":["FeedbackMessageArgs","constructor()","dev.kordex.core.extensions.impl.SentryExtension.FeedbackMessageArgs.FeedbackMessageArgs"]},{"name":"constructor()","description":"dev.kordex.core.extensions.impl.SentryExtension.FeedbackSlashArgs.FeedbackSlashArgs","location":"kord-extensions/dev.kordex.core.extensions.impl/-sentry-extension/-feedback-slash-args/-feedback-slash-args.html","searchKeys":["FeedbackSlashArgs","constructor()","dev.kordex.core.extensions.impl.SentryExtension.FeedbackSlashArgs.FeedbackSlashArgs"]},{"name":"constructor()","description":"dev.kordex.core.extensions.impl.SentryExtension.SentryExtension","location":"kord-extensions/dev.kordex.core.extensions.impl/-sentry-extension/-sentry-extension.html","searchKeys":["SentryExtension","constructor()","dev.kordex.core.extensions.impl.SentryExtension.SentryExtension"]},{"name":"constructor()","description":"dev.kordex.core.i18n.serializers.LocaleSerializer.LocaleSerializer","location":"kord-extensions/dev.kordex.core.i18n.serializers/-locale-serializer/-locale-serializer.html","searchKeys":["LocaleSerializer","constructor()","dev.kordex.core.i18n.serializers.LocaleSerializer.LocaleSerializer"]},{"name":"constructor()","description":"dev.kordex.core.pagination.builders.PageTransitionCallback.PageTransitionCallback","location":"kord-extensions/dev.kordex.core.pagination.builders/-page-transition-callback/-page-transition-callback.html","searchKeys":["PageTransitionCallback","constructor()","dev.kordex.core.pagination.builders.PageTransitionCallback.PageTransitionCallback"]},{"name":"constructor()","description":"dev.kordex.core.parsers.BaseParserException.BaseParserException","location":"kord-extensions/dev.kordex.core.parsers/-base-parser-exception/-base-parser-exception.html","searchKeys":["BaseParserException","constructor()","dev.kordex.core.parsers.BaseParserException.BaseParserException"]},{"name":"constructor()","description":"dev.kordex.core.plugins.KordExPlugin.KordExPlugin","location":"kord-extensions/dev.kordex.core.plugins/-kord-ex-plugin/-kord-ex-plugin.html","searchKeys":["KordExPlugin","constructor()","dev.kordex.core.plugins.KordExPlugin.KordExPlugin"]},{"name":"constructor()","description":"dev.kordex.core.registry.AbstractDeconstructingApplicationCommandRegistryStorage.AbstractDeconstructingApplicationCommandRegistryStorage","location":"kord-extensions/dev.kordex.core.registry/-abstract-deconstructing-application-command-registry-storage/-abstract-deconstructing-application-command-registry-storage.html","searchKeys":["AbstractDeconstructingApplicationCommandRegistryStorage","constructor()","dev.kordex.core.registry.AbstractDeconstructingApplicationCommandRegistryStorage.AbstractDeconstructingApplicationCommandRegistryStorage"]},{"name":"constructor()","description":"dev.kordex.core.registry.DefaultLocalRegistryStorage.DefaultLocalRegistryStorage","location":"kord-extensions/dev.kordex.core.registry/-default-local-registry-storage/-default-local-registry-storage.html","searchKeys":["DefaultLocalRegistryStorage","constructor()","dev.kordex.core.registry.DefaultLocalRegistryStorage.DefaultLocalRegistryStorage"]},{"name":"constructor()","description":"dev.kordex.core.sentry.SentryAdapter.SentryAdapter","location":"kord-extensions/dev.kordex.core.sentry/-sentry-adapter/-sentry-adapter.html","searchKeys":["SentryAdapter","constructor()","dev.kordex.core.sentry.SentryAdapter.SentryAdapter"]},{"name":"constructor()","description":"dev.kordex.core.sentry.SentryContext.SentryContext","location":"kord-extensions/dev.kordex.core.sentry/-sentry-context/-sentry-context.html","searchKeys":["SentryContext","constructor()","dev.kordex.core.sentry.SentryContext.SentryContext"]},{"name":"constructor()","description":"dev.kordex.core.sentry.captures.SentryCapture.SentryCapture","location":"kord-extensions/dev.kordex.core.sentry.captures/-sentry-capture/-sentry-capture.html","searchKeys":["SentryCapture","constructor()","dev.kordex.core.sentry.captures.SentryCapture.SentryCapture"]},{"name":"constructor()","description":"dev.kordex.core.sentry.captures.SentryScopeCapture.SentryScopeCapture","location":"kord-extensions/dev.kordex.core.sentry.captures/-sentry-scope-capture/-sentry-scope-capture.html","searchKeys":["SentryScopeCapture","constructor()","dev.kordex.core.sentry.captures.SentryScopeCapture.SentryScopeCapture"]},{"name":"constructor()","description":"dev.kordex.core.storage.DataAdapter.DataAdapter","location":"kord-extensions/dev.kordex.core.storage/-data-adapter/-data-adapter.html","searchKeys":["DataAdapter","constructor()","dev.kordex.core.storage.DataAdapter.DataAdapter"]},{"name":"constructor()","description":"dev.kordex.core.storage.StorageTypeSerializer.StorageTypeSerializer","location":"kord-extensions/dev.kordex.core.storage/-storage-type-serializer/-storage-type-serializer.html","searchKeys":["StorageTypeSerializer","constructor()","dev.kordex.core.storage.StorageTypeSerializer.StorageTypeSerializer"]},{"name":"constructor()","description":"dev.kordex.core.storage.toml.TomlDataAdapter.TomlDataAdapter","location":"kord-extensions/dev.kordex.core.storage.toml/-toml-data-adapter/-toml-data-adapter.html","searchKeys":["TomlDataAdapter","constructor()","dev.kordex.core.storage.toml.TomlDataAdapter.TomlDataAdapter"]},{"name":"constructor()","description":"dev.kordex.core.utils.scheduling.Scheduler.Scheduler","location":"kord-extensions/dev.kordex.core.utils.scheduling/-scheduler/-scheduler.html","searchKeys":["Scheduler","constructor()","dev.kordex.core.utils.scheduling.Scheduler.Scheduler"]},{"name":"constructor(attachments: Optional<Set<Attachment>>, content: Optional<String>, editedTimestamp: Optional<Instant?>, embeds: Optional<List<Embed>>, isPinned: Optional<Boolean>, mentionedChannelIds: Optional<Set<Snowflake>>, mentionedRoleIds: Optional<Set<Snowflake>>, mentionedUserIds: Optional<Set<Snowflake>>, mentionsEveryone: Optional<Boolean>, reactions: Optional<Set<Reaction>>, stickers: Optional<List<StickerItem>>)","description":"dev.kordex.core.utils.deltas.MessageDelta.MessageDelta","location":"kord-extensions/dev.kordex.core.utils.deltas/-message-delta/-message-delta.html","searchKeys":["MessageDelta","constructor(attachments: Optional<Set<Attachment>>, content: Optional<String>, editedTimestamp: Optional<Instant?>, embeds: Optional<List<Embed>>, isPinned: Optional<Boolean>, mentionedChannelIds: Optional<Set<Snowflake>>, mentionedRoleIds: Optional<Set<Snowflake>>, mentionedUserIds: Optional<Set<Snowflake>>, mentionsEveryone: Optional<Boolean>, reactions: Optional<Set<Reaction>>, stickers: Optional<List<StickerItem>>)","dev.kordex.core.utils.deltas.MessageDelta.MessageDelta"]},{"name":"constructor(avatar: Optional<Asset?>, username: Optional<String>, discriminator: Optional<String>, flags: Optional<UserFlags?>)","description":"dev.kordex.core.utils.deltas.UserDelta.UserDelta","location":"kord-extensions/dev.kordex.core.utils.deltas/-user-delta/-user-delta.html","searchKeys":["UserDelta","constructor(avatar: Optional<Asset?>, username: Optional<String>, discriminator: Optional<String>, flags: Optional<UserFlags?>)","dev.kordex.core.utils.deltas.UserDelta.UserDelta"]},{"name":"constructor(avatar: Optional<Asset?>, username: Optional<String>, discriminator: Optional<String>, flags: Optional<UserFlags?>, nickname: Optional<String?>, boosting: Optional<Instant?>, roles: Optional<RoleDelta>, owner: Optional<Boolean>, pending: Optional<Boolean>)","description":"dev.kordex.core.utils.deltas.MemberDelta.MemberDelta","location":"kord-extensions/dev.kordex.core.utils.deltas/-member-delta/-member-delta.html","searchKeys":["MemberDelta","constructor(avatar: Optional<Asset?>, username: Optional<String>, discriminator: Optional<String>, flags: Optional<UserFlags?>, nickname: Optional<String?>, boosting: Optional<Instant?>, roles: Optional<RoleDelta>, owner: Optional<Boolean>, pending: Optional<Boolean>)","dev.kordex.core.utils.deltas.MemberDelta.MemberDelta"]},{"name":"constructor(builder: () -> RegistryStorage<Snowflake, ApplicationCommand<*>>)","description":"dev.kordex.core.commands.application.StorageAwareApplicationCommandRegistry.StorageAwareApplicationCommandRegistry","location":"kord-extensions/dev.kordex.core.commands.application/-storage-aware-application-command-registry/-storage-aware-application-command-registry.html","searchKeys":["StorageAwareApplicationCommandRegistry","constructor(builder: () -> RegistryStorage<Snowflake, ApplicationCommand<*>>)","dev.kordex.core.commands.application.StorageAwareApplicationCommandRegistry.StorageAwareApplicationCommandRegistry"]},{"name":"constructor(builder: ConverterBuilder<*>, reason: String)","description":"dev.kordex.core.InvalidArgumentException.InvalidArgumentException","location":"kord-extensions/dev.kordex.core/-invalid-argument-exception/-invalid-argument-exception.html","searchKeys":["InvalidArgumentException","constructor(builder: ConverterBuilder<*>, reason: String)","dev.kordex.core.InvalidArgumentException.InvalidArgumentException"]},{"name":"constructor(builder: suspend EmbedBuilder.() -> Unit)","description":"dev.kordex.core.pagination.pages.Page.Page","location":"kord-extensions/dev.kordex.core.pagination.pages/-page/-page.html","searchKeys":["Page","constructor(builder: suspend EmbedBuilder.() -> Unit)","dev.kordex.core.pagination.pages.Page.Page"]},{"name":"constructor(channelGetter: suspend () -> ForumChannel?? = null, validator: Validator<ForumTag> = null)","description":"dev.kordex.core.commands.converters.impl.TagConverter.TagConverter","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-tag-converter/-tag-converter.html","searchKeys":["TagConverter","constructor(channelGetter: suspend () -> ForumChannel?? = null, validator: Validator<ForumTag> = null)","dev.kordex.core.commands.converters.impl.TagConverter.TagConverter"]},{"name":"constructor(chatCommand: ChatCommand<out T>, eventObj: MessageCreateEvent, commandName: Key, parser: StringParser, argString: String, cache: MutableStringKeyedMap<Any>)","description":"dev.kordex.core.commands.chat.ChatCommandContext.ChatCommandContext","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-command-context/-chat-command-context.html","searchKeys":["ChatCommandContext","constructor(chatCommand: ChatCommand<out T>, eventObj: MessageCreateEvent, commandName: Key, parser: StringParser, argString: String, cache: MutableStringKeyedMap<Any>)","dev.kordex.core.commands.chat.ChatCommandContext.ChatCommandContext"]},{"name":"constructor(choices: Map<Key, String>, validator: Validator<String> = null)","description":"dev.kordex.core.commands.application.slash.converters.impl.StringChoiceConverter.StringChoiceConverter","location":"kord-extensions/dev.kordex.core.commands.application.slash.converters.impl/-string-choice-converter/-string-choice-converter.html","searchKeys":["StringChoiceConverter","constructor(choices: Map<Key, String>, validator: Validator<String> = null)","dev.kordex.core.commands.application.slash.converters.impl.StringChoiceConverter.StringChoiceConverter"]},{"name":"constructor(choices: Map<Key, T>)","description":"dev.kordex.core.commands.application.slash.converters.ChoiceConverter.ChoiceConverter","location":"kord-extensions/dev.kordex.core.commands.application.slash.converters/-choice-converter/-choice-converter.html","searchKeys":["ChoiceConverter","constructor(choices: Map<Key, T>)","dev.kordex.core.commands.application.slash.converters.ChoiceConverter.ChoiceConverter"]},{"name":"constructor(clazz: KClass<*>)","description":"dev.kordex.core.utils.deltas.ChangeSet.ChangeSet","location":"kord-extensions/dev.kordex.core.utils.deltas/-change-set/-change-set.html","searchKeys":["ChangeSet","constructor(clazz: KClass<*>)","dev.kordex.core.utils.deltas.ChangeSet.ChangeSet"]},{"name":"constructor(clazz: KClass<out Extension>, reason: String?)","description":"dev.kordex.core.InvalidExtensionException.InvalidExtensionException","location":"kord-extensions/dev.kordex.core/-invalid-extension-exception/-invalid-extension-exception.html","searchKeys":["InvalidExtensionException","constructor(clazz: KClass<out Extension>, reason: String?)","dev.kordex.core.InvalidExtensionException.InvalidExtensionException"]},{"name":"constructor(coalescingConverter: CoalescingConverter<T>, defaultValue: T, outputError: Boolean = false, newSignatureType: Key? = null, newShowTypeInSignature: Boolean? = null, newErrorType: Key? = null, validator: Validator<T> = null)","description":"dev.kordex.core.commands.converters.CoalescingToDefaultingConverter.CoalescingToDefaultingConverter","location":"kord-extensions/dev.kordex.core.commands.converters/-coalescing-to-defaulting-converter/-coalescing-to-defaulting-converter.html","searchKeys":["CoalescingToDefaultingConverter","constructor(coalescingConverter: CoalescingConverter<T>, defaultValue: T, outputError: Boolean = false, newSignatureType: Key? = null, newShowTypeInSignature: Boolean? = null, newErrorType: Key? = null, validator: Validator<T> = null)","dev.kordex.core.commands.converters.CoalescingToDefaultingConverter.CoalescingToDefaultingConverter"]},{"name":"constructor(coalescingConverter: CoalescingConverter<T>, newSignatureType: Key? = null, newShowTypeInSignature: Boolean? = null, newErrorType: Key? = null, outputError: Boolean = false, validator: Validator<T?> = null)","description":"dev.kordex.core.commands.converters.CoalescingToOptionalConverter.CoalescingToOptionalConverter","location":"kord-extensions/dev.kordex.core.commands.converters/-coalescing-to-optional-converter/-coalescing-to-optional-converter.html","searchKeys":["CoalescingToOptionalConverter","constructor(coalescingConverter: CoalescingConverter<T>, newSignatureType: Key? = null, newShowTypeInSignature: Boolean? = null, newErrorType: Key? = null, outputError: Boolean = false, validator: Validator<T?> = null)","dev.kordex.core.commands.converters.CoalescingToOptionalConverter.CoalescingToOptionalConverter"]},{"name":"constructor(command: ChatCommand<*>, event: MessageCreateEvent)","description":"dev.kordex.core.commands.events.ChatCommandInvocationEvent.ChatCommandInvocationEvent","location":"kord-extensions/dev.kordex.core.commands.events/-chat-command-invocation-event/-chat-command-invocation-event.html","searchKeys":["ChatCommandInvocationEvent","constructor(command: ChatCommand<*>, event: MessageCreateEvent)","dev.kordex.core.commands.events.ChatCommandInvocationEvent.ChatCommandInvocationEvent"]},{"name":"constructor(command: ChatCommand<*>, event: MessageCreateEvent)","description":"dev.kordex.core.commands.events.ChatCommandSucceededEvent.ChatCommandSucceededEvent","location":"kord-extensions/dev.kordex.core.commands.events/-chat-command-succeeded-event/-chat-command-succeeded-event.html","searchKeys":["ChatCommandSucceededEvent","constructor(command: ChatCommand<*>, event: MessageCreateEvent)","dev.kordex.core.commands.events.ChatCommandSucceededEvent.ChatCommandSucceededEvent"]},{"name":"constructor(command: ChatCommand<*>, event: MessageCreateEvent, exception: ArgumentParsingException)","description":"dev.kordex.core.commands.events.ChatCommandFailedParsingEvent.ChatCommandFailedParsingEvent","location":"kord-extensions/dev.kordex.core.commands.events/-chat-command-failed-parsing-event/-chat-command-failed-parsing-event.html","searchKeys":["ChatCommandFailedParsingEvent","constructor(command: ChatCommand<*>, event: MessageCreateEvent, exception: ArgumentParsingException)","dev.kordex.core.commands.events.ChatCommandFailedParsingEvent.ChatCommandFailedParsingEvent"]},{"name":"constructor(command: ChatCommand<*>, event: MessageCreateEvent, reason: Key)","description":"dev.kordex.core.commands.events.ChatCommandFailedChecksEvent.ChatCommandFailedChecksEvent","location":"kord-extensions/dev.kordex.core.commands.events/-chat-command-failed-checks-event/-chat-command-failed-checks-event.html","searchKeys":["ChatCommandFailedChecksEvent","constructor(command: ChatCommand<*>, event: MessageCreateEvent, reason: Key)","dev.kordex.core.commands.events.ChatCommandFailedChecksEvent.ChatCommandFailedChecksEvent"]},{"name":"constructor(command: ChatCommand<*>, event: MessageCreateEvent, throwable: Throwable)","description":"dev.kordex.core.commands.events.ChatCommandFailedWithExceptionEvent.ChatCommandFailedWithExceptionEvent","location":"kord-extensions/dev.kordex.core.commands.events/-chat-command-failed-with-exception-event/-chat-command-failed-with-exception-event.html","searchKeys":["ChatCommandFailedWithExceptionEvent","constructor(command: ChatCommand<*>, event: MessageCreateEvent, throwable: Throwable)","dev.kordex.core.commands.events.ChatCommandFailedWithExceptionEvent.ChatCommandFailedWithExceptionEvent"]},{"name":"constructor(command: Command, event: AutoCompleteInteractionCreateEvent, commandName: Key)","description":"dev.kordex.core.commands.application.DummyAutocompleteCommandContext.DummyAutocompleteCommandContext","location":"kord-extensions/dev.kordex.core.commands.application/-dummy-autocomplete-command-context/-dummy-autocomplete-command-context.html","searchKeys":["DummyAutocompleteCommandContext","constructor(command: Command, event: AutoCompleteInteractionCreateEvent, commandName: Key)","dev.kordex.core.commands.application.DummyAutocompleteCommandContext.DummyAutocompleteCommandContext"]},{"name":"constructor(command: Command, eventObj: Event, commandName: Key, cache: MutableStringKeyedMap<Any>)","description":"dev.kordex.core.commands.CommandContext.CommandContext","location":"kord-extensions/dev.kordex.core.commands/-command-context/-command-context.html","searchKeys":["CommandContext","constructor(command: Command, eventObj: Event, commandName: Key, cache: MutableStringKeyedMap<Any>)","dev.kordex.core.commands.CommandContext.CommandContext"]},{"name":"constructor(command: EphemeralMessageCommand<*>, event: MessageCommandInteractionCreateEvent)","description":"dev.kordex.core.commands.events.EphemeralMessageCommandInvocationEvent.EphemeralMessageCommandInvocationEvent","location":"kord-extensions/dev.kordex.core.commands.events/-ephemeral-message-command-invocation-event/-ephemeral-message-command-invocation-event.html","searchKeys":["EphemeralMessageCommandInvocationEvent","constructor(command: EphemeralMessageCommand<*>, event: MessageCommandInteractionCreateEvent)","dev.kordex.core.commands.events.EphemeralMessageCommandInvocationEvent.EphemeralMessageCommandInvocationEvent"]},{"name":"constructor(command: EphemeralMessageCommand<*>, event: MessageCommandInteractionCreateEvent)","description":"dev.kordex.core.commands.events.EphemeralMessageCommandSucceededEvent.EphemeralMessageCommandSucceededEvent","location":"kord-extensions/dev.kordex.core.commands.events/-ephemeral-message-command-succeeded-event/-ephemeral-message-command-succeeded-event.html","searchKeys":["EphemeralMessageCommandSucceededEvent","constructor(command: EphemeralMessageCommand<*>, event: MessageCommandInteractionCreateEvent)","dev.kordex.core.commands.events.EphemeralMessageCommandSucceededEvent.EphemeralMessageCommandSucceededEvent"]},{"name":"constructor(command: EphemeralMessageCommand<*>, event: MessageCommandInteractionCreateEvent, reason: Key)","description":"dev.kordex.core.commands.events.EphemeralMessageCommandFailedChecksEvent.EphemeralMessageCommandFailedChecksEvent","location":"kord-extensions/dev.kordex.core.commands.events/-ephemeral-message-command-failed-checks-event/-ephemeral-message-command-failed-checks-event.html","searchKeys":["EphemeralMessageCommandFailedChecksEvent","constructor(command: EphemeralMessageCommand<*>, event: MessageCommandInteractionCreateEvent, reason: Key)","dev.kordex.core.commands.events.EphemeralMessageCommandFailedChecksEvent.EphemeralMessageCommandFailedChecksEvent"]},{"name":"constructor(command: EphemeralMessageCommand<*>, event: MessageCommandInteractionCreateEvent, throwable: Throwable)","description":"dev.kordex.core.commands.events.EphemeralMessageCommandFailedWithExceptionEvent.EphemeralMessageCommandFailedWithExceptionEvent","location":"kord-extensions/dev.kordex.core.commands.events/-ephemeral-message-command-failed-with-exception-event/-ephemeral-message-command-failed-with-exception-event.html","searchKeys":["EphemeralMessageCommandFailedWithExceptionEvent","constructor(command: EphemeralMessageCommand<*>, event: MessageCommandInteractionCreateEvent, throwable: Throwable)","dev.kordex.core.commands.events.EphemeralMessageCommandFailedWithExceptionEvent.EphemeralMessageCommandFailedWithExceptionEvent"]},{"name":"constructor(command: EphemeralSlashCommand<*, *>, event: ChatInputCommandInteractionCreateEvent)","description":"dev.kordex.core.commands.events.EphemeralSlashCommandInvocationEvent.EphemeralSlashCommandInvocationEvent","location":"kord-extensions/dev.kordex.core.commands.events/-ephemeral-slash-command-invocation-event/-ephemeral-slash-command-invocation-event.html","searchKeys":["EphemeralSlashCommandInvocationEvent","constructor(command: EphemeralSlashCommand<*, *>, event: ChatInputCommandInteractionCreateEvent)","dev.kordex.core.commands.events.EphemeralSlashCommandInvocationEvent.EphemeralSlashCommandInvocationEvent"]},{"name":"constructor(command: EphemeralSlashCommand<*, *>, event: ChatInputCommandInteractionCreateEvent)","description":"dev.kordex.core.commands.events.EphemeralSlashCommandSucceededEvent.EphemeralSlashCommandSucceededEvent","location":"kord-extensions/dev.kordex.core.commands.events/-ephemeral-slash-command-succeeded-event/-ephemeral-slash-command-succeeded-event.html","searchKeys":["EphemeralSlashCommandSucceededEvent","constructor(command: EphemeralSlashCommand<*, *>, event: ChatInputCommandInteractionCreateEvent)","dev.kordex.core.commands.events.EphemeralSlashCommandSucceededEvent.EphemeralSlashCommandSucceededEvent"]},{"name":"constructor(command: EphemeralSlashCommand<*, *>, event: ChatInputCommandInteractionCreateEvent, exception: ArgumentParsingException)","description":"dev.kordex.core.commands.events.EphemeralSlashCommandFailedParsingEvent.EphemeralSlashCommandFailedParsingEvent","location":"kord-extensions/dev.kordex.core.commands.events/-ephemeral-slash-command-failed-parsing-event/-ephemeral-slash-command-failed-parsing-event.html","searchKeys":["EphemeralSlashCommandFailedParsingEvent","constructor(command: EphemeralSlashCommand<*, *>, event: ChatInputCommandInteractionCreateEvent, exception: ArgumentParsingException)","dev.kordex.core.commands.events.EphemeralSlashCommandFailedParsingEvent.EphemeralSlashCommandFailedParsingEvent"]},{"name":"constructor(command: EphemeralSlashCommand<*, *>, event: ChatInputCommandInteractionCreateEvent, reason: Key)","description":"dev.kordex.core.commands.events.EphemeralSlashCommandFailedChecksEvent.EphemeralSlashCommandFailedChecksEvent","location":"kord-extensions/dev.kordex.core.commands.events/-ephemeral-slash-command-failed-checks-event/-ephemeral-slash-command-failed-checks-event.html","searchKeys":["EphemeralSlashCommandFailedChecksEvent","constructor(command: EphemeralSlashCommand<*, *>, event: ChatInputCommandInteractionCreateEvent, reason: Key)","dev.kordex.core.commands.events.EphemeralSlashCommandFailedChecksEvent.EphemeralSlashCommandFailedChecksEvent"]},{"name":"constructor(command: EphemeralSlashCommand<*, *>, event: ChatInputCommandInteractionCreateEvent, throwable: Throwable)","description":"dev.kordex.core.commands.events.EphemeralSlashCommandFailedWithExceptionEvent.EphemeralSlashCommandFailedWithExceptionEvent","location":"kord-extensions/dev.kordex.core.commands.events/-ephemeral-slash-command-failed-with-exception-event/-ephemeral-slash-command-failed-with-exception-event.html","searchKeys":["EphemeralSlashCommandFailedWithExceptionEvent","constructor(command: EphemeralSlashCommand<*, *>, event: ChatInputCommandInteractionCreateEvent, throwable: Throwable)","dev.kordex.core.commands.events.EphemeralSlashCommandFailedWithExceptionEvent.EphemeralSlashCommandFailedWithExceptionEvent"]},{"name":"constructor(command: EphemeralUserCommand<*>, event: UserCommandInteractionCreateEvent)","description":"dev.kordex.core.commands.events.EphemeralUserCommandInvocationEvent.EphemeralUserCommandInvocationEvent","location":"kord-extensions/dev.kordex.core.commands.events/-ephemeral-user-command-invocation-event/-ephemeral-user-command-invocation-event.html","searchKeys":["EphemeralUserCommandInvocationEvent","constructor(command: EphemeralUserCommand<*>, event: UserCommandInteractionCreateEvent)","dev.kordex.core.commands.events.EphemeralUserCommandInvocationEvent.EphemeralUserCommandInvocationEvent"]},{"name":"constructor(command: EphemeralUserCommand<*>, event: UserCommandInteractionCreateEvent)","description":"dev.kordex.core.commands.events.EphemeralUserCommandSucceededEvent.EphemeralUserCommandSucceededEvent","location":"kord-extensions/dev.kordex.core.commands.events/-ephemeral-user-command-succeeded-event/-ephemeral-user-command-succeeded-event.html","searchKeys":["EphemeralUserCommandSucceededEvent","constructor(command: EphemeralUserCommand<*>, event: UserCommandInteractionCreateEvent)","dev.kordex.core.commands.events.EphemeralUserCommandSucceededEvent.EphemeralUserCommandSucceededEvent"]},{"name":"constructor(command: EphemeralUserCommand<*>, event: UserCommandInteractionCreateEvent, reason: Key)","description":"dev.kordex.core.commands.events.EphemeralUserCommandFailedChecksEvent.EphemeralUserCommandFailedChecksEvent","location":"kord-extensions/dev.kordex.core.commands.events/-ephemeral-user-command-failed-checks-event/-ephemeral-user-command-failed-checks-event.html","searchKeys":["EphemeralUserCommandFailedChecksEvent","constructor(command: EphemeralUserCommand<*>, event: UserCommandInteractionCreateEvent, reason: Key)","dev.kordex.core.commands.events.EphemeralUserCommandFailedChecksEvent.EphemeralUserCommandFailedChecksEvent"]},{"name":"constructor(command: EphemeralUserCommand<*>, event: UserCommandInteractionCreateEvent, throwable: Throwable)","description":"dev.kordex.core.commands.events.EphemeralUserCommandFailedWithExceptionEvent.EphemeralUserCommandFailedWithExceptionEvent","location":"kord-extensions/dev.kordex.core.commands.events/-ephemeral-user-command-failed-with-exception-event/-ephemeral-user-command-failed-with-exception-event.html","searchKeys":["EphemeralUserCommandFailedWithExceptionEvent","constructor(command: EphemeralUserCommand<*>, event: UserCommandInteractionCreateEvent, throwable: Throwable)","dev.kordex.core.commands.events.EphemeralUserCommandFailedWithExceptionEvent.EphemeralUserCommandFailedWithExceptionEvent"]},{"name":"constructor(command: PublicMessageCommand<*>, event: MessageCommandInteractionCreateEvent)","description":"dev.kordex.core.commands.events.PublicMessageCommandInvocationEvent.PublicMessageCommandInvocationEvent","location":"kord-extensions/dev.kordex.core.commands.events/-public-message-command-invocation-event/-public-message-command-invocation-event.html","searchKeys":["PublicMessageCommandInvocationEvent","constructor(command: PublicMessageCommand<*>, event: MessageCommandInteractionCreateEvent)","dev.kordex.core.commands.events.PublicMessageCommandInvocationEvent.PublicMessageCommandInvocationEvent"]},{"name":"constructor(command: PublicMessageCommand<*>, event: MessageCommandInteractionCreateEvent)","description":"dev.kordex.core.commands.events.PublicMessageCommandSucceededEvent.PublicMessageCommandSucceededEvent","location":"kord-extensions/dev.kordex.core.commands.events/-public-message-command-succeeded-event/-public-message-command-succeeded-event.html","searchKeys":["PublicMessageCommandSucceededEvent","constructor(command: PublicMessageCommand<*>, event: MessageCommandInteractionCreateEvent)","dev.kordex.core.commands.events.PublicMessageCommandSucceededEvent.PublicMessageCommandSucceededEvent"]},{"name":"constructor(command: PublicMessageCommand<*>, event: MessageCommandInteractionCreateEvent, reason: Key)","description":"dev.kordex.core.commands.events.PublicMessageCommandFailedChecksEvent.PublicMessageCommandFailedChecksEvent","location":"kord-extensions/dev.kordex.core.commands.events/-public-message-command-failed-checks-event/-public-message-command-failed-checks-event.html","searchKeys":["PublicMessageCommandFailedChecksEvent","constructor(command: PublicMessageCommand<*>, event: MessageCommandInteractionCreateEvent, reason: Key)","dev.kordex.core.commands.events.PublicMessageCommandFailedChecksEvent.PublicMessageCommandFailedChecksEvent"]},{"name":"constructor(command: PublicMessageCommand<*>, event: MessageCommandInteractionCreateEvent, throwable: Throwable)","description":"dev.kordex.core.commands.events.PublicMessageCommandFailedWithExceptionEvent.PublicMessageCommandFailedWithExceptionEvent","location":"kord-extensions/dev.kordex.core.commands.events/-public-message-command-failed-with-exception-event/-public-message-command-failed-with-exception-event.html","searchKeys":["PublicMessageCommandFailedWithExceptionEvent","constructor(command: PublicMessageCommand<*>, event: MessageCommandInteractionCreateEvent, throwable: Throwable)","dev.kordex.core.commands.events.PublicMessageCommandFailedWithExceptionEvent.PublicMessageCommandFailedWithExceptionEvent"]},{"name":"constructor(command: PublicSlashCommand<*, *>, event: ChatInputCommandInteractionCreateEvent)","description":"dev.kordex.core.commands.events.PublicSlashCommandInvocationEvent.PublicSlashCommandInvocationEvent","location":"kord-extensions/dev.kordex.core.commands.events/-public-slash-command-invocation-event/-public-slash-command-invocation-event.html","searchKeys":["PublicSlashCommandInvocationEvent","constructor(command: PublicSlashCommand<*, *>, event: ChatInputCommandInteractionCreateEvent)","dev.kordex.core.commands.events.PublicSlashCommandInvocationEvent.PublicSlashCommandInvocationEvent"]},{"name":"constructor(command: PublicSlashCommand<*, *>, event: ChatInputCommandInteractionCreateEvent)","description":"dev.kordex.core.commands.events.PublicSlashCommandSucceededEvent.PublicSlashCommandSucceededEvent","location":"kord-extensions/dev.kordex.core.commands.events/-public-slash-command-succeeded-event/-public-slash-command-succeeded-event.html","searchKeys":["PublicSlashCommandSucceededEvent","constructor(command: PublicSlashCommand<*, *>, event: ChatInputCommandInteractionCreateEvent)","dev.kordex.core.commands.events.PublicSlashCommandSucceededEvent.PublicSlashCommandSucceededEvent"]},{"name":"constructor(command: PublicSlashCommand<*, *>, event: ChatInputCommandInteractionCreateEvent, exception: ArgumentParsingException)","description":"dev.kordex.core.commands.events.PublicSlashCommandFailedParsingEvent.PublicSlashCommandFailedParsingEvent","location":"kord-extensions/dev.kordex.core.commands.events/-public-slash-command-failed-parsing-event/-public-slash-command-failed-parsing-event.html","searchKeys":["PublicSlashCommandFailedParsingEvent","constructor(command: PublicSlashCommand<*, *>, event: ChatInputCommandInteractionCreateEvent, exception: ArgumentParsingException)","dev.kordex.core.commands.events.PublicSlashCommandFailedParsingEvent.PublicSlashCommandFailedParsingEvent"]},{"name":"constructor(command: PublicSlashCommand<*, *>, event: ChatInputCommandInteractionCreateEvent, reason: Key)","description":"dev.kordex.core.commands.events.PublicSlashCommandFailedChecksEvent.PublicSlashCommandFailedChecksEvent","location":"kord-extensions/dev.kordex.core.commands.events/-public-slash-command-failed-checks-event/-public-slash-command-failed-checks-event.html","searchKeys":["PublicSlashCommandFailedChecksEvent","constructor(command: PublicSlashCommand<*, *>, event: ChatInputCommandInteractionCreateEvent, reason: Key)","dev.kordex.core.commands.events.PublicSlashCommandFailedChecksEvent.PublicSlashCommandFailedChecksEvent"]},{"name":"constructor(command: PublicSlashCommand<*, *>, event: ChatInputCommandInteractionCreateEvent, throwable: Throwable)","description":"dev.kordex.core.commands.events.PublicSlashCommandFailedWithExceptionEvent.PublicSlashCommandFailedWithExceptionEvent","location":"kord-extensions/dev.kordex.core.commands.events/-public-slash-command-failed-with-exception-event/-public-slash-command-failed-with-exception-event.html","searchKeys":["PublicSlashCommandFailedWithExceptionEvent","constructor(command: PublicSlashCommand<*, *>, event: ChatInputCommandInteractionCreateEvent, throwable: Throwable)","dev.kordex.core.commands.events.PublicSlashCommandFailedWithExceptionEvent.PublicSlashCommandFailedWithExceptionEvent"]},{"name":"constructor(command: PublicUserCommand<*>, event: UserCommandInteractionCreateEvent)","description":"dev.kordex.core.commands.events.PublicUserCommandInvocationEvent.PublicUserCommandInvocationEvent","location":"kord-extensions/dev.kordex.core.commands.events/-public-user-command-invocation-event/-public-user-command-invocation-event.html","searchKeys":["PublicUserCommandInvocationEvent","constructor(command: PublicUserCommand<*>, event: UserCommandInteractionCreateEvent)","dev.kordex.core.commands.events.PublicUserCommandInvocationEvent.PublicUserCommandInvocationEvent"]},{"name":"constructor(command: PublicUserCommand<*>, event: UserCommandInteractionCreateEvent)","description":"dev.kordex.core.commands.events.PublicUserCommandSucceededEvent.PublicUserCommandSucceededEvent","location":"kord-extensions/dev.kordex.core.commands.events/-public-user-command-succeeded-event/-public-user-command-succeeded-event.html","searchKeys":["PublicUserCommandSucceededEvent","constructor(command: PublicUserCommand<*>, event: UserCommandInteractionCreateEvent)","dev.kordex.core.commands.events.PublicUserCommandSucceededEvent.PublicUserCommandSucceededEvent"]},{"name":"constructor(command: PublicUserCommand<*>, event: UserCommandInteractionCreateEvent, reason: Key)","description":"dev.kordex.core.commands.events.PublicUserCommandFailedChecksEvent.PublicUserCommandFailedChecksEvent","location":"kord-extensions/dev.kordex.core.commands.events/-public-user-command-failed-checks-event/-public-user-command-failed-checks-event.html","searchKeys":["PublicUserCommandFailedChecksEvent","constructor(command: PublicUserCommand<*>, event: UserCommandInteractionCreateEvent, reason: Key)","dev.kordex.core.commands.events.PublicUserCommandFailedChecksEvent.PublicUserCommandFailedChecksEvent"]},{"name":"constructor(command: PublicUserCommand<*>, event: UserCommandInteractionCreateEvent, throwable: Throwable)","description":"dev.kordex.core.commands.events.PublicUserCommandFailedWithExceptionEvent.PublicUserCommandFailedWithExceptionEvent","location":"kord-extensions/dev.kordex.core.commands.events/-public-user-command-failed-with-exception-event/-public-user-command-failed-with-exception-event.html","searchKeys":["PublicUserCommandFailedWithExceptionEvent","constructor(command: PublicUserCommand<*>, event: UserCommandInteractionCreateEvent, throwable: Throwable)","dev.kordex.core.commands.events.PublicUserCommandFailedWithExceptionEvent.PublicUserCommandFailedWithExceptionEvent"]},{"name":"constructor(component: Component, event: ButtonInteractionCreateEvent, cache: MutableStringKeyedMap<Any>)","description":"dev.kordex.core.components.buttons.InteractionButtonContext.InteractionButtonContext","location":"kord-extensions/dev.kordex.core.components.buttons/-interaction-button-context/-interaction-button-context.html","searchKeys":["InteractionButtonContext","constructor(component: Component, event: ButtonInteractionCreateEvent, cache: MutableStringKeyedMap<Any>)","dev.kordex.core.components.buttons.InteractionButtonContext.InteractionButtonContext"]},{"name":"constructor(component: Component, event: E, cache: MutableStringKeyedMap<Any>)","description":"dev.kordex.core.components.ComponentContext.ComponentContext","location":"kord-extensions/dev.kordex.core.components/-component-context/-component-context.html","searchKeys":["ComponentContext","constructor(component: Component, event: E, cache: MutableStringKeyedMap<Any>)","dev.kordex.core.components.ComponentContext.ComponentContext"]},{"name":"constructor(component: EphemeralChannelSelectMenu<M>, event: SelectMenuInteractionCreateEvent, interactionResponse: EphemeralMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>)","description":"dev.kordex.core.components.menus.channel.EphemeralChannelSelectMenuContext.EphemeralChannelSelectMenuContext","location":"kord-extensions/dev.kordex.core.components.menus.channel/-ephemeral-channel-select-menu-context/-ephemeral-channel-select-menu-context.html","searchKeys":["EphemeralChannelSelectMenuContext","constructor(component: EphemeralChannelSelectMenu<M>, event: SelectMenuInteractionCreateEvent, interactionResponse: EphemeralMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>)","dev.kordex.core.components.menus.channel.EphemeralChannelSelectMenuContext.EphemeralChannelSelectMenuContext"]},{"name":"constructor(component: EphemeralInteractionButton<M>, event: ButtonInteractionCreateEvent, interactionResponse: EphemeralMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>)","description":"dev.kordex.core.components.buttons.EphemeralInteractionButtonContext.EphemeralInteractionButtonContext","location":"kord-extensions/dev.kordex.core.components.buttons/-ephemeral-interaction-button-context/-ephemeral-interaction-button-context.html","searchKeys":["EphemeralInteractionButtonContext","constructor(component: EphemeralInteractionButton<M>, event: ButtonInteractionCreateEvent, interactionResponse: EphemeralMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>)","dev.kordex.core.components.buttons.EphemeralInteractionButtonContext.EphemeralInteractionButtonContext"]},{"name":"constructor(component: EphemeralMentionableSelectMenu<M>, event: SelectMenuInteractionCreateEvent, interactionResponse: EphemeralMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>)","description":"dev.kordex.core.components.menus.mentionable.EphemeralMentionableSelectMenuContext.EphemeralMentionableSelectMenuContext","location":"kord-extensions/dev.kordex.core.components.menus.mentionable/-ephemeral-mentionable-select-menu-context/-ephemeral-mentionable-select-menu-context.html","searchKeys":["EphemeralMentionableSelectMenuContext","constructor(component: EphemeralMentionableSelectMenu<M>, event: SelectMenuInteractionCreateEvent, interactionResponse: EphemeralMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>)","dev.kordex.core.components.menus.mentionable.EphemeralMentionableSelectMenuContext.EphemeralMentionableSelectMenuContext"]},{"name":"constructor(component: EphemeralRoleSelectMenu<M>, event: SelectMenuInteractionCreateEvent, interactionResponse: EphemeralMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>)","description":"dev.kordex.core.components.menus.role.EphemeralRoleSelectMenuContext.EphemeralRoleSelectMenuContext","location":"kord-extensions/dev.kordex.core.components.menus.role/-ephemeral-role-select-menu-context/-ephemeral-role-select-menu-context.html","searchKeys":["EphemeralRoleSelectMenuContext","constructor(component: EphemeralRoleSelectMenu<M>, event: SelectMenuInteractionCreateEvent, interactionResponse: EphemeralMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>)","dev.kordex.core.components.menus.role.EphemeralRoleSelectMenuContext.EphemeralRoleSelectMenuContext"]},{"name":"constructor(component: EphemeralStringSelectMenu<M>, event: SelectMenuInteractionCreateEvent, interactionResponse: EphemeralMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>)","description":"dev.kordex.core.components.menus.string.EphemeralStringSelectMenuContext.EphemeralStringSelectMenuContext","location":"kord-extensions/dev.kordex.core.components.menus.string/-ephemeral-string-select-menu-context/-ephemeral-string-select-menu-context.html","searchKeys":["EphemeralStringSelectMenuContext","constructor(component: EphemeralStringSelectMenu<M>, event: SelectMenuInteractionCreateEvent, interactionResponse: EphemeralMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>)","dev.kordex.core.components.menus.string.EphemeralStringSelectMenuContext.EphemeralStringSelectMenuContext"]},{"name":"constructor(component: EphemeralUserSelectMenu<M>, event: SelectMenuInteractionCreateEvent, interactionResponse: EphemeralMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>)","description":"dev.kordex.core.components.menus.user.EphemeralUserSelectMenuContext.EphemeralUserSelectMenuContext","location":"kord-extensions/dev.kordex.core.components.menus.user/-ephemeral-user-select-menu-context/-ephemeral-user-select-menu-context.html","searchKeys":["EphemeralUserSelectMenuContext","constructor(component: EphemeralUserSelectMenu<M>, event: SelectMenuInteractionCreateEvent, interactionResponse: EphemeralMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>)","dev.kordex.core.components.menus.user.EphemeralUserSelectMenuContext.EphemeralUserSelectMenuContext"]},{"name":"constructor(component: PublicChannelSelectMenu<M>, event: SelectMenuInteractionCreateEvent, interactionResponse: PublicMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>)","description":"dev.kordex.core.components.menus.channel.PublicChannelSelectMenuContext.PublicChannelSelectMenuContext","location":"kord-extensions/dev.kordex.core.components.menus.channel/-public-channel-select-menu-context/-public-channel-select-menu-context.html","searchKeys":["PublicChannelSelectMenuContext","constructor(component: PublicChannelSelectMenu<M>, event: SelectMenuInteractionCreateEvent, interactionResponse: PublicMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>)","dev.kordex.core.components.menus.channel.PublicChannelSelectMenuContext.PublicChannelSelectMenuContext"]},{"name":"constructor(component: PublicInteractionButton<M>, event: ButtonInteractionCreateEvent, interactionResponse: PublicMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>)","description":"dev.kordex.core.components.buttons.PublicInteractionButtonContext.PublicInteractionButtonContext","location":"kord-extensions/dev.kordex.core.components.buttons/-public-interaction-button-context/-public-interaction-button-context.html","searchKeys":["PublicInteractionButtonContext","constructor(component: PublicInteractionButton<M>, event: ButtonInteractionCreateEvent, interactionResponse: PublicMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>)","dev.kordex.core.components.buttons.PublicInteractionButtonContext.PublicInteractionButtonContext"]},{"name":"constructor(component: PublicMentionableSelectMenu<M>, event: SelectMenuInteractionCreateEvent, interactionResponse: PublicMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>)","description":"dev.kordex.core.components.menus.mentionable.PublicMentionableSelectMenuContext.PublicMentionableSelectMenuContext","location":"kord-extensions/dev.kordex.core.components.menus.mentionable/-public-mentionable-select-menu-context/-public-mentionable-select-menu-context.html","searchKeys":["PublicMentionableSelectMenuContext","constructor(component: PublicMentionableSelectMenu<M>, event: SelectMenuInteractionCreateEvent, interactionResponse: PublicMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>)","dev.kordex.core.components.menus.mentionable.PublicMentionableSelectMenuContext.PublicMentionableSelectMenuContext"]},{"name":"constructor(component: PublicRoleSelectMenu<M>, event: SelectMenuInteractionCreateEvent, interactionResponse: PublicMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>)","description":"dev.kordex.core.components.menus.role.PublicRoleSelectMenuContext.PublicRoleSelectMenuContext","location":"kord-extensions/dev.kordex.core.components.menus.role/-public-role-select-menu-context/-public-role-select-menu-context.html","searchKeys":["PublicRoleSelectMenuContext","constructor(component: PublicRoleSelectMenu<M>, event: SelectMenuInteractionCreateEvent, interactionResponse: PublicMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>)","dev.kordex.core.components.menus.role.PublicRoleSelectMenuContext.PublicRoleSelectMenuContext"]},{"name":"constructor(component: PublicStringSelectMenu<M>, event: SelectMenuInteractionCreateEvent, interactionResponse: PublicMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>)","description":"dev.kordex.core.components.menus.string.PublicStringSelectMenuContext.PublicStringSelectMenuContext","location":"kord-extensions/dev.kordex.core.components.menus.string/-public-string-select-menu-context/-public-string-select-menu-context.html","searchKeys":["PublicStringSelectMenuContext","constructor(component: PublicStringSelectMenu<M>, event: SelectMenuInteractionCreateEvent, interactionResponse: PublicMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>)","dev.kordex.core.components.menus.string.PublicStringSelectMenuContext.PublicStringSelectMenuContext"]},{"name":"constructor(component: PublicUserSelectMenu<M>, event: SelectMenuInteractionCreateEvent, interactionResponse: PublicMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>)","description":"dev.kordex.core.components.menus.user.PublicUserSelectMenuContext.PublicUserSelectMenuContext","location":"kord-extensions/dev.kordex.core.components.menus.user/-public-user-select-menu-context/-public-user-select-menu-context.html","searchKeys":["PublicUserSelectMenuContext","constructor(component: PublicUserSelectMenu<M>, event: SelectMenuInteractionCreateEvent, interactionResponse: PublicMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>)","dev.kordex.core.components.menus.user.PublicUserSelectMenuContext.PublicUserSelectMenuContext"]},{"name":"constructor(component: SelectMenu<*, *>, event: SelectMenuInteractionCreateEvent, cache: MutableStringKeyedMap<Any>)","description":"dev.kordex.core.components.menus.SelectMenuContext.SelectMenuContext","location":"kord-extensions/dev.kordex.core.components.menus/-select-menu-context/-select-menu-context.html","searchKeys":["SelectMenuContext","constructor(component: SelectMenu<*, *>, event: SelectMenuInteractionCreateEvent, cache: MutableStringKeyedMap<Any>)","dev.kordex.core.components.menus.SelectMenuContext.SelectMenuContext"]},{"name":"constructor(component: SelectMenu<*, *>, event: SelectMenuInteractionCreateEvent, cache: MutableStringKeyedMap<Any>)","description":"dev.kordex.core.components.menus.channel.ChannelSelectMenuContext.ChannelSelectMenuContext","location":"kord-extensions/dev.kordex.core.components.menus.channel/-channel-select-menu-context/-channel-select-menu-context.html","searchKeys":["ChannelSelectMenuContext","constructor(component: SelectMenu<*, *>, event: SelectMenuInteractionCreateEvent, cache: MutableStringKeyedMap<Any>)","dev.kordex.core.components.menus.channel.ChannelSelectMenuContext.ChannelSelectMenuContext"]},{"name":"constructor(component: SelectMenu<*, *>, event: SelectMenuInteractionCreateEvent, cache: MutableStringKeyedMap<Any>)","description":"dev.kordex.core.components.menus.mentionable.DummyRoleSelectMenuContext.DummyRoleSelectMenuContext","location":"kord-extensions/dev.kordex.core.components.menus.mentionable/-dummy-role-select-menu-context/-dummy-role-select-menu-context.html","searchKeys":["DummyRoleSelectMenuContext","constructor(component: SelectMenu<*, *>, event: SelectMenuInteractionCreateEvent, cache: MutableStringKeyedMap<Any>)","dev.kordex.core.components.menus.mentionable.DummyRoleSelectMenuContext.DummyRoleSelectMenuContext"]},{"name":"constructor(component: SelectMenu<*, *>, event: SelectMenuInteractionCreateEvent, cache: MutableStringKeyedMap<Any>)","description":"dev.kordex.core.components.menus.mentionable.DummyUserSelectMenuContext.DummyUserSelectMenuContext","location":"kord-extensions/dev.kordex.core.components.menus.mentionable/-dummy-user-select-menu-context/-dummy-user-select-menu-context.html","searchKeys":["DummyUserSelectMenuContext","constructor(component: SelectMenu<*, *>, event: SelectMenuInteractionCreateEvent, cache: MutableStringKeyedMap<Any>)","dev.kordex.core.components.menus.mentionable.DummyUserSelectMenuContext.DummyUserSelectMenuContext"]},{"name":"constructor(component: SelectMenu<*, *>, event: SelectMenuInteractionCreateEvent, cache: MutableStringKeyedMap<Any>)","description":"dev.kordex.core.components.menus.mentionable.MentionableSelectMenuContext.MentionableSelectMenuContext","location":"kord-extensions/dev.kordex.core.components.menus.mentionable/-mentionable-select-menu-context/-mentionable-select-menu-context.html","searchKeys":["MentionableSelectMenuContext","constructor(component: SelectMenu<*, *>, event: SelectMenuInteractionCreateEvent, cache: MutableStringKeyedMap<Any>)","dev.kordex.core.components.menus.mentionable.MentionableSelectMenuContext.MentionableSelectMenuContext"]},{"name":"constructor(component: SelectMenu<*, *>, event: SelectMenuInteractionCreateEvent, cache: MutableStringKeyedMap<Any>)","description":"dev.kordex.core.components.menus.role.RoleSelectMenuContext.RoleSelectMenuContext","location":"kord-extensions/dev.kordex.core.components.menus.role/-role-select-menu-context/-role-select-menu-context.html","searchKeys":["RoleSelectMenuContext","constructor(component: SelectMenu<*, *>, event: SelectMenuInteractionCreateEvent, cache: MutableStringKeyedMap<Any>)","dev.kordex.core.components.menus.role.RoleSelectMenuContext.RoleSelectMenuContext"]},{"name":"constructor(component: SelectMenu<*, *>, event: SelectMenuInteractionCreateEvent, cache: MutableStringKeyedMap<Any>)","description":"dev.kordex.core.components.menus.string.StringSelectMenuContext.StringSelectMenuContext","location":"kord-extensions/dev.kordex.core.components.menus.string/-string-select-menu-context/-string-select-menu-context.html","searchKeys":["StringSelectMenuContext","constructor(component: SelectMenu<*, *>, event: SelectMenuInteractionCreateEvent, cache: MutableStringKeyedMap<Any>)","dev.kordex.core.components.menus.string.StringSelectMenuContext.StringSelectMenuContext"]},{"name":"constructor(component: SelectMenu<*, *>, event: SelectMenuInteractionCreateEvent, cache: MutableStringKeyedMap<Any>)","description":"dev.kordex.core.components.menus.user.UserSelectMenuContext.UserSelectMenuContext","location":"kord-extensions/dev.kordex.core.components.menus.user/-user-select-menu-context/-user-select-menu-context.html","searchKeys":["UserSelectMenuContext","constructor(component: SelectMenu<*, *>, event: SelectMenuInteractionCreateEvent, cache: MutableStringKeyedMap<Any>)","dev.kordex.core.components.menus.user.UserSelectMenuContext.UserSelectMenuContext"]},{"name":"constructor(data: GuildJoinRequestDelete, kord: Kord = getKoin().get(), supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kordex.core.events.extra.GuildJoinRequestDeleteEvent.GuildJoinRequestDeleteEvent","location":"kord-extensions/dev.kordex.core.events.extra/-guild-join-request-delete-event/-guild-join-request-delete-event.html","searchKeys":["GuildJoinRequestDeleteEvent","constructor(data: GuildJoinRequestDelete, kord: Kord = getKoin().get(), supplier: EntitySupplier = kord.defaultSupplier)","dev.kordex.core.events.extra.GuildJoinRequestDeleteEvent.GuildJoinRequestDeleteEvent"]},{"name":"constructor(data: GuildJoinRequestUpdate, kord: Kord = getKoin().get(), supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kordex.core.events.extra.GuildJoinRequestUpdateEvent.GuildJoinRequestUpdateEvent","location":"kord-extensions/dev.kordex.core.events.extra/-guild-join-request-update-event/-guild-join-request-update-event.html","searchKeys":["GuildJoinRequestUpdateEvent","constructor(data: GuildJoinRequestUpdate, kord: Kord = getKoin().get(), supplier: EntitySupplier = kord.defaultSupplier)","dev.kordex.core.events.extra.GuildJoinRequestUpdateEvent.GuildJoinRequestUpdateEvent"]},{"name":"constructor(dataSerializer: KSerializer<T>)","description":"dev.kordex.core.utils.collections.serializers.FixedLengthQueueSerializer.FixedLengthQueueSerializer","location":"kord-extensions/dev.kordex.core.utils.collections.serializers/-fixed-length-queue-serializer/-fixed-length-queue-serializer.html","searchKeys":["FixedLengthQueueSerializer","constructor(dataSerializer: KSerializer<T>)","dev.kordex.core.utils.collections.serializers.FixedLengthQueueSerializer.FixedLengthQueueSerializer"]},{"name":"constructor(default: T, translations: MutableMap<Locale, String>)","description":"dev.kordex.core.commands.application.Localized.Localized","location":"kord-extensions/dev.kordex.core.commands.application/-localized/-localized.html","searchKeys":["Localized","constructor(default: T, translations: MutableMap<Locale, String>)","dev.kordex.core.commands.application.Localized.Localized"]},{"name":"constructor(defaultGroup: Key = EMPTY_KEY)","description":"dev.kordex.core.pagination.pages.Pages.Pages","location":"kord-extensions/dev.kordex.core.pagination.pages/-pages/-pages.html","searchKeys":["Pages","constructor(defaultGroup: Key = EMPTY_KEY)","dev.kordex.core.pagination.pages.Pages.Pages"]},{"name":"constructor(defaultLocaleBuilder: () -> Locale)","description":"dev.kordex.core.i18n.ResourceBundleTranslations.ResourceBundleTranslations","location":"kord-extensions/dev.kordex.core.i18n/-resource-bundle-translations/-resource-bundle-translations.html","searchKeys":["ResourceBundleTranslations","constructor(defaultLocaleBuilder: () -> Locale)","dev.kordex.core.i18n.ResourceBundleTranslations.ResourceBundleTranslations"]},{"name":"constructor(defaultLocaleBuilder: () -> Locale)","description":"dev.kordex.core.i18n.TranslationsProvider.TranslationsProvider","location":"kord-extensions/dev.kordex.core.i18n/-translations-provider/-translations-provider.html","searchKeys":["TranslationsProvider","constructor(defaultLocaleBuilder: () -> Locale)","dev.kordex.core.i18n.TranslationsProvider.TranslationsProvider"]},{"name":"constructor(defaultValue: T, outputError: Boolean = false, validator: Validator<T> = null)","description":"dev.kordex.core.commands.converters.DefaultingCoalescingConverter.DefaultingCoalescingConverter","location":"kord-extensions/dev.kordex.core.commands.converters/-defaulting-coalescing-converter/-defaulting-coalescing-converter.html","searchKeys":["DefaultingCoalescingConverter","constructor(defaultValue: T, outputError: Boolean = false, validator: Validator<T> = null)","dev.kordex.core.commands.converters.DefaultingCoalescingConverter.DefaultingCoalescingConverter"]},{"name":"constructor(defaultValue: T, outputError: Boolean = false, validator: Validator<T> = null)","description":"dev.kordex.core.commands.converters.DefaultingConverter.DefaultingConverter","location":"kord-extensions/dev.kordex.core.commands.converters/-defaulting-converter/-defaulting-converter.html","searchKeys":["DefaultingConverter","constructor(defaultValue: T, outputError: Boolean = false, validator: Validator<T> = null)","dev.kordex.core.commands.converters.DefaultingConverter.DefaultingConverter"]},{"name":"constructor(displayName: Key, description: Key, body: suspend IntegerOptionBuilder.() -> Unit)","description":"dev.kordex.core.commands.ChoiceOptionWrapper.Integer.Integer","location":"kord-extensions/dev.kordex.core.commands/-choice-option-wrapper/-integer/-integer.html","searchKeys":["Integer","constructor(displayName: Key, description: Key, body: suspend IntegerOptionBuilder.() -> Unit)","dev.kordex.core.commands.ChoiceOptionWrapper.Integer.Integer"]},{"name":"constructor(displayName: Key, description: Key, body: suspend NumberOptionBuilder.() -> Unit)","description":"dev.kordex.core.commands.ChoiceOptionWrapper.Number.Number","location":"kord-extensions/dev.kordex.core.commands/-choice-option-wrapper/-number/-number.html","searchKeys":["Number","constructor(displayName: Key, description: Key, body: suspend NumberOptionBuilder.() -> Unit)","dev.kordex.core.commands.ChoiceOptionWrapper.Number.Number"]},{"name":"constructor(displayName: Key, description: Key, body: suspend StringChoiceBuilder.() -> Unit)","description":"dev.kordex.core.commands.ChoiceOptionWrapper.String.String","location":"kord-extensions/dev.kordex.core.commands/-choice-option-wrapper/-string/-string.html","searchKeys":["String","constructor(displayName: Key, description: Key, body: suspend StringChoiceBuilder.() -> Unit)","dev.kordex.core.commands.ChoiceOptionWrapper.String.String"]},{"name":"constructor(displayName: Key, description: Key, body: suspend T.() -> Unit, type: KClass<T>)","description":"dev.kordex.core.commands.OptionWrapper.OptionWrapper","location":"kord-extensions/dev.kordex.core.commands/-option-wrapper/-option-wrapper.html","searchKeys":["OptionWrapper","constructor(displayName: Key, description: Key, body: suspend T.() -> Unit, type: KClass<T>)","dev.kordex.core.commands.OptionWrapper.OptionWrapper"]},{"name":"constructor(displayName: Key, description: Key, converter: Converter<T, *, *, *>)","description":"dev.kordex.core.commands.Argument.Argument","location":"kord-extensions/dev.kordex.core.commands/-argument/-argument.html","searchKeys":["Argument","constructor(displayName: Key, description: Key, converter: Converter<T, *, *, *>)","dev.kordex.core.commands.Argument.Argument"]},{"name":"constructor(duration: Duration, callback: suspend () -> Unit, pollingSeconds: Long = 1, coroutineScope: CoroutineScope = dev.kordex.core.utils.getKoin().get<Kord>(), parent: Scheduler? = null, name: String = \"Unnamed\", repeat: Boolean = false)","description":"dev.kordex.core.utils.scheduling.Task.Task","location":"kord-extensions/dev.kordex.core.utils.scheduling/-task/-task.html","searchKeys":["Task","constructor(duration: Duration, callback: suspend () -> Unit, pollingSeconds: Long = 1, coroutineScope: CoroutineScope = dev.kordex.core.utils.getKoin().get<Kord>(), parent: Scheduler? = null, name: String = \"Unnamed\", repeat: Boolean = false)","dev.kordex.core.utils.scheduling.Task.Task"]},{"name":"constructor(error: ArgumentParsingException)","description":"dev.kordex.core.types.FailureReason.ArgumentParsingFailure.ArgumentParsingFailure","location":"kord-extensions/dev.kordex.core.types/-failure-reason/-argument-parsing-failure/-argument-parsing-failure.html","searchKeys":["ArgumentParsingFailure","constructor(error: ArgumentParsingException)","dev.kordex.core.types.FailureReason.ArgumentParsingFailure.ArgumentParsingFailure"]},{"name":"constructor(error: DiscordRelayedException)","description":"dev.kordex.core.types.FailureReason.OwnPermissionsCheckFailure.OwnPermissionsCheckFailure","location":"kord-extensions/dev.kordex.core.types/-failure-reason/-own-permissions-check-failure/-own-permissions-check-failure.html","searchKeys":["OwnPermissionsCheckFailure","constructor(error: DiscordRelayedException)","dev.kordex.core.types.FailureReason.OwnPermissionsCheckFailure.OwnPermissionsCheckFailure"]},{"name":"constructor(error: DiscordRelayedException)","description":"dev.kordex.core.types.FailureReason.ProvidedCheckFailure.ProvidedCheckFailure","location":"kord-extensions/dev.kordex.core.types/-failure-reason/-provided-check-failure/-provided-check-failure.html","searchKeys":["ProvidedCheckFailure","constructor(error: DiscordRelayedException)","dev.kordex.core.types.FailureReason.ProvidedCheckFailure.ProvidedCheckFailure"]},{"name":"constructor(error: DiscordRelayedException)","description":"dev.kordex.core.types.FailureReason.RelayedFailure.RelayedFailure","location":"kord-extensions/dev.kordex.core.types/-failure-reason/-relayed-failure/-relayed-failure.html","searchKeys":["RelayedFailure","constructor(error: DiscordRelayedException)","dev.kordex.core.types.FailureReason.RelayedFailure.RelayedFailure"]},{"name":"constructor(error: Key)","description":"dev.kordex.core.parsers.DurationParserException.DurationParserException","location":"kord-extensions/dev.kordex.core.parsers/-duration-parser-exception/-duration-parser-exception.html","searchKeys":["DurationParserException","constructor(error: Key)","dev.kordex.core.parsers.DurationParserException.DurationParserException"]},{"name":"constructor(error: Throwable)","description":"dev.kordex.core.types.FailureReason.ExecutionError.ExecutionError","location":"kord-extensions/dev.kordex.core.types/-failure-reason/-execution-error/-execution-error.html","searchKeys":["ExecutionError","constructor(error: Throwable)","dev.kordex.core.types.FailureReason.ExecutionError.ExecutionError"]},{"name":"constructor(event: ChatInputCommandInteractionCreateEvent, command: SlashCommand<C, A, M>, cache: MutableStringKeyedMap<Any>)","description":"dev.kordex.core.commands.application.slash.SlashCommandContext.SlashCommandContext","location":"kord-extensions/dev.kordex.core.commands.application.slash/-slash-command-context/-slash-command-context.html","searchKeys":["SlashCommandContext","constructor(event: ChatInputCommandInteractionCreateEvent, command: SlashCommand<C, A, M>, cache: MutableStringKeyedMap<Any>)","dev.kordex.core.commands.application.slash.SlashCommandContext.SlashCommandContext"]},{"name":"constructor(event: ChatInputCommandInteractionCreateEvent, command: SlashCommand<EphemeralSlashCommandContext<A, M>, A, M>, interactionResponse: EphemeralMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>)","description":"dev.kordex.core.commands.application.slash.EphemeralSlashCommandContext.EphemeralSlashCommandContext","location":"kord-extensions/dev.kordex.core.commands.application.slash/-ephemeral-slash-command-context/-ephemeral-slash-command-context.html","searchKeys":["EphemeralSlashCommandContext","constructor(event: ChatInputCommandInteractionCreateEvent, command: SlashCommand<EphemeralSlashCommandContext<A, M>, A, M>, interactionResponse: EphemeralMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>)","dev.kordex.core.commands.application.slash.EphemeralSlashCommandContext.EphemeralSlashCommandContext"]},{"name":"constructor(event: ChatInputCommandInteractionCreateEvent, command: SlashCommand<PublicSlashCommandContext<A, M>, A, M>, interactionResponse: PublicMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>)","description":"dev.kordex.core.commands.application.slash.PublicSlashCommandContext.PublicSlashCommandContext","location":"kord-extensions/dev.kordex.core.commands.application.slash/-public-slash-command-context/-public-slash-command-context.html","searchKeys":["PublicSlashCommandContext","constructor(event: ChatInputCommandInteractionCreateEvent, command: SlashCommand<PublicSlashCommandContext<A, M>, A, M>, interactionResponse: PublicMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>)","dev.kordex.core.commands.application.slash.PublicSlashCommandContext.PublicSlashCommandContext"]},{"name":"constructor(event: MessageCommandInteractionCreateEvent, command: MessageCommand<C, M>, cache: MutableStringKeyedMap<Any>)","description":"dev.kordex.core.commands.application.message.MessageCommandContext.MessageCommandContext","location":"kord-extensions/dev.kordex.core.commands.application.message/-message-command-context/-message-command-context.html","searchKeys":["MessageCommandContext","constructor(event: MessageCommandInteractionCreateEvent, command: MessageCommand<C, M>, cache: MutableStringKeyedMap<Any>)","dev.kordex.core.commands.application.message.MessageCommandContext.MessageCommandContext"]},{"name":"constructor(event: MessageCommandInteractionCreateEvent, command: MessageCommand<EphemeralMessageCommandContext<M>, M>, interactionResponse: EphemeralMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>)","description":"dev.kordex.core.commands.application.message.EphemeralMessageCommandContext.EphemeralMessageCommandContext","location":"kord-extensions/dev.kordex.core.commands.application.message/-ephemeral-message-command-context/-ephemeral-message-command-context.html","searchKeys":["EphemeralMessageCommandContext","constructor(event: MessageCommandInteractionCreateEvent, command: MessageCommand<EphemeralMessageCommandContext<M>, M>, interactionResponse: EphemeralMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>)","dev.kordex.core.commands.application.message.EphemeralMessageCommandContext.EphemeralMessageCommandContext"]},{"name":"constructor(event: MessageCommandInteractionCreateEvent, command: MessageCommand<PublicMessageCommandContext<M>, M>, interactionResponse: PublicMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>)","description":"dev.kordex.core.commands.application.message.PublicMessageCommandContext.PublicMessageCommandContext","location":"kord-extensions/dev.kordex.core.commands.application.message/-public-message-command-context/-public-message-command-context.html","searchKeys":["PublicMessageCommandContext","constructor(event: MessageCommandInteractionCreateEvent, command: MessageCommand<PublicMessageCommandContext<M>, M>, interactionResponse: PublicMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>)","dev.kordex.core.commands.application.message.PublicMessageCommandContext.PublicMessageCommandContext"]},{"name":"constructor(event: T, locale: Locale)","description":"dev.kordex.core.checks.types.CheckContext.CheckContext","location":"kord-extensions/dev.kordex.core.checks.types/-check-context/-check-context.html","searchKeys":["CheckContext","constructor(event: T, locale: Locale)","dev.kordex.core.checks.types.CheckContext.CheckContext"]},{"name":"constructor(event: T, locale: Locale, cache: MutableStringKeyedMap<Any>)","description":"dev.kordex.core.checks.types.CheckContextWithCache.CheckContextWithCache","location":"kord-extensions/dev.kordex.core.checks.types/-check-context-with-cache/-check-context-with-cache.html","searchKeys":["CheckContextWithCache","constructor(event: T, locale: Locale, cache: MutableStringKeyedMap<Any>)","dev.kordex.core.checks.types.CheckContextWithCache.CheckContextWithCache"]},{"name":"constructor(event: UserCommandInteractionCreateEvent, command: UserCommand<C, M>, cache: MutableStringKeyedMap<Any>)","description":"dev.kordex.core.commands.application.user.UserCommandContext.UserCommandContext","location":"kord-extensions/dev.kordex.core.commands.application.user/-user-command-context/-user-command-context.html","searchKeys":["UserCommandContext","constructor(event: UserCommandInteractionCreateEvent, command: UserCommand<C, M>, cache: MutableStringKeyedMap<Any>)","dev.kordex.core.commands.application.user.UserCommandContext.UserCommandContext"]},{"name":"constructor(event: UserCommandInteractionCreateEvent, command: UserCommand<EphemeralUserCommandContext<M>, M>, interactionResponse: EphemeralMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>)","description":"dev.kordex.core.commands.application.user.EphemeralUserCommandContext.EphemeralUserCommandContext","location":"kord-extensions/dev.kordex.core.commands.application.user/-ephemeral-user-command-context/-ephemeral-user-command-context.html","searchKeys":["EphemeralUserCommandContext","constructor(event: UserCommandInteractionCreateEvent, command: UserCommand<EphemeralUserCommandContext<M>, M>, interactionResponse: EphemeralMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>)","dev.kordex.core.commands.application.user.EphemeralUserCommandContext.EphemeralUserCommandContext"]},{"name":"constructor(event: UserCommandInteractionCreateEvent, command: UserCommand<PublicUserCommandContext<M>, M>, interactionResponse: PublicMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>)","description":"dev.kordex.core.commands.application.user.PublicUserCommandContext.PublicUserCommandContext","location":"kord-extensions/dev.kordex.core.commands.application.user/-public-user-command-context/-public-user-command-context.html","searchKeys":["PublicUserCommandContext","constructor(event: UserCommandInteractionCreateEvent, command: UserCommand<PublicUserCommandContext<M>, M>, interactionResponse: PublicMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>)","dev.kordex.core.commands.application.user.PublicUserCommandContext.PublicUserCommandContext"]},{"name":"constructor(eventHandler: EventHandler<T>, event: T, cache: MutableStringKeyedMap<Any>)","description":"dev.kordex.core.events.EventContext.EventContext","location":"kord-extensions/dev.kordex.core.events/-event-context/-event-context.html","searchKeys":["EventContext","constructor(eventHandler: EventHandler<T>, event: T, cache: MutableStringKeyedMap<Any>)","dev.kordex.core.events.EventContext.EventContext"]},{"name":"constructor(extension: Extension)","description":"dev.kordex.core.commands.Command.Command","location":"kord-extensions/dev.kordex.core.commands/-command/-command.html","searchKeys":["Command","constructor(extension: Extension)","dev.kordex.core.commands.Command.Command"]},{"name":"constructor(extension: Extension)","description":"dev.kordex.core.commands.application.ApplicationCommand.ApplicationCommand","location":"kord-extensions/dev.kordex.core.commands.application/-application-command/-application-command.html","searchKeys":["ApplicationCommand","constructor(extension: Extension)","dev.kordex.core.commands.application.ApplicationCommand.ApplicationCommand"]},{"name":"constructor(extension: Extension)","description":"dev.kordex.core.events.EventHandler.EventHandler","location":"kord-extensions/dev.kordex.core.events/-event-handler/-event-handler.html","searchKeys":["EventHandler","constructor(extension: Extension)","dev.kordex.core.events.EventHandler.EventHandler"]},{"name":"constructor(extension: Extension, arguments: () -> A? = null, modal: () -> M? = null, parentCommand: SlashCommand<*, *, *>? = null, parentGroup: SlashGroup? = null)","description":"dev.kordex.core.commands.application.slash.EphemeralSlashCommand.EphemeralSlashCommand","location":"kord-extensions/dev.kordex.core.commands.application.slash/-ephemeral-slash-command/-ephemeral-slash-command.html","searchKeys":["EphemeralSlashCommand","constructor(extension: Extension, arguments: () -> A? = null, modal: () -> M? = null, parentCommand: SlashCommand<*, *, *>? = null, parentGroup: SlashGroup? = null)","dev.kordex.core.commands.application.slash.EphemeralSlashCommand.EphemeralSlashCommand"]},{"name":"constructor(extension: Extension, arguments: () -> A? = null, modal: () -> M? = null, parentCommand: SlashCommand<*, *, *>? = null, parentGroup: SlashGroup? = null)","description":"dev.kordex.core.commands.application.slash.PublicSlashCommand.PublicSlashCommand","location":"kord-extensions/dev.kordex.core.commands.application.slash/-public-slash-command/-public-slash-command.html","searchKeys":["PublicSlashCommand","constructor(extension: Extension, arguments: () -> A? = null, modal: () -> M? = null, parentCommand: SlashCommand<*, *, *>? = null, parentGroup: SlashGroup? = null)","dev.kordex.core.commands.application.slash.PublicSlashCommand.PublicSlashCommand"]},{"name":"constructor(extension: Extension, arguments: () -> A? = null, modal: () -> M? = null, parentCommand: SlashCommand<*, *, *>? = null, parentGroup: SlashGroup? = null)","description":"dev.kordex.core.commands.application.slash.SlashCommand.SlashCommand","location":"kord-extensions/dev.kordex.core.commands.application.slash/-slash-command/-slash-command.html","searchKeys":["SlashCommand","constructor(extension: Extension, arguments: () -> A? = null, modal: () -> M? = null, parentCommand: SlashCommand<*, *, *>? = null, parentGroup: SlashGroup? = null)","dev.kordex.core.commands.application.slash.SlashCommand.SlashCommand"]},{"name":"constructor(extension: Extension, arguments: () -> T? = null)","description":"dev.kordex.core.commands.chat.ChatCommand.ChatCommand","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-command/-chat-command.html","searchKeys":["ChatCommand","constructor(extension: Extension, arguments: () -> T? = null)","dev.kordex.core.commands.chat.ChatCommand.ChatCommand"]},{"name":"constructor(extension: Extension, arguments: () -> T? = null, parent: ChatGroupCommand<out Arguments>)","description":"dev.kordex.core.commands.chat.ChatSubCommand.ChatSubCommand","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-sub-command/-chat-sub-command.html","searchKeys":["ChatSubCommand","constructor(extension: Extension, arguments: () -> T? = null, parent: ChatGroupCommand<out Arguments>)","dev.kordex.core.commands.chat.ChatSubCommand.ChatSubCommand"]},{"name":"constructor(extension: Extension, arguments: () -> T? = null, parent: ChatGroupCommand<out Arguments>? = null)","description":"dev.kordex.core.commands.chat.ChatGroupCommand.ChatGroupCommand","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-group-command/-chat-group-command.html","searchKeys":["ChatGroupCommand","constructor(extension: Extension, arguments: () -> T? = null, parent: ChatGroupCommand<out Arguments>? = null)","dev.kordex.core.commands.chat.ChatGroupCommand.ChatGroupCommand"]},{"name":"constructor(extension: Extension, modal: () -> M? = null)","description":"dev.kordex.core.commands.application.message.EphemeralMessageCommand.EphemeralMessageCommand","location":"kord-extensions/dev.kordex.core.commands.application.message/-ephemeral-message-command/-ephemeral-message-command.html","searchKeys":["EphemeralMessageCommand","constructor(extension: Extension, modal: () -> M? = null)","dev.kordex.core.commands.application.message.EphemeralMessageCommand.EphemeralMessageCommand"]},{"name":"constructor(extension: Extension, modal: () -> M? = null)","description":"dev.kordex.core.commands.application.message.MessageCommand.MessageCommand","location":"kord-extensions/dev.kordex.core.commands.application.message/-message-command/-message-command.html","searchKeys":["MessageCommand","constructor(extension: Extension, modal: () -> M? = null)","dev.kordex.core.commands.application.message.MessageCommand.MessageCommand"]},{"name":"constructor(extension: Extension, modal: () -> M? = null)","description":"dev.kordex.core.commands.application.message.PublicMessageCommand.PublicMessageCommand","location":"kord-extensions/dev.kordex.core.commands.application.message/-public-message-command/-public-message-command.html","searchKeys":["PublicMessageCommand","constructor(extension: Extension, modal: () -> M? = null)","dev.kordex.core.commands.application.message.PublicMessageCommand.PublicMessageCommand"]},{"name":"constructor(extension: Extension, modal: () -> M? = null)","description":"dev.kordex.core.commands.application.user.EphemeralUserCommand.EphemeralUserCommand","location":"kord-extensions/dev.kordex.core.commands.application.user/-ephemeral-user-command/-ephemeral-user-command.html","searchKeys":["EphemeralUserCommand","constructor(extension: Extension, modal: () -> M? = null)","dev.kordex.core.commands.application.user.EphemeralUserCommand.EphemeralUserCommand"]},{"name":"constructor(extension: Extension, modal: () -> M? = null)","description":"dev.kordex.core.commands.application.user.PublicUserCommand.PublicUserCommand","location":"kord-extensions/dev.kordex.core.commands.application.user/-public-user-command/-public-user-command.html","searchKeys":["PublicUserCommand","constructor(extension: Extension, modal: () -> M? = null)","dev.kordex.core.commands.application.user.PublicUserCommand.PublicUserCommand"]},{"name":"constructor(extension: Extension, modal: () -> M? = null)","description":"dev.kordex.core.commands.application.user.UserCommand.UserCommand","location":"kord-extensions/dev.kordex.core.commands.application.user/-user-command/-user-command.html","searchKeys":["UserCommand","constructor(extension: Extension, modal: () -> M? = null)","dev.kordex.core.commands.application.user.UserCommand.UserCommand"]},{"name":"constructor(extension: Extension, state: ExtensionState)","description":"dev.kordex.core.events.ExtensionStateEvent.ExtensionStateEvent","location":"kord-extensions/dev.kordex.core.events/-extension-state-event/-extension-state-event.html","searchKeys":["ExtensionStateEvent","constructor(extension: Extension, state: ExtensionState)","dev.kordex.core.events.ExtensionStateEvent.ExtensionStateEvent"]},{"name":"constructor(flags: UserFlags, displayName: String?, username: String, id: Snowflake, discriminator: Int, avatar: String)","description":"dev.kordex.core.events.extra.models.GuildJoinRequestUser.GuildJoinRequestUser","location":"kord-extensions/dev.kordex.core.events.extra.models/-guild-join-request-user/-guild-join-request-user.html","searchKeys":["GuildJoinRequestUser","constructor(flags: UserFlags, displayName: String?, username: String, id: Snowflake, discriminator: Int, avatar: String)","dev.kordex.core.events.extra.models.GuildJoinRequestUser.GuildJoinRequestUser"]},{"name":"constructor(genericEvent: ApplicationCommandInteractionCreateEvent, genericCommand: ApplicationCommand<*>, cache: MutableStringKeyedMap<Any>)","description":"dev.kordex.core.commands.application.ApplicationCommandContext.ApplicationCommandContext","location":"kord-extensions/dev.kordex.core.commands.application/-application-command-context/-application-command-context.html","searchKeys":["ApplicationCommandContext","constructor(genericEvent: ApplicationCommandInteractionCreateEvent, genericCommand: ApplicationCommand<*>, cache: MutableStringKeyedMap<Any>)","dev.kordex.core.commands.application.ApplicationCommandContext.ApplicationCommandContext"]},{"name":"constructor(guildId: Snowflake, userId: Snowflake, id: Snowflake)","description":"dev.kordex.core.events.extra.models.GuildJoinRequestDelete.GuildJoinRequestDelete","location":"kord-extensions/dev.kordex.core.events.extra.models/-guild-join-request-delete/-guild-join-request-delete.html","searchKeys":["GuildJoinRequestDelete","constructor(guildId: Snowflake, userId: Snowflake, id: Snowflake)","dev.kordex.core.events.extra.models.GuildJoinRequestDelete.GuildJoinRequestDelete"]},{"name":"constructor(id: String, interaction: ModalSubmitInteraction)","description":"dev.kordex.core.events.ModalInteractionCompleteEvent.ModalInteractionCompleteEvent","location":"kord-extensions/dev.kordex.core.events/-modal-interaction-complete-event/-modal-interaction-complete-event.html","searchKeys":["ModalInteractionCompleteEvent","constructor(id: String, interaction: ModalSubmitInteraction)","dev.kordex.core.events.ModalInteractionCompleteEvent.ModalInteractionCompleteEvent"]},{"name":"constructor(instant: Instant, format: TimestampType)","description":"dev.kordex.core.commands.converters.impl.FormattedTimestamp.FormattedTimestamp","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-formatted-timestamp/-formatted-timestamp.html","searchKeys":["FormattedTimestamp","constructor(instant: Instant, format: TimestampType)","dev.kordex.core.commands.converters.impl.FormattedTimestamp.FormattedTimestamp"]},{"name":"constructor(key: K, value: V)","description":"dev.kordex.core.registry.RegistryStorage.StorageEntry.StorageEntry","location":"kord-extensions/dev.kordex.core.registry/-registry-storage/-storage-entry/-storage-entry.html","searchKeys":["StorageEntry","constructor(key: K, value: V)","dev.kordex.core.registry.RegistryStorage.StorageEntry.StorageEntry"]},{"name":"constructor(key: String, bundle: Bundle? = null, locale: Locale? = null, presetPlaceholderPosition: PlaceholderPosition = PlaceholderPosition.FIRST, translateNestedKeys: Boolean = true, ordinalPlaceholders: List<Any?> = listOf(), namedPlaceholders: Map<String, Any?> = mapOf(), postProcessors: List<PostProcessor> = listOf())","description":"dev.kordex.core.i18n.types.Key.Key","location":"kord-extensions/dev.kordex.core.i18n.types/-key/-key.html","searchKeys":["Key","constructor(key: String, bundle: Bundle? = null, locale: Locale? = null, presetPlaceholderPosition: PlaceholderPosition = PlaceholderPosition.FIRST, translateNestedKeys: Boolean = true, ordinalPlaceholders: List<Any?> = listOf(), namedPlaceholders: Map<String, Any?> = mapOf(), postProcessors: List<PostProcessor> = listOf())","dev.kordex.core.i18n.types.Key.Key"]},{"name":"constructor(label: Key, value: String)","description":"dev.kordex.core.components.menus.string.StringSelectOption.StringSelectOption","location":"kord-extensions/dev.kordex.core.components.menus.string/-string-select-option/-string-select-option.html","searchKeys":["StringSelectOption","constructor(label: Key, value: String)","dev.kordex.core.components.menus.string.StringSelectOption.StringSelectOption"]},{"name":"constructor(level: DataCollection)","description":"dev.kordex.core.datacollection.DataCollector.DataCollector","location":"kord-extensions/dev.kordex.core.datacollection/-data-collector/-data-collector.html","searchKeys":["DataCollector","constructor(level: DataCollection)","dev.kordex.core.datacollection.DataCollector.DataCollector"]},{"name":"constructor(locale: Locale? = null, defaultGroup: Key = EMPTY_KEY)","description":"dev.kordex.core.pagination.builders.PaginatorBuilder.PaginatorBuilder","location":"kord-extensions/dev.kordex.core.pagination.builders/-paginator-builder/-paginator-builder.html","searchKeys":["PaginatorBuilder","constructor(locale: Locale? = null, defaultGroup: Key = EMPTY_KEY)","dev.kordex.core.pagination.builders.PaginatorBuilder.PaginatorBuilder"]},{"name":"constructor(longHelp: Boolean = true, positiveOnly: Boolean = true, shouldThrow: Boolean = false, validator: Validator<DateTimePeriod> = null)","description":"dev.kordex.core.commands.converters.impl.DurationCoalescingConverter.DurationCoalescingConverter","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-duration-coalescing-converter/-duration-coalescing-converter.html","searchKeys":["DurationCoalescingConverter","constructor(longHelp: Boolean = true, positiveOnly: Boolean = true, shouldThrow: Boolean = false, validator: Validator<DateTimePeriod> = null)","dev.kordex.core.commands.converters.impl.DurationCoalescingConverter.DurationCoalescingConverter"]},{"name":"constructor(longHelp: Boolean = true, positiveOnly: Boolean = true, validator: Validator<DateTimePeriod> = null)","description":"dev.kordex.core.commands.converters.impl.DurationConverter.DurationConverter","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-duration-converter/-duration-converter.html","searchKeys":["DurationConverter","constructor(longHelp: Boolean = true, positiveOnly: Boolean = true, validator: Validator<DateTimePeriod> = null)","dev.kordex.core.commands.converters.impl.DurationConverter.DurationConverter"]},{"name":"constructor(maxLength: Int? = null, minLength: Int? = null, validator: Validator<String> = null)","description":"dev.kordex.core.commands.converters.impl.StringConverter.StringConverter","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-string-converter/-string-converter.html","searchKeys":["StringConverter","constructor(maxLength: Int? = null, minLength: Int? = null, validator: Validator<String> = null)","dev.kordex.core.commands.converters.impl.StringConverter.StringConverter"]},{"name":"constructor(maxSize: Int)","description":"dev.kordex.core.utils.collections.FixedLengthQueue.FixedLengthQueue","location":"kord-extensions/dev.kordex.core.utils.collections/-fixed-length-queue/-fixed-length-queue.html","searchKeys":["FixedLengthQueue","constructor(maxSize: Int)","dev.kordex.core.utils.collections.FixedLengthQueue.FixedLengthQueue"]},{"name":"constructor(maxValue: Double? = null, minValue: Double? = null, validator: Validator<Double> = null)","description":"dev.kordex.core.commands.converters.impl.DecimalConverter.DecimalConverter","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-decimal-converter/-decimal-converter.html","searchKeys":["DecimalConverter","constructor(maxValue: Double? = null, minValue: Double? = null, validator: Validator<Double> = null)","dev.kordex.core.commands.converters.impl.DecimalConverter.DecimalConverter"]},{"name":"constructor(name: Key, description: Key)","description":"dev.kordex.core.builders.about.Section.Section","location":"kord-extensions/dev.kordex.core.builders.about/-section/-section.html","searchKeys":["Section","constructor(name: Key, description: Key)","dev.kordex.core.builders.about.Section.Section"]},{"name":"constructor(name: Key, parent: SlashCommand<*, *, *>)","description":"dev.kordex.core.commands.application.slash.SlashGroup.SlashGroup","location":"kord-extensions/dev.kordex.core.commands.application.slash/-slash-group/-slash-group.html","searchKeys":["SlashGroup","constructor(name: Key, parent: SlashCommand<*, *, *>)","dev.kordex.core.commands.application.slash.SlashGroup.SlashGroup"]},{"name":"constructor(name: Key, reason: String)","description":"dev.kordex.core.CommandRegistrationException.CommandRegistrationException","location":"kord-extensions/dev.kordex.core/-command-registration-exception/-command-registration-exception.html","searchKeys":["CommandRegistrationException","constructor(name: Key, reason: String)","dev.kordex.core.CommandRegistrationException.CommandRegistrationException"]},{"name":"constructor(name: Key, value: T)","description":"dev.kordex.core.commands.ChoiceOptionWrapper.ChoiceWrapper.ChoiceWrapper","location":"kord-extensions/dev.kordex.core.commands/-choice-option-wrapper/-choice-wrapper/-choice-wrapper.html","searchKeys":["ChoiceWrapper","constructor(name: Key, value: T)","dev.kordex.core.commands.ChoiceOptionWrapper.ChoiceWrapper.ChoiceWrapper"]},{"name":"constructor(name: Key?, reason: String)","description":"dev.kordex.core.InvalidCommandException.InvalidCommandException","location":"kord-extensions/dev.kordex.core/-invalid-command-exception/-invalid-command-exception.html","searchKeys":["InvalidCommandException","constructor(name: Key?, reason: String)","dev.kordex.core.InvalidCommandException.InvalidCommandException"]},{"name":"constructor(name: String)","description":"dev.kordex.core.i18n.types.Bundle.Bundle","location":"kord-extensions/dev.kordex.core.i18n.types/-bundle/-bundle.html","searchKeys":["Bundle","constructor(name: String)","dev.kordex.core.i18n.types.Bundle.Bundle"]},{"name":"constructor(name: String, description: String)","description":"dev.kordex.core.builders.about.Section.Section","location":"kord-extensions/dev.kordex.core.builders.about/-section/-section.html","searchKeys":["Section","constructor(name: String, description: String)","dev.kordex.core.builders.about.Section.Section"]},{"name":"constructor(name: String, license: String, type: CopyrightType, url: String?)","description":"dev.kordex.core.builders.about.Copyright.Copyright","location":"kord-extensions/dev.kordex.core.builders.about/-copyright/-copyright.html","searchKeys":["Copyright","constructor(name: String, license: String, type: CopyrightType, url: String?)","dev.kordex.core.builders.about.Copyright.Copyright"]},{"name":"constructor(old: Optional<T>, new: T, oldState: ChangeSet.State, newState: ChangeSet.State)","description":"dev.kordex.core.utils.deltas.ChangeSet.Change.Change","location":"kord-extensions/dev.kordex.core.utils.deltas/-change-set/-change/-change.html","searchKeys":["Change","constructor(old: Optional<T>, new: T, oldState: ChangeSet.State, newState: ChangeSet.State)","dev.kordex.core.utils.deltas.ChangeSet.Change.Change"]},{"name":"constructor(old: Set<Role>, new: Set<Role>)","description":"dev.kordex.core.utils.deltas.RoleDelta.RoleDelta","location":"kord-extensions/dev.kordex.core.utils.deltas/-role-delta/-role-delta.html","searchKeys":["RoleDelta","constructor(old: Set<Role>, new: Set<Role>)","dev.kordex.core.utils.deltas.RoleDelta.RoleDelta"]},{"name":"constructor(options: Set<RegexOption> = setOf(), shouldThrow: Boolean = false, validator: Validator<Regex> = null)","description":"dev.kordex.core.commands.converters.impl.RegexCoalescingConverter.RegexCoalescingConverter","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-regex-coalescing-converter/-regex-coalescing-converter.html","searchKeys":["RegexCoalescingConverter","constructor(options: Set<RegexOption> = setOf(), shouldThrow: Boolean = false, validator: Validator<Regex> = null)","dev.kordex.core.commands.converters.impl.RegexCoalescingConverter.RegexCoalescingConverter"]},{"name":"constructor(options: Set<RegexOption> = setOf(), validator: Validator<Regex> = null)","description":"dev.kordex.core.commands.converters.impl.RegexConverter.RegexConverter","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-regex-converter/-regex-converter.html","searchKeys":["RegexConverter","constructor(options: Set<RegexOption> = setOf(), validator: Validator<Regex> = null)","dev.kordex.core.commands.converters.impl.RegexConverter.RegexConverter"]},{"name":"constructor(other: ArgumentParsingException)","description":"dev.kordex.core.ArgumentParsingException.ArgumentParsingException","location":"kord-extensions/dev.kordex.core/-argument-parsing-exception/-argument-parsing-exception.html","searchKeys":["ArgumentParsingException","constructor(other: ArgumentParsingException)","dev.kordex.core.ArgumentParsingException.ArgumentParsingException"]},{"name":"constructor(other: DiscordRelayedException)","description":"dev.kordex.core.DiscordRelayedException.DiscordRelayedException","location":"kord-extensions/dev.kordex.core/-discord-relayed-exception/-discord-relayed-exception.html","searchKeys":["DiscordRelayedException","constructor(other: DiscordRelayedException)","dev.kordex.core.DiscordRelayedException.DiscordRelayedException"]},{"name":"constructor(outputError: Boolean = false, validator: Validator<T?> = null)","description":"dev.kordex.core.commands.converters.OptionalCoalescingConverter.OptionalCoalescingConverter","location":"kord-extensions/dev.kordex.core.commands.converters/-optional-coalescing-converter/-optional-coalescing-converter.html","searchKeys":["OptionalCoalescingConverter","constructor(outputError: Boolean = false, validator: Validator<T?> = null)","dev.kordex.core.commands.converters.OptionalCoalescingConverter.OptionalCoalescingConverter"]},{"name":"constructor(outputError: Boolean = false, validator: Validator<T?> = null)","description":"dev.kordex.core.commands.converters.OptionalConverter.OptionalConverter","location":"kord-extensions/dev.kordex.core.commands.converters/-optional-converter/-optional-converter.html","searchKeys":["OptionalConverter","constructor(outputError: Boolean = false, validator: Validator<T?> = null)","dev.kordex.core.commands.converters.OptionalConverter.OptionalConverter"]},{"name":"constructor(pages: Pages, chunkedPages: Int = 1, owner: UserBehavior? = null, timeoutSeconds: Long? = null, keepEmbed: Boolean = true, switchEmoji: ReactionEmoji = if (pages.groups.size == 2) EXPAND_EMOJI else SWITCH_EMOJI, mutator: PageTransitionCallback? = null, locale: Locale? = null)","description":"dev.kordex.core.pagination.BaseButtonPaginator.BaseButtonPaginator","location":"kord-extensions/dev.kordex.core.pagination/-base-button-paginator/-base-button-paginator.html","searchKeys":["BaseButtonPaginator","constructor(pages: Pages, chunkedPages: Int = 1, owner: UserBehavior? = null, timeoutSeconds: Long? = null, keepEmbed: Boolean = true, switchEmoji: ReactionEmoji = if (pages.groups.size == 2) EXPAND_EMOJI else SWITCH_EMOJI, mutator: PageTransitionCallback? = null, locale: Locale? = null)","dev.kordex.core.pagination.BaseButtonPaginator.BaseButtonPaginator"]},{"name":"constructor(pages: Pages, chunkedPages: Int = 1, owner: UserBehavior? = null, timeoutSeconds: Long? = null, keepEmbed: Boolean = true, switchEmoji: ReactionEmoji = if (pages.groups.size == 2) EXPAND_EMOJI else SWITCH_EMOJI, mutator: PageTransitionCallback? = null, locale: Locale? = null)","description":"dev.kordex.core.pagination.BasePaginator.BasePaginator","location":"kord-extensions/dev.kordex.core.pagination/-base-paginator/-base-paginator.html","searchKeys":["BasePaginator","constructor(pages: Pages, chunkedPages: Int = 1, owner: UserBehavior? = null, timeoutSeconds: Long? = null, keepEmbed: Boolean = true, switchEmoji: ReactionEmoji = if (pages.groups.size == 2) EXPAND_EMOJI else SWITCH_EMOJI, mutator: PageTransitionCallback? = null, locale: Locale? = null)","dev.kordex.core.pagination.BasePaginator.BasePaginator"]},{"name":"constructor(pages: Pages, chunkedPages: Int = 1, owner: UserBehavior? = null, timeoutSeconds: Long? = null, keepEmbed: Boolean = true, switchEmoji: ReactionEmoji = if (pages.groups.size == 2) EXPAND_EMOJI else SWITCH_EMOJI, mutator: PageTransitionCallback? = null, locale: Locale? = null, interaction: FollowupPermittingInteractionResponseBehavior)","description":"dev.kordex.core.pagination.PublicFollowUpPaginator.PublicFollowUpPaginator","location":"kord-extensions/dev.kordex.core.pagination/-public-follow-up-paginator/-public-follow-up-paginator.html","searchKeys":["PublicFollowUpPaginator","constructor(pages: Pages, chunkedPages: Int = 1, owner: UserBehavior? = null, timeoutSeconds: Long? = null, keepEmbed: Boolean = true, switchEmoji: ReactionEmoji = if (pages.groups.size == 2) EXPAND_EMOJI else SWITCH_EMOJI, mutator: PageTransitionCallback? = null, locale: Locale? = null, interaction: FollowupPermittingInteractionResponseBehavior)","dev.kordex.core.pagination.PublicFollowUpPaginator.PublicFollowUpPaginator"]},{"name":"constructor(pages: Pages, chunkedPages: Int = 1, owner: UserBehavior? = null, timeoutSeconds: Long? = null, keepEmbed: Boolean = true, switchEmoji: ReactionEmoji = if (pages.groups.size == 2) EXPAND_EMOJI else SWITCH_EMOJI, mutator: PageTransitionCallback? = null, locale: Locale? = null, interaction: PublicMessageInteractionResponseBehavior)","description":"dev.kordex.core.pagination.PublicResponsePaginator.PublicResponsePaginator","location":"kord-extensions/dev.kordex.core.pagination/-public-response-paginator/-public-response-paginator.html","searchKeys":["PublicResponsePaginator","constructor(pages: Pages, chunkedPages: Int = 1, owner: UserBehavior? = null, timeoutSeconds: Long? = null, keepEmbed: Boolean = true, switchEmoji: ReactionEmoji = if (pages.groups.size == 2) EXPAND_EMOJI else SWITCH_EMOJI, mutator: PageTransitionCallback? = null, locale: Locale? = null, interaction: PublicMessageInteractionResponseBehavior)","dev.kordex.core.pagination.PublicResponsePaginator.PublicResponsePaginator"]},{"name":"constructor(pages: Pages, chunkedPages: Int = 1, owner: UserBehavior? = null, timeoutSeconds: Long? = null, keepEmbed: Boolean = true, switchEmoji: ReactionEmoji = if (pages.groups.size == 2) EXPAND_EMOJI else SWITCH_EMOJI, mutator: PageTransitionCallback? = null, locale: Locale? = null, pingInReply: Boolean = true, targetChannel: MessageChannelBehavior? = null, targetMessage: Message? = null)","description":"dev.kordex.core.pagination.MessageButtonPaginator.MessageButtonPaginator","location":"kord-extensions/dev.kordex.core.pagination/-message-button-paginator/-message-button-paginator.html","searchKeys":["MessageButtonPaginator","constructor(pages: Pages, chunkedPages: Int = 1, owner: UserBehavior? = null, timeoutSeconds: Long? = null, keepEmbed: Boolean = true, switchEmoji: ReactionEmoji = if (pages.groups.size == 2) EXPAND_EMOJI else SWITCH_EMOJI, mutator: PageTransitionCallback? = null, locale: Locale? = null, pingInReply: Boolean = true, targetChannel: MessageChannelBehavior? = null, targetMessage: Message? = null)","dev.kordex.core.pagination.MessageButtonPaginator.MessageButtonPaginator"]},{"name":"constructor(pages: Pages, owner: UserBehavior? = null, chunkedPages: Int = 1, timeoutSeconds: Long? = null, switchEmoji: ReactionEmoji = if (pages.groups.size == 2) EXPAND_EMOJI else SWITCH_EMOJI, mutator: PageTransitionCallback? = null, locale: Locale? = null, interaction: EphemeralMessageInteractionResponseBehavior)","description":"dev.kordex.core.pagination.EphemeralResponsePaginator.EphemeralResponsePaginator","location":"kord-extensions/dev.kordex.core.pagination/-ephemeral-response-paginator/-ephemeral-response-paginator.html","searchKeys":["EphemeralResponsePaginator","constructor(pages: Pages, owner: UserBehavior? = null, chunkedPages: Int = 1, timeoutSeconds: Long? = null, switchEmoji: ReactionEmoji = if (pages.groups.size == 2) EXPAND_EMOJI else SWITCH_EMOJI, mutator: PageTransitionCallback? = null, locale: Locale? = null, interaction: EphemeralMessageInteractionResponseBehavior)","dev.kordex.core.pagination.EphemeralResponsePaginator.EphemeralResponsePaginator"]},{"name":"constructor(parent: ExtensibleBotBuilder)","description":"dev.kordex.core.builders.PluginBuilder.PluginBuilder","location":"kord-extensions/dev.kordex.core.builders/-plugin-builder/-plugin-builder.html","searchKeys":["PluginBuilder","constructor(parent: ExtensibleBotBuilder)","dev.kordex.core.builders.PluginBuilder.PluginBuilder"]},{"name":"constructor(radix: Int = DEFAULT_RADIX, choices: Map<Key, Long>, validator: Validator<Long> = null)","description":"dev.kordex.core.commands.application.slash.converters.impl.NumberChoiceConverter.NumberChoiceConverter","location":"kord-extensions/dev.kordex.core.commands.application.slash.converters.impl/-number-choice-converter/-number-choice-converter.html","searchKeys":["NumberChoiceConverter","constructor(radix: Int = DEFAULT_RADIX, choices: Map<Key, Long>, validator: Validator<Long> = null)","dev.kordex.core.commands.application.slash.converters.impl.NumberChoiceConverter.NumberChoiceConverter"]},{"name":"constructor(radix: Int = DEFAULT_RADIX, maxValue: Int? = null, minValue: Int? = null, validator: Validator<Int> = null)","description":"dev.kordex.core.commands.converters.impl.IntConverter.IntConverter","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-int-converter/-int-converter.html","searchKeys":["IntConverter","constructor(radix: Int = DEFAULT_RADIX, maxValue: Int? = null, minValue: Int? = null, validator: Validator<Int> = null)","dev.kordex.core.commands.converters.impl.IntConverter.IntConverter"]},{"name":"constructor(radix: Int = DEFAULT_RADIX, maxValue: Long? = null, minValue: Long? = null, validator: Validator<Long> = null)","description":"dev.kordex.core.commands.converters.impl.LongConverter.LongConverter","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-long-converter/-long-converter.html","searchKeys":["LongConverter","constructor(radix: Int = DEFAULT_RADIX, maxValue: Long? = null, minValue: Long? = null, validator: Validator<Long> = null)","dev.kordex.core.commands.converters.impl.LongConverter.LongConverter"]},{"name":"constructor(reason: Key)","description":"dev.kordex.core.DiscordRelayedException.DiscordRelayedException","location":"kord-extensions/dev.kordex.core/-discord-relayed-exception/-discord-relayed-exception.html","searchKeys":["DiscordRelayedException","constructor(reason: Key)","dev.kordex.core.DiscordRelayedException.DiscordRelayedException"]},{"name":"constructor(reason: Key, argument: Argument<*>?, arguments: Arguments, parser: StringParser?)","description":"dev.kordex.core.ArgumentParsingException.ArgumentParsingException","location":"kord-extensions/dev.kordex.core/-argument-parsing-exception/-argument-parsing-exception.html","searchKeys":["ArgumentParsingException","constructor(reason: Key, argument: Argument<*>?, arguments: Arguments, parser: StringParser?)","dev.kordex.core.ArgumentParsingException.ArgumentParsingException"]},{"name":"constructor(reason: String)","description":"dev.kordex.core.EventHandlerRegistrationException.EventHandlerRegistrationException","location":"kord-extensions/dev.kordex.core/-event-handler-registration-exception/-event-handler-registration-exception.html","searchKeys":["EventHandlerRegistrationException","constructor(reason: String)","dev.kordex.core.EventHandlerRegistrationException.EventHandlerRegistrationException"]},{"name":"constructor(reason: String)","description":"dev.kordex.core.InvalidEventHandlerException.InvalidEventHandlerException","location":"kord-extensions/dev.kordex.core/-invalid-event-handler-exception/-invalid-event-handler-exception.html","searchKeys":["InvalidEventHandlerException","constructor(reason: String)","dev.kordex.core.InvalidEventHandlerException.InvalidEventHandlerException"]},{"name":"constructor(requireGuild: Boolean = false, requiredGuild: suspend () -> Snowflake? = null, useReply: Boolean = true, validator: Validator<Message> = null)","description":"dev.kordex.core.commands.converters.impl.MessageConverter.MessageConverter","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-message-converter/-message-converter.html","searchKeys":["MessageConverter","constructor(requireGuild: Boolean = false, requiredGuild: suspend () -> Snowflake? = null, useReply: Boolean = true, validator: Validator<Message> = null)","dev.kordex.core.commands.converters.impl.MessageConverter.MessageConverter"]},{"name":"constructor(requireSameGuild: Boolean = true, requiredGuild: suspend () -> Snowflake? = null, requiredChannelTypes: Set<ChannelType> = setOf(), validator: Validator<Channel> = null)","description":"dev.kordex.core.commands.converters.impl.ChannelConverter.ChannelConverter","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-channel-converter/-channel-converter.html","searchKeys":["ChannelConverter","constructor(requireSameGuild: Boolean = true, requiredGuild: suspend () -> Snowflake? = null, requiredChannelTypes: Set<ChannelType> = setOf(), validator: Validator<Channel> = null)","dev.kordex.core.commands.converters.impl.ChannelConverter.ChannelConverter"]},{"name":"constructor(required: Boolean = true)","description":"dev.kordex.core.commands.converters.Converter.Converter","location":"kord-extensions/dev.kordex.core.commands.converters/-converter/-converter.html","searchKeys":["Converter","constructor(required: Boolean = true)","dev.kordex.core.commands.converters.Converter.Converter"]},{"name":"constructor(required: Boolean = true)","description":"dev.kordex.core.commands.converters.types.MultiNamedInputConverter.MultiNamedInputConverter","location":"kord-extensions/dev.kordex.core.commands.converters.types/-multi-named-input-converter/-multi-named-input-converter.html","searchKeys":["MultiNamedInputConverter","constructor(required: Boolean = true)","dev.kordex.core.commands.converters.types.MultiNamedInputConverter.MultiNamedInputConverter"]},{"name":"constructor(required: Boolean = true)","description":"dev.kordex.core.commands.converters.types.SingleNamedInputConverter.SingleNamedInputConverter","location":"kord-extensions/dev.kordex.core.commands.converters.types/-single-named-input-converter/-single-named-input-converter.html","searchKeys":["SingleNamedInputConverter","constructor(required: Boolean = true)","dev.kordex.core.commands.converters.types.SingleNamedInputConverter.SingleNamedInputConverter"]},{"name":"constructor(required: Boolean = true, singleConverter: SingleConverter<T>, newSignatureType: Key? = null, newShowTypeInSignature: Boolean? = null, newErrorType: Key? = null, validator: Validator<List<T>> = null)","description":"dev.kordex.core.commands.converters.SingleToListConverter.SingleToListConverter","location":"kord-extensions/dev.kordex.core.commands.converters/-single-to-list-converter/-single-to-list-converter.html","searchKeys":["SingleToListConverter","constructor(required: Boolean = true, singleConverter: SingleConverter<T>, newSignatureType: Key? = null, newShowTypeInSignature: Boolean? = null, newErrorType: Key? = null, validator: Validator<List<T>> = null)","dev.kordex.core.commands.converters.SingleToListConverter.SingleToListConverter"]},{"name":"constructor(required: Boolean = true, validator: Validator<List<T>> = null)","description":"dev.kordex.core.commands.converters.ListConverter.ListConverter","location":"kord-extensions/dev.kordex.core.commands.converters/-list-converter/-list-converter.html","searchKeys":["ListConverter","constructor(required: Boolean = true, validator: Validator<List<T>> = null)","dev.kordex.core.commands.converters.ListConverter.ListConverter"]},{"name":"constructor(required: Boolean, label: String, placeholder: String?, response: String)","description":"dev.kordex.core.events.extra.models.GuildJoinRequestResponse.ParagraphResponse.ParagraphResponse","location":"kord-extensions/dev.kordex.core.events.extra.models/-guild-join-request-response/-paragraph-response/-paragraph-response.html","searchKeys":["ParagraphResponse","constructor(required: Boolean, label: String, placeholder: String?, response: String)","dev.kordex.core.events.extra.models.GuildJoinRequestResponse.ParagraphResponse.ParagraphResponse"]},{"name":"constructor(required: Boolean, label: String, response: Boolean, values: List<String>)","description":"dev.kordex.core.events.extra.models.GuildJoinRequestResponse.TermsResponse.TermsResponse","location":"kord-extensions/dev.kordex.core.events.extra.models/-guild-join-request-response/-terms-response/-terms-response.html","searchKeys":["TermsResponse","constructor(required: Boolean, label: String, response: Boolean, values: List<String>)","dev.kordex.core.events.extra.models.GuildJoinRequestResponse.TermsResponse.TermsResponse"]},{"name":"constructor(required: Boolean, label: String, response: Int, choices: List<String>)","description":"dev.kordex.core.events.extra.models.GuildJoinRequestResponse.MultipleChoiceResponse.MultipleChoiceResponse","location":"kord-extensions/dev.kordex.core.events.extra.models/-guild-join-request-response/-multiple-choice-response/-multiple-choice-response.html","searchKeys":["MultipleChoiceResponse","constructor(required: Boolean, label: String, response: Int, choices: List<String>)","dev.kordex.core.events.extra.models.GuildJoinRequestResponse.MultipleChoiceResponse.MultipleChoiceResponse"]},{"name":"constructor(requiredGuild: suspend () -> Snowflake? = null, useReply: Boolean = true, requireSameGuild: Boolean = true, validator: Validator<Member> = null)","description":"dev.kordex.core.commands.converters.impl.MemberConverter.MemberConverter","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-member-converter/-member-converter.html","searchKeys":["MemberConverter","constructor(requiredGuild: suspend () -> Snowflake? = null, useReply: Boolean = true, requireSameGuild: Boolean = true, validator: Validator<Member> = null)","dev.kordex.core.commands.converters.impl.MemberConverter.MemberConverter"]},{"name":"constructor(requiredGuild: suspend () -> Snowflake? = null, validator: Validator<Role> = null)","description":"dev.kordex.core.commands.converters.impl.RoleConverter.RoleConverter","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-role-converter/-role-converter.html","searchKeys":["RoleConverter","constructor(requiredGuild: suspend () -> Snowflake? = null, validator: Validator<Role> = null)","dev.kordex.core.commands.converters.impl.RoleConverter.RoleConverter"]},{"name":"constructor(roots: List<Path>)","description":"dev.kordex.core.plugins.PluginManager.PluginManager","location":"kord-extensions/dev.kordex.core.plugins/-plugin-manager/-plugin-manager.html","searchKeys":["PluginManager","constructor(roots: List<Path>)","dev.kordex.core.plugins.PluginManager.PluginManager"]},{"name":"constructor(settings: ExtensibleBotBuilder, token: String)","description":"dev.kordex.core.ExtensibleBot.ExtensibleBot","location":"kord-extensions/dev.kordex.core/-extensible-bot/-extensible-bot.html","searchKeys":["ExtensibleBot","constructor(settings: ExtensibleBotBuilder, token: String)","dev.kordex.core.ExtensibleBot.ExtensibleBot"]},{"name":"constructor(shouldThrow: Boolean = false, validator: Validator<String> = null)","description":"dev.kordex.core.commands.converters.impl.StringCoalescingConverter.StringCoalescingConverter","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-string-coalescing-converter/-string-coalescing-converter.html","searchKeys":["StringCoalescingConverter","constructor(shouldThrow: Boolean = false, validator: Validator<String> = null)","dev.kordex.core.commands.converters.impl.StringCoalescingConverter.StringCoalescingConverter"]},{"name":"constructor(shouldThrow: Boolean = false, validator: Validator<T> = null)","description":"dev.kordex.core.commands.converters.CoalescingConverter.CoalescingConverter","location":"kord-extensions/dev.kordex.core.commands.converters/-coalescing-converter/-coalescing-converter.html","searchKeys":["CoalescingConverter","constructor(shouldThrow: Boolean = false, validator: Validator<T> = null)","dev.kordex.core.commands.converters.CoalescingConverter.CoalescingConverter"]},{"name":"constructor(singleConverter: SingleConverter<T>, defaultValue: T, outputError: Boolean = false, newSignatureType: Key? = null, newShowTypeInSignature: Boolean? = null, newErrorType: Key? = null, validator: Validator<T> = null)","description":"dev.kordex.core.commands.converters.SingleToDefaultingConverter.SingleToDefaultingConverter","location":"kord-extensions/dev.kordex.core.commands.converters/-single-to-defaulting-converter/-single-to-defaulting-converter.html","searchKeys":["SingleToDefaultingConverter","constructor(singleConverter: SingleConverter<T>, defaultValue: T, outputError: Boolean = false, newSignatureType: Key? = null, newShowTypeInSignature: Boolean? = null, newErrorType: Key? = null, validator: Validator<T> = null)","dev.kordex.core.commands.converters.SingleToDefaultingConverter.SingleToDefaultingConverter"]},{"name":"constructor(singleConverter: SingleConverter<T>, newSignatureType: Key? = null, newShowTypeInSignature: Boolean? = null, newErrorType: Key? = null, outputError: Boolean = false, validator: Validator<T?> = null)","description":"dev.kordex.core.commands.converters.SingleToOptionalConverter.SingleToOptionalConverter","location":"kord-extensions/dev.kordex.core.commands.converters/-single-to-optional-converter/-single-to-optional-converter.html","searchKeys":["SingleToOptionalConverter","constructor(singleConverter: SingleConverter<T>, newSignatureType: Key? = null, newShowTypeInSignature: Boolean? = null, newErrorType: Key? = null, outputError: Boolean = false, validator: Validator<T?> = null)","dev.kordex.core.commands.converters.SingleToOptionalConverter.SingleToOptionalConverter"]},{"name":"constructor(status: ApplicationStatus, request: GuildJoinRequest, guildId: Snowflake)","description":"dev.kordex.core.events.extra.models.GuildJoinRequestUpdate.GuildJoinRequestUpdate","location":"kord-extensions/dev.kordex.core.events.extra.models/-guild-join-request-update/-guild-join-request-update.html","searchKeys":["GuildJoinRequestUpdate","constructor(status: ApplicationStatus, request: GuildJoinRequest, guildId: Snowflake)","dev.kordex.core.events.extra.models.GuildJoinRequestUpdate.GuildJoinRequestUpdate"]},{"name":"constructor(storageType: StorageType, namespace: String, identifier: String, dataType: KClass<T>)","description":"dev.kordex.core.storage.StorageUnit.StorageUnit","location":"kord-extensions/dev.kordex.core.storage/-storage-unit/-storage-unit.html","searchKeys":["StorageUnit","constructor(storageType: StorageType, namespace: String, identifier: String, dataType: KClass<T>)","dev.kordex.core.storage.StorageUnit.StorageUnit"]},{"name":"constructor(test: (provided: String, candidate: String) -> Boolean)","description":"dev.kordex.core.utils.FilterStrategy.FilterStrategy","location":"kord-extensions/dev.kordex.core.utils/-filter-strategy/-filter-strategy.html","searchKeys":["FilterStrategy","constructor(test: (provided: String, candidate: String) -> Boolean)","dev.kordex.core.utils.FilterStrategy.FilterStrategy"]},{"name":"constructor(throwable: Throwable)","description":"dev.kordex.core.sentry.captures.SentryExceptionCapture.SentryExceptionCapture","location":"kord-extensions/dev.kordex.core.sentry.captures/-sentry-exception-capture/-sentry-exception-capture.html","searchKeys":["SentryExceptionCapture","constructor(throwable: Throwable)","dev.kordex.core.sentry.captures.SentryExceptionCapture.SentryExceptionCapture"]},{"name":"constructor(timeout: Duration? = null, startTimeoutNow: Boolean = false)","description":"dev.kordex.core.components.ComponentContainer.ComponentContainer","location":"kord-extensions/dev.kordex.core.components/-component-container/-component-container.html","searchKeys":["ComponentContainer","constructor(timeout: Duration? = null, startTimeoutNow: Boolean = false)","dev.kordex.core.components.ComponentContainer.ComponentContainer"]},{"name":"constructor(timeoutTask: Task?)","description":"dev.kordex.core.components.buttons.InteractionButtonWithAction.InteractionButtonWithAction","location":"kord-extensions/dev.kordex.core.components.buttons/-interaction-button-with-action/-interaction-button-with-action.html","searchKeys":["InteractionButtonWithAction","constructor(timeoutTask: Task?)","dev.kordex.core.components.buttons.InteractionButtonWithAction.InteractionButtonWithAction"]},{"name":"constructor(timeoutTask: Task?)","description":"dev.kordex.core.components.menus.SelectMenu.SelectMenu","location":"kord-extensions/dev.kordex.core.components.menus/-select-menu/-select-menu.html","searchKeys":["SelectMenu","constructor(timeoutTask: Task?)","dev.kordex.core.components.menus.SelectMenu.SelectMenu"]},{"name":"constructor(timeoutTask: Task?, modal: () -> M? = null)","description":"dev.kordex.core.components.ComponentWithAction.ComponentWithAction","location":"kord-extensions/dev.kordex.core.components/-component-with-action/-component-with-action.html","searchKeys":["ComponentWithAction","constructor(timeoutTask: Task?, modal: () -> M? = null)","dev.kordex.core.components.ComponentWithAction.ComponentWithAction"]},{"name":"constructor(timeoutTask: Task?, modal: () -> M? = null)","description":"dev.kordex.core.components.buttons.EphemeralInteractionButton.EphemeralInteractionButton","location":"kord-extensions/dev.kordex.core.components.buttons/-ephemeral-interaction-button/-ephemeral-interaction-button.html","searchKeys":["EphemeralInteractionButton","constructor(timeoutTask: Task?, modal: () -> M? = null)","dev.kordex.core.components.buttons.EphemeralInteractionButton.EphemeralInteractionButton"]},{"name":"constructor(timeoutTask: Task?, modal: () -> M? = null)","description":"dev.kordex.core.components.buttons.PublicInteractionButton.PublicInteractionButton","location":"kord-extensions/dev.kordex.core.components.buttons/-public-interaction-button/-public-interaction-button.html","searchKeys":["PublicInteractionButton","constructor(timeoutTask: Task?, modal: () -> M? = null)","dev.kordex.core.components.buttons.PublicInteractionButton.PublicInteractionButton"]},{"name":"constructor(timeoutTask: Task?, modal: () -> M? = null)","description":"dev.kordex.core.components.menus.channel.EphemeralChannelSelectMenu.EphemeralChannelSelectMenu","location":"kord-extensions/dev.kordex.core.components.menus.channel/-ephemeral-channel-select-menu/-ephemeral-channel-select-menu.html","searchKeys":["EphemeralChannelSelectMenu","constructor(timeoutTask: Task?, modal: () -> M? = null)","dev.kordex.core.components.menus.channel.EphemeralChannelSelectMenu.EphemeralChannelSelectMenu"]},{"name":"constructor(timeoutTask: Task?, modal: () -> M? = null)","description":"dev.kordex.core.components.menus.channel.PublicChannelSelectMenu.PublicChannelSelectMenu","location":"kord-extensions/dev.kordex.core.components.menus.channel/-public-channel-select-menu/-public-channel-select-menu.html","searchKeys":["PublicChannelSelectMenu","constructor(timeoutTask: Task?, modal: () -> M? = null)","dev.kordex.core.components.menus.channel.PublicChannelSelectMenu.PublicChannelSelectMenu"]},{"name":"constructor(timeoutTask: Task?, modal: () -> M? = null)","description":"dev.kordex.core.components.menus.mentionable.EphemeralMentionableSelectMenu.EphemeralMentionableSelectMenu","location":"kord-extensions/dev.kordex.core.components.menus.mentionable/-ephemeral-mentionable-select-menu/-ephemeral-mentionable-select-menu.html","searchKeys":["EphemeralMentionableSelectMenu","constructor(timeoutTask: Task?, modal: () -> M? = null)","dev.kordex.core.components.menus.mentionable.EphemeralMentionableSelectMenu.EphemeralMentionableSelectMenu"]},{"name":"constructor(timeoutTask: Task?, modal: () -> M? = null)","description":"dev.kordex.core.components.menus.mentionable.PublicMentionableSelectMenu.PublicMentionableSelectMenu","location":"kord-extensions/dev.kordex.core.components.menus.mentionable/-public-mentionable-select-menu/-public-mentionable-select-menu.html","searchKeys":["PublicMentionableSelectMenu","constructor(timeoutTask: Task?, modal: () -> M? = null)","dev.kordex.core.components.menus.mentionable.PublicMentionableSelectMenu.PublicMentionableSelectMenu"]},{"name":"constructor(timeoutTask: Task?, modal: () -> M? = null)","description":"dev.kordex.core.components.menus.role.EphemeralRoleSelectMenu.EphemeralRoleSelectMenu","location":"kord-extensions/dev.kordex.core.components.menus.role/-ephemeral-role-select-menu/-ephemeral-role-select-menu.html","searchKeys":["EphemeralRoleSelectMenu","constructor(timeoutTask: Task?, modal: () -> M? = null)","dev.kordex.core.components.menus.role.EphemeralRoleSelectMenu.EphemeralRoleSelectMenu"]},{"name":"constructor(timeoutTask: Task?, modal: () -> M? = null)","description":"dev.kordex.core.components.menus.role.PublicRoleSelectMenu.PublicRoleSelectMenu","location":"kord-extensions/dev.kordex.core.components.menus.role/-public-role-select-menu/-public-role-select-menu.html","searchKeys":["PublicRoleSelectMenu","constructor(timeoutTask: Task?, modal: () -> M? = null)","dev.kordex.core.components.menus.role.PublicRoleSelectMenu.PublicRoleSelectMenu"]},{"name":"constructor(timeoutTask: Task?, modal: () -> M? = null)","description":"dev.kordex.core.components.menus.string.EphemeralStringSelectMenu.EphemeralStringSelectMenu","location":"kord-extensions/dev.kordex.core.components.menus.string/-ephemeral-string-select-menu/-ephemeral-string-select-menu.html","searchKeys":["EphemeralStringSelectMenu","constructor(timeoutTask: Task?, modal: () -> M? = null)","dev.kordex.core.components.menus.string.EphemeralStringSelectMenu.EphemeralStringSelectMenu"]},{"name":"constructor(timeoutTask: Task?, modal: () -> M? = null)","description":"dev.kordex.core.components.menus.string.PublicStringSelectMenu.PublicStringSelectMenu","location":"kord-extensions/dev.kordex.core.components.menus.string/-public-string-select-menu/-public-string-select-menu.html","searchKeys":["PublicStringSelectMenu","constructor(timeoutTask: Task?, modal: () -> M? = null)","dev.kordex.core.components.menus.string.PublicStringSelectMenu.PublicStringSelectMenu"]},{"name":"constructor(timeoutTask: Task?, modal: () -> M? = null)","description":"dev.kordex.core.components.menus.user.EphemeralUserSelectMenu.EphemeralUserSelectMenu","location":"kord-extensions/dev.kordex.core.components.menus.user/-ephemeral-user-select-menu/-ephemeral-user-select-menu.html","searchKeys":["EphemeralUserSelectMenu","constructor(timeoutTask: Task?, modal: () -> M? = null)","dev.kordex.core.components.menus.user.EphemeralUserSelectMenu.EphemeralUserSelectMenu"]},{"name":"constructor(timeoutTask: Task?, modal: () -> M? = null)","description":"dev.kordex.core.components.menus.user.PublicUserSelectMenu.PublicUserSelectMenu","location":"kord-extensions/dev.kordex.core.components.menus.user/-public-user-select-menu/-public-user-select-menu.html","searchKeys":["PublicUserSelectMenu","constructor(timeoutTask: Task?, modal: () -> M? = null)","dev.kordex.core.components.menus.user.PublicUserSelectMenu.PublicUserSelectMenu"]},{"name":"constructor(timeoutTask: Task?, modal: () -> M? = null, initialResponseBuilder: InitialEphemeralSelectMenuResponseBuilder = null)","description":"dev.kordex.core.components.menus.EphemeralSelectMenu.EphemeralSelectMenu","location":"kord-extensions/dev.kordex.core.components.menus/-ephemeral-select-menu/-ephemeral-select-menu.html","searchKeys":["EphemeralSelectMenu","constructor(timeoutTask: Task?, modal: () -> M? = null, initialResponseBuilder: InitialEphemeralSelectMenuResponseBuilder = null)","dev.kordex.core.components.menus.EphemeralSelectMenu.EphemeralSelectMenu"]},{"name":"constructor(timeoutTask: Task?, modal: () -> M? = null, initialResponseBuilder: InitialEphemeralSelectMenuResponseBuilder = null)","description":"dev.kordex.core.components.menus.PublicSelectMenu.PublicSelectMenu","location":"kord-extensions/dev.kordex.core.components.menus/-public-select-menu/-public-select-menu.html","searchKeys":["PublicSelectMenu","constructor(timeoutTask: Task?, modal: () -> M? = null, initialResponseBuilder: InitialEphemeralSelectMenuResponseBuilder = null)","dev.kordex.core.components.menus.PublicSelectMenu.PublicSelectMenu"]},{"name":"constructor(type: BreadcrumbType = BreadcrumbType.Default)","description":"dev.kordex.core.sentry.captures.SentryBreadcrumbCapture.SentryBreadcrumbCapture","location":"kord-extensions/dev.kordex.core.sentry.captures/-sentry-breadcrumb-capture/-sentry-breadcrumb-capture.html","searchKeys":["SentryBreadcrumbCapture","constructor(type: BreadcrumbType = BreadcrumbType.Default)","dev.kordex.core.sentry.captures.SentryBreadcrumbCapture.SentryBreadcrumbCapture"]},{"name":"constructor(typeName: Key, getter: suspend (String, Locale) -> E?, choices: Map<Key, E>, validator: Validator<E> = null)","description":"dev.kordex.core.commands.application.slash.converters.impl.EnumChoiceConverter.EnumChoiceConverter","location":"kord-extensions/dev.kordex.core.commands.application.slash.converters.impl/-enum-choice-converter/-enum-choice-converter.html","searchKeys":["EnumChoiceConverter","constructor(typeName: Key, getter: suspend (String, Locale) -> E?, choices: Map<Key, E>, validator: Validator<E> = null)","dev.kordex.core.commands.application.slash.converters.impl.EnumChoiceConverter.EnumChoiceConverter"]},{"name":"constructor(typeName: Key, getter: suspend (String, Locale) -> E?, validator: Validator<E> = null)","description":"dev.kordex.core.commands.converters.impl.EnumConverter.EnumConverter","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-enum-converter/-enum-converter.html","searchKeys":["EnumConverter","constructor(typeName: Key, getter: suspend (String, Locale) -> E?, validator: Validator<E> = null)","dev.kordex.core.commands.converters.impl.EnumConverter.EnumConverter"]},{"name":"constructor(unit: String)","description":"dev.kordex.core.parsers.InvalidTimeUnitException.InvalidTimeUnitException","location":"kord-extensions/dev.kordex.core.parsers/-invalid-time-unit-exception/-invalid-time-unit-exception.html","searchKeys":["InvalidTimeUnitException","constructor(unit: String)","dev.kordex.core.parsers.InvalidTimeUnitException.InvalidTimeUnitException"]},{"name":"constructor(useReply: Boolean = true, validator: Validator<User> = null)","description":"dev.kordex.core.commands.converters.impl.UserConverter.UserConverter","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-user-converter/-user-converter.html","searchKeys":["UserConverter","constructor(useReply: Boolean = true, validator: Validator<User> = null)","dev.kordex.core.commands.converters.impl.UserConverter.UserConverter"]},{"name":"constructor(userId: Snowflake, rejectionReason: String?, guildId: Snowflake, createdAt: Instant, status: ApplicationStatus, formResponses: List<GuildJoinRequestResponse>, actionedByUser: DiscordUser? = null, actionedAtSnowflake: Snowflake? = null, id: Snowflake, user: DiscordUser)","description":"dev.kordex.core.events.extra.models.GuildJoinRequest.GuildJoinRequest","location":"kord-extensions/dev.kordex.core.events.extra.models/-guild-join-request/-guild-join-request.html","searchKeys":["GuildJoinRequest","constructor(userId: Snowflake, rejectionReason: String?, guildId: Snowflake, createdAt: Instant, status: ApplicationStatus, formResponses: List<GuildJoinRequestResponse>, actionedByUser: DiscordUser? = null, actionedAtSnowflake: Snowflake? = null, id: Snowflake, user: DiscordUser)","dev.kordex.core.events.extra.models.GuildJoinRequest.GuildJoinRequest"]},{"name":"constructor(uuid: UUID? = null)","description":"dev.kordex.core.datacollection.State.State","location":"kord-extensions/dev.kordex.core.datacollection/-state/-state.html","searchKeys":["State","constructor(uuid: UUID? = null)","dev.kordex.core.datacollection.State.State"]},{"name":"constructor(validator: Validator<Attachment> = null)","description":"dev.kordex.core.commands.converters.impl.AttachmentConverter.AttachmentConverter","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-attachment-converter/-attachment-converter.html","searchKeys":["AttachmentConverter","constructor(validator: Validator<Attachment> = null)","dev.kordex.core.commands.converters.impl.AttachmentConverter.AttachmentConverter"]},{"name":"constructor(validator: Validator<Boolean> = null)","description":"dev.kordex.core.commands.converters.impl.BooleanConverter.BooleanConverter","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-boolean-converter/-boolean-converter.html","searchKeys":["BooleanConverter","constructor(validator: Validator<Boolean> = null)","dev.kordex.core.commands.converters.impl.BooleanConverter.BooleanConverter"]},{"name":"constructor(validator: Validator<Color> = null)","description":"dev.kordex.core.commands.converters.impl.ColorConverter.ColorConverter","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-color-converter/-color-converter.html","searchKeys":["ColorConverter","constructor(validator: Validator<Color> = null)","dev.kordex.core.commands.converters.impl.ColorConverter.ColorConverter"]},{"name":"constructor(validator: Validator<Emoji> = null)","description":"dev.kordex.core.commands.converters.impl.EmojiConverter.EmojiConverter","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-emoji-converter/-emoji-converter.html","searchKeys":["EmojiConverter","constructor(validator: Validator<Emoji> = null)","dev.kordex.core.commands.converters.impl.EmojiConverter.EmojiConverter"]},{"name":"constructor(validator: Validator<FormattedTimestamp> = null)","description":"dev.kordex.core.commands.converters.impl.TimestampConverter.TimestampConverter","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-timestamp-converter/-timestamp-converter.html","searchKeys":["TimestampConverter","constructor(validator: Validator<FormattedTimestamp> = null)","dev.kordex.core.commands.converters.impl.TimestampConverter.TimestampConverter"]},{"name":"constructor(validator: Validator<Guild> = null)","description":"dev.kordex.core.commands.converters.impl.GuildConverter.GuildConverter","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-guild-converter/-guild-converter.html","searchKeys":["GuildConverter","constructor(validator: Validator<Guild> = null)","dev.kordex.core.commands.converters.impl.GuildConverter.GuildConverter"]},{"name":"constructor(validator: Validator<Locale> = null)","description":"dev.kordex.core.commands.converters.impl.SupportedLocaleConverter.SupportedLocaleConverter","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-supported-locale-converter/-supported-locale-converter.html","searchKeys":["SupportedLocaleConverter","constructor(validator: Validator<Locale> = null)","dev.kordex.core.commands.converters.impl.SupportedLocaleConverter.SupportedLocaleConverter"]},{"name":"constructor(validator: Validator<SentryId> = null)","description":"dev.kordex.core.sentry.SentryIdConverter.SentryIdConverter","location":"kord-extensions/dev.kordex.core.sentry/-sentry-id-converter/-sentry-id-converter.html","searchKeys":["SentryIdConverter","constructor(validator: Validator<SentryId> = null)","dev.kordex.core.sentry.SentryIdConverter.SentryIdConverter"]},{"name":"constructor(validator: Validator<Snowflake> = null)","description":"dev.kordex.core.commands.converters.impl.SnowflakeConverter.SnowflakeConverter","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-snowflake-converter/-snowflake-converter.html","searchKeys":["SnowflakeConverter","constructor(validator: Validator<Snowflake> = null)","dev.kordex.core.commands.converters.impl.SnowflakeConverter.SnowflakeConverter"]},{"name":"constructor(validator: Validator<String> = null)","description":"dev.kordex.core.commands.converters.impl.EmailConverter.EmailConverter","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-email-converter/-email-converter.html","searchKeys":["EmailConverter","constructor(validator: Validator<String> = null)","dev.kordex.core.commands.converters.impl.EmailConverter.EmailConverter"]},{"name":"constructor(validator: Validator<T> = null)","description":"dev.kordex.core.commands.converters.SingleConverter.SingleConverter","location":"kord-extensions/dev.kordex.core.commands.converters/-single-converter/-single-converter.html","searchKeys":["SingleConverter","constructor(validator: Validator<T> = null)","dev.kordex.core.commands.converters.SingleConverter.SingleConverter"]},{"name":"constructor(value: T, context: CommandContext)","description":"dev.kordex.core.commands.converters.builders.ValidationContext.ValidationContext","location":"kord-extensions/dev.kordex.core.commands.converters.builders/-validation-context/-validation-context.html","searchKeys":["ValidationContext","constructor(value: T, context: CommandContext)","dev.kordex.core.commands.converters.builders.ValidationContext.ValidationContext"]},{"name":"data class Argument<T>(val displayName: Key, val description: Key, val converter: Converter<T, *, *, *>)","description":"dev.kordex.core.commands.Argument","location":"kord-extensions/dev.kordex.core.commands/-argument/index.html","searchKeys":["Argument","data class Argument<T>(val displayName: Key, val description: Key, val converter: Converter<T, *, *, *>)","dev.kordex.core.commands.Argument"]},{"name":"data class Bundle(val name: String)","description":"dev.kordex.core.i18n.types.Bundle","location":"kord-extensions/dev.kordex.core.i18n.types/-bundle/index.html","searchKeys":["Bundle","data class Bundle(val name: String)","dev.kordex.core.i18n.types.Bundle"]},{"name":"data class Change<T>(val old: Optional<T>, val new: T, val oldState: ChangeSet.State, val newState: ChangeSet.State)","description":"dev.kordex.core.utils.deltas.ChangeSet.Change","location":"kord-extensions/dev.kordex.core.utils.deltas/-change-set/-change/index.html","searchKeys":["Change","data class Change<T>(val old: Optional<T>, val new: T, val oldState: ChangeSet.State, val newState: ChangeSet.State)","dev.kordex.core.utils.deltas.ChangeSet.Change"]},{"name":"data class ChatCommandFailedChecksEvent(val command: ChatCommand<*>, val event: MessageCreateEvent, val reason: Key) : CommandFailedChecksEvent<ChatCommand<*>, MessageCreateEvent> ","description":"dev.kordex.core.commands.events.ChatCommandFailedChecksEvent","location":"kord-extensions/dev.kordex.core.commands.events/-chat-command-failed-checks-event/index.html","searchKeys":["ChatCommandFailedChecksEvent","data class ChatCommandFailedChecksEvent(val command: ChatCommand<*>, val event: MessageCreateEvent, val reason: Key) : CommandFailedChecksEvent<ChatCommand<*>, MessageCreateEvent> ","dev.kordex.core.commands.events.ChatCommandFailedChecksEvent"]},{"name":"data class ChatCommandFailedParsingEvent(val command: ChatCommand<*>, val event: MessageCreateEvent, val exception: ArgumentParsingException) : CommandFailedParsingEvent<ChatCommand<*>, MessageCreateEvent> ","description":"dev.kordex.core.commands.events.ChatCommandFailedParsingEvent","location":"kord-extensions/dev.kordex.core.commands.events/-chat-command-failed-parsing-event/index.html","searchKeys":["ChatCommandFailedParsingEvent","data class ChatCommandFailedParsingEvent(val command: ChatCommand<*>, val event: MessageCreateEvent, val exception: ArgumentParsingException) : CommandFailedParsingEvent<ChatCommand<*>, MessageCreateEvent> ","dev.kordex.core.commands.events.ChatCommandFailedParsingEvent"]},{"name":"data class ChatCommandFailedWithExceptionEvent(val command: ChatCommand<*>, val event: MessageCreateEvent, val throwable: Throwable) : CommandFailedWithExceptionEvent<ChatCommand<*>, MessageCreateEvent> ","description":"dev.kordex.core.commands.events.ChatCommandFailedWithExceptionEvent","location":"kord-extensions/dev.kordex.core.commands.events/-chat-command-failed-with-exception-event/index.html","searchKeys":["ChatCommandFailedWithExceptionEvent","data class ChatCommandFailedWithExceptionEvent(val command: ChatCommand<*>, val event: MessageCreateEvent, val throwable: Throwable) : CommandFailedWithExceptionEvent<ChatCommand<*>, MessageCreateEvent> ","dev.kordex.core.commands.events.ChatCommandFailedWithExceptionEvent"]},{"name":"data class ChatCommandInvocationEvent(val command: ChatCommand<*>, val event: MessageCreateEvent) : CommandInvocationEvent<ChatCommand<*>, MessageCreateEvent> ","description":"dev.kordex.core.commands.events.ChatCommandInvocationEvent","location":"kord-extensions/dev.kordex.core.commands.events/-chat-command-invocation-event/index.html","searchKeys":["ChatCommandInvocationEvent","data class ChatCommandInvocationEvent(val command: ChatCommand<*>, val event: MessageCreateEvent) : CommandInvocationEvent<ChatCommand<*>, MessageCreateEvent> ","dev.kordex.core.commands.events.ChatCommandInvocationEvent"]},{"name":"data class ChatCommandSucceededEvent(val command: ChatCommand<*>, val event: MessageCreateEvent) : CommandSucceededEvent<ChatCommand<*>, MessageCreateEvent> ","description":"dev.kordex.core.commands.events.ChatCommandSucceededEvent","location":"kord-extensions/dev.kordex.core.commands.events/-chat-command-succeeded-event/index.html","searchKeys":["ChatCommandSucceededEvent","data class ChatCommandSucceededEvent(val command: ChatCommand<*>, val event: MessageCreateEvent) : CommandSucceededEvent<ChatCommand<*>, MessageCreateEvent> ","dev.kordex.core.commands.events.ChatCommandSucceededEvent"]},{"name":"data class Copyright(val name: String, val license: String, val type: CopyrightType, val url: String?)","description":"dev.kordex.core.builders.about.Copyright","location":"kord-extensions/dev.kordex.core.builders.about/-copyright/index.html","searchKeys":["Copyright","data class Copyright(val name: String, val license: String, val type: CopyrightType, val url: String?)","dev.kordex.core.builders.about.Copyright"]},{"name":"data class EphemeralMessageCommandFailedChecksEvent(val command: EphemeralMessageCommand<*>, val event: MessageCommandInteractionCreateEvent, val reason: Key) : MessageCommandFailedChecksEvent<EphemeralMessageCommand<*>> ","description":"dev.kordex.core.commands.events.EphemeralMessageCommandFailedChecksEvent","location":"kord-extensions/dev.kordex.core.commands.events/-ephemeral-message-command-failed-checks-event/index.html","searchKeys":["EphemeralMessageCommandFailedChecksEvent","data class EphemeralMessageCommandFailedChecksEvent(val command: EphemeralMessageCommand<*>, val event: MessageCommandInteractionCreateEvent, val reason: Key) : MessageCommandFailedChecksEvent<EphemeralMessageCommand<*>> ","dev.kordex.core.commands.events.EphemeralMessageCommandFailedChecksEvent"]},{"name":"data class EphemeralMessageCommandFailedWithExceptionEvent(val command: EphemeralMessageCommand<*>, val event: MessageCommandInteractionCreateEvent, val throwable: Throwable) : MessageCommandFailedWithExceptionEvent<EphemeralMessageCommand<*>> ","description":"dev.kordex.core.commands.events.EphemeralMessageCommandFailedWithExceptionEvent","location":"kord-extensions/dev.kordex.core.commands.events/-ephemeral-message-command-failed-with-exception-event/index.html","searchKeys":["EphemeralMessageCommandFailedWithExceptionEvent","data class EphemeralMessageCommandFailedWithExceptionEvent(val command: EphemeralMessageCommand<*>, val event: MessageCommandInteractionCreateEvent, val throwable: Throwable) : MessageCommandFailedWithExceptionEvent<EphemeralMessageCommand<*>> ","dev.kordex.core.commands.events.EphemeralMessageCommandFailedWithExceptionEvent"]},{"name":"data class EphemeralMessageCommandInvocationEvent(val command: EphemeralMessageCommand<*>, val event: MessageCommandInteractionCreateEvent) : MessageCommandInvocationEvent<EphemeralMessageCommand<*>> ","description":"dev.kordex.core.commands.events.EphemeralMessageCommandInvocationEvent","location":"kord-extensions/dev.kordex.core.commands.events/-ephemeral-message-command-invocation-event/index.html","searchKeys":["EphemeralMessageCommandInvocationEvent","data class EphemeralMessageCommandInvocationEvent(val command: EphemeralMessageCommand<*>, val event: MessageCommandInteractionCreateEvent) : MessageCommandInvocationEvent<EphemeralMessageCommand<*>> ","dev.kordex.core.commands.events.EphemeralMessageCommandInvocationEvent"]},{"name":"data class EphemeralMessageCommandSucceededEvent(val command: EphemeralMessageCommand<*>, val event: MessageCommandInteractionCreateEvent) : MessageCommandSucceededEvent<EphemeralMessageCommand<*>> ","description":"dev.kordex.core.commands.events.EphemeralMessageCommandSucceededEvent","location":"kord-extensions/dev.kordex.core.commands.events/-ephemeral-message-command-succeeded-event/index.html","searchKeys":["EphemeralMessageCommandSucceededEvent","data class EphemeralMessageCommandSucceededEvent(val command: EphemeralMessageCommand<*>, val event: MessageCommandInteractionCreateEvent) : MessageCommandSucceededEvent<EphemeralMessageCommand<*>> ","dev.kordex.core.commands.events.EphemeralMessageCommandSucceededEvent"]},{"name":"data class EphemeralSlashCommandFailedChecksEvent(val command: EphemeralSlashCommand<*, *>, val event: ChatInputCommandInteractionCreateEvent, val reason: Key) : SlashCommandFailedChecksEvent<EphemeralSlashCommand<*, *>> ","description":"dev.kordex.core.commands.events.EphemeralSlashCommandFailedChecksEvent","location":"kord-extensions/dev.kordex.core.commands.events/-ephemeral-slash-command-failed-checks-event/index.html","searchKeys":["EphemeralSlashCommandFailedChecksEvent","data class EphemeralSlashCommandFailedChecksEvent(val command: EphemeralSlashCommand<*, *>, val event: ChatInputCommandInteractionCreateEvent, val reason: Key) : SlashCommandFailedChecksEvent<EphemeralSlashCommand<*, *>> ","dev.kordex.core.commands.events.EphemeralSlashCommandFailedChecksEvent"]},{"name":"data class EphemeralSlashCommandFailedParsingEvent(val command: EphemeralSlashCommand<*, *>, val event: ChatInputCommandInteractionCreateEvent, val exception: ArgumentParsingException) : SlashCommandFailedParsingEvent<EphemeralSlashCommand<*, *>> ","description":"dev.kordex.core.commands.events.EphemeralSlashCommandFailedParsingEvent","location":"kord-extensions/dev.kordex.core.commands.events/-ephemeral-slash-command-failed-parsing-event/index.html","searchKeys":["EphemeralSlashCommandFailedParsingEvent","data class EphemeralSlashCommandFailedParsingEvent(val command: EphemeralSlashCommand<*, *>, val event: ChatInputCommandInteractionCreateEvent, val exception: ArgumentParsingException) : SlashCommandFailedParsingEvent<EphemeralSlashCommand<*, *>> ","dev.kordex.core.commands.events.EphemeralSlashCommandFailedParsingEvent"]},{"name":"data class EphemeralSlashCommandFailedWithExceptionEvent(val command: EphemeralSlashCommand<*, *>, val event: ChatInputCommandInteractionCreateEvent, val throwable: Throwable) : SlashCommandFailedWithExceptionEvent<EphemeralSlashCommand<*, *>> ","description":"dev.kordex.core.commands.events.EphemeralSlashCommandFailedWithExceptionEvent","location":"kord-extensions/dev.kordex.core.commands.events/-ephemeral-slash-command-failed-with-exception-event/index.html","searchKeys":["EphemeralSlashCommandFailedWithExceptionEvent","data class EphemeralSlashCommandFailedWithExceptionEvent(val command: EphemeralSlashCommand<*, *>, val event: ChatInputCommandInteractionCreateEvent, val throwable: Throwable) : SlashCommandFailedWithExceptionEvent<EphemeralSlashCommand<*, *>> ","dev.kordex.core.commands.events.EphemeralSlashCommandFailedWithExceptionEvent"]},{"name":"data class EphemeralSlashCommandInvocationEvent(val command: EphemeralSlashCommand<*, *>, val event: ChatInputCommandInteractionCreateEvent) : SlashCommandInvocationEvent<EphemeralSlashCommand<*, *>> ","description":"dev.kordex.core.commands.events.EphemeralSlashCommandInvocationEvent","location":"kord-extensions/dev.kordex.core.commands.events/-ephemeral-slash-command-invocation-event/index.html","searchKeys":["EphemeralSlashCommandInvocationEvent","data class EphemeralSlashCommandInvocationEvent(val command: EphemeralSlashCommand<*, *>, val event: ChatInputCommandInteractionCreateEvent) : SlashCommandInvocationEvent<EphemeralSlashCommand<*, *>> ","dev.kordex.core.commands.events.EphemeralSlashCommandInvocationEvent"]},{"name":"data class EphemeralSlashCommandSucceededEvent(val command: EphemeralSlashCommand<*, *>, val event: ChatInputCommandInteractionCreateEvent) : SlashCommandSucceededEvent<EphemeralSlashCommand<*, *>> ","description":"dev.kordex.core.commands.events.EphemeralSlashCommandSucceededEvent","location":"kord-extensions/dev.kordex.core.commands.events/-ephemeral-slash-command-succeeded-event/index.html","searchKeys":["EphemeralSlashCommandSucceededEvent","data class EphemeralSlashCommandSucceededEvent(val command: EphemeralSlashCommand<*, *>, val event: ChatInputCommandInteractionCreateEvent) : SlashCommandSucceededEvent<EphemeralSlashCommand<*, *>> ","dev.kordex.core.commands.events.EphemeralSlashCommandSucceededEvent"]},{"name":"data class EphemeralUserCommandFailedChecksEvent(val command: EphemeralUserCommand<*>, val event: UserCommandInteractionCreateEvent, val reason: Key) : UserCommandFailedChecksEvent<EphemeralUserCommand<*>> ","description":"dev.kordex.core.commands.events.EphemeralUserCommandFailedChecksEvent","location":"kord-extensions/dev.kordex.core.commands.events/-ephemeral-user-command-failed-checks-event/index.html","searchKeys":["EphemeralUserCommandFailedChecksEvent","data class EphemeralUserCommandFailedChecksEvent(val command: EphemeralUserCommand<*>, val event: UserCommandInteractionCreateEvent, val reason: Key) : UserCommandFailedChecksEvent<EphemeralUserCommand<*>> ","dev.kordex.core.commands.events.EphemeralUserCommandFailedChecksEvent"]},{"name":"data class EphemeralUserCommandFailedWithExceptionEvent(val command: EphemeralUserCommand<*>, val event: UserCommandInteractionCreateEvent, val throwable: Throwable) : UserCommandFailedWithExceptionEvent<EphemeralUserCommand<*>> ","description":"dev.kordex.core.commands.events.EphemeralUserCommandFailedWithExceptionEvent","location":"kord-extensions/dev.kordex.core.commands.events/-ephemeral-user-command-failed-with-exception-event/index.html","searchKeys":["EphemeralUserCommandFailedWithExceptionEvent","data class EphemeralUserCommandFailedWithExceptionEvent(val command: EphemeralUserCommand<*>, val event: UserCommandInteractionCreateEvent, val throwable: Throwable) : UserCommandFailedWithExceptionEvent<EphemeralUserCommand<*>> ","dev.kordex.core.commands.events.EphemeralUserCommandFailedWithExceptionEvent"]},{"name":"data class EphemeralUserCommandInvocationEvent(val command: EphemeralUserCommand<*>, val event: UserCommandInteractionCreateEvent) : UserCommandInvocationEvent<EphemeralUserCommand<*>> ","description":"dev.kordex.core.commands.events.EphemeralUserCommandInvocationEvent","location":"kord-extensions/dev.kordex.core.commands.events/-ephemeral-user-command-invocation-event/index.html","searchKeys":["EphemeralUserCommandInvocationEvent","data class EphemeralUserCommandInvocationEvent(val command: EphemeralUserCommand<*>, val event: UserCommandInteractionCreateEvent) : UserCommandInvocationEvent<EphemeralUserCommand<*>> ","dev.kordex.core.commands.events.EphemeralUserCommandInvocationEvent"]},{"name":"data class EphemeralUserCommandSucceededEvent(val command: EphemeralUserCommand<*>, val event: UserCommandInteractionCreateEvent) : UserCommandSucceededEvent<EphemeralUserCommand<*>> ","description":"dev.kordex.core.commands.events.EphemeralUserCommandSucceededEvent","location":"kord-extensions/dev.kordex.core.commands.events/-ephemeral-user-command-succeeded-event/index.html","searchKeys":["EphemeralUserCommandSucceededEvent","data class EphemeralUserCommandSucceededEvent(val command: EphemeralUserCommand<*>, val event: UserCommandInteractionCreateEvent) : UserCommandSucceededEvent<EphemeralUserCommand<*>> ","dev.kordex.core.commands.events.EphemeralUserCommandSucceededEvent"]},{"name":"data class ExtensionStateEvent(val extension: Extension, val state: ExtensionState) : KordExEvent","description":"dev.kordex.core.events.ExtensionStateEvent","location":"kord-extensions/dev.kordex.core.events/-extension-state-event/index.html","searchKeys":["ExtensionStateEvent","data class ExtensionStateEvent(val extension: Extension, val state: ExtensionState) : KordExEvent","dev.kordex.core.events.ExtensionStateEvent"]},{"name":"data class FormattedTimestamp(val instant: Instant, val format: TimestampType)","description":"dev.kordex.core.commands.converters.impl.FormattedTimestamp","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-formatted-timestamp/index.html","searchKeys":["FormattedTimestamp","data class FormattedTimestamp(val instant: Instant, val format: TimestampType)","dev.kordex.core.commands.converters.impl.FormattedTimestamp"]},{"name":"data class GuildJoinRequest(val userId: Snowflake, val rejectionReason: String?, val guildId: Snowflake, val createdAt: Instant, val status: ApplicationStatus, val formResponses: List<GuildJoinRequestResponse>, val actionedByUser: DiscordUser? = null, val actionedAtSnowflake: Snowflake? = null, val id: Snowflake, val user: DiscordUser)","description":"dev.kordex.core.events.extra.models.GuildJoinRequest","location":"kord-extensions/dev.kordex.core.events.extra.models/-guild-join-request/index.html","searchKeys":["GuildJoinRequest","data class GuildJoinRequest(val userId: Snowflake, val rejectionReason: String?, val guildId: Snowflake, val createdAt: Instant, val status: ApplicationStatus, val formResponses: List<GuildJoinRequestResponse>, val actionedByUser: DiscordUser? = null, val actionedAtSnowflake: Snowflake? = null, val id: Snowflake, val user: DiscordUser)","dev.kordex.core.events.extra.models.GuildJoinRequest"]},{"name":"data class GuildJoinRequestDelete(val guildId: Snowflake, val userId: Snowflake, val id: Snowflake)","description":"dev.kordex.core.events.extra.models.GuildJoinRequestDelete","location":"kord-extensions/dev.kordex.core.events.extra.models/-guild-join-request-delete/index.html","searchKeys":["GuildJoinRequestDelete","data class GuildJoinRequestDelete(val guildId: Snowflake, val userId: Snowflake, val id: Snowflake)","dev.kordex.core.events.extra.models.GuildJoinRequestDelete"]},{"name":"data class GuildJoinRequestUpdate(val status: ApplicationStatus, val request: GuildJoinRequest, val guildId: Snowflake)","description":"dev.kordex.core.events.extra.models.GuildJoinRequestUpdate","location":"kord-extensions/dev.kordex.core.events.extra.models/-guild-join-request-update/index.html","searchKeys":["GuildJoinRequestUpdate","data class GuildJoinRequestUpdate(val status: ApplicationStatus, val request: GuildJoinRequest, val guildId: Snowflake)","dev.kordex.core.events.extra.models.GuildJoinRequestUpdate"]},{"name":"data class GuildJoinRequestUser(val flags: UserFlags, val displayName: String?, val username: String, val id: Snowflake, val discriminator: Int, val avatar: String)","description":"dev.kordex.core.events.extra.models.GuildJoinRequestUser","location":"kord-extensions/dev.kordex.core.events.extra.models/-guild-join-request-user/index.html","searchKeys":["GuildJoinRequestUser","data class GuildJoinRequestUser(val flags: UserFlags, val displayName: String?, val username: String, val id: Snowflake, val discriminator: Int, val avatar: String)","dev.kordex.core.events.extra.models.GuildJoinRequestUser"]},{"name":"data class Key(val key: String, val bundle: Bundle? = null, val locale: Locale? = null, val presetPlaceholderPosition: PlaceholderPosition = PlaceholderPosition.FIRST, val translateNestedKeys: Boolean = true, val ordinalPlaceholders: List<Any?> = listOf(), val namedPlaceholders: Map<String, Any?> = mapOf(), val postProcessors: List<PostProcessor> = listOf())","description":"dev.kordex.core.i18n.types.Key","location":"kord-extensions/dev.kordex.core.i18n.types/-key/index.html","searchKeys":["Key","data class Key(val key: String, val bundle: Bundle? = null, val locale: Locale? = null, val presetPlaceholderPosition: PlaceholderPosition = PlaceholderPosition.FIRST, val translateNestedKeys: Boolean = true, val ordinalPlaceholders: List<Any?> = listOf(), val namedPlaceholders: Map<String, Any?> = mapOf(), val postProcessors: List<PostProcessor> = listOf())","dev.kordex.core.i18n.types.Key"]},{"name":"data class Localized<T>(val default: T, val translations: MutableMap<Locale, String>)","description":"dev.kordex.core.commands.application.Localized","location":"kord-extensions/dev.kordex.core.commands.application/-localized/index.html","searchKeys":["Localized","data class Localized<T>(val default: T, val translations: MutableMap<Locale, String>)","dev.kordex.core.commands.application.Localized"]},{"name":"data class PublicMessageCommandFailedChecksEvent(val command: PublicMessageCommand<*>, val event: MessageCommandInteractionCreateEvent, val reason: Key) : MessageCommandFailedChecksEvent<PublicMessageCommand<*>> ","description":"dev.kordex.core.commands.events.PublicMessageCommandFailedChecksEvent","location":"kord-extensions/dev.kordex.core.commands.events/-public-message-command-failed-checks-event/index.html","searchKeys":["PublicMessageCommandFailedChecksEvent","data class PublicMessageCommandFailedChecksEvent(val command: PublicMessageCommand<*>, val event: MessageCommandInteractionCreateEvent, val reason: Key) : MessageCommandFailedChecksEvent<PublicMessageCommand<*>> ","dev.kordex.core.commands.events.PublicMessageCommandFailedChecksEvent"]},{"name":"data class PublicMessageCommandFailedWithExceptionEvent(val command: PublicMessageCommand<*>, val event: MessageCommandInteractionCreateEvent, val throwable: Throwable) : MessageCommandFailedWithExceptionEvent<PublicMessageCommand<*>> ","description":"dev.kordex.core.commands.events.PublicMessageCommandFailedWithExceptionEvent","location":"kord-extensions/dev.kordex.core.commands.events/-public-message-command-failed-with-exception-event/index.html","searchKeys":["PublicMessageCommandFailedWithExceptionEvent","data class PublicMessageCommandFailedWithExceptionEvent(val command: PublicMessageCommand<*>, val event: MessageCommandInteractionCreateEvent, val throwable: Throwable) : MessageCommandFailedWithExceptionEvent<PublicMessageCommand<*>> ","dev.kordex.core.commands.events.PublicMessageCommandFailedWithExceptionEvent"]},{"name":"data class PublicMessageCommandInvocationEvent(val command: PublicMessageCommand<*>, val event: MessageCommandInteractionCreateEvent) : MessageCommandInvocationEvent<PublicMessageCommand<*>> ","description":"dev.kordex.core.commands.events.PublicMessageCommandInvocationEvent","location":"kord-extensions/dev.kordex.core.commands.events/-public-message-command-invocation-event/index.html","searchKeys":["PublicMessageCommandInvocationEvent","data class PublicMessageCommandInvocationEvent(val command: PublicMessageCommand<*>, val event: MessageCommandInteractionCreateEvent) : MessageCommandInvocationEvent<PublicMessageCommand<*>> ","dev.kordex.core.commands.events.PublicMessageCommandInvocationEvent"]},{"name":"data class PublicMessageCommandSucceededEvent(val command: PublicMessageCommand<*>, val event: MessageCommandInteractionCreateEvent) : MessageCommandSucceededEvent<PublicMessageCommand<*>> ","description":"dev.kordex.core.commands.events.PublicMessageCommandSucceededEvent","location":"kord-extensions/dev.kordex.core.commands.events/-public-message-command-succeeded-event/index.html","searchKeys":["PublicMessageCommandSucceededEvent","data class PublicMessageCommandSucceededEvent(val command: PublicMessageCommand<*>, val event: MessageCommandInteractionCreateEvent) : MessageCommandSucceededEvent<PublicMessageCommand<*>> ","dev.kordex.core.commands.events.PublicMessageCommandSucceededEvent"]},{"name":"data class PublicSlashCommandFailedChecksEvent(val command: PublicSlashCommand<*, *>, val event: ChatInputCommandInteractionCreateEvent, val reason: Key) : SlashCommandFailedChecksEvent<PublicSlashCommand<*, *>> ","description":"dev.kordex.core.commands.events.PublicSlashCommandFailedChecksEvent","location":"kord-extensions/dev.kordex.core.commands.events/-public-slash-command-failed-checks-event/index.html","searchKeys":["PublicSlashCommandFailedChecksEvent","data class PublicSlashCommandFailedChecksEvent(val command: PublicSlashCommand<*, *>, val event: ChatInputCommandInteractionCreateEvent, val reason: Key) : SlashCommandFailedChecksEvent<PublicSlashCommand<*, *>> ","dev.kordex.core.commands.events.PublicSlashCommandFailedChecksEvent"]},{"name":"data class PublicSlashCommandFailedParsingEvent(val command: PublicSlashCommand<*, *>, val event: ChatInputCommandInteractionCreateEvent, val exception: ArgumentParsingException) : SlashCommandFailedParsingEvent<PublicSlashCommand<*, *>> ","description":"dev.kordex.core.commands.events.PublicSlashCommandFailedParsingEvent","location":"kord-extensions/dev.kordex.core.commands.events/-public-slash-command-failed-parsing-event/index.html","searchKeys":["PublicSlashCommandFailedParsingEvent","data class PublicSlashCommandFailedParsingEvent(val command: PublicSlashCommand<*, *>, val event: ChatInputCommandInteractionCreateEvent, val exception: ArgumentParsingException) : SlashCommandFailedParsingEvent<PublicSlashCommand<*, *>> ","dev.kordex.core.commands.events.PublicSlashCommandFailedParsingEvent"]},{"name":"data class PublicSlashCommandFailedWithExceptionEvent(val command: PublicSlashCommand<*, *>, val event: ChatInputCommandInteractionCreateEvent, val throwable: Throwable) : SlashCommandFailedWithExceptionEvent<PublicSlashCommand<*, *>> ","description":"dev.kordex.core.commands.events.PublicSlashCommandFailedWithExceptionEvent","location":"kord-extensions/dev.kordex.core.commands.events/-public-slash-command-failed-with-exception-event/index.html","searchKeys":["PublicSlashCommandFailedWithExceptionEvent","data class PublicSlashCommandFailedWithExceptionEvent(val command: PublicSlashCommand<*, *>, val event: ChatInputCommandInteractionCreateEvent, val throwable: Throwable) : SlashCommandFailedWithExceptionEvent<PublicSlashCommand<*, *>> ","dev.kordex.core.commands.events.PublicSlashCommandFailedWithExceptionEvent"]},{"name":"data class PublicSlashCommandInvocationEvent(val command: PublicSlashCommand<*, *>, val event: ChatInputCommandInteractionCreateEvent) : SlashCommandInvocationEvent<PublicSlashCommand<*, *>> ","description":"dev.kordex.core.commands.events.PublicSlashCommandInvocationEvent","location":"kord-extensions/dev.kordex.core.commands.events/-public-slash-command-invocation-event/index.html","searchKeys":["PublicSlashCommandInvocationEvent","data class PublicSlashCommandInvocationEvent(val command: PublicSlashCommand<*, *>, val event: ChatInputCommandInteractionCreateEvent) : SlashCommandInvocationEvent<PublicSlashCommand<*, *>> ","dev.kordex.core.commands.events.PublicSlashCommandInvocationEvent"]},{"name":"data class PublicSlashCommandSucceededEvent(val command: PublicSlashCommand<*, *>, val event: ChatInputCommandInteractionCreateEvent) : SlashCommandSucceededEvent<PublicSlashCommand<*, *>> ","description":"dev.kordex.core.commands.events.PublicSlashCommandSucceededEvent","location":"kord-extensions/dev.kordex.core.commands.events/-public-slash-command-succeeded-event/index.html","searchKeys":["PublicSlashCommandSucceededEvent","data class PublicSlashCommandSucceededEvent(val command: PublicSlashCommand<*, *>, val event: ChatInputCommandInteractionCreateEvent) : SlashCommandSucceededEvent<PublicSlashCommand<*, *>> ","dev.kordex.core.commands.events.PublicSlashCommandSucceededEvent"]},{"name":"data class PublicUserCommandFailedChecksEvent(val command: PublicUserCommand<*>, val event: UserCommandInteractionCreateEvent, val reason: Key) : UserCommandFailedChecksEvent<PublicUserCommand<*>> ","description":"dev.kordex.core.commands.events.PublicUserCommandFailedChecksEvent","location":"kord-extensions/dev.kordex.core.commands.events/-public-user-command-failed-checks-event/index.html","searchKeys":["PublicUserCommandFailedChecksEvent","data class PublicUserCommandFailedChecksEvent(val command: PublicUserCommand<*>, val event: UserCommandInteractionCreateEvent, val reason: Key) : UserCommandFailedChecksEvent<PublicUserCommand<*>> ","dev.kordex.core.commands.events.PublicUserCommandFailedChecksEvent"]},{"name":"data class PublicUserCommandFailedWithExceptionEvent(val command: PublicUserCommand<*>, val event: UserCommandInteractionCreateEvent, val throwable: Throwable) : UserCommandFailedWithExceptionEvent<PublicUserCommand<*>> ","description":"dev.kordex.core.commands.events.PublicUserCommandFailedWithExceptionEvent","location":"kord-extensions/dev.kordex.core.commands.events/-public-user-command-failed-with-exception-event/index.html","searchKeys":["PublicUserCommandFailedWithExceptionEvent","data class PublicUserCommandFailedWithExceptionEvent(val command: PublicUserCommand<*>, val event: UserCommandInteractionCreateEvent, val throwable: Throwable) : UserCommandFailedWithExceptionEvent<PublicUserCommand<*>> ","dev.kordex.core.commands.events.PublicUserCommandFailedWithExceptionEvent"]},{"name":"data class PublicUserCommandInvocationEvent(val command: PublicUserCommand<*>, val event: UserCommandInteractionCreateEvent) : UserCommandInvocationEvent<PublicUserCommand<*>> ","description":"dev.kordex.core.commands.events.PublicUserCommandInvocationEvent","location":"kord-extensions/dev.kordex.core.commands.events/-public-user-command-invocation-event/index.html","searchKeys":["PublicUserCommandInvocationEvent","data class PublicUserCommandInvocationEvent(val command: PublicUserCommand<*>, val event: UserCommandInteractionCreateEvent) : UserCommandInvocationEvent<PublicUserCommand<*>> ","dev.kordex.core.commands.events.PublicUserCommandInvocationEvent"]},{"name":"data class PublicUserCommandSucceededEvent(val command: PublicUserCommand<*>, val event: UserCommandInteractionCreateEvent) : UserCommandSucceededEvent<PublicUserCommand<*>> ","description":"dev.kordex.core.commands.events.PublicUserCommandSucceededEvent","location":"kord-extensions/dev.kordex.core.commands.events/-public-user-command-succeeded-event/index.html","searchKeys":["PublicUserCommandSucceededEvent","data class PublicUserCommandSucceededEvent(val command: PublicUserCommand<*>, val event: UserCommandInteractionCreateEvent) : UserCommandSucceededEvent<PublicUserCommand<*>> ","dev.kordex.core.commands.events.PublicUserCommandSucceededEvent"]},{"name":"data class RoleDelta(old: Set<Role>, new: Set<Role>)","description":"dev.kordex.core.utils.deltas.RoleDelta","location":"kord-extensions/dev.kordex.core.utils.deltas/-role-delta/index.html","searchKeys":["RoleDelta","data class RoleDelta(old: Set<Role>, new: Set<Role>)","dev.kordex.core.utils.deltas.RoleDelta"]},{"name":"data class State(var uuid: UUID? = null) : Data","description":"dev.kordex.core.datacollection.State","location":"kord-extensions/dev.kordex.core.datacollection/-state/index.html","searchKeys":["State","data class State(var uuid: UUID? = null) : Data","dev.kordex.core.datacollection.State"]},{"name":"data class StorageEntry<K, V>(val key: K, val value: V)","description":"dev.kordex.core.registry.RegistryStorage.StorageEntry","location":"kord-extensions/dev.kordex.core.registry/-registry-storage/-storage-entry/index.html","searchKeys":["StorageEntry","data class StorageEntry<K, V>(val key: K, val value: V)","dev.kordex.core.registry.RegistryStorage.StorageEntry"]},{"name":"enum ApplicationStatus : Enum<ApplicationStatus> ","description":"dev.kordex.core.events.extra.models.ApplicationStatus","location":"kord-extensions/dev.kordex.core.events.extra.models/-application-status/index.html","searchKeys":["ApplicationStatus","enum ApplicationStatus : Enum<ApplicationStatus> ","dev.kordex.core.events.extra.models.ApplicationStatus"]},{"name":"enum ExtensionState : Enum<ExtensionState> ","description":"dev.kordex.core.extensions.ExtensionState","location":"kord-extensions/dev.kordex.core.extensions/-extension-state/index.html","searchKeys":["ExtensionState","enum ExtensionState : Enum<ExtensionState> ","dev.kordex.core.extensions.ExtensionState"]},{"name":"enum PlaceholderPosition : Enum<PlaceholderPosition> ","description":"dev.kordex.core.i18n.types.PlaceholderPosition","location":"kord-extensions/dev.kordex.core.i18n.types/-placeholder-position/index.html","searchKeys":["PlaceholderPosition","enum PlaceholderPosition : Enum<PlaceholderPosition> ","dev.kordex.core.i18n.types.PlaceholderPosition"]},{"name":"enum StorageType : Enum<StorageType> ","description":"dev.kordex.core.storage.StorageType","location":"kord-extensions/dev.kordex.core.storage/-storage-type/index.html","searchKeys":["StorageType","enum StorageType : Enum<StorageType> ","dev.kordex.core.storage.StorageType"]},{"name":"fun <T : Arguments, M : ModalForm> SlashCommand<*, *, *>.ephemeralSubCommand(commandObj: EphemeralSlashCommand<T, M>): EphemeralSlashCommand<T, M>","description":"dev.kordex.core.commands.application.slash.ephemeralSubCommand","location":"kord-extensions/dev.kordex.core.commands.application.slash/ephemeral-sub-command.html","searchKeys":["ephemeralSubCommand","fun <T : Arguments, M : ModalForm> SlashCommand<*, *, *>.ephemeralSubCommand(commandObj: EphemeralSlashCommand<T, M>): EphemeralSlashCommand<T, M>","dev.kordex.core.commands.application.slash.ephemeralSubCommand"]},{"name":"fun <T : Arguments, M : ModalForm> SlashCommand<*, *, *>.publicSubCommand(commandObj: PublicSlashCommand<T, M>): PublicSlashCommand<T, M>","description":"dev.kordex.core.commands.application.slash.publicSubCommand","location":"kord-extensions/dev.kordex.core.commands.application.slash/public-sub-command.html","searchKeys":["publicSubCommand","fun <T : Arguments, M : ModalForm> SlashCommand<*, *, *>.publicSubCommand(commandObj: PublicSlashCommand<T, M>): PublicSlashCommand<T, M>","dev.kordex.core.commands.application.slash.publicSubCommand"]},{"name":"fun <T : Arguments, M : ModalForm> SlashGroup.ephemeralSubCommand(commandObj: EphemeralSlashCommand<T, M>): EphemeralSlashCommand<T, M>","description":"dev.kordex.core.commands.application.slash.ephemeralSubCommand","location":"kord-extensions/dev.kordex.core.commands.application.slash/ephemeral-sub-command.html","searchKeys":["ephemeralSubCommand","fun <T : Arguments, M : ModalForm> SlashGroup.ephemeralSubCommand(commandObj: EphemeralSlashCommand<T, M>): EphemeralSlashCommand<T, M>","dev.kordex.core.commands.application.slash.ephemeralSubCommand"]},{"name":"fun <T : Arguments, M : ModalForm> SlashGroup.publicSubCommand(commandObj: PublicSlashCommand<T, M>): PublicSlashCommand<T, M>","description":"dev.kordex.core.commands.application.slash.publicSubCommand","location":"kord-extensions/dev.kordex.core.commands.application.slash/public-sub-command.html","searchKeys":["publicSubCommand","fun <T : Arguments, M : ModalForm> SlashGroup.publicSubCommand(commandObj: PublicSlashCommand<T, M>): PublicSlashCommand<T, M>","dev.kordex.core.commands.application.slash.publicSubCommand"]},{"name":"fun <T : Arguments> Extension.chatCommand(commandObj: ChatCommand<T>): ChatCommand<T>","description":"dev.kordex.core.extensions.chatCommand","location":"kord-extensions/dev.kordex.core.extensions/chat-command.html","searchKeys":["chatCommand","fun <T : Arguments> Extension.chatCommand(commandObj: ChatCommand<T>): ChatCommand<T>","dev.kordex.core.extensions.chatCommand"]},{"name":"fun <V : Any> Map<Key, V>.getIgnoringCase(key: String, locale: Locale? = null): V?","description":"dev.kordex.core.utils.getIgnoringCase","location":"kord-extensions/dev.kordex.core.utils/get-ignoring-case.html","searchKeys":["getIgnoringCase","fun <V : Any> Map<Key, V>.getIgnoringCase(key: String, locale: Locale? = null): V?","dev.kordex.core.utils.getIgnoringCase"]},{"name":"fun <V : Any> Map<String, V>.getIgnoringCase(key: String, locale: Locale? = null): V?","description":"dev.kordex.core.utils.getIgnoringCase","location":"kord-extensions/dev.kordex.core.utils/get-ignoring-case.html","searchKeys":["getIgnoringCase","fun <V : Any> Map<String, V>.getIgnoringCase(key: String, locale: Locale? = null): V?","dev.kordex.core.utils.getIgnoringCase"]},{"name":"fun ChannelType.toTranslationKey(): Key","description":"dev.kordex.core.utils.toTranslationKey","location":"kord-extensions/dev.kordex.core.utils/to-translation-key.html","searchKeys":["toTranslationKey","fun ChannelType.toTranslationKey(): Key","dev.kordex.core.utils.toTranslationKey"]},{"name":"fun ChannelType.translate(locale: Locale): String","description":"dev.kordex.core.utils.translate","location":"kord-extensions/dev.kordex.core.utils/translate.html","searchKeys":["translate","fun ChannelType.translate(locale: Locale): String","dev.kordex.core.utils.translate"]},{"name":"fun CheckContext<*>.silence()","description":"dev.kordex.core.checks.silence","location":"kord-extensions/dev.kordex.core.checks/silence.html","searchKeys":["silence","fun CheckContext<*>.silence()","dev.kordex.core.checks.silence"]},{"name":"fun CoordinatePair.forEachUpto(end: CoordinatePair, body: (CoordinatePair) -> Unit)","description":"dev.kordex.core.components.forms.forEachUpto","location":"kord-extensions/dev.kordex.core.components.forms/for-each-upto.html","searchKeys":["forEachUpto","fun CoordinatePair.forEachUpto(end: CoordinatePair, body: (CoordinatePair) -> Unit)","dev.kordex.core.components.forms.forEachUpto"]},{"name":"fun CoordinatePair.forEachUptoExclusive(end: CoordinatePair, body: (CoordinatePair) -> Unit)","description":"dev.kordex.core.components.forms.forEachUptoExclusive","location":"kord-extensions/dev.kordex.core.components.forms/for-each-upto-exclusive.html","searchKeys":["forEachUptoExclusive","fun CoordinatePair.forEachUptoExclusive(end: CoordinatePair, body: (CoordinatePair) -> Unit)","dev.kordex.core.components.forms.forEachUptoExclusive"]},{"name":"fun CoordinatePair.isValid(): Boolean","description":"dev.kordex.core.components.forms.isValid","location":"kord-extensions/dev.kordex.core.components.forms/is-valid.html","searchKeys":["isValid","fun CoordinatePair.isValid(): Boolean","dev.kordex.core.components.forms.isValid"]},{"name":"fun CoordinatePair.permutationsUpto(end: CoordinatePair): MutableList<CoordinatePair>","description":"dev.kordex.core.components.forms.permutationsUpto","location":"kord-extensions/dev.kordex.core.components.forms/permutations-upto.html","searchKeys":["permutationsUpto","fun CoordinatePair.permutationsUpto(end: CoordinatePair): MutableList<CoordinatePair>","dev.kordex.core.components.forms.permutationsUpto"]},{"name":"fun CoordinatePair.permutationsUptoExclusive(end: CoordinatePair): MutableList<CoordinatePair>","description":"dev.kordex.core.components.forms.permutationsUptoExclusive","location":"kord-extensions/dev.kordex.core.components.forms/permutations-upto-exclusive.html","searchKeys":["permutationsUptoExclusive","fun CoordinatePair.permutationsUptoExclusive(end: CoordinatePair): MutableList<CoordinatePair>","dev.kordex.core.components.forms.permutationsUptoExclusive"]},{"name":"fun CoordinatePair.throwIfInvalid(name: String = \"Coordinate\")","description":"dev.kordex.core.components.forms.throwIfInvalid","location":"kord-extensions/dev.kordex.core.components.forms/throw-if-invalid.html","searchKeys":["throwIfInvalid","fun CoordinatePair.throwIfInvalid(name: String = \"Coordinate\")","dev.kordex.core.components.forms.throwIfInvalid"]},{"name":"fun CoordinatePair.toString(): String","description":"dev.kordex.core.components.forms.toString","location":"kord-extensions/dev.kordex.core.components.forms/to-string.html","searchKeys":["toString","fun CoordinatePair.toString(): String","dev.kordex.core.components.forms.toString"]},{"name":"fun DateTimePeriod.format(locale: Locale): String","description":"dev.kordex.core.utils.format","location":"kord-extensions/dev.kordex.core.utils/format.html","searchKeys":["format","fun DateTimePeriod.format(locale: Locale): String","dev.kordex.core.utils.format"]},{"name":"fun DateTimePeriod.toDuration(timezone: TimeZone): Duration","description":"dev.kordex.core.utils.toDuration","location":"kord-extensions/dev.kordex.core.utils/to-duration.html","searchKeys":["toDuration","fun DateTimePeriod.toDuration(timezone: TimeZone): Duration","dev.kordex.core.utils.toDuration"]},{"name":"fun DiscordPartialMessage.getJumpUrl(): String","description":"dev.kordex.core.utils.getJumpUrl","location":"kord-extensions/dev.kordex.core.utils/get-jump-url.html","searchKeys":["getJumpUrl","fun DiscordPartialMessage.getJumpUrl(): String","dev.kordex.core.utils.getJumpUrl"]},{"name":"fun EmbedBuilder.Footer.textOrNull(): String?","description":"dev.kordex.core.utils.textOrNull","location":"kord-extensions/dev.kordex.core.utils/text-or-null.html","searchKeys":["textOrNull","fun EmbedBuilder.Footer.textOrNull(): String?","dev.kordex.core.utils.textOrNull"]},{"name":"fun EphemeralResponsePaginator(builder: PaginatorBuilder, interaction: EphemeralMessageInteractionResponseBehavior): EphemeralResponsePaginator","description":"dev.kordex.core.pagination.EphemeralResponsePaginator","location":"kord-extensions/dev.kordex.core.pagination/-ephemeral-response-paginator.html","searchKeys":["EphemeralResponsePaginator","fun EphemeralResponsePaginator(builder: PaginatorBuilder, interaction: EphemeralMessageInteractionResponseBehavior): EphemeralResponsePaginator","dev.kordex.core.pagination.EphemeralResponsePaginator"]},{"name":"fun Extension.chatCommandCheck(check: ChatCommandCheck)","description":"dev.kordex.core.extensions.chatCommandCheck","location":"kord-extensions/dev.kordex.core.extensions/chat-command-check.html","searchKeys":["chatCommandCheck","fun Extension.chatCommandCheck(check: ChatCommandCheck)","dev.kordex.core.extensions.chatCommandCheck"]},{"name":"fun Extension.chatCommandCheck(vararg checks: ChatCommandCheck)","description":"dev.kordex.core.extensions.chatCommandCheck","location":"kord-extensions/dev.kordex.core.extensions/chat-command-check.html","searchKeys":["chatCommandCheck","fun Extension.chatCommandCheck(vararg checks: ChatCommandCheck)","dev.kordex.core.extensions.chatCommandCheck"]},{"name":"fun Extension.messageCommandCheck(check: MessageCommandCheck)","description":"dev.kordex.core.extensions.messageCommandCheck","location":"kord-extensions/dev.kordex.core.extensions/message-command-check.html","searchKeys":["messageCommandCheck","fun Extension.messageCommandCheck(check: MessageCommandCheck)","dev.kordex.core.extensions.messageCommandCheck"]},{"name":"fun Extension.messageCommandCheck(vararg checks: MessageCommandCheck)","description":"dev.kordex.core.extensions.messageCommandCheck","location":"kord-extensions/dev.kordex.core.extensions/message-command-check.html","searchKeys":["messageCommandCheck","fun Extension.messageCommandCheck(vararg checks: MessageCommandCheck)","dev.kordex.core.extensions.messageCommandCheck"]},{"name":"fun Extension.slashCommandCheck(check: SlashCommandCheck)","description":"dev.kordex.core.extensions.slashCommandCheck","location":"kord-extensions/dev.kordex.core.extensions/slash-command-check.html","searchKeys":["slashCommandCheck","fun Extension.slashCommandCheck(check: SlashCommandCheck)","dev.kordex.core.extensions.slashCommandCheck"]},{"name":"fun Extension.slashCommandCheck(vararg checks: SlashCommandCheck)","description":"dev.kordex.core.extensions.slashCommandCheck","location":"kord-extensions/dev.kordex.core.extensions/slash-command-check.html","searchKeys":["slashCommandCheck","fun Extension.slashCommandCheck(vararg checks: SlashCommandCheck)","dev.kordex.core.extensions.slashCommandCheck"]},{"name":"fun Extension.userCommandCheck(check: UserCommandCheck)","description":"dev.kordex.core.extensions.userCommandCheck","location":"kord-extensions/dev.kordex.core.extensions/user-command-check.html","searchKeys":["userCommandCheck","fun Extension.userCommandCheck(check: UserCommandCheck)","dev.kordex.core.extensions.userCommandCheck"]},{"name":"fun Extension.userCommandCheck(vararg checks: UserCommandCheck)","description":"dev.kordex.core.extensions.userCommandCheck","location":"kord-extensions/dev.kordex.core.extensions/user-command-check.html","searchKeys":["userCommandCheck","fun Extension.userCommandCheck(vararg checks: UserCommandCheck)","dev.kordex.core.extensions.userCommandCheck"]},{"name":"fun GuildChannelBehavior.getCategory(): CategoryBehavior?","description":"dev.kordex.core.utils.getCategory","location":"kord-extensions/dev.kordex.core.utils/get-category.html","searchKeys":["getCategory","fun GuildChannelBehavior.getCategory(): CategoryBehavior?","dev.kordex.core.utils.getCategory"]},{"name":"fun GuildChannelBehavior.getTopChannel(): TopGuildChannelBehavior?","description":"dev.kordex.core.utils.getTopChannel","location":"kord-extensions/dev.kordex.core.utils/get-top-channel.html","searchKeys":["getTopChannel","fun GuildChannelBehavior.getTopChannel(): TopGuildChannelBehavior?","dev.kordex.core.utils.getTopChannel"]},{"name":"fun GuildEmoji.toReaction(): ReactionEmoji","description":"dev.kordex.core.utils.toReaction","location":"kord-extensions/dev.kordex.core.utils/to-reaction.html","searchKeys":["toReaction","fun GuildEmoji.toReaction(): ReactionEmoji","dev.kordex.core.utils.toReaction"]},{"name":"fun HasPartialEmoji.emoji(emoji: ReactionEmoji)","description":"dev.kordex.core.components.types.emoji","location":"kord-extensions/dev.kordex.core.components.types/emoji.html","searchKeys":["emoji","fun HasPartialEmoji.emoji(emoji: ReactionEmoji)","dev.kordex.core.components.types.emoji"]},{"name":"fun HasPartialEmoji.emoji(guildEmoji: GuildEmoji)","description":"dev.kordex.core.components.types.emoji","location":"kord-extensions/dev.kordex.core.components.types/emoji.html","searchKeys":["emoji","fun HasPartialEmoji.emoji(guildEmoji: GuildEmoji)","dev.kordex.core.components.types.emoji"]},{"name":"fun HasPartialEmoji.emoji(guildEmoji: ReactionEmoji.Custom)","description":"dev.kordex.core.components.types.emoji","location":"kord-extensions/dev.kordex.core.components.types/emoji.html","searchKeys":["emoji","fun HasPartialEmoji.emoji(guildEmoji: ReactionEmoji.Custom)","dev.kordex.core.components.types.emoji"]},{"name":"fun HasPartialEmoji.emoji(unicodeEmoji: ReactionEmoji.Unicode)","description":"dev.kordex.core.components.types.emoji","location":"kord-extensions/dev.kordex.core.components.types/emoji.html","searchKeys":["emoji","fun HasPartialEmoji.emoji(unicodeEmoji: ReactionEmoji.Unicode)","dev.kordex.core.components.types.emoji"]},{"name":"fun HasPartialEmoji.emoji(unicodeEmoji: String)","description":"dev.kordex.core.components.types.emoji","location":"kord-extensions/dev.kordex.core.components.types/emoji.html","searchKeys":["emoji","fun HasPartialEmoji.emoji(unicodeEmoji: String)","dev.kordex.core.components.types.emoji"]},{"name":"fun IScope.user(obj: User)","description":"dev.kordex.core.sentry.user","location":"kord-extensions/dev.kordex.core.sentry/user.html","searchKeys":["user","fun IScope.user(obj: User)","dev.kordex.core.sentry.user"]},{"name":"fun IScope.user(tag: String, id: String)","description":"dev.kordex.core.sentry.user","location":"kord-extensions/dev.kordex.core.sentry/user.html","searchKeys":["user","fun IScope.user(tag: String, id: String)","dev.kordex.core.sentry.user"]},{"name":"fun Instant.toDiscord(format: TimestampType): String","description":"dev.kordex.core.time.toDiscord","location":"kord-extensions/dev.kordex.core.time/to-discord.html","searchKeys":["toDiscord","fun Instant.toDiscord(format: TimestampType): String","dev.kordex.core.time.toDiscord"]},{"name":"fun Intent.getName(): String","description":"dev.kordex.core.utils.getName","location":"kord-extensions/dev.kordex.core.utils/get-name.html","searchKeys":["getName","fun Intent.getName(): String","dev.kordex.core.utils.getName"]},{"name":"fun Key.capitalize(): Key","description":"dev.kordex.core.i18n.capitalize","location":"kord-extensions/dev.kordex.core.i18n/capitalize.html","searchKeys":["capitalize","fun Key.capitalize(): Key","dev.kordex.core.i18n.capitalize"]},{"name":"fun Key.capitalizeWords(): Key","description":"dev.kordex.core.i18n.capitalizeWords","location":"kord-extensions/dev.kordex.core.i18n/capitalize-words.html","searchKeys":["capitalizeWords","fun Key.capitalizeWords(): Key","dev.kordex.core.i18n.capitalizeWords"]},{"name":"fun Key.lowercase(): Key","description":"dev.kordex.core.i18n.lowercase","location":"kord-extensions/dev.kordex.core.i18n/lowercase.html","searchKeys":["lowercase","fun Key.lowercase(): Key","dev.kordex.core.i18n.lowercase"]},{"name":"fun Key.uppercase(): Key","description":"dev.kordex.core.i18n.uppercase","location":"kord-extensions/dev.kordex.core.i18n/uppercase.html","searchKeys":["uppercase","fun Key.uppercase(): Key","dev.kordex.core.i18n.uppercase"]},{"name":"fun Member.hasRole(role: RoleBehavior): Boolean","description":"dev.kordex.core.utils.hasRole","location":"kord-extensions/dev.kordex.core.utils/has-role.html","searchKeys":["hasRole","fun Member.hasRole(role: RoleBehavior): Boolean","dev.kordex.core.utils.hasRole"]},{"name":"fun Member.hasRoles(roles: Collection<RoleBehavior>): Boolean","description":"dev.kordex.core.utils.hasRoles","location":"kord-extensions/dev.kordex.core.utils/has-roles.html","searchKeys":["hasRoles","fun Member.hasRoles(roles: Collection<RoleBehavior>): Boolean","dev.kordex.core.utils.hasRoles"]},{"name":"fun Member.hasRoles(vararg roles: RoleBehavior): Boolean","description":"dev.kordex.core.utils.hasRoles","location":"kord-extensions/dev.kordex.core.utils/has-roles.html","searchKeys":["hasRoles","fun Member.hasRoles(vararg roles: RoleBehavior): Boolean","dev.kordex.core.utils.hasRoles"]},{"name":"fun Message.getJumpUrl(): String","description":"dev.kordex.core.utils.getJumpUrl","location":"kord-extensions/dev.kordex.core.utils/get-jump-url.html","searchKeys":["getJumpUrl","fun Message.getJumpUrl(): String","dev.kordex.core.utils.getJumpUrl"]},{"name":"fun MessageBehavior.delete(millis: Long, retry: Boolean = true): Job","description":"dev.kordex.core.utils.delete","location":"kord-extensions/dev.kordex.core.utils/delete.html","searchKeys":["delete","fun MessageBehavior.delete(millis: Long, retry: Boolean = true): Job","dev.kordex.core.utils.delete"]},{"name":"fun MessageButtonPaginator(pingInReply: Boolean = true, targetChannel: MessageChannelBehavior? = null, targetMessage: Message? = null, builder: PaginatorBuilder): MessageButtonPaginator","description":"dev.kordex.core.pagination.MessageButtonPaginator","location":"kord-extensions/dev.kordex.core.pagination/-message-button-paginator.html","searchKeys":["MessageButtonPaginator","fun MessageButtonPaginator(pingInReply: Boolean = true, targetChannel: MessageChannelBehavior? = null, targetMessage: Message? = null, builder: PaginatorBuilder): MessageButtonPaginator","dev.kordex.core.pagination.MessageButtonPaginator"]},{"name":"fun NsfwLevel.toTranslationKey(): Key?","description":"dev.kordex.core.utils.toTranslationKey","location":"kord-extensions/dev.kordex.core.utils/to-translation-key.html","searchKeys":["toTranslationKey","fun NsfwLevel.toTranslationKey(): Key?","dev.kordex.core.utils.toTranslationKey"]},{"name":"fun NsfwLevel.translate(locale: Locale): String","description":"dev.kordex.core.utils.translate","location":"kord-extensions/dev.kordex.core.utils/translate.html","searchKeys":["translate","fun NsfwLevel.translate(locale: Locale): String","dev.kordex.core.utils.translate"]},{"name":"fun PaginatorBuilder.addCopyright(owner: UserBehavior?, locale: Locale)","description":"dev.kordex.core.extensions.impl.AboutExtension.addCopyright","location":"kord-extensions/dev.kordex.core.extensions.impl/-about-extension/add-copyright.html","searchKeys":["addCopyright","fun PaginatorBuilder.addCopyright(owner: UserBehavior?, locale: Locale)","dev.kordex.core.extensions.impl.AboutExtension.addCopyright"]},{"name":"fun Permission.toTranslationKey(): Key?","description":"dev.kordex.core.utils.toTranslationKey","location":"kord-extensions/dev.kordex.core.utils/to-translation-key.html","searchKeys":["toTranslationKey","fun Permission.toTranslationKey(): Key?","dev.kordex.core.utils.toTranslationKey"]},{"name":"fun Permission.translate(locale: Locale): String","description":"dev.kordex.core.utils.translate","location":"kord-extensions/dev.kordex.core.utils/translate.html","searchKeys":["translate","fun Permission.translate(locale: Locale): String","dev.kordex.core.utils.translate"]},{"name":"fun PublicFollowUpPaginator(builder: PaginatorBuilder, interaction: FollowupPermittingInteractionResponseBehavior): PublicFollowUpPaginator","description":"dev.kordex.core.pagination.PublicFollowUpPaginator","location":"kord-extensions/dev.kordex.core.pagination/-public-follow-up-paginator.html","searchKeys":["PublicFollowUpPaginator","fun PublicFollowUpPaginator(builder: PaginatorBuilder, interaction: FollowupPermittingInteractionResponseBehavior): PublicFollowUpPaginator","dev.kordex.core.pagination.PublicFollowUpPaginator"]},{"name":"fun PublicFollowupMessageBehavior.delete(millis: Long, retry: Boolean = true): Job","description":"dev.kordex.core.utils.delete","location":"kord-extensions/dev.kordex.core.utils/delete.html","searchKeys":["delete","fun PublicFollowupMessageBehavior.delete(millis: Long, retry: Boolean = true): Job","dev.kordex.core.utils.delete"]},{"name":"fun PublicResponsePaginator(builder: PaginatorBuilder, interaction: PublicMessageInteractionResponseBehavior): PublicResponsePaginator","description":"dev.kordex.core.pagination.PublicResponsePaginator","location":"kord-extensions/dev.kordex.core.pagination/-public-response-paginator.html","searchKeys":["PublicResponsePaginator","fun PublicResponsePaginator(builder: PaginatorBuilder, interaction: PublicMessageInteractionResponseBehavior): PublicResponsePaginator","dev.kordex.core.pagination.PublicResponsePaginator"]},{"name":"fun ReactionEmoji.Companion.from(emoji: String): ReactionEmoji","description":"dev.kordex.core.utils.from","location":"kord-extensions/dev.kordex.core.utils/from.html","searchKeys":["from","fun ReactionEmoji.Companion.from(emoji: String): ReactionEmoji","dev.kordex.core.utils.from"]},{"name":"fun RestRequestException.hasNotStatus(vararg codes: HttpStatusCode): Boolean","description":"dev.kordex.core.utils.hasNotStatus","location":"kord-extensions/dev.kordex.core.utils/has-not-status.html","searchKeys":["hasNotStatus","fun RestRequestException.hasNotStatus(vararg codes: HttpStatusCode): Boolean","dev.kordex.core.utils.hasNotStatus"]},{"name":"fun RestRequestException.hasNotStatusCode(vararg codes: Int): Boolean","description":"dev.kordex.core.utils.hasNotStatusCode","location":"kord-extensions/dev.kordex.core.utils/has-not-status-code.html","searchKeys":["hasNotStatusCode","fun RestRequestException.hasNotStatusCode(vararg codes: Int): Boolean","dev.kordex.core.utils.hasNotStatusCode"]},{"name":"fun RestRequestException.hasStatus(vararg codes: HttpStatusCode): Boolean","description":"dev.kordex.core.utils.hasStatus","location":"kord-extensions/dev.kordex.core.utils/has-status.html","searchKeys":["hasStatus","fun RestRequestException.hasStatus(vararg codes: HttpStatusCode): Boolean","dev.kordex.core.utils.hasStatus"]},{"name":"fun RestRequestException.hasStatusCode(vararg codes: Int): Boolean","description":"dev.kordex.core.utils.hasStatusCode","location":"kord-extensions/dev.kordex.core.utils/has-status-code.html","searchKeys":["hasStatusCode","fun RestRequestException.hasStatusCode(vararg codes: Int): Boolean","dev.kordex.core.utils.hasStatusCode"]},{"name":"fun Role.canInteract(role: Role): Boolean","description":"dev.kordex.core.utils.canInteract","location":"kord-extensions/dev.kordex.core.utils/can-interact.html","searchKeys":["canInteract","fun Role.canInteract(role: Role): Boolean","dev.kordex.core.utils.canInteract"]},{"name":"fun SelectOptionBuilder.emoji(emoji: ReactionEmoji)","description":"dev.kordex.core.utils.emoji","location":"kord-extensions/dev.kordex.core.utils/emoji.html","searchKeys":["emoji","fun SelectOptionBuilder.emoji(emoji: ReactionEmoji)","dev.kordex.core.utils.emoji"]},{"name":"fun SelectOptionBuilder.emoji(guildEmoji: GuildEmoji)","description":"dev.kordex.core.utils.emoji","location":"kord-extensions/dev.kordex.core.utils/emoji.html","searchKeys":["emoji","fun SelectOptionBuilder.emoji(guildEmoji: GuildEmoji)","dev.kordex.core.utils.emoji"]},{"name":"fun SelectOptionBuilder.emoji(guildEmoji: ReactionEmoji.Custom)","description":"dev.kordex.core.utils.emoji","location":"kord-extensions/dev.kordex.core.utils/emoji.html","searchKeys":["emoji","fun SelectOptionBuilder.emoji(guildEmoji: ReactionEmoji.Custom)","dev.kordex.core.utils.emoji"]},{"name":"fun SelectOptionBuilder.emoji(unicodeEmoji: ReactionEmoji.Unicode)","description":"dev.kordex.core.utils.emoji","location":"kord-extensions/dev.kordex.core.utils/emoji.html","searchKeys":["emoji","fun SelectOptionBuilder.emoji(unicodeEmoji: ReactionEmoji.Unicode)","dev.kordex.core.utils.emoji"]},{"name":"fun SelectOptionBuilder.emoji(unicodeEmoji: String)","description":"dev.kordex.core.utils.emoji","location":"kord-extensions/dev.kordex.core.utils/emoji.html","searchKeys":["emoji","fun SelectOptionBuilder.emoji(unicodeEmoji: String)","dev.kordex.core.utils.emoji"]},{"name":"fun String.capitalizeWords(locale: Locale? = null): String","description":"dev.kordex.core.utils.capitalizeWords","location":"kord-extensions/dev.kordex.core.utils/capitalize-words.html","searchKeys":["capitalizeWords","fun String.capitalizeWords(locale: Locale? = null): String","dev.kordex.core.utils.capitalizeWords"]},{"name":"fun String.parseBoolean(locale: Locale): Boolean?","description":"dev.kordex.core.utils.parseBoolean","location":"kord-extensions/dev.kordex.core.utils/parse-boolean.html","searchKeys":["parseBoolean","fun String.parseBoolean(locale: Locale): Boolean?","dev.kordex.core.utils.parseBoolean"]},{"name":"fun String.splitOn(separator: (Char) -> Boolean): Pair<String, String>","description":"dev.kordex.core.utils.splitOn","location":"kord-extensions/dev.kordex.core.utils/split-on.html","searchKeys":["splitOn","fun String.splitOn(separator: (Char) -> Boolean): Pair<String, String>","dev.kordex.core.utils.splitOn"]},{"name":"fun String.toKey(bundle: Bundle): Key","description":"dev.kordex.core.i18n.toKey","location":"kord-extensions/dev.kordex.core.i18n/to-key.html","searchKeys":["toKey","fun String.toKey(bundle: Bundle): Key","dev.kordex.core.i18n.toKey"]},{"name":"fun String.toKey(bundle: Bundle? = null, locale: Locale? = null, presetPlaceholderPosition: PlaceholderPosition? = null, translateNestedKeys: Boolean? = null): Key","description":"dev.kordex.core.i18n.toKey","location":"kord-extensions/dev.kordex.core.i18n/to-key.html","searchKeys":["toKey","fun String.toKey(bundle: Bundle? = null, locale: Locale? = null, presetPlaceholderPosition: PlaceholderPosition? = null, translateNestedKeys: Boolean? = null): Key","dev.kordex.core.i18n.toKey"]},{"name":"fun String.toKey(bundle: String): Key","description":"dev.kordex.core.i18n.toKey","location":"kord-extensions/dev.kordex.core.i18n/to-key.html","searchKeys":["toKey","fun String.toKey(bundle: String): Key","dev.kordex.core.i18n.toKey"]},{"name":"fun String.toKey(bundle: String, locale: Locale? = null): Key","description":"dev.kordex.core.i18n.toKey","location":"kord-extensions/dev.kordex.core.i18n/to-key.html","searchKeys":["toKey","fun String.toKey(bundle: String, locale: Locale? = null): Key","dev.kordex.core.i18n.toKey"]},{"name":"fun String.toKey(locale: Locale): Key","description":"dev.kordex.core.i18n.toKey","location":"kord-extensions/dev.kordex.core.i18n/to-key.html","searchKeys":["toKey","fun String.toKey(locale: Locale): Key","dev.kordex.core.i18n.toKey"]},{"name":"fun String.toReaction(): ReactionEmoji","description":"dev.kordex.core.utils.toReaction","location":"kord-extensions/dev.kordex.core.utils/to-reaction.html","searchKeys":["toReaction","fun String.toReaction(): ReactionEmoji","dev.kordex.core.utils.toReaction"]},{"name":"fun User?.isNullOrBot(): Boolean","description":"dev.kordex.core.utils.isNullOrBot","location":"kord-extensions/dev.kordex.core.utils/is-null-or-bot.html","searchKeys":["isNullOrBot","fun User?.isNullOrBot(): Boolean","dev.kordex.core.utils.isNullOrBot"]},{"name":"fun VoiceState?.compare(other: VoiceState): ChangeSet","description":"dev.kordex.core.utils.deltas.compare","location":"kord-extensions/dev.kordex.core.utils.deltas/compare.html","searchKeys":["compare","fun VoiceState?.compare(other: VoiceState): ChangeSet","dev.kordex.core.utils.deltas.compare"]},{"name":"fun WidgetGrid(): WidgetGrid","description":"dev.kordex.core.components.forms.WidgetGrid","location":"kord-extensions/dev.kordex.core.components.forms/-widget-grid.html","searchKeys":["WidgetGrid","fun WidgetGrid(): WidgetGrid","dev.kordex.core.components.forms.WidgetGrid"]},{"name":"fun WidgetGrid.coordinatesFor(widget: Widget<*>): List<CoordinatePair>","description":"dev.kordex.core.components.forms.coordinatesFor","location":"kord-extensions/dev.kordex.core.components.forms/coordinates-for.html","searchKeys":["coordinatesFor","fun WidgetGrid.coordinatesFor(widget: Widget<*>): List<CoordinatePair>","dev.kordex.core.components.forms.coordinatesFor"]},{"name":"fun WidgetGrid.get(coordinate: CoordinatePair): Widget<*>?","description":"dev.kordex.core.components.forms.get","location":"kord-extensions/dev.kordex.core.components.forms/get.html","searchKeys":["get","fun WidgetGrid.get(coordinate: CoordinatePair): Widget<*>?","dev.kordex.core.components.forms.get"]},{"name":"fun WidgetGrid.getWidgetSet(): Set<Widget<*>>","description":"dev.kordex.core.components.forms.getWidgetSet","location":"kord-extensions/dev.kordex.core.components.forms/get-widget-set.html","searchKeys":["getWidgetSet","fun WidgetGrid.getWidgetSet(): Set<Widget<*>>","dev.kordex.core.components.forms.getWidgetSet"]},{"name":"fun WidgetGrid.remove(widget: Widget<*>): Boolean","description":"dev.kordex.core.components.forms.remove","location":"kord-extensions/dev.kordex.core.components.forms/remove.html","searchKeys":["remove","fun WidgetGrid.remove(widget: Widget<*>): Boolean","dev.kordex.core.components.forms.remove"]},{"name":"fun WidgetGrid.removeAt(coordinate: CoordinatePair): Boolean","description":"dev.kordex.core.components.forms.removeAt","location":"kord-extensions/dev.kordex.core.components.forms/remove-at.html","searchKeys":["removeAt","fun WidgetGrid.removeAt(coordinate: CoordinatePair): Boolean","dev.kordex.core.components.forms.removeAt"]},{"name":"fun WidgetGrid.set(coordinate: CoordinatePair, widget: Widget<*>)","description":"dev.kordex.core.components.forms.set","location":"kord-extensions/dev.kordex.core.components.forms/set.html","searchKeys":["set","fun WidgetGrid.set(coordinate: CoordinatePair, widget: Widget<*>)","dev.kordex.core.components.forms.set"]},{"name":"fun WidgetGrid.setAtCoordinateOrFirstRow(coordinate: CoordinatePair?, widget: Widget<*>)","description":"dev.kordex.core.components.forms.setAtCoordinateOrFirstRow","location":"kord-extensions/dev.kordex.core.components.forms/set-at-coordinate-or-first-row.html","searchKeys":["setAtCoordinateOrFirstRow","fun WidgetGrid.setAtCoordinateOrFirstRow(coordinate: CoordinatePair?, widget: Widget<*>)","dev.kordex.core.components.forms.setAtCoordinateOrFirstRow"]},{"name":"fun WidgetGrid.toString(): String","description":"dev.kordex.core.components.forms.toString","location":"kord-extensions/dev.kordex.core.components.forms/to-string.html","searchKeys":["toString","fun WidgetGrid.toString(): String","dev.kordex.core.components.forms.toString"]},{"name":"fun action(action: suspend C.(M?) -> Unit)","description":"dev.kordex.core.commands.application.message.MessageCommand.action","location":"kord-extensions/dev.kordex.core.commands.application.message/-message-command/action.html","searchKeys":["action","fun action(action: suspend C.(M?) -> Unit)","dev.kordex.core.commands.application.message.MessageCommand.action"]},{"name":"fun action(action: suspend C.(M?) -> Unit)","description":"dev.kordex.core.commands.application.slash.SlashCommand.action","location":"kord-extensions/dev.kordex.core.commands.application.slash/-slash-command/action.html","searchKeys":["action","fun action(action: suspend C.(M?) -> Unit)","dev.kordex.core.commands.application.slash.SlashCommand.action"]},{"name":"fun action(action: suspend C.(M?) -> Unit)","description":"dev.kordex.core.commands.application.user.UserCommand.action","location":"kord-extensions/dev.kordex.core.commands.application.user/-user-command/action.html","searchKeys":["action","fun action(action: suspend C.(M?) -> Unit)","dev.kordex.core.commands.application.user.UserCommand.action"]},{"name":"fun action(action: suspend C.(M?) -> Unit)","description":"dev.kordex.core.components.ComponentWithAction.action","location":"kord-extensions/dev.kordex.core.components/-component-with-action/action.html","searchKeys":["action","fun action(action: suspend C.(M?) -> Unit)","dev.kordex.core.components.ComponentWithAction.action"]},{"name":"fun action(action: suspend EventContext<T>.() -> Unit)","description":"dev.kordex.core.events.EventHandler.action","location":"kord-extensions/dev.kordex.core.events/-event-handler/action.html","searchKeys":["action","fun action(action: suspend EventContext<T>.() -> Unit)","dev.kordex.core.events.EventHandler.action"]},{"name":"fun addEventId(id: SentryId?): Boolean","description":"dev.kordex.core.sentry.SentryAdapter.addEventId","location":"kord-extensions/dev.kordex.core.sentry/-sentry-adapter/add-event-id.html","searchKeys":["addEventId","fun addEventId(id: SentryId?): Boolean","dev.kordex.core.sentry.SentryAdapter.addEventId"]},{"name":"fun afterExtensionsAdded(body: suspend ExtensibleBot.() -> Unit): Boolean","description":"dev.kordex.core.builders.HooksBuilder.afterExtensionsAdded","location":"kord-extensions/dev.kordex.core.builders/-hooks-builder/after-extensions-added.html","searchKeys":["afterExtensionsAdded","fun afterExtensionsAdded(body: suspend ExtensibleBot.() -> Unit): Boolean","dev.kordex.core.builders.HooksBuilder.afterExtensionsAdded"]},{"name":"fun afterKoinSetup(body: suspend () -> Unit): Boolean","description":"dev.kordex.core.builders.HooksBuilder.afterKoinSetup","location":"kord-extensions/dev.kordex.core.builders/-hooks-builder/after-koin-setup.html","searchKeys":["afterKoinSetup","fun afterKoinSetup(body: suspend () -> Unit): Boolean","dev.kordex.core.builders.HooksBuilder.afterKoinSetup"]},{"name":"fun all()","description":"dev.kordex.core.builders.MembersBuilder.all","location":"kord-extensions/dev.kordex.core.builders/-members-builder/all.html","searchKeys":["all","fun all()","dev.kordex.core.builders.MembersBuilder.all"]},{"name":"fun applicationCommandLocale(locales: Collection<Locale>)","description":"dev.kordex.core.builders.I18nBuilder.applicationCommandLocale","location":"kord-extensions/dev.kordex.core.builders/-i18n-builder/application-command-locale.html","searchKeys":["applicationCommandLocale","fun applicationCommandLocale(locales: Collection<Locale>)","dev.kordex.core.builders.I18nBuilder.applicationCommandLocale"]},{"name":"fun applicationCommandLocale(locales: Collection<Locale>)","description":"dev.kordex.core.builders.I18nBuilder.applicationCommandLocale","location":"kord-extensions/dev.kordex.core.builders/-i18n-builder/application-command-locale.html","searchKeys":["applicationCommandLocale","fun applicationCommandLocale(locales: Collection<Locale>)","dev.kordex.core.builders.I18nBuilder.applicationCommandLocale"]},{"name":"fun applicationCommandLocale(vararg locales: Locale)","description":"dev.kordex.core.builders.I18nBuilder.applicationCommandLocale","location":"kord-extensions/dev.kordex.core.builders/-i18n-builder/application-command-locale.html","searchKeys":["applicationCommandLocale","fun applicationCommandLocale(vararg locales: Locale)","dev.kordex.core.builders.I18nBuilder.applicationCommandLocale"]},{"name":"fun applicationCommandLocale(vararg locales: Locale)","description":"dev.kordex.core.builders.I18nBuilder.applicationCommandLocale","location":"kord-extensions/dev.kordex.core.builders/-i18n-builder/application-command-locale.html","searchKeys":["applicationCommandLocale","fun applicationCommandLocale(vararg locales: Locale)","dev.kordex.core.builders.I18nBuilder.applicationCommandLocale"]},{"name":"fun applicationCommandRegistry(builder: () -> ApplicationCommandRegistry)","description":"dev.kordex.core.builders.ApplicationCommandsBuilder.applicationCommandRegistry","location":"kord-extensions/dev.kordex.core.builders/-application-commands-builder/application-command-registry.html","searchKeys":["applicationCommandRegistry","fun applicationCommandRegistry(builder: () -> ApplicationCommandRegistry)","dev.kordex.core.builders.ApplicationCommandsBuilder.applicationCommandRegistry"]},{"name":"fun apply(breadcrumb: Breadcrumb)","description":"dev.kordex.core.sentry.captures.SentryBreadcrumbCapture.apply","location":"kord-extensions/dev.kordex.core.sentry.captures/-sentry-breadcrumb-capture/apply.html","searchKeys":["apply","fun apply(breadcrumb: Breadcrumb)","dev.kordex.core.sentry.captures.SentryBreadcrumbCapture.apply"]},{"name":"fun beforeExtensionsAdded(body: suspend ExtensibleBot.() -> Unit): Boolean","description":"dev.kordex.core.builders.HooksBuilder.beforeExtensionsAdded","location":"kord-extensions/dev.kordex.core.builders/-hooks-builder/before-extensions-added.html","searchKeys":["beforeExtensionsAdded","fun beforeExtensionsAdded(body: suspend ExtensibleBot.() -> Unit): Boolean","dev.kordex.core.builders.HooksBuilder.beforeExtensionsAdded"]},{"name":"fun beforeKoinSetup(body: suspend () -> Unit): Boolean","description":"dev.kordex.core.builders.HooksBuilder.beforeKoinSetup","location":"kord-extensions/dev.kordex.core.builders/-hooks-builder/before-koin-setup.html","searchKeys":["beforeKoinSetup","fun beforeKoinSetup(body: suspend () -> Unit): Boolean","dev.kordex.core.builders.HooksBuilder.beforeKoinSetup"]},{"name":"fun beforeStart(body: suspend ExtensibleBot.() -> Unit): Boolean","description":"dev.kordex.core.builders.HooksBuilder.beforeStart","location":"kord-extensions/dev.kordex.core.builders/-hooks-builder/before-start.html","searchKeys":["beforeStart","fun beforeStart(body: suspend ExtensibleBot.() -> Unit): Boolean","dev.kordex.core.builders.HooksBuilder.beforeStart"]},{"name":"fun build(): SelectOptionBuilder","description":"dev.kordex.core.components.menus.string.StringSelectOption.build","location":"kord-extensions/dev.kordex.core.components.menus.string/-string-select-option/build.html","searchKeys":["build","fun build(): SelectOptionBuilder","dev.kordex.core.components.menus.string.StringSelectOption.build"]},{"name":"fun builder(body: () -> SentryAdapter)","description":"dev.kordex.core.builders.extensions.SentryExtensionBuilder.builder","location":"kord-extensions/dev.kordex.core.builders.extensions/-sentry-extension-builder/builder.html","searchKeys":["builder","fun builder(body: () -> SentryAdapter)","dev.kordex.core.builders.extensions.SentryExtensionBuilder.builder"]},{"name":"fun cancel()","description":"dev.kordex.core.utils.scheduling.Task.cancel","location":"kord-extensions/dev.kordex.core.utils.scheduling/-task/cancel.html","searchKeys":["cancel","fun cancel()","dev.kordex.core.utils.scheduling.Task.cancel"]},{"name":"fun charValid(char: Char, locale: Locale): Boolean","description":"dev.kordex.core.parsers.DurationParser.charValid","location":"kord-extensions/dev.kordex.core.parsers/-duration-parser/char-valid.html","searchKeys":["charValid","fun charValid(char: Char, locale: Locale): Boolean","dev.kordex.core.parsers.DurationParser.charValid"]},{"name":"fun check(check: ChatCommandCheck)","description":"dev.kordex.core.builders.ChatCommandsBuilder.check","location":"kord-extensions/dev.kordex.core.builders/-chat-commands-builder/check.html","searchKeys":["check","fun check(check: ChatCommandCheck)","dev.kordex.core.builders.ChatCommandsBuilder.check"]},{"name":"fun check(check: ChatCommandCheck)","description":"dev.kordex.core.builders.extensions.HelpExtensionBuilder.check","location":"kord-extensions/dev.kordex.core.builders.extensions/-help-extension-builder/check.html","searchKeys":["check","fun check(check: ChatCommandCheck)","dev.kordex.core.builders.extensions.HelpExtensionBuilder.check"]},{"name":"fun check(check: CheckWithCache<T>): Boolean","description":"dev.kordex.core.events.EventHandler.check","location":"kord-extensions/dev.kordex.core.events/-event-handler/check.html","searchKeys":["check","fun check(check: CheckWithCache<T>): Boolean","dev.kordex.core.events.EventHandler.check"]},{"name":"fun check(vararg checks: ChatCommandCheck)","description":"dev.kordex.core.builders.ChatCommandsBuilder.check","location":"kord-extensions/dev.kordex.core.builders/-chat-commands-builder/check.html","searchKeys":["check","fun check(vararg checks: ChatCommandCheck)","dev.kordex.core.builders.ChatCommandsBuilder.check"]},{"name":"fun check(vararg checks: ChatCommandCheck)","description":"dev.kordex.core.builders.extensions.HelpExtensionBuilder.check","location":"kord-extensions/dev.kordex.core.builders.extensions/-help-extension-builder/check.html","searchKeys":["check","fun check(vararg checks: ChatCommandCheck)","dev.kordex.core.builders.extensions.HelpExtensionBuilder.check"]},{"name":"fun check(vararg checks: CheckWithCache<T>)","description":"dev.kordex.core.events.EventHandler.check","location":"kord-extensions/dev.kordex.core.events/-event-handler/check.html","searchKeys":["check","fun check(vararg checks: CheckWithCache<T>)","dev.kordex.core.events.EventHandler.check"]},{"name":"fun choice(name: Key, value: T)","description":"dev.kordex.core.commands.ChoiceOptionWrapper.choice","location":"kord-extensions/dev.kordex.core.commands/-choice-option-wrapper/choice.html","searchKeys":["choice","fun choice(name: Key, value: T)","dev.kordex.core.commands.ChoiceOptionWrapper.choice"]},{"name":"fun clone(): SentryExtensionBuilder.SentryExtensionDataTypeBuilder","description":"dev.kordex.core.builders.extensions.SentryExtensionBuilder.SentryExtensionDataTypeBuilder.clone","location":"kord-extensions/dev.kordex.core.builders.extensions/-sentry-extension-builder/-sentry-extension-data-type-builder/clone.html","searchKeys":["clone","fun clone(): SentryExtensionBuilder.SentryExtensionDataTypeBuilder","dev.kordex.core.builders.extensions.SentryExtensionBuilder.SentryExtensionDataTypeBuilder.clone"]},{"name":"fun color(builder: suspend MessageCreateEvent.() -> Color)","description":"dev.kordex.core.builders.extensions.HelpExtensionBuilder.color","location":"kord-extensions/dev.kordex.core.builders.extensions/-help-extension-builder/color.html","searchKeys":["color","fun color(builder: suspend MessageCreateEvent.() -> Color)","dev.kordex.core.builders.extensions.HelpExtensionBuilder.color"]},{"name":"fun colour(builder: suspend MessageCreateEvent.() -> Color)","description":"dev.kordex.core.builders.extensions.HelpExtensionBuilder.colour","location":"kord-extensions/dev.kordex.core.builders.extensions/-help-extension-builder/colour.html","searchKeys":["colour","fun colour(builder: suspend MessageCreateEvent.() -> Color)","dev.kordex.core.builders.extensions.HelpExtensionBuilder.colour"]},{"name":"fun context(key: String, value: Any)","description":"dev.kordex.core.sentry.SentryContext.context","location":"kord-extensions/dev.kordex.core.sentry/-sentry-context/context.html","searchKeys":["context","fun context(key: String, value: Any)","dev.kordex.core.sentry.SentryContext.context"]},{"name":"fun copy(): SentryContext","description":"dev.kordex.core.sentry.SentryContext.copy","location":"kord-extensions/dev.kordex.core.sentry/-sentry-context/copy.html","searchKeys":["copy","fun copy(): SentryContext","dev.kordex.core.sentry.SentryContext.copy"]},{"name":"fun copyright(name: String, license: String, type: CopyrightType, url: String? = null)","description":"dev.kordex.core.builders.AboutBuilder.copyright","location":"kord-extensions/dev.kordex.core.builders/-about-builder/copyright.html","searchKeys":["copyright","fun copyright(name: String, license: String, type: CopyrightType, url: String? = null)","dev.kordex.core.builders.AboutBuilder.copyright"]},{"name":"fun created(body: suspend ExtensibleBot.() -> Unit): Boolean","description":"dev.kordex.core.builders.HooksBuilder.created","location":"kord-extensions/dev.kordex.core.builders/-hooks-builder/created.html","searchKeys":["created","fun created(body: suspend ExtensibleBot.() -> Unit): Boolean","dev.kordex.core.builders.HooksBuilder.created"]},{"name":"fun customKordBuilder(builder: suspend (token: String, builder: suspend KordBuilder.() -> Unit) -> Kord)","description":"dev.kordex.core.builders.ExtensibleBotBuilder.customKordBuilder","location":"kord-extensions/dev.kordex.core.builders/-extensible-bot-builder/custom-kord-builder.html","searchKeys":["customKordBuilder","fun customKordBuilder(builder: suspend (token: String, builder: suspend KordBuilder.() -> Unit) -> Kord)","dev.kordex.core.builders.ExtensibleBotBuilder.customKordBuilder"]},{"name":"fun dataAdapter(builder: () -> DataAdapter<*>)","description":"dev.kordex.core.builders.ExtensibleBotBuilder.dataAdapter","location":"kord-extensions/dev.kordex.core.builders/-extensible-bot-builder/data-adapter.html","searchKeys":["dataAdapter","fun dataAdapter(builder: () -> DataAdapter<*>)","dev.kordex.core.builders.ExtensibleBotBuilder.dataAdapter"]},{"name":"fun dataTypeTransformer(body: SentryDataTypeTransformer)","description":"dev.kordex.core.builders.extensions.SentryExtensionBuilder.dataTypeTransformer","location":"kord-extensions/dev.kordex.core.builders.extensions/-sentry-extension-builder/data-type-transformer.html","searchKeys":["dataTypeTransformer","fun dataTypeTransformer(body: SentryDataTypeTransformer)","dev.kordex.core.builders.extensions.SentryExtensionBuilder.dataTypeTransformer"]},{"name":"fun defaultDataTypes(body: SentryExtensionBuilder.SentryExtensionDataTypeBuilder.() -> Unit)","description":"dev.kordex.core.builders.extensions.SentryExtensionBuilder.defaultDataTypes","location":"kord-extensions/dev.kordex.core.builders.extensions/-sentry-extension-builder/default-data-types.html","searchKeys":["defaultDataTypes","fun defaultDataTypes(body: SentryExtensionBuilder.SentryExtensionDataTypeBuilder.() -> Unit)","dev.kordex.core.builders.extensions.SentryExtensionBuilder.defaultDataTypes"]},{"name":"fun defaultGuild(id: Snowflake?)","description":"dev.kordex.core.builders.ApplicationCommandsBuilder.defaultGuild","location":"kord-extensions/dev.kordex.core.builders/-application-commands-builder/default-guild.html","searchKeys":["defaultGuild","fun defaultGuild(id: Snowflake?)","dev.kordex.core.builders.ApplicationCommandsBuilder.defaultGuild"]},{"name":"fun defaultGuild(id: String?)","description":"dev.kordex.core.builders.ApplicationCommandsBuilder.defaultGuild","location":"kord-extensions/dev.kordex.core.builders/-application-commands-builder/default-guild.html","searchKeys":["defaultGuild","fun defaultGuild(id: String?)","dev.kordex.core.builders.ApplicationCommandsBuilder.defaultGuild"]},{"name":"fun defaultGuild(id: ULong?)","description":"dev.kordex.core.builders.ApplicationCommandsBuilder.defaultGuild","location":"kord-extensions/dev.kordex.core.builders/-application-commands-builder/default-guild.html","searchKeys":["defaultGuild","fun defaultGuild(id: ULong?)","dev.kordex.core.builders.ApplicationCommandsBuilder.defaultGuild"]},{"name":"fun disable(id: String)","description":"dev.kordex.core.builders.PluginBuilder.disable","location":"kord-extensions/dev.kordex.core.builders/-plugin-builder/disable.html","searchKeys":["disable","fun disable(id: String)","dev.kordex.core.builders.PluginBuilder.disable"]},{"name":"fun enableIfDSN(sentryDSN: String?)","description":"dev.kordex.core.builders.extensions.SentryExtensionBuilder.enableIfDSN","location":"kord-extensions/dev.kordex.core.builders.extensions/-sentry-extension-builder/enable-if-d-s-n.html","searchKeys":["enableIfDSN","fun enableIfDSN(sentryDSN: String?)","dev.kordex.core.builders.extensions.SentryExtensionBuilder.enableIfDSN"]},{"name":"fun env(name: String): String","description":"dev.kordex.core.utils.env","location":"kord-extensions/dev.kordex.core.utils/env.html","searchKeys":["env","fun env(name: String): String","dev.kordex.core.utils.env"]},{"name":"fun envOrNull(name: String): String?","description":"dev.kordex.core.utils.envOrNull","location":"kord-extensions/dev.kordex.core.utils/env-or-null.html","searchKeys":["envOrNull","fun envOrNull(name: String): String?","dev.kordex.core.utils.envOrNull"]},{"name":"fun errorResponse(builder: FailureResponseBuilder)","description":"dev.kordex.core.builders.ExtensibleBotBuilder.errorResponse","location":"kord-extensions/dev.kordex.core.builders/-extensible-bot-builder/error-response.html","searchKeys":["errorResponse","fun errorResponse(builder: FailureResponseBuilder)","dev.kordex.core.builders.ExtensibleBotBuilder.errorResponse"]},{"name":"fun eventFilter(predicate: suspend Event.() -> Boolean)","description":"dev.kordex.core.builders.ExtensibleBotBuilder.eventFilter","location":"kord-extensions/dev.kordex.core.builders/-extensible-bot-builder/event-filter.html","searchKeys":["eventFilter","fun eventFilter(predicate: suspend Event.() -> Boolean)","dev.kordex.core.builders.ExtensibleBotBuilder.eventFilter"]},{"name":"fun extensionAdded(body: suspend ExtensibleBot.(extension: Extension) -> Unit): Boolean","description":"dev.kordex.core.builders.HooksBuilder.extensionAdded","location":"kord-extensions/dev.kordex.core.builders/-hooks-builder/extension-added.html","searchKeys":["extensionAdded","fun extensionAdded(body: suspend ExtensibleBot.(extension: Extension) -> Unit): Boolean","dev.kordex.core.builders.HooksBuilder.extensionAdded"]},{"name":"fun fail(message: Key? = null)","description":"dev.kordex.core.checks.types.CheckContext.fail","location":"kord-extensions/dev.kordex.core.checks.types/-check-context/fail.html","searchKeys":["fail","fun fail(message: Key? = null)","dev.kordex.core.checks.types.CheckContext.fail"]},{"name":"fun fail(message: String)","description":"dev.kordex.core.checks.types.CheckContext.fail","location":"kord-extensions/dev.kordex.core.checks.types/-check-context/fail.html","searchKeys":["fail","fun fail(message: String)","dev.kordex.core.checks.types.CheckContext.fail"]},{"name":"fun fail(message: String)","description":"dev.kordex.core.commands.converters.builders.ValidationContext.fail","location":"kord-extensions/dev.kordex.core.commands.converters.builders/-validation-context/fail.html","searchKeys":["fail","fun fail(message: String)","dev.kordex.core.commands.converters.builders.ValidationContext.fail"]},{"name":"fun failIf(value: Boolean, message: Key? = null): Boolean","description":"dev.kordex.core.checks.types.CheckContext.failIf","location":"kord-extensions/dev.kordex.core.checks.types/-check-context/fail-if.html","searchKeys":["failIf","fun failIf(value: Boolean, message: Key? = null): Boolean","dev.kordex.core.checks.types.CheckContext.failIf"]},{"name":"fun failIf(value: Boolean, message: String): Boolean","description":"dev.kordex.core.checks.types.CheckContext.failIf","location":"kord-extensions/dev.kordex.core.checks.types/-check-context/fail-if.html","searchKeys":["failIf","fun failIf(value: Boolean, message: String): Boolean","dev.kordex.core.checks.types.CheckContext.failIf"]},{"name":"fun failIf(value: Boolean, message: String): Boolean","description":"dev.kordex.core.commands.converters.builders.ValidationContext.failIf","location":"kord-extensions/dev.kordex.core.commands.converters.builders/-validation-context/fail-if.html","searchKeys":["failIf","fun failIf(value: Boolean, message: String): Boolean","dev.kordex.core.commands.converters.builders.ValidationContext.failIf"]},{"name":"fun failIfNot(value: Boolean, message: Key? = null): Boolean","description":"dev.kordex.core.checks.types.CheckContext.failIfNot","location":"kord-extensions/dev.kordex.core.checks.types/-check-context/fail-if-not.html","searchKeys":["failIfNot","fun failIfNot(value: Boolean, message: Key? = null): Boolean","dev.kordex.core.checks.types.CheckContext.failIfNot"]},{"name":"fun failIfNot(value: Boolean, message: String): Boolean","description":"dev.kordex.core.checks.types.CheckContext.failIfNot","location":"kord-extensions/dev.kordex.core.checks.types/-check-context/fail-if-not.html","searchKeys":["failIfNot","fun failIfNot(value: Boolean, message: String): Boolean","dev.kordex.core.checks.types.CheckContext.failIfNot"]},{"name":"fun failIfNot(value: Boolean, message: String): Boolean","description":"dev.kordex.core.commands.converters.builders.ValidationContext.failIfNot","location":"kord-extensions/dev.kordex.core.commands.converters.builders/-validation-context/fail-if-not.html","searchKeys":["failIfNot","fun failIfNot(value: Boolean, message: String): Boolean","dev.kordex.core.commands.converters.builders.ValidationContext.failIfNot"]},{"name":"fun fill(id: Snowflake): Boolean?","description":"dev.kordex.core.builders.MembersBuilder.fill","location":"kord-extensions/dev.kordex.core.builders/-members-builder/fill.html","searchKeys":["fill","fun fill(id: Snowflake): Boolean?","dev.kordex.core.builders.MembersBuilder.fill"]},{"name":"fun fill(id: String): Boolean?","description":"dev.kordex.core.builders.MembersBuilder.fill","location":"kord-extensions/dev.kordex.core.builders/-members-builder/fill.html","searchKeys":["fill","fun fill(id: String): Boolean?","dev.kordex.core.builders.MembersBuilder.fill"]},{"name":"fun fill(id: ULong): Boolean?","description":"dev.kordex.core.builders.MembersBuilder.fill","location":"kord-extensions/dev.kordex.core.builders/-members-builder/fill.html","searchKeys":["fill","fun fill(id: ULong): Boolean?","dev.kordex.core.builders.MembersBuilder.fill"]},{"name":"fun fill(ids: Collection<Snowflake>): Boolean?","description":"dev.kordex.core.builders.MembersBuilder.fill","location":"kord-extensions/dev.kordex.core.builders/-members-builder/fill.html","searchKeys":["fill","fun fill(ids: Collection<Snowflake>): Boolean?","dev.kordex.core.builders.MembersBuilder.fill"]},{"name":"fun fill(ids: Collection<String>): Boolean?","description":"dev.kordex.core.builders.MembersBuilder.fill","location":"kord-extensions/dev.kordex.core.builders/-members-builder/fill.html","searchKeys":["fill","fun fill(ids: Collection<String>): Boolean?","dev.kordex.core.builders.MembersBuilder.fill"]},{"name":"fun fill(ids: Collection<ULong>): Boolean?","description":"dev.kordex.core.builders.MembersBuilder.fill","location":"kord-extensions/dev.kordex.core.builders/-members-builder/fill.html","searchKeys":["fill","fun fill(ids: Collection<ULong>): Boolean?","dev.kordex.core.builders.MembersBuilder.fill"]},{"name":"fun filterNamedPlaceholders(body: (Map.Entry<String, Any?>) -> Boolean): Key","description":"dev.kordex.core.i18n.types.Key.filterNamedPlaceholders","location":"kord-extensions/dev.kordex.core.i18n.types/-key/filter-named-placeholders.html","searchKeys":["filterNamedPlaceholders","fun filterNamedPlaceholders(body: (Map.Entry<String, Any?>) -> Boolean): Key","dev.kordex.core.i18n.types.Key.filterNamedPlaceholders"]},{"name":"fun filterOrdinalPlaceholders(body: (Any?) -> Boolean): Key","description":"dev.kordex.core.i18n.types.Key.filterOrdinalPlaceholders","location":"kord-extensions/dev.kordex.core.i18n.types/-key/filter-ordinal-placeholders.html","searchKeys":["filterOrdinalPlaceholders","fun filterOrdinalPlaceholders(body: (Any?) -> Boolean): Key","dev.kordex.core.i18n.types.Key.filterOrdinalPlaceholders"]},{"name":"fun filterPostProcessors(body: (PostProcessor) -> Boolean): Key","description":"dev.kordex.core.i18n.types.Key.filterPostProcessors","location":"kord-extensions/dev.kordex.core.i18n.types/-key/filter-post-processors.html","searchKeys":["filterPostProcessors","fun filterPostProcessors(body: (PostProcessor) -> Boolean): Key","dev.kordex.core.i18n.types.Key.filterPostProcessors"]},{"name":"fun format(value: Long): String","description":"dev.kordex.core.time.TimestampType.format","location":"kord-extensions/dev.kordex.core.time/-timestamp-type/format.html","searchKeys":["format","fun format(value: Long): String","dev.kordex.core.time.TimestampType.format"]},{"name":"fun from(old: Message?, new: Message): MessageDelta?","description":"dev.kordex.core.utils.deltas.MessageDelta.Companion.from","location":"kord-extensions/dev.kordex.core.utils.deltas/-message-delta/-companion/from.html","searchKeys":["from","fun from(old: Message?, new: Message): MessageDelta?","dev.kordex.core.utils.deltas.MessageDelta.Companion.from"]},{"name":"fun from(old: User?, new: User): UserDelta?","description":"dev.kordex.core.utils.deltas.UserDelta.Companion.from","location":"kord-extensions/dev.kordex.core.utils.deltas/-user-delta/-companion/from.html","searchKeys":["from","fun from(old: User?, new: User): UserDelta?","dev.kordex.core.utils.deltas.UserDelta.Companion.from"]},{"name":"fun fromFormatSpecifier(string: String?): TimestampType?","description":"dev.kordex.core.time.TimestampType.Companion.fromFormatSpecifier","location":"kord-extensions/dev.kordex.core.time/-timestamp-type/-companion/from-format-specifier.html","searchKeys":["fromFormatSpecifier","fun fromFormatSpecifier(string: String?): TimestampType?","dev.kordex.core.time.TimestampType.Companion.fromFormatSpecifier"]},{"name":"fun get(): E?","description":"dev.kordex.core.utils.collections.FixedLengthQueue.get","location":"kord-extensions/dev.kordex.core.utils.collections/-fixed-length-queue/get.html","searchKeys":["get","fun get(): E?","dev.kordex.core.utils.collections.FixedLengthQueue.get"]},{"name":"fun getAll(): List<E>","description":"dev.kordex.core.utils.collections.FixedLengthQueue.getAll","location":"kord-extensions/dev.kordex.core.utils.collections/-fixed-length-queue/get-all.html","searchKeys":["getAll","fun getAll(): List<E>","dev.kordex.core.utils.collections.FixedLengthQueue.getAll"]},{"name":"fun getChannel(): MessageChannelBehavior","description":"dev.kordex.core.components.ComponentContext.getChannel","location":"kord-extensions/dev.kordex.core.components/-component-context/get-channel.html","searchKeys":["getChannel","fun getChannel(): MessageChannelBehavior","dev.kordex.core.components.ComponentContext.getChannel"]},{"name":"fun getColors(locale: Locale): StringColorMap","description":"dev.kordex.core.parsers.caches.ColorCache.getColors","location":"kord-extensions/dev.kordex.core.parsers.caches/-color-cache/get-colors.html","searchKeys":["getColors","fun getColors(locale: Locale): StringColorMap","dev.kordex.core.parsers.caches.ColorCache.getColors"]},{"name":"fun getFirst(): E?","description":"dev.kordex.core.utils.collections.FixedLengthQueue.getFirst","location":"kord-extensions/dev.kordex.core.utils.collections/-fixed-length-queue/get-first.html","searchKeys":["getFirst","fun getFirst(): E?","dev.kordex.core.utils.collections.FixedLengthQueue.getFirst"]},{"name":"fun getGuild(): GuildBehavior?","description":"dev.kordex.core.components.ComponentContext.getGuild","location":"kord-extensions/dev.kordex.core.components/-component-context/get-guild.html","searchKeys":["getGuild","fun getGuild(): GuildBehavior?","dev.kordex.core.components.ComponentContext.getGuild"]},{"name":"fun getKoin(): Koin","description":"dev.kordex.core.utils.getKoin","location":"kord-extensions/dev.kordex.core.utils/get-koin.html","searchKeys":["getKoin","fun getKoin(): Koin","dev.kordex.core.utils.getKoin"]},{"name":"fun getKoinApplicationOrNull(): KoinApplication?","description":"dev.kordex.core.koin.KordExContext.getKoinApplicationOrNull","location":"kord-extensions/dev.kordex.core.koin/-kord-ex-context/get-koin-application-or-null.html","searchKeys":["getKoinApplicationOrNull","fun getKoinApplicationOrNull(): KoinApplication?","dev.kordex.core.koin.KordExContext.getKoinApplicationOrNull"]},{"name":"fun getMember(): MemberBehavior?","description":"dev.kordex.core.components.ComponentContext.getMember","location":"kord-extensions/dev.kordex.core.components/-component-context/get-member.html","searchKeys":["getMember","fun getMember(): MemberBehavior?","dev.kordex.core.components.ComponentContext.getMember"]},{"name":"fun getMessage(): Message","description":"dev.kordex.core.components.ComponentContext.getMessage","location":"kord-extensions/dev.kordex.core.components/-component-context/get-message.html","searchKeys":["getMessage","fun getMessage(): Message","dev.kordex.core.components.ComponentContext.getMessage"]},{"name":"fun getMessageKey(): Key?","description":"dev.kordex.core.checks.types.CheckContext.getMessageKey","location":"kord-extensions/dev.kordex.core.checks.types/-check-context/get-message-key.html","searchKeys":["getMessageKey","fun getMessageKey(): Key?","dev.kordex.core.checks.types.CheckContext.getMessageKey"]},{"name":"fun getTranslatedDescription(locale: Locale): String","description":"dev.kordex.core.commands.application.slash.SlashGroup.getTranslatedDescription","location":"kord-extensions/dev.kordex.core.commands.application.slash/-slash-group/get-translated-description.html","searchKeys":["getTranslatedDescription","fun getTranslatedDescription(locale: Locale): String","dev.kordex.core.commands.application.slash.SlashGroup.getTranslatedDescription"]},{"name":"fun getTranslatedMessage(): String?","description":"dev.kordex.core.checks.types.CheckContext.getTranslatedMessage","location":"kord-extensions/dev.kordex.core.checks.types/-check-context/get-translated-message.html","searchKeys":["getTranslatedMessage","fun getTranslatedMessage(): String?","dev.kordex.core.checks.types.CheckContext.getTranslatedMessage"]},{"name":"fun getUnits(locale: Locale): StringUnitMap","description":"dev.kordex.core.parsers.caches.TimeUnitCache.getUnits","location":"kord-extensions/dev.kordex.core.parsers.caches/-time-unit-cache/get-units.html","searchKeys":["getUnits","fun getUnits(locale: Locale): StringUnitMap","dev.kordex.core.parsers.caches.TimeUnitCache.getUnits"]},{"name":"fun getUser(): UserBehavior","description":"dev.kordex.core.components.ComponentContext.getUser","location":"kord-extensions/dev.kordex.core.components/-component-context/get-user.html","searchKeys":["getUser","fun getUser(): UserBehavior","dev.kordex.core.components.ComponentContext.getUser"]},{"name":"fun hasEventId(id: SentryId?): Boolean","description":"dev.kordex.core.sentry.SentryAdapter.hasEventId","location":"kord-extensions/dev.kordex.core.sentry/-sentry-adapter/has-event-id.html","searchKeys":["hasEventId","fun hasEventId(id: SentryId?): Boolean","dev.kordex.core.sentry.SentryAdapter.hasEventId"]},{"name":"fun init(callback: (SentryOptions) -> Unit)","description":"dev.kordex.core.sentry.SentryAdapter.init","location":"kord-extensions/dev.kordex.core.sentry/-sentry-adapter/init.html","searchKeys":["init","fun init(callback: (SentryOptions) -> Unit)","dev.kordex.core.sentry.SentryAdapter.init"]},{"name":"fun initialResponse(body: InitialEphemeralButtonResponseBuilder)","description":"dev.kordex.core.components.buttons.EphemeralInteractionButton.initialResponse","location":"kord-extensions/dev.kordex.core.components.buttons/-ephemeral-interaction-button/initial-response.html","searchKeys":["initialResponse","fun initialResponse(body: InitialEphemeralButtonResponseBuilder)","dev.kordex.core.components.buttons.EphemeralInteractionButton.initialResponse"]},{"name":"fun initialResponse(body: InitialEphemeralMessageResponseBuilder)","description":"dev.kordex.core.commands.application.message.EphemeralMessageCommand.initialResponse","location":"kord-extensions/dev.kordex.core.commands.application.message/-ephemeral-message-command/initial-response.html","searchKeys":["initialResponse","fun initialResponse(body: InitialEphemeralMessageResponseBuilder)","dev.kordex.core.commands.application.message.EphemeralMessageCommand.initialResponse"]},{"name":"fun initialResponse(body: InitialEphemeralSelectMenuResponseBuilder)","description":"dev.kordex.core.components.menus.EphemeralSelectMenu.initialResponse","location":"kord-extensions/dev.kordex.core.components.menus/-ephemeral-select-menu/initial-response.html","searchKeys":["initialResponse","fun initialResponse(body: InitialEphemeralSelectMenuResponseBuilder)","dev.kordex.core.components.menus.EphemeralSelectMenu.initialResponse"]},{"name":"fun initialResponse(body: InitialEphemeralSelectMenuResponseBuilder)","description":"dev.kordex.core.components.menus.PublicSelectMenu.initialResponse","location":"kord-extensions/dev.kordex.core.components.menus/-public-select-menu/initial-response.html","searchKeys":["initialResponse","fun initialResponse(body: InitialEphemeralSelectMenuResponseBuilder)","dev.kordex.core.components.menus.PublicSelectMenu.initialResponse"]},{"name":"fun initialResponse(body: InitialEphemeralSlashResponseBuilder)","description":"dev.kordex.core.commands.application.slash.EphemeralSlashCommand.initialResponse","location":"kord-extensions/dev.kordex.core.commands.application.slash/-ephemeral-slash-command/initial-response.html","searchKeys":["initialResponse","fun initialResponse(body: InitialEphemeralSlashResponseBuilder)","dev.kordex.core.commands.application.slash.EphemeralSlashCommand.initialResponse"]},{"name":"fun initialResponse(body: InitialEphemeralUserResponseBuilder)","description":"dev.kordex.core.commands.application.user.EphemeralUserCommand.initialResponse","location":"kord-extensions/dev.kordex.core.commands.application.user/-ephemeral-user-command/initial-response.html","searchKeys":["initialResponse","fun initialResponse(body: InitialEphemeralUserResponseBuilder)","dev.kordex.core.commands.application.user.EphemeralUserCommand.initialResponse"]},{"name":"fun initialResponse(body: InitialPublicButtonResponseBuilder)","description":"dev.kordex.core.components.buttons.PublicInteractionButton.initialResponse","location":"kord-extensions/dev.kordex.core.components.buttons/-public-interaction-button/initial-response.html","searchKeys":["initialResponse","fun initialResponse(body: InitialPublicButtonResponseBuilder)","dev.kordex.core.components.buttons.PublicInteractionButton.initialResponse"]},{"name":"fun initialResponse(body: InitialPublicMessageResponseBuilder)","description":"dev.kordex.core.commands.application.message.PublicMessageCommand.initialResponse","location":"kord-extensions/dev.kordex.core.commands.application.message/-public-message-command/initial-response.html","searchKeys":["initialResponse","fun initialResponse(body: InitialPublicMessageResponseBuilder)","dev.kordex.core.commands.application.message.PublicMessageCommand.initialResponse"]},{"name":"fun initialResponse(body: InitialPublicSlashResponseBehavior)","description":"dev.kordex.core.commands.application.slash.PublicSlashCommand.initialResponse","location":"kord-extensions/dev.kordex.core.commands.application.slash/-public-slash-command/initial-response.html","searchKeys":["initialResponse","fun initialResponse(body: InitialPublicSlashResponseBehavior)","dev.kordex.core.commands.application.slash.PublicSlashCommand.initialResponse"]},{"name":"fun initialResponse(body: InitialPublicUserResponseBuilder)","description":"dev.kordex.core.commands.application.user.PublicUserCommand.initialResponse","location":"kord-extensions/dev.kordex.core.commands.application.user/-public-user-command/initial-response.html","searchKeys":["initialResponse","fun initialResponse(body: InitialPublicUserResponseBuilder)","dev.kordex.core.commands.application.user.PublicUserCommand.initialResponse"]},{"name":"fun intents(addDefaultIntents: Boolean = true, addExtensionIntents: Boolean = true, builder: Intents.Builder.() -> Unit)","description":"dev.kordex.core.builders.ExtensibleBotBuilder.intents","location":"kord-extensions/dev.kordex.core.builders/-extensible-bot-builder/intents.html","searchKeys":["intents","fun intents(addDefaultIntents: Boolean = true, addExtensionIntents: Boolean = true, builder: Intents.Builder.() -> Unit)","dev.kordex.core.builders.ExtensibleBotBuilder.intents"]},{"name":"fun interactionFor(event: Event): Interaction?","description":"dev.kordex.core.checks.interactionFor","location":"kord-extensions/dev.kordex.core.checks/interaction-for.html","searchKeys":["interactionFor","fun interactionFor(event: Event): Interaction?","dev.kordex.core.checks.interactionFor"]},{"name":"fun interactionGuildLocaleResolver()","description":"dev.kordex.core.builders.I18nBuilder.interactionGuildLocaleResolver","location":"kord-extensions/dev.kordex.core.builders/-i18n-builder/interaction-guild-locale-resolver.html","searchKeys":["interactionGuildLocaleResolver","fun interactionGuildLocaleResolver()","dev.kordex.core.builders.I18nBuilder.interactionGuildLocaleResolver"]},{"name":"fun interactionUserLocaleResolver()","description":"dev.kordex.core.builders.I18nBuilder.interactionUserLocaleResolver","location":"kord-extensions/dev.kordex.core.builders/-i18n-builder/interaction-user-locale-resolver.html","searchKeys":["interactionUserLocaleResolver","fun interactionUserLocaleResolver()","dev.kordex.core.builders.I18nBuilder.interactionUserLocaleResolver"]},{"name":"fun kord(builder: KordCacheBuilder.(resources: ClientResources) -> Unit)","description":"dev.kordex.core.builders.CacheBuilder.kord","location":"kord-extensions/dev.kordex.core.builders/-cache-builder/kord.html","searchKeys":["kord","fun kord(builder: KordCacheBuilder.(resources: ClientResources) -> Unit)","dev.kordex.core.builders.CacheBuilder.kord"]},{"name":"fun kord(builder: suspend KordBuilder.() -> Unit)","description":"dev.kordex.core.builders.ExtensibleBotBuilder.kord","location":"kord-extensions/dev.kordex.core.builders/-extensible-bot-builder/kord.html","searchKeys":["kord","fun kord(builder: suspend KordBuilder.() -> Unit)","dev.kordex.core.builders.ExtensibleBotBuilder.kord"]},{"name":"fun lineText(coordinate: CoordinatePair? = null, builder: LineTextWidget.() -> Unit): LineTextWidget","description":"dev.kordex.core.components.forms.ModalForm.lineText","location":"kord-extensions/dev.kordex.core.components.forms/-modal-form/line-text.html","searchKeys":["lineText","fun lineText(coordinate: CoordinatePair? = null, builder: LineTextWidget.() -> Unit): LineTextWidget","dev.kordex.core.components.forms.ModalForm.lineText"]},{"name":"fun loadModule(createdAtStart: Boolean = false, moduleDeclaration: ModuleDeclaration): Module","description":"dev.kordex.core.utils.loadModule","location":"kord-extensions/dev.kordex.core.utils/load-module.html","searchKeys":["loadModule","fun loadModule(createdAtStart: Boolean = false, moduleDeclaration: ModuleDeclaration): Module","dev.kordex.core.utils.loadModule"]},{"name":"fun localeResolver(body: LocaleResolver)","description":"dev.kordex.core.builders.I18nBuilder.localeResolver","location":"kord-extensions/dev.kordex.core.builders/-i18n-builder/locale-resolver.html","searchKeys":["localeResolver","fun localeResolver(body: LocaleResolver)","dev.kordex.core.builders.I18nBuilder.localeResolver"]},{"name":"fun localize(key: Key, lowerCase: Boolean = false): Localized<String>","description":"dev.kordex.core.commands.application.ApplicationCommand.localize","location":"kord-extensions/dev.kordex.core.commands.application/-application-command/localize.html","searchKeys":["localize","fun localize(key: Key, lowerCase: Boolean = false): Localized<String>","dev.kordex.core.commands.application.ApplicationCommand.localize"]},{"name":"fun main()","description":"dev.kordex.core.utils.collections.serializers.main","location":"kord-extensions/dev.kordex.core.utils.collections.serializers/main.html","searchKeys":["main","fun main()","dev.kordex.core.utils.collections.serializers.main"]},{"name":"fun message(builder: SectionBuilder)","description":"dev.kordex.core.builders.about.Section.message","location":"kord-extensions/dev.kordex.core.builders.about/-section/message.html","searchKeys":["message","fun message(builder: SectionBuilder)","dev.kordex.core.builders.about.Section.message"]},{"name":"fun messageCommandCheck(check: MessageCommandCheck)","description":"dev.kordex.core.builders.ApplicationCommandsBuilder.messageCommandCheck","location":"kord-extensions/dev.kordex.core.builders/-application-commands-builder/message-command-check.html","searchKeys":["messageCommandCheck","fun messageCommandCheck(check: MessageCommandCheck)","dev.kordex.core.builders.ApplicationCommandsBuilder.messageCommandCheck"]},{"name":"fun messageCommandCheck(vararg checks: MessageCommandCheck)","description":"dev.kordex.core.builders.ApplicationCommandsBuilder.messageCommandCheck","location":"kord-extensions/dev.kordex.core.builders/-application-commands-builder/message-command-check.html","searchKeys":["messageCommandCheck","fun messageCommandCheck(vararg checks: MessageCommandCheck)","dev.kordex.core.builders.ApplicationCommandsBuilder.messageCommandCheck"]},{"name":"fun modify(body: suspend T.() -> Unit)","description":"dev.kordex.core.commands.OptionWrapper.modify","location":"kord-extensions/dev.kordex.core.commands/-option-wrapper/modify.html","searchKeys":["modify","fun modify(body: suspend T.() -> Unit)","dev.kordex.core.commands.OptionWrapper.modify"]},{"name":"fun namedDateTimeUnit(name: String): DateTimeUnit","description":"dev.kordex.core.time.namedDateTimeUnit","location":"kord-extensions/dev.kordex.core.time/named-date-time-unit.html","searchKeys":["namedDateTimeUnit","fun namedDateTimeUnit(name: String): DateTimeUnit","dev.kordex.core.time.namedDateTimeUnit"]},{"name":"fun none()","description":"dev.kordex.core.builders.MembersBuilder.none","location":"kord-extensions/dev.kordex.core.builders/-members-builder/none.html","searchKeys":["none","fun none()","dev.kordex.core.builders.MembersBuilder.none"]},{"name":"fun page(body: PageMutator)","description":"dev.kordex.core.pagination.builders.PageTransitionCallback.page","location":"kord-extensions/dev.kordex.core.pagination.builders/-page-transition-callback/page.html","searchKeys":["page","fun page(body: PageMutator)","dev.kordex.core.pagination.builders.PageTransitionCallback.page"]},{"name":"fun page(builder: suspend EmbedBuilder.() -> Unit)","description":"dev.kordex.core.pagination.builders.PaginatorBuilder.page","location":"kord-extensions/dev.kordex.core.pagination.builders/-paginator-builder/page.html","searchKeys":["page","fun page(builder: suspend EmbedBuilder.() -> Unit)","dev.kordex.core.pagination.builders.PaginatorBuilder.page"]},{"name":"fun page(group: Key, builder: suspend EmbedBuilder.() -> Unit)","description":"dev.kordex.core.pagination.builders.PaginatorBuilder.page","location":"kord-extensions/dev.kordex.core.pagination.builders/-paginator-builder/page.html","searchKeys":["page","fun page(group: Key, builder: suspend EmbedBuilder.() -> Unit)","dev.kordex.core.pagination.builders.PaginatorBuilder.page"]},{"name":"fun page(group: Key, page: Page)","description":"dev.kordex.core.pagination.builders.PaginatorBuilder.page","location":"kord-extensions/dev.kordex.core.pagination.builders/-paginator-builder/page.html","searchKeys":["page","fun page(group: Key, page: Page)","dev.kordex.core.pagination.builders.PaginatorBuilder.page"]},{"name":"fun page(page: Page)","description":"dev.kordex.core.pagination.builders.PaginatorBuilder.page","location":"kord-extensions/dev.kordex.core.pagination.builders/-paginator-builder/page.html","searchKeys":["page","fun page(page: Page)","dev.kordex.core.pagination.builders.PaginatorBuilder.page"]},{"name":"fun paginator(body: PaginatorMutator)","description":"dev.kordex.core.pagination.builders.PageTransitionCallback.paginator","location":"kord-extensions/dev.kordex.core.pagination.builders/-page-transition-callback/paginator.html","searchKeys":["paginator","fun paginator(body: PaginatorMutator)","dev.kordex.core.pagination.builders.PageTransitionCallback.paginator"]},{"name":"fun paragraphText(coordinate: CoordinatePair? = null, builder: ParagraphTextWidget.() -> Unit): ParagraphTextWidget","description":"dev.kordex.core.components.forms.ModalForm.paragraphText","location":"kord-extensions/dev.kordex.core.components.forms/-modal-form/paragraph-text.html","searchKeys":["paragraphText","fun paragraphText(coordinate: CoordinatePair? = null, builder: ParagraphTextWidget.() -> Unit): ParagraphTextWidget","dev.kordex.core.components.forms.ModalForm.paragraphText"]},{"name":"fun parse(input: String, locale: Locale): Boolean?","description":"dev.kordex.core.parsers.BooleanParser.parse","location":"kord-extensions/dev.kordex.core.parsers/-boolean-parser/parse.html","searchKeys":["parse","fun parse(input: String, locale: Locale): Boolean?","dev.kordex.core.parsers.BooleanParser.parse"]},{"name":"fun parse(input: String, locale: Locale): Color?","description":"dev.kordex.core.parsers.ColorParser.parse","location":"kord-extensions/dev.kordex.core.parsers/-color-parser/parse.html","searchKeys":["parse","fun parse(input: String, locale: Locale): Color?","dev.kordex.core.parsers.ColorParser.parse"]},{"name":"fun parse(input: String, locale: Locale): DateTimePeriod","description":"dev.kordex.core.parsers.DurationParser.parse","location":"kord-extensions/dev.kordex.core.parsers/-duration-parser/parse.html","searchKeys":["parse","fun parse(input: String, locale: Locale): DateTimePeriod","dev.kordex.core.parsers.DurationParser.parse"]},{"name":"fun pass()","description":"dev.kordex.core.checks.types.CheckContext.pass","location":"kord-extensions/dev.kordex.core.checks.types/-check-context/pass.html","searchKeys":["pass","fun pass()","dev.kordex.core.checks.types.CheckContext.pass"]},{"name":"fun pass()","description":"dev.kordex.core.commands.converters.builders.ValidationContext.pass","location":"kord-extensions/dev.kordex.core.commands.converters.builders/-validation-context/pass.html","searchKeys":["pass","fun pass()","dev.kordex.core.commands.converters.builders.ValidationContext.pass"]},{"name":"fun passIf(value: Boolean): Boolean","description":"dev.kordex.core.checks.types.CheckContext.passIf","location":"kord-extensions/dev.kordex.core.checks.types/-check-context/pass-if.html","searchKeys":["passIf","fun passIf(value: Boolean): Boolean","dev.kordex.core.checks.types.CheckContext.passIf"]},{"name":"fun passIf(value: Boolean): Boolean","description":"dev.kordex.core.commands.converters.builders.ValidationContext.passIf","location":"kord-extensions/dev.kordex.core.commands.converters.builders/-validation-context/pass-if.html","searchKeys":["passIf","fun passIf(value: Boolean): Boolean","dev.kordex.core.commands.converters.builders.ValidationContext.passIf"]},{"name":"fun passIfNot(value: Boolean): Boolean","description":"dev.kordex.core.checks.types.CheckContext.passIfNot","location":"kord-extensions/dev.kordex.core.checks.types/-check-context/pass-if-not.html","searchKeys":["passIfNot","fun passIfNot(value: Boolean): Boolean","dev.kordex.core.checks.types.CheckContext.passIfNot"]},{"name":"fun passIfNot(value: Boolean): Boolean","description":"dev.kordex.core.commands.converters.builders.ValidationContext.passIfNot","location":"kord-extensions/dev.kordex.core.commands.converters.builders/-validation-context/pass-if-not.html","searchKeys":["passIfNot","fun passIfNot(value: Boolean): Boolean","dev.kordex.core.commands.converters.builders.ValidationContext.passIfNot"]},{"name":"fun pluginPath(path: Path)","description":"dev.kordex.core.builders.PluginBuilder.pluginPath","location":"kord-extensions/dev.kordex.core.builders/-plugin-builder/plugin-path.html","searchKeys":["pluginPath","fun pluginPath(path: Path)","dev.kordex.core.builders.PluginBuilder.pluginPath"]},{"name":"fun pluginPath(path: String)","description":"dev.kordex.core.builders.PluginBuilder.pluginPath","location":"kord-extensions/dev.kordex.core.builders/-plugin-builder/plugin-path.html","searchKeys":["pluginPath","fun pluginPath(path: String)","dev.kordex.core.builders.PluginBuilder.pluginPath"]},{"name":"fun pop(): E?","description":"dev.kordex.core.utils.collections.FixedLengthQueue.pop","location":"kord-extensions/dev.kordex.core.utils.collections/-fixed-length-queue/pop.html","searchKeys":["pop","fun pop(): E?","dev.kordex.core.utils.collections.FixedLengthQueue.pop"]},{"name":"fun popFirst(): E?","description":"dev.kordex.core.utils.collections.FixedLengthQueue.popFirst","location":"kord-extensions/dev.kordex.core.utils.collections/-fixed-length-queue/pop-first.html","searchKeys":["popFirst","fun popFirst(): E?","dev.kordex.core.utils.collections.FixedLengthQueue.popFirst"]},{"name":"fun postProcess(string: String): String","description":"dev.kordex.core.i18n.types.Key.postProcess","location":"kord-extensions/dev.kordex.core.i18n.types/-key/post-process.html","searchKeys":["postProcess","fun postProcess(string: String): String","dev.kordex.core.i18n.types.Key.postProcess"]},{"name":"fun predicate(body: suspend SentryCapture.() -> Boolean)","description":"dev.kordex.core.builders.extensions.SentryExtensionBuilder.predicate","location":"kord-extensions/dev.kordex.core.builders.extensions/-sentry-extension-builder/predicate.html","searchKeys":["predicate","fun predicate(body: suspend SentryCapture.() -> Boolean)","dev.kordex.core.builders.extensions.SentryExtensionBuilder.predicate"]},{"name":"fun prefix(builder: suspend MessageCreateEvent.(String) -> String)","description":"dev.kordex.core.builders.ChatCommandsBuilder.prefix","location":"kord-extensions/dev.kordex.core.builders/-chat-commands-builder/prefix.html","searchKeys":["prefix","fun prefix(builder: suspend MessageCreateEvent.(String) -> String)","dev.kordex.core.builders.ChatCommandsBuilder.prefix"]},{"name":"fun presence(builder: PresenceBuilder.() -> Unit)","description":"dev.kordex.core.builders.ExtensibleBotBuilder.presence","location":"kord-extensions/dev.kordex.core.builders/-extensible-bot-builder/presence.html","searchKeys":["presence","fun presence(builder: PresenceBuilder.() -> Unit)","dev.kordex.core.builders.ExtensibleBotBuilder.presence"]},{"name":"fun push(element: E): Boolean","description":"dev.kordex.core.utils.collections.FixedLengthQueue.push","location":"kord-extensions/dev.kordex.core.utils.collections/-fixed-length-queue/push.html","searchKeys":["push","fun push(element: E): Boolean","dev.kordex.core.utils.collections.FixedLengthQueue.push"]},{"name":"fun registry(builder: () -> ChatCommandRegistry)","description":"dev.kordex.core.builders.ChatCommandsBuilder.registry","location":"kord-extensions/dev.kordex.core.builders/-chat-commands-builder/registry.html","searchKeys":["registry","fun registry(builder: () -> ChatCommandRegistry)","dev.kordex.core.builders.ChatCommandsBuilder.registry"]},{"name":"fun registry(builder: () -> ComponentRegistry)","description":"dev.kordex.core.builders.ComponentsBuilder.registry","location":"kord-extensions/dev.kordex.core.builders/-components-builder/registry.html","searchKeys":["registry","fun registry(builder: () -> ComponentRegistry)","dev.kordex.core.builders.ComponentsBuilder.registry"]},{"name":"fun removeEventId(id: SentryId?): Boolean","description":"dev.kordex.core.sentry.SentryAdapter.removeEventId","location":"kord-extensions/dev.kordex.core.sentry/-sentry-adapter/remove-event-id.html","searchKeys":["removeEventId","fun removeEventId(id: SentryId?): Boolean","dev.kordex.core.sentry.SentryAdapter.removeEventId"]},{"name":"fun requireBotPermissions(vararg perms: Permission)","description":"dev.kordex.core.commands.Command.requireBotPermissions","location":"kord-extensions/dev.kordex.core.commands/-command/require-bot-permissions.html","searchKeys":["requireBotPermissions","fun requireBotPermissions(vararg perms: Permission)","dev.kordex.core.commands.Command.requireBotPermissions"]},{"name":"fun requireBotPermissions(vararg perms: Permission)","description":"dev.kordex.core.components.ComponentWithAction.requireBotPermissions","location":"kord-extensions/dev.kordex.core.components/-component-with-action/require-bot-permissions.html","searchKeys":["requireBotPermissions","fun requireBotPermissions(vararg perms: Permission)","dev.kordex.core.components.ComponentWithAction.requireBotPermissions"]},{"name":"fun requirePermission(vararg permissions: Permission)","description":"dev.kordex.core.commands.application.ApplicationCommand.requirePermission","location":"kord-extensions/dev.kordex.core.commands.application/-application-command/require-permission.html","searchKeys":["requirePermission","fun requirePermission(vararg permissions: Permission)","dev.kordex.core.commands.application.ApplicationCommand.requirePermission"]},{"name":"fun roleFor(event: Event): RoleBehavior?","description":"dev.kordex.core.checks.roleFor","location":"kord-extensions/dev.kordex.core.checks/role-for.html","searchKeys":["roleFor","fun roleFor(event: Event): RoleBehavior?","dev.kordex.core.checks.roleFor"]},{"name":"fun setDisabledButton(button: PublicInteractionButton<*>?)","description":"dev.kordex.core.pagination.BaseButtonPaginator.setDisabledButton","location":"kord-extensions/dev.kordex.core.pagination/-base-button-paginator/set-disabled-button.html","searchKeys":["setDisabledButton","fun setDisabledButton(button: PublicInteractionButton<*>?)","dev.kordex.core.pagination.BaseButtonPaginator.setDisabledButton"]},{"name":"fun setEnabledButton(button: PublicInteractionButton<*>?)","description":"dev.kordex.core.pagination.BaseButtonPaginator.setEnabledButton","location":"kord-extensions/dev.kordex.core.pagination/-base-button-paginator/set-enabled-button.html","searchKeys":["setEnabledButton","fun setEnabledButton(button: PublicInteractionButton<*>?)","dev.kordex.core.pagination.BaseButtonPaginator.setEnabledButton"]},{"name":"fun setup(body: SentryAdapter.() -> Unit)","description":"dev.kordex.core.builders.extensions.SentryExtensionBuilder.setup","location":"kord-extensions/dev.kordex.core.builders.extensions/-sentry-extension-builder/setup.html","searchKeys":["setup","fun setup(body: SentryAdapter.() -> Unit)","dev.kordex.core.builders.extensions.SentryExtensionBuilder.setup"]},{"name":"fun setup(body: suspend ExtensibleBot.() -> Unit): Boolean","description":"dev.kordex.core.builders.HooksBuilder.setup","location":"kord-extensions/dev.kordex.core.builders/-hooks-builder/setup.html","searchKeys":["setup","fun setup(body: suspend ExtensibleBot.() -> Unit): Boolean","dev.kordex.core.builders.HooksBuilder.setup"]},{"name":"fun sharding(shards: (recommended: Int) -> Shards)","description":"dev.kordex.core.builders.ExtensibleBotBuilder.sharding","location":"kord-extensions/dev.kordex.core.builders/-extensible-bot-builder/sharding.html","searchKeys":["sharding","fun sharding(shards: (recommended: Int) -> Shards)","dev.kordex.core.builders.ExtensibleBotBuilder.sharding"]},{"name":"fun shouldStart(): Boolean","description":"dev.kordex.core.utils.scheduling.Task.shouldStart","location":"kord-extensions/dev.kordex.core.utils.scheduling/-task/should-start.html","searchKeys":["shouldStart","fun shouldStart(): Boolean","dev.kordex.core.utils.scheduling.Task.shouldStart"]},{"name":"fun shutdown()","description":"dev.kordex.core.utils.scheduling.Scheduler.shutdown","location":"kord-extensions/dev.kordex.core.utils.scheduling/-scheduler/shutdown.html","searchKeys":["shutdown","fun shutdown()","dev.kordex.core.utils.scheduling.Scheduler.shutdown"]},{"name":"fun slashCommandCheck(check: SlashCommandCheck)","description":"dev.kordex.core.builders.ApplicationCommandsBuilder.slashCommandCheck","location":"kord-extensions/dev.kordex.core.builders/-application-commands-builder/slash-command-check.html","searchKeys":["slashCommandCheck","fun slashCommandCheck(check: SlashCommandCheck)","dev.kordex.core.builders.ApplicationCommandsBuilder.slashCommandCheck"]},{"name":"fun slashCommandCheck(vararg checks: SlashCommandCheck)","description":"dev.kordex.core.builders.ApplicationCommandsBuilder.slashCommandCheck","location":"kord-extensions/dev.kordex.core.builders/-application-commands-builder/slash-command-check.html","searchKeys":["slashCommandCheck","fun slashCommandCheck(vararg checks: SlashCommandCheck)","dev.kordex.core.builders.ApplicationCommandsBuilder.slashCommandCheck"]},{"name":"fun throwIfFailedWithMessage()","description":"dev.kordex.core.checks.types.CheckContext.throwIfFailedWithMessage","location":"kord-extensions/dev.kordex.core.checks.types/-check-context/throw-if-failed-with-message.html","searchKeys":["throwIfFailedWithMessage","fun throwIfFailedWithMessage()","dev.kordex.core.checks.types.CheckContext.throwIfFailedWithMessage"]},{"name":"fun toDiscord(): String","description":"dev.kordex.core.commands.converters.impl.FormattedTimestamp.toDiscord","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-formatted-timestamp/to-discord.html","searchKeys":["toDiscord","fun toDiscord(): String","dev.kordex.core.commands.converters.impl.FormattedTimestamp.toDiscord"]},{"name":"fun topRole(guildID: Snowflake): suspend (User) -> Role?","description":"dev.kordex.core.utils.topRole","location":"kord-extensions/dev.kordex.core.utils/top-role.html","searchKeys":["topRole","fun topRole(guildID: Snowflake): suspend (User) -> Role?","dev.kordex.core.utils.topRole"]},{"name":"fun transformCache(builder: suspend Kord.(cache: DataCache) -> Unit)","description":"dev.kordex.core.builders.CacheBuilder.transformCache","location":"kord-extensions/dev.kordex.core.builders/-cache-builder/transform-cache.html","searchKeys":["transformCache","fun transformCache(builder: suspend Kord.(cache: DataCache) -> Unit)","dev.kordex.core.builders.CacheBuilder.transformCache"]},{"name":"fun translate(key: String, bundleName: String? = null, locale: Locale? = null, replacements: Array<Any?> = arrayOf()): String","description":"dev.kordex.core.i18n.TranslationsProvider.translate","location":"kord-extensions/dev.kordex.core.i18n/-translations-provider/translate.html","searchKeys":["translate","fun translate(key: String, bundleName: String? = null, locale: Locale? = null, replacements: Array<Any?> = arrayOf()): String","dev.kordex.core.i18n.TranslationsProvider.translate"]},{"name":"fun translate(key: String, bundleName: String? = null, locale: Locale? = null, replacements: Map<String, Any?>): String","description":"dev.kordex.core.i18n.TranslationsProvider.translate","location":"kord-extensions/dev.kordex.core.i18n/-translations-provider/translate.html","searchKeys":["translate","fun translate(key: String, bundleName: String? = null, locale: Locale? = null, replacements: Map<String, Any?>): String","dev.kordex.core.i18n.TranslationsProvider.translate"]},{"name":"fun translate(vararg replacements: Any?): String","description":"dev.kordex.core.i18n.types.Key.translate","location":"kord-extensions/dev.kordex.core.i18n.types/-key/translate.html","searchKeys":["translate","fun translate(vararg replacements: Any?): String","dev.kordex.core.i18n.types.Key.translate"]},{"name":"fun translateArray(replacements: Array<Any?>): String","description":"dev.kordex.core.i18n.types.Key.translateArray","location":"kord-extensions/dev.kordex.core.i18n.types/-key/translate-array.html","searchKeys":["translateArray","fun translateArray(replacements: Array<Any?>): String","dev.kordex.core.i18n.types.Key.translateArray"]},{"name":"fun translateArrayLocale(locale: Locale, replacements: Array<Any?>): String","description":"dev.kordex.core.i18n.types.Key.translateArrayLocale","location":"kord-extensions/dev.kordex.core.i18n.types/-key/translate-array-locale.html","searchKeys":["translateArrayLocale","fun translateArrayLocale(locale: Locale, replacements: Array<Any?>): String","dev.kordex.core.i18n.types.Key.translateArrayLocale"]},{"name":"fun translateLocale(locale: Locale, vararg replacements: Any?): String","description":"dev.kordex.core.i18n.types.Key.translateLocale","location":"kord-extensions/dev.kordex.core.i18n.types/-key/translate-locale.html","searchKeys":["translateLocale","fun translateLocale(locale: Locale, vararg replacements: Any?): String","dev.kordex.core.i18n.types.Key.translateLocale"]},{"name":"fun translateNamed(replacements: Map<String, Any?>): String","description":"dev.kordex.core.i18n.types.Key.translateNamed","location":"kord-extensions/dev.kordex.core.i18n.types/-key/translate-named.html","searchKeys":["translateNamed","fun translateNamed(replacements: Map<String, Any?>): String","dev.kordex.core.i18n.types.Key.translateNamed"]},{"name":"fun translateNamed(vararg replacements: Pair<String, Any?>): String","description":"dev.kordex.core.i18n.types.Key.translateNamed","location":"kord-extensions/dev.kordex.core.i18n.types/-key/translate-named.html","searchKeys":["translateNamed","fun translateNamed(vararg replacements: Pair<String, Any?>): String","dev.kordex.core.i18n.types.Key.translateNamed"]},{"name":"fun translateNamedLocale(locale: Locale, replacements: Map<String, Any?>): String","description":"dev.kordex.core.i18n.types.Key.translateNamedLocale","location":"kord-extensions/dev.kordex.core.i18n.types/-key/translate-named-locale.html","searchKeys":["translateNamedLocale","fun translateNamedLocale(locale: Locale, replacements: Map<String, Any?>): String","dev.kordex.core.i18n.types.Key.translateNamedLocale"]},{"name":"fun translateNamedLocale(locale: Locale, vararg replacements: Pair<String, Any?>): String","description":"dev.kordex.core.i18n.types.Key.translateNamedLocale","location":"kord-extensions/dev.kordex.core.i18n.types/-key/translate-named-locale.html","searchKeys":["translateNamedLocale","fun translateNamedLocale(locale: Locale, vararg replacements: Pair<String, Any?>): String","dev.kordex.core.i18n.types.Key.translateNamedLocale"]},{"name":"fun translateTitle(locale: Locale): String","description":"dev.kordex.core.components.forms.ModalForm.translateTitle","location":"kord-extensions/dev.kordex.core.components.forms/-modal-form/translate-title.html","searchKeys":["translateTitle","fun translateTitle(locale: Locale): String","dev.kordex.core.components.forms.ModalForm.translateTitle"]},{"name":"fun translationsProvider(builder: (() -> Locale) -> TranslationsProvider)","description":"dev.kordex.core.builders.I18nBuilder.translationsProvider","location":"kord-extensions/dev.kordex.core.builders/-i18n-builder/translations-provider.html","searchKeys":["translationsProvider","fun translationsProvider(builder: (() -> Locale) -> TranslationsProvider)","dev.kordex.core.builders.I18nBuilder.translationsProvider"]},{"name":"fun updateButtons()","description":"dev.kordex.core.pagination.BaseButtonPaginator.updateButtons","location":"kord-extensions/dev.kordex.core.pagination/-base-button-paginator/update-buttons.html","searchKeys":["updateButtons","fun updateButtons()","dev.kordex.core.pagination.BaseButtonPaginator.updateButtons"]},{"name":"fun userCommandCheck(check: UserCommandCheck)","description":"dev.kordex.core.builders.ApplicationCommandsBuilder.userCommandCheck","location":"kord-extensions/dev.kordex.core.builders/-application-commands-builder/user-command-check.html","searchKeys":["userCommandCheck","fun userCommandCheck(check: UserCommandCheck)","dev.kordex.core.builders.ApplicationCommandsBuilder.userCommandCheck"]},{"name":"fun userCommandCheck(vararg checks: UserCommandCheck)","description":"dev.kordex.core.builders.ApplicationCommandsBuilder.userCommandCheck","location":"kord-extensions/dev.kordex.core.builders/-application-commands-builder/user-command-check.html","searchKeys":["userCommandCheck","fun userCommandCheck(vararg checks: UserCommandCheck)","dev.kordex.core.builders.ApplicationCommandsBuilder.userCommandCheck"]},{"name":"fun validate()","description":"dev.kordex.core.builders.about.Section.validate","location":"kord-extensions/dev.kordex.core.builders.about/-section/validate.html","searchKeys":["validate","fun validate()","dev.kordex.core.builders.about.Section.validate"]},{"name":"fun validate()","description":"dev.kordex.core.commands.application.slash.SlashGroup.validate","location":"kord-extensions/dev.kordex.core.commands.application.slash/-slash-group/validate.html","searchKeys":["validate","fun validate()","dev.kordex.core.commands.application.slash.SlashGroup.validate"]},{"name":"fun validate()","description":"dev.kordex.core.events.EventHandler.validate","location":"kord-extensions/dev.kordex.core.events/-event-handler/validate.html","searchKeys":["validate","fun validate()","dev.kordex.core.events.EventHandler.validate"]},{"name":"fun valueOf(value: String): ApplicationStatus","description":"dev.kordex.core.events.extra.models.ApplicationStatus.valueOf","location":"kord-extensions/dev.kordex.core.events.extra.models/-application-status/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ApplicationStatus","dev.kordex.core.events.extra.models.ApplicationStatus.valueOf"]},{"name":"fun valueOf(value: String): ExtensionState","description":"dev.kordex.core.extensions.ExtensionState.valueOf","location":"kord-extensions/dev.kordex.core.extensions/-extension-state/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ExtensionState","dev.kordex.core.extensions.ExtensionState.valueOf"]},{"name":"fun valueOf(value: String): PlaceholderPosition","description":"dev.kordex.core.i18n.types.PlaceholderPosition.valueOf","location":"kord-extensions/dev.kordex.core.i18n.types/-placeholder-position/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): PlaceholderPosition","dev.kordex.core.i18n.types.PlaceholderPosition.valueOf"]},{"name":"fun valueOf(value: String): StorageType","description":"dev.kordex.core.storage.StorageType.valueOf","location":"kord-extensions/dev.kordex.core.storage/-storage-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): StorageType","dev.kordex.core.storage.StorageType.valueOf"]},{"name":"fun values(): Array<ApplicationStatus>","description":"dev.kordex.core.events.extra.models.ApplicationStatus.values","location":"kord-extensions/dev.kordex.core.events.extra.models/-application-status/values.html","searchKeys":["values","fun values(): Array<ApplicationStatus>","dev.kordex.core.events.extra.models.ApplicationStatus.values"]},{"name":"fun values(): Array<ExtensionState>","description":"dev.kordex.core.extensions.ExtensionState.values","location":"kord-extensions/dev.kordex.core.extensions/-extension-state/values.html","searchKeys":["values","fun values(): Array<ExtensionState>","dev.kordex.core.extensions.ExtensionState.values"]},{"name":"fun values(): Array<PlaceholderPosition>","description":"dev.kordex.core.i18n.types.PlaceholderPosition.values","location":"kord-extensions/dev.kordex.core.i18n.types/-placeholder-position/values.html","searchKeys":["values","fun values(): Array<PlaceholderPosition>","dev.kordex.core.i18n.types.PlaceholderPosition.values"]},{"name":"fun values(): Array<StorageType>","description":"dev.kordex.core.storage.StorageType.values","location":"kord-extensions/dev.kordex.core.storage/-storage-type/values.html","searchKeys":["values","fun values(): Array<StorageType>","dev.kordex.core.storage.StorageType.values"]},{"name":"fun withBoth(bundle: Bundle?, locale: Locale?, overwriteBundle: Boolean = true, overwriteLocale: Boolean = true): Key","description":"dev.kordex.core.i18n.types.Key.withBoth","location":"kord-extensions/dev.kordex.core.i18n.types/-key/with-both.html","searchKeys":["withBoth","fun withBoth(bundle: Bundle?, locale: Locale?, overwriteBundle: Boolean = true, overwriteLocale: Boolean = true): Key","dev.kordex.core.i18n.types.Key.withBoth"]},{"name":"fun withBundle(bundle: Bundle?, overwrite: Boolean = true): Key","description":"dev.kordex.core.i18n.types.Key.withBundle","location":"kord-extensions/dev.kordex.core.i18n.types/-key/with-bundle.html","searchKeys":["withBundle","fun withBundle(bundle: Bundle?, overwrite: Boolean = true): Key","dev.kordex.core.i18n.types.Key.withBundle"]},{"name":"fun withChannel(channelId: Snowflake): StorageUnit<T>","description":"dev.kordex.core.storage.StorageUnit.withChannel","location":"kord-extensions/dev.kordex.core.storage/-storage-unit/with-channel.html","searchKeys":["withChannel","fun withChannel(channelId: Snowflake): StorageUnit<T>","dev.kordex.core.storage.StorageUnit.withChannel"]},{"name":"fun withGuild(guildId: Snowflake): StorageUnit<T>","description":"dev.kordex.core.storage.StorageUnit.withGuild","location":"kord-extensions/dev.kordex.core.storage/-storage-unit/with-guild.html","searchKeys":["withGuild","fun withGuild(guildId: Snowflake): StorageUnit<T>","dev.kordex.core.storage.StorageUnit.withGuild"]},{"name":"fun withGuild(guildObj: GuildBehavior): StorageUnit<T>","description":"dev.kordex.core.storage.StorageUnit.withGuild","location":"kord-extensions/dev.kordex.core.storage/-storage-unit/with-guild.html","searchKeys":["withGuild","fun withGuild(guildObj: GuildBehavior): StorageUnit<T>","dev.kordex.core.storage.StorageUnit.withGuild"]},{"name":"fun withLocale(locale: Locale?, overwrite: Boolean = true): Key","description":"dev.kordex.core.i18n.types.Key.withLocale","location":"kord-extensions/dev.kordex.core.i18n.types/-key/with-locale.html","searchKeys":["withLocale","fun withLocale(locale: Locale?, overwrite: Boolean = true): Key","dev.kordex.core.i18n.types.Key.withLocale"]},{"name":"fun withMessage(messageId: Snowflake): StorageUnit<T>","description":"dev.kordex.core.storage.StorageUnit.withMessage","location":"kord-extensions/dev.kordex.core.storage/-storage-unit/with-message.html","searchKeys":["withMessage","fun withMessage(messageId: Snowflake): StorageUnit<T>","dev.kordex.core.storage.StorageUnit.withMessage"]},{"name":"fun withMessage(messageObj: MessageBehavior): StorageUnit<T>","description":"dev.kordex.core.storage.StorageUnit.withMessage","location":"kord-extensions/dev.kordex.core.storage/-storage-unit/with-message.html","searchKeys":["withMessage","fun withMessage(messageObj: MessageBehavior): StorageUnit<T>","dev.kordex.core.storage.StorageUnit.withMessage"]},{"name":"fun withNamedPlaceholders(placeholders: Map<String, Any?>): Key","description":"dev.kordex.core.i18n.types.Key.withNamedPlaceholders","location":"kord-extensions/dev.kordex.core.i18n.types/-key/with-named-placeholders.html","searchKeys":["withNamedPlaceholders","fun withNamedPlaceholders(placeholders: Map<String, Any?>): Key","dev.kordex.core.i18n.types.Key.withNamedPlaceholders"]},{"name":"fun withNamedPlaceholders(vararg placeholders: Pair<String, Any?>): Key","description":"dev.kordex.core.i18n.types.Key.withNamedPlaceholders","location":"kord-extensions/dev.kordex.core.i18n.types/-key/with-named-placeholders.html","searchKeys":["withNamedPlaceholders","fun withNamedPlaceholders(vararg placeholders: Pair<String, Any?>): Key","dev.kordex.core.i18n.types.Key.withNamedPlaceholders"]},{"name":"fun withOrdinalPlaceholders(vararg placeholders: Any?): Key","description":"dev.kordex.core.i18n.types.Key.withOrdinalPlaceholders","location":"kord-extensions/dev.kordex.core.i18n.types/-key/with-ordinal-placeholders.html","searchKeys":["withOrdinalPlaceholders","fun withOrdinalPlaceholders(vararg placeholders: Any?): Key","dev.kordex.core.i18n.types.Key.withOrdinalPlaceholders"]},{"name":"fun withPostProcessor(processor: PostProcessor): Key","description":"dev.kordex.core.i18n.types.Key.withPostProcessor","location":"kord-extensions/dev.kordex.core.i18n.types/-key/with-post-processor.html","searchKeys":["withPostProcessor","fun withPostProcessor(processor: PostProcessor): Key","dev.kordex.core.i18n.types.Key.withPostProcessor"]},{"name":"fun withPostProcessors(processors: Collection<PostProcessor>): Key","description":"dev.kordex.core.i18n.types.Key.withPostProcessors","location":"kord-extensions/dev.kordex.core.i18n.types/-key/with-post-processors.html","searchKeys":["withPostProcessors","fun withPostProcessors(processors: Collection<PostProcessor>): Key","dev.kordex.core.i18n.types.Key.withPostProcessors"]},{"name":"fun withPresetPlaceholderPosition(position: PlaceholderPosition): Key","description":"dev.kordex.core.i18n.types.Key.withPresetPlaceholderPosition","location":"kord-extensions/dev.kordex.core.i18n.types/-key/with-preset-placeholder-position.html","searchKeys":["withPresetPlaceholderPosition","fun withPresetPlaceholderPosition(position: PlaceholderPosition): Key","dev.kordex.core.i18n.types.Key.withPresetPlaceholderPosition"]},{"name":"fun withTranslateNestedKeys(option: Boolean): Key","description":"dev.kordex.core.i18n.types.Key.withTranslateNestedKeys","location":"kord-extensions/dev.kordex.core.i18n.types/-key/with-translate-nested-keys.html","searchKeys":["withTranslateNestedKeys","fun withTranslateNestedKeys(option: Boolean): Key","dev.kordex.core.i18n.types.Key.withTranslateNestedKeys"]},{"name":"fun withUser(userId: Snowflake): StorageUnit<T>","description":"dev.kordex.core.storage.StorageUnit.withUser","location":"kord-extensions/dev.kordex.core.storage/-storage-unit/with-user.html","searchKeys":["withUser","fun withUser(userId: Snowflake): StorageUnit<T>","dev.kordex.core.storage.StorageUnit.withUser"]},{"name":"fun withUser(userObj: UserBehavior): StorageUnit<T>","description":"dev.kordex.core.storage.StorageUnit.withUser","location":"kord-extensions/dev.kordex.core.storage/-storage-unit/with-user.html","searchKeys":["withUser","fun withUser(userObj: UserBehavior): StorageUnit<T>","dev.kordex.core.storage.StorageUnit.withUser"]},{"name":"fun withoutBoth(): Key","description":"dev.kordex.core.i18n.types.Key.withoutBoth","location":"kord-extensions/dev.kordex.core.i18n.types/-key/without-both.html","searchKeys":["withoutBoth","fun withoutBoth(): Key","dev.kordex.core.i18n.types.Key.withoutBoth"]},{"name":"fun withoutBundle(): Key","description":"dev.kordex.core.i18n.types.Key.withoutBundle","location":"kord-extensions/dev.kordex.core.i18n.types/-key/without-bundle.html","searchKeys":["withoutBundle","fun withoutBundle(): Key","dev.kordex.core.i18n.types.Key.withoutBundle"]},{"name":"fun withoutLocale(): Key","description":"dev.kordex.core.i18n.types.Key.withoutLocale","location":"kord-extensions/dev.kordex.core.i18n.types/-key/without-locale.html","searchKeys":["withoutLocale","fun withoutLocale(): Key","dev.kordex.core.i18n.types.Key.withoutLocale"]},{"name":"fun withoutNamedPlaceholders(): Key","description":"dev.kordex.core.i18n.types.Key.withoutNamedPlaceholders","location":"kord-extensions/dev.kordex.core.i18n.types/-key/without-named-placeholders.html","searchKeys":["withoutNamedPlaceholders","fun withoutNamedPlaceholders(): Key","dev.kordex.core.i18n.types.Key.withoutNamedPlaceholders"]},{"name":"fun withoutOrdinalPlaceholders(): Key","description":"dev.kordex.core.i18n.types.Key.withoutOrdinalPlaceholders","location":"kord-extensions/dev.kordex.core.i18n.types/-key/without-ordinal-placeholders.html","searchKeys":["withoutOrdinalPlaceholders","fun withoutOrdinalPlaceholders(): Key","dev.kordex.core.i18n.types.Key.withoutOrdinalPlaceholders"]},{"name":"infix fun Int.x(other: Int): CoordinatePair","description":"dev.kordex.core.components.forms.x","location":"kord-extensions/dev.kordex.core.components.forms/x.html","searchKeys":["x","infix fun Int.x(other: Int): CoordinatePair","dev.kordex.core.components.forms.x"]},{"name":"inline fun <E : Enum<E>, ChoiceEnum> getEnum(arg: String, locale: Locale): E?","description":"dev.kordex.core.commands.application.slash.converters.impl.getEnum","location":"kord-extensions/dev.kordex.core.commands.application.slash.converters.impl/get-enum.html","searchKeys":["getEnum","inline fun <E : Enum<E>, ChoiceEnum> getEnum(arg: String, locale: Locale): E?","dev.kordex.core.commands.application.slash.converters.impl.getEnum"]},{"name":"inline fun <E : Enum<E>, ChoiceEnum> getEnum(arg: String, locale: Locale): E?","description":"dev.kordex.core.commands.converters.impl.getEnum","location":"kord-extensions/dev.kordex.core.commands.converters.impl/get-enum.html","searchKeys":["getEnum","inline fun <E : Enum<E>, ChoiceEnum> getEnum(arg: String, locale: Locale): E?","dev.kordex.core.commands.converters.impl.getEnum"]},{"name":"inline fun <T : Any> Boolean.whenFalse(body: () -> T?): T?","description":"dev.kordex.core.checks.types.CheckContext.whenFalse","location":"kord-extensions/dev.kordex.core.checks.types/-check-context/when-false.html","searchKeys":["whenFalse","inline fun <T : Any> Boolean.whenFalse(body: () -> T?): T?","dev.kordex.core.checks.types.CheckContext.whenFalse"]},{"name":"inline fun <T : Any> Boolean.whenFalse(body: () -> T?): T?","description":"dev.kordex.core.commands.converters.builders.ValidationContext.whenFalse","location":"kord-extensions/dev.kordex.core.commands.converters.builders/-validation-context/when-false.html","searchKeys":["whenFalse","inline fun <T : Any> Boolean.whenFalse(body: () -> T?): T?","dev.kordex.core.commands.converters.builders.ValidationContext.whenFalse"]},{"name":"inline fun <T : Any> Boolean.whenTrue(body: () -> T?): T?","description":"dev.kordex.core.checks.types.CheckContext.whenTrue","location":"kord-extensions/dev.kordex.core.checks.types/-check-context/when-true.html","searchKeys":["whenTrue","inline fun <T : Any> Boolean.whenTrue(body: () -> T?): T?","dev.kordex.core.checks.types.CheckContext.whenTrue"]},{"name":"inline fun <T : Any> Boolean.whenTrue(body: () -> T?): T?","description":"dev.kordex.core.commands.converters.builders.ValidationContext.whenTrue","location":"kord-extensions/dev.kordex.core.commands.converters.builders/-validation-context/when-true.html","searchKeys":["whenTrue","inline fun <T : Any> Boolean.whenTrue(body: () -> T?): T?","dev.kordex.core.commands.converters.builders.ValidationContext.whenTrue"]},{"name":"inline fun <T : Any> StringKeyedMap<*>.getOf(key: String): T","description":"dev.kordex.core.utils.getOf","location":"kord-extensions/dev.kordex.core.utils/get-of.html","searchKeys":["getOf","inline fun <T : Any> StringKeyedMap<*>.getOf(key: String): T","dev.kordex.core.utils.getOf"]},{"name":"inline fun <T : Any> StringKeyedMap<*>.getOfOrDefault(key: String, default: T): T","description":"dev.kordex.core.utils.getOfOrDefault","location":"kord-extensions/dev.kordex.core.utils/get-of-or-default.html","searchKeys":["getOfOrDefault","inline fun <T : Any> StringKeyedMap<*>.getOfOrDefault(key: String, default: T): T","dev.kordex.core.utils.getOfOrDefault"]},{"name":"inline fun <T : Data> StorageUnit(storageType: StorageType, namespace: String, identifier: String): StorageUnit<T>","description":"dev.kordex.core.storage.StorageUnit","location":"kord-extensions/dev.kordex.core.storage/-storage-unit.html","searchKeys":["StorageUnit","inline fun <T : Data> StorageUnit(storageType: StorageType, namespace: String, identifier: String): StorageUnit<T>","dev.kordex.core.storage.StorageUnit"]},{"name":"inline fun <T : Event> addEventHandler(handler: EventHandler<T>)","description":"dev.kordex.core.ExtensibleBot.addEventHandler","location":"kord-extensions/dev.kordex.core/-extensible-bot/add-event-handler.html","searchKeys":["addEventHandler","inline fun <T : Event> addEventHandler(handler: EventHandler<T>)","dev.kordex.core.ExtensibleBot.addEventHandler"]},{"name":"inline fun <T : Event> on(launch: Boolean = true, scope: CoroutineScope = kordRef, noinline consumer: suspend T.() -> Unit): Job","description":"dev.kordex.core.ExtensibleBot.on","location":"kord-extensions/dev.kordex.core/-extensible-bot/on.html","searchKeys":["on","inline fun <T : Event> on(launch: Boolean = true, scope: CoroutineScope = kordRef, noinline consumer: suspend T.() -> Unit): Job","dev.kordex.core.ExtensibleBot.on"]},{"name":"inline fun <T : Event> registerListenerForHandler(handler: EventHandler<T>): Job","description":"dev.kordex.core.ExtensibleBot.registerListenerForHandler","location":"kord-extensions/dev.kordex.core/-extensible-bot/register-listener-for-handler.html","searchKeys":["registerListenerForHandler","inline fun <T : Event> registerListenerForHandler(handler: EventHandler<T>): Job","dev.kordex.core.ExtensibleBot.registerListenerForHandler"]},{"name":"inline fun <T : OptionsBuilder> wrapOption(displayName: Key, description: Key, noinline body: suspend T.() -> Unit): OptionWrapper<T>","description":"dev.kordex.core.commands.wrapOption","location":"kord-extensions/dev.kordex.core.commands/wrap-option.html","searchKeys":["wrapOption","inline fun <T : OptionsBuilder> wrapOption(displayName: Key, description: Key, noinline body: suspend T.() -> Unit): OptionWrapper<T>","dev.kordex.core.commands.wrapOption"]},{"name":"inline fun <T> CoordinatePair.mapNotNullUpto(end: CoordinatePair, body: (CoordinatePair) -> T?): List<T>","description":"dev.kordex.core.components.forms.mapNotNullUpto","location":"kord-extensions/dev.kordex.core.components.forms/map-not-null-upto.html","searchKeys":["mapNotNullUpto","inline fun <T> CoordinatePair.mapNotNullUpto(end: CoordinatePair, body: (CoordinatePair) -> T?): List<T>","dev.kordex.core.components.forms.mapNotNullUpto"]},{"name":"inline fun <T> CoordinatePair.mapNotNullUptoExclusive(end: CoordinatePair, body: (CoordinatePair) -> T?): List<T>","description":"dev.kordex.core.components.forms.mapNotNullUptoExclusive","location":"kord-extensions/dev.kordex.core.components.forms/map-not-null-upto-exclusive.html","searchKeys":["mapNotNullUptoExclusive","inline fun <T> CoordinatePair.mapNotNullUptoExclusive(end: CoordinatePair, body: (CoordinatePair) -> T?): List<T>","dev.kordex.core.components.forms.mapNotNullUptoExclusive"]},{"name":"inline fun <T> CoordinatePair.mapUpto(end: CoordinatePair, body: (CoordinatePair) -> T): List<T>","description":"dev.kordex.core.components.forms.mapUpto","location":"kord-extensions/dev.kordex.core.components.forms/map-upto.html","searchKeys":["mapUpto","inline fun <T> CoordinatePair.mapUpto(end: CoordinatePair, body: (CoordinatePair) -> T): List<T>","dev.kordex.core.components.forms.mapUpto"]},{"name":"inline fun <T> CoordinatePair.mapUptoExclusive(end: CoordinatePair, body: (CoordinatePair) -> T): List<T>","description":"dev.kordex.core.components.forms.mapUptoExclusive","location":"kord-extensions/dev.kordex.core.components.forms/map-upto-exclusive.html","searchKeys":["mapUptoExclusive","inline fun <T> CoordinatePair.mapUptoExclusive(end: CoordinatePair, body: (CoordinatePair) -> T): List<T>","dev.kordex.core.components.forms.mapUptoExclusive"]},{"name":"inline fun <T> ITransaction.transaction(name: String, operation: String, body: ITransaction.() -> T)","description":"dev.kordex.core.sentry.transaction","location":"kord-extensions/dev.kordex.core.sentry/transaction.html","searchKeys":["transaction","inline fun <T> ITransaction.transaction(name: String, operation: String, body: ITransaction.() -> T)","dev.kordex.core.sentry.transaction"]},{"name":"inline fun <T> ITransaction.transaction(transaction: ITransaction, body: ITransaction.() -> T)","description":"dev.kordex.core.sentry.transaction","location":"kord-extensions/dev.kordex.core.sentry/transaction.html","searchKeys":["transaction","inline fun <T> ITransaction.transaction(transaction: ITransaction, body: ITransaction.() -> T)","dev.kordex.core.sentry.transaction"]},{"name":"inline fun <T> Int.map(body: (Int) -> T): List<T>","description":"dev.kordex.core.utils.map","location":"kord-extensions/dev.kordex.core.utils/map.html","searchKeys":["map","inline fun <T> Int.map(body: (Int) -> T): List<T>","dev.kordex.core.utils.map"]},{"name":"inline fun <T> Long.map(body: (Long) -> T): List<T>","description":"dev.kordex.core.utils.map","location":"kord-extensions/dev.kordex.core.utils/map.html","searchKeys":["map","inline fun <T> Long.map(body: (Long) -> T): List<T>","dev.kordex.core.utils.map"]},{"name":"inline fun <T> StringKeyedMap<*>.getOfOrNull(key: String): T?","description":"dev.kordex.core.utils.getOfOrNull","location":"kord-extensions/dev.kordex.core.utils/get-of-or-null.html","searchKeys":["getOfOrNull","inline fun <T> StringKeyedMap<*>.getOfOrNull(key: String): T?","dev.kordex.core.utils.getOfOrNull"]},{"name":"inline fun <T> findExtension(): T?","description":"dev.kordex.core.ExtensibleBot.findExtension","location":"kord-extensions/dev.kordex.core/-extensible-bot/find-extension.html","searchKeys":["findExtension","inline fun <T> findExtension(): T?","dev.kordex.core.ExtensibleBot.findExtension"]},{"name":"inline fun <T> findExtensions(): List<T>","description":"dev.kordex.core.ExtensibleBot.findExtensions","location":"kord-extensions/dev.kordex.core/-extensible-bot/find-extensions.html","searchKeys":["findExtensions","inline fun <T> findExtensions(): List<T>","dev.kordex.core.ExtensibleBot.findExtensions"]},{"name":"inline fun <V : Any, T : V> MutableStringKeyedMap<V>.getOfOrDefault(key: String, default: T, store: Boolean): T","description":"dev.kordex.core.utils.getOfOrDefault","location":"kord-extensions/dev.kordex.core.utils/get-of-or-default.html","searchKeys":["getOfOrDefault","inline fun <V : Any, T : V> MutableStringKeyedMap<V>.getOfOrDefault(key: String, default: T, store: Boolean): T","dev.kordex.core.utils.getOfOrDefault"]},{"name":"inline fun EphemeralMessageInteractionResponseBehavior.editingPaginator(defaultGroup: Key = EMPTY_KEY, locale: Locale? = null, builder: PaginatorBuilder.() -> Unit): EphemeralResponsePaginator","description":"dev.kordex.core.pagination.editingPaginator","location":"kord-extensions/dev.kordex.core.pagination/editing-paginator.html","searchKeys":["editingPaginator","inline fun EphemeralMessageInteractionResponseBehavior.editingPaginator(defaultGroup: Key = EMPTY_KEY, locale: Locale? = null, builder: PaginatorBuilder.() -> Unit): EphemeralResponsePaginator","dev.kordex.core.pagination.editingPaginator"]},{"name":"inline fun FollowupPermittingInteractionResponseBehavior.respondingPaginator(defaultGroup: Key = EMPTY_KEY, locale: Locale? = null, builder: PaginatorBuilder.() -> Unit): PublicFollowUpPaginator","description":"dev.kordex.core.pagination.respondingPaginator","location":"kord-extensions/dev.kordex.core.pagination/responding-paginator.html","searchKeys":["respondingPaginator","inline fun FollowupPermittingInteractionResponseBehavior.respondingPaginator(defaultGroup: Key = EMPTY_KEY, locale: Locale? = null, builder: PaginatorBuilder.() -> Unit): PublicFollowUpPaginator","dev.kordex.core.pagination.respondingPaginator"]},{"name":"inline fun KLogger.failed(reason: String)","description":"dev.kordex.core.checks.failed","location":"kord-extensions/dev.kordex.core.checks/failed.html","searchKeys":["failed","inline fun KLogger.failed(reason: String)","dev.kordex.core.checks.failed"]},{"name":"inline fun KLogger.noCategoryId(id: Snowflake)","description":"dev.kordex.core.checks.noCategoryId","location":"kord-extensions/dev.kordex.core.checks/no-category-id.html","searchKeys":["noCategoryId","inline fun KLogger.noCategoryId(id: Snowflake)","dev.kordex.core.checks.noCategoryId"]},{"name":"inline fun KLogger.noChannelId(id: Snowflake)","description":"dev.kordex.core.checks.noChannelId","location":"kord-extensions/dev.kordex.core.checks/no-channel-id.html","searchKeys":["noChannelId","inline fun KLogger.noChannelId(id: Snowflake)","dev.kordex.core.checks.noChannelId"]},{"name":"inline fun KLogger.noGuildId(id: Snowflake)","description":"dev.kordex.core.checks.noGuildId","location":"kord-extensions/dev.kordex.core.checks/no-guild-id.html","searchKeys":["noGuildId","inline fun KLogger.noGuildId(id: Snowflake)","dev.kordex.core.checks.noGuildId"]},{"name":"inline fun KLogger.noRoleId(id: Snowflake)","description":"dev.kordex.core.checks.noRoleId","location":"kord-extensions/dev.kordex.core.checks/no-role-id.html","searchKeys":["noRoleId","inline fun KLogger.noRoleId(id: Snowflake)","dev.kordex.core.checks.noRoleId"]},{"name":"inline fun KLogger.nullChannel(event: Event)","description":"dev.kordex.core.checks.nullChannel","location":"kord-extensions/dev.kordex.core.checks/null-channel.html","searchKeys":["nullChannel","inline fun KLogger.nullChannel(event: Event)","dev.kordex.core.checks.nullChannel"]},{"name":"inline fun KLogger.nullGuild(event: Event)","description":"dev.kordex.core.checks.nullGuild","location":"kord-extensions/dev.kordex.core.checks/null-guild.html","searchKeys":["nullGuild","inline fun KLogger.nullGuild(event: Event)","dev.kordex.core.checks.nullGuild"]},{"name":"inline fun KLogger.nullMember(event: Event)","description":"dev.kordex.core.checks.nullMember","location":"kord-extensions/dev.kordex.core.checks/null-member.html","searchKeys":["nullMember","inline fun KLogger.nullMember(event: Event)","dev.kordex.core.checks.nullMember"]},{"name":"inline fun KLogger.nullMessage(event: Event)","description":"dev.kordex.core.checks.nullMessage","location":"kord-extensions/dev.kordex.core.checks/null-message.html","searchKeys":["nullMessage","inline fun KLogger.nullMessage(event: Event)","dev.kordex.core.checks.nullMessage"]},{"name":"inline fun KLogger.passed()","description":"dev.kordex.core.checks.passed","location":"kord-extensions/dev.kordex.core.checks/passed.html","searchKeys":["passed","inline fun KLogger.passed()","dev.kordex.core.checks.passed"]},{"name":"inline fun KLogger.passed(reason: String)","description":"dev.kordex.core.checks.passed","location":"kord-extensions/dev.kordex.core.checks/passed.html","searchKeys":["passed","inline fun KLogger.passed(reason: String)","dev.kordex.core.checks.passed"]},{"name":"inline fun PublicMessageInteractionResponseBehavior.editingPaginator(defaultGroup: Key = EMPTY_KEY, locale: Locale? = null, builder: PaginatorBuilder.() -> Unit): PublicResponsePaginator","description":"dev.kordex.core.pagination.editingPaginator","location":"kord-extensions/dev.kordex.core.pagination/editing-paginator.html","searchKeys":["editingPaginator","inline fun PublicMessageInteractionResponseBehavior.editingPaginator(defaultGroup: Key = EMPTY_KEY, locale: Locale? = null, builder: PaginatorBuilder.() -> Unit): PublicResponsePaginator","dev.kordex.core.pagination.editingPaginator"]},{"name":"inline fun transaction(name: String, operation: String, body: ITransaction.() -> Unit)","description":"dev.kordex.core.sentry.SentryContext.transaction","location":"kord-extensions/dev.kordex.core.sentry/-sentry-context/transaction.html","searchKeys":["transaction","inline fun transaction(name: String, operation: String, body: ITransaction.() -> Unit)","dev.kordex.core.sentry.SentryContext.transaction"]},{"name":"inline fun transaction(transaction: ITransaction, body: ITransaction.() -> Unit)","description":"dev.kordex.core.sentry.SentryContext.transaction","location":"kord-extensions/dev.kordex.core.sentry/-sentry-context/transaction.html","searchKeys":["transaction","inline fun transaction(transaction: ITransaction, body: ITransaction.() -> Unit)","dev.kordex.core.sentry.SentryContext.transaction"]},{"name":"inline suspend fun <T : Any> Flow<T>.any(crossinline predicate: suspend (T) -> Boolean): Boolean","description":"dev.kordex.core.utils.any","location":"kord-extensions/dev.kordex.core.utils/any.html","searchKeys":["any","inline suspend fun <T : Any> Flow<T>.any(crossinline predicate: suspend (T) -> Boolean): Boolean","dev.kordex.core.utils.any"]},{"name":"inline suspend fun <T : Channel> ChannelEvent.getChannelOf(): T","description":"dev.kordex.core.events.interfaces.getChannelOf","location":"kord-extensions/dev.kordex.core.events.interfaces/get-channel-of.html","searchKeys":["getChannelOf","inline suspend fun <T : Channel> ChannelEvent.getChannelOf(): T","dev.kordex.core.events.interfaces.getChannelOf"]},{"name":"inline suspend fun <T : Channel> ChannelEvent.getChannelOfOrNull(): T?","description":"dev.kordex.core.events.interfaces.getChannelOfOrNull","location":"kord-extensions/dev.kordex.core.events.interfaces/get-channel-of-or-null.html","searchKeys":["getChannelOfOrNull","inline suspend fun <T : Channel> ChannelEvent.getChannelOfOrNull(): T?","dev.kordex.core.events.interfaces.getChannelOfOrNull"]},{"name":"inline suspend fun <T : Event> ExtensibleBot.waitFor(timeout: Duration? = null, noinline condition: suspend T.() -> Boolean = { true }): T?","description":"dev.kordex.core.utils.waitFor","location":"kord-extensions/dev.kordex.core.utils/wait-for.html","searchKeys":["waitFor","inline suspend fun <T : Event> ExtensibleBot.waitFor(timeout: Duration? = null, noinline condition: suspend T.() -> Boolean = { true }): T?","dev.kordex.core.utils.waitFor"]},{"name":"inline suspend fun <T : Event> Extension.event(noinline constructor: (Extension) -> EventHandler<T> = ::EventHandler, noinline body: suspend EventHandler<T>.() -> Unit): EventHandler<T>","description":"dev.kordex.core.extensions.event","location":"kord-extensions/dev.kordex.core.extensions/event.html","searchKeys":["event","inline suspend fun <T : Event> Extension.event(noinline constructor: (Extension) -> EventHandler<T> = ::EventHandler, noinline body: suspend EventHandler<T>.() -> Unit): EventHandler<T>","dev.kordex.core.extensions.event"]},{"name":"inline suspend fun <T : Event> Kord.waitFor(timeout: Duration? = null, noinline condition: suspend T.() -> Boolean = { true }): T?","description":"dev.kordex.core.utils.waitFor","location":"kord-extensions/dev.kordex.core.utils/wait-for.html","searchKeys":["waitFor","inline suspend fun <T : Event> Kord.waitFor(timeout: Duration? = null, noinline condition: suspend T.() -> Boolean = { true }): T?","dev.kordex.core.utils.waitFor"]},{"name":"inline suspend fun <T : Event> Kord.waitFor(timeout: Long? = null, noinline condition: suspend T.() -> Boolean = { true }): T?","description":"dev.kordex.core.utils.waitFor","location":"kord-extensions/dev.kordex.core.utils/wait-for.html","searchKeys":["waitFor","inline suspend fun <T : Event> Kord.waitFor(timeout: Long? = null, noinline condition: suspend T.() -> Boolean = { true }): T?","dev.kordex.core.utils.waitFor"]},{"name":"inline suspend fun <T : Event> LiveKordEntity.waitFor(timeout: Long? = null, noinline condition: suspend T.() -> Boolean = { true }): T?","description":"dev.kordex.core.utils.waitFor","location":"kord-extensions/dev.kordex.core.utils/wait-for.html","searchKeys":["waitFor","inline suspend fun <T : Event> LiveKordEntity.waitFor(timeout: Long? = null, noinline condition: suspend T.() -> Boolean = { true }): T?","dev.kordex.core.utils.waitFor"]},{"name":"inline suspend fun AutoCompleteInteraction.suggestDoubleCollection(collection: Collection<Double>, strategy: FilterStrategy = FilterStrategy.Prefix, suggestInputWithoutMatches: Boolean = false)","description":"dev.kordex.core.utils.suggestDoubleCollection","location":"kord-extensions/dev.kordex.core.utils/suggest-double-collection.html","searchKeys":["suggestDoubleCollection","inline suspend fun AutoCompleteInteraction.suggestDoubleCollection(collection: Collection<Double>, strategy: FilterStrategy = FilterStrategy.Prefix, suggestInputWithoutMatches: Boolean = false)","dev.kordex.core.utils.suggestDoubleCollection"]},{"name":"inline suspend fun AutoCompleteInteraction.suggestDoubleMap(map: Map<String, Double>, strategy: FilterStrategy = FilterStrategy.Prefix, suggestInputWithoutMatches: Boolean = false)","description":"dev.kordex.core.utils.suggestDoubleMap","location":"kord-extensions/dev.kordex.core.utils/suggest-double-map.html","searchKeys":["suggestDoubleMap","inline suspend fun AutoCompleteInteraction.suggestDoubleMap(map: Map<String, Double>, strategy: FilterStrategy = FilterStrategy.Prefix, suggestInputWithoutMatches: Boolean = false)","dev.kordex.core.utils.suggestDoubleMap"]},{"name":"inline suspend fun AutoCompleteInteraction.suggestIntCollection(collection: Collection<Int>, strategy: FilterStrategy = FilterStrategy.Prefix, suggestInputWithoutMatches: Boolean = false)","description":"dev.kordex.core.utils.suggestIntCollection","location":"kord-extensions/dev.kordex.core.utils/suggest-int-collection.html","searchKeys":["suggestIntCollection","inline suspend fun AutoCompleteInteraction.suggestIntCollection(collection: Collection<Int>, strategy: FilterStrategy = FilterStrategy.Prefix, suggestInputWithoutMatches: Boolean = false)","dev.kordex.core.utils.suggestIntCollection"]},{"name":"inline suspend fun AutoCompleteInteraction.suggestIntMap(map: Map<String, Int>, strategy: FilterStrategy = FilterStrategy.Prefix, suggestInputWithoutMatches: Boolean = false)","description":"dev.kordex.core.utils.suggestIntMap","location":"kord-extensions/dev.kordex.core.utils/suggest-int-map.html","searchKeys":["suggestIntMap","inline suspend fun AutoCompleteInteraction.suggestIntMap(map: Map<String, Int>, strategy: FilterStrategy = FilterStrategy.Prefix, suggestInputWithoutMatches: Boolean = false)","dev.kordex.core.utils.suggestIntMap"]},{"name":"inline suspend fun AutoCompleteInteraction.suggestLongCollection(collection: Collection<Long>, strategy: FilterStrategy = FilterStrategy.Prefix, suggestInputWithoutMatches: Boolean = false)","description":"dev.kordex.core.utils.suggestLongCollection","location":"kord-extensions/dev.kordex.core.utils/suggest-long-collection.html","searchKeys":["suggestLongCollection","inline suspend fun AutoCompleteInteraction.suggestLongCollection(collection: Collection<Long>, strategy: FilterStrategy = FilterStrategy.Prefix, suggestInputWithoutMatches: Boolean = false)","dev.kordex.core.utils.suggestLongCollection"]},{"name":"inline suspend fun AutoCompleteInteraction.suggestLongMap(map: Map<String, Long>, strategy: FilterStrategy = FilterStrategy.Prefix, suggestInputWithoutMatches: Boolean = false)","description":"dev.kordex.core.utils.suggestLongMap","location":"kord-extensions/dev.kordex.core.utils/suggest-long-map.html","searchKeys":["suggestLongMap","inline suspend fun AutoCompleteInteraction.suggestLongMap(map: Map<String, Long>, strategy: FilterStrategy = FilterStrategy.Prefix, suggestInputWithoutMatches: Boolean = false)","dev.kordex.core.utils.suggestLongMap"]},{"name":"inline suspend fun AutoCompleteInteraction.suggestNumberCollection(collection: Collection<Double>, strategy: FilterStrategy = FilterStrategy.Prefix, suggestInputWithoutMatches: Boolean = false)","description":"dev.kordex.core.utils.suggestNumberCollection","location":"kord-extensions/dev.kordex.core.utils/suggest-number-collection.html","searchKeys":["suggestNumberCollection","inline suspend fun AutoCompleteInteraction.suggestNumberCollection(collection: Collection<Double>, strategy: FilterStrategy = FilterStrategy.Prefix, suggestInputWithoutMatches: Boolean = false)","dev.kordex.core.utils.suggestNumberCollection"]},{"name":"inline suspend fun AutoCompleteInteraction.suggestNumberMap(map: Map<String, Double>, strategy: FilterStrategy = FilterStrategy.Prefix, suggestInputWithoutMatches: Boolean = false)","description":"dev.kordex.core.utils.suggestNumberMap","location":"kord-extensions/dev.kordex.core.utils/suggest-number-map.html","searchKeys":["suggestNumberMap","inline suspend fun AutoCompleteInteraction.suggestNumberMap(map: Map<String, Double>, strategy: FilterStrategy = FilterStrategy.Prefix, suggestInputWithoutMatches: Boolean = false)","dev.kordex.core.utils.suggestNumberMap"]},{"name":"inline suspend fun AutoCompleteInteraction.suggestStringCollection(collection: Collection<String>, strategy: FilterStrategy = FilterStrategy.Prefix, suggestInputWithoutMatches: Boolean = false)","description":"dev.kordex.core.utils.suggestStringCollection","location":"kord-extensions/dev.kordex.core.utils/suggest-string-collection.html","searchKeys":["suggestStringCollection","inline suspend fun AutoCompleteInteraction.suggestStringCollection(collection: Collection<String>, strategy: FilterStrategy = FilterStrategy.Prefix, suggestInputWithoutMatches: Boolean = false)","dev.kordex.core.utils.suggestStringCollection"]},{"name":"inline suspend fun AutoCompleteInteraction.suggestStringMap(map: Map<String, String>, strategy: FilterStrategy = FilterStrategy.Prefix, suggestInputWithoutMatches: Boolean = false)","description":"dev.kordex.core.utils.suggestStringMap","location":"kord-extensions/dev.kordex.core.utils/suggest-string-map.html","searchKeys":["suggestStringMap","inline suspend fun AutoCompleteInteraction.suggestStringMap(map: Map<String, String>, strategy: FilterStrategy = FilterStrategy.Prefix, suggestInputWithoutMatches: Boolean = false)","dev.kordex.core.utils.suggestStringMap"]},{"name":"inline suspend fun Member.hasPermissions(vararg perms: Permission): Boolean","description":"dev.kordex.core.utils.hasPermissions","location":"kord-extensions/dev.kordex.core.utils/has-permissions.html","searchKeys":["hasPermissions","inline suspend fun Member.hasPermissions(vararg perms: Permission): Boolean","dev.kordex.core.utils.hasPermissions"]},{"name":"inline suspend fun MessageBehavior.addReaction(emoji: String)","description":"dev.kordex.core.utils.addReaction","location":"kord-extensions/dev.kordex.core.utils/add-reaction.html","searchKeys":["addReaction","inline suspend fun MessageBehavior.addReaction(emoji: String)","dev.kordex.core.utils.addReaction"]},{"name":"inline suspend fun MessageBehavior.deleteOwnReaction(emoji: GuildEmoji)","description":"dev.kordex.core.utils.deleteOwnReaction","location":"kord-extensions/dev.kordex.core.utils/delete-own-reaction.html","searchKeys":["deleteOwnReaction","inline suspend fun MessageBehavior.deleteOwnReaction(emoji: GuildEmoji)","dev.kordex.core.utils.deleteOwnReaction"]},{"name":"inline suspend fun MessageBehavior.deleteOwnReaction(unicode: String)","description":"dev.kordex.core.utils.deleteOwnReaction","location":"kord-extensions/dev.kordex.core.utils/delete-own-reaction.html","searchKeys":["deleteOwnReaction","inline suspend fun MessageBehavior.deleteOwnReaction(unicode: String)","dev.kordex.core.utils.deleteOwnReaction"]},{"name":"inline suspend fun MessageBehavior.deleteReaction(emoji: GuildEmoji)","description":"dev.kordex.core.utils.deleteReaction","location":"kord-extensions/dev.kordex.core.utils/delete-reaction.html","searchKeys":["deleteReaction","inline suspend fun MessageBehavior.deleteReaction(emoji: GuildEmoji)","dev.kordex.core.utils.deleteReaction"]},{"name":"inline suspend fun MessageBehavior.deleteReaction(unicode: String)","description":"dev.kordex.core.utils.deleteReaction","location":"kord-extensions/dev.kordex.core.utils/delete-reaction.html","searchKeys":["deleteReaction","inline suspend fun MessageBehavior.deleteReaction(unicode: String)","dev.kordex.core.utils.deleteReaction"]},{"name":"inline suspend fun MessageBehavior.deleteReaction(userId: Snowflake, emoji: GuildEmoji)","description":"dev.kordex.core.utils.deleteReaction","location":"kord-extensions/dev.kordex.core.utils/delete-reaction.html","searchKeys":["deleteReaction","inline suspend fun MessageBehavior.deleteReaction(userId: Snowflake, emoji: GuildEmoji)","dev.kordex.core.utils.deleteReaction"]},{"name":"inline suspend fun MessageBehavior.deleteReaction(userId: Snowflake, emoji: String)","description":"dev.kordex.core.utils.deleteReaction","location":"kord-extensions/dev.kordex.core.utils/delete-reaction.html","searchKeys":["deleteReaction","inline suspend fun MessageBehavior.deleteReaction(userId: Snowflake, emoji: String)","dev.kordex.core.utils.deleteReaction"]},{"name":"inline suspend fun User.dm(builder: MessageCreateBuilder.() -> Unit): Message?","description":"dev.kordex.core.utils.dm","location":"kord-extensions/dev.kordex.core.utils/dm.html","searchKeys":["dm","inline suspend fun User.dm(builder: MessageCreateBuilder.() -> Unit): Message?","dev.kordex.core.utils.dm"]},{"name":"inner class ChoiceWrapper(val name: Key, val value: T)","description":"dev.kordex.core.commands.ChoiceOptionWrapper.ChoiceWrapper","location":"kord-extensions/dev.kordex.core.commands/-choice-option-wrapper/-choice-wrapper/index.html","searchKeys":["ChoiceWrapper","inner class ChoiceWrapper(val name: Key, val value: T)","dev.kordex.core.commands.ChoiceOptionWrapper.ChoiceWrapper"]},{"name":"interface ChannelEvent","description":"dev.kordex.core.events.interfaces.ChannelEvent","location":"kord-extensions/dev.kordex.core.events.interfaces/-channel-event/index.html","searchKeys":["ChannelEvent","interface ChannelEvent","dev.kordex.core.events.interfaces.ChannelEvent"]},{"name":"interface ChannelSelectMenu","description":"dev.kordex.core.components.menus.channel.ChannelSelectMenu","location":"kord-extensions/dev.kordex.core.components.menus.channel/-channel-select-menu/index.html","searchKeys":["ChannelSelectMenu","interface ChannelSelectMenu","dev.kordex.core.components.menus.channel.ChannelSelectMenu"]},{"name":"interface ChoiceConverterBuilder<T>","description":"dev.kordex.core.commands.converters.builders.ChoiceConverterBuilder","location":"kord-extensions/dev.kordex.core.commands.converters.builders/-choice-converter-builder/index.html","searchKeys":["ChoiceConverterBuilder","interface ChoiceConverterBuilder<T>","dev.kordex.core.commands.converters.builders.ChoiceConverterBuilder"]},{"name":"interface ChoiceEnum","description":"dev.kordex.core.commands.application.slash.converters.ChoiceEnum","location":"kord-extensions/dev.kordex.core.commands.application.slash.converters/-choice-enum/index.html","searchKeys":["ChoiceEnum","interface ChoiceEnum","dev.kordex.core.commands.application.slash.converters.ChoiceEnum"]},{"name":"interface Data","description":"dev.kordex.core.storage.Data","location":"kord-extensions/dev.kordex.core.storage/-data/index.html","searchKeys":["Data","interface Data","dev.kordex.core.storage.Data"]},{"name":"interface EphemeralInteractionContext : InteractionContext<EphemeralMessageInteractionResponseBehavior, EphemeralMessageInteractionResponse, EphemeralFollowupMessage, PublicFollowupMessage> ","description":"dev.kordex.core.types.EphemeralInteractionContext","location":"kord-extensions/dev.kordex.core.types/-ephemeral-interaction-context/index.html","searchKeys":["EphemeralInteractionContext","interface EphemeralInteractionContext : InteractionContext<EphemeralMessageInteractionResponseBehavior, EphemeralMessageInteractionResponse, EphemeralFollowupMessage, PublicFollowupMessage> ","dev.kordex.core.types.EphemeralInteractionContext"]},{"name":"interface GuildEvent","description":"dev.kordex.core.events.interfaces.GuildEvent","location":"kord-extensions/dev.kordex.core.events.interfaces/-guild-event/index.html","searchKeys":["GuildEvent","interface GuildEvent","dev.kordex.core.events.interfaces.GuildEvent"]},{"name":"interface HasPartialEmoji","description":"dev.kordex.core.components.types.HasPartialEmoji","location":"kord-extensions/dev.kordex.core.components.types/-has-partial-emoji/index.html","searchKeys":["HasPartialEmoji","interface HasPartialEmoji","dev.kordex.core.components.types.HasPartialEmoji"]},{"name":"interface HelpProvider","description":"dev.kordex.core.extensions.base.HelpProvider","location":"kord-extensions/dev.kordex.core.extensions.base/-help-provider/index.html","searchKeys":["HelpProvider","interface HelpProvider","dev.kordex.core.extensions.base.HelpProvider"]},{"name":"interface InteractionContext<ResponseBehavior : InteractionResponseBehavior, ResponseType : MessageInteractionResponse, FollowupType : FollowupMessage, OppositeFollowupType : FollowupMessage>","description":"dev.kordex.core.types.InteractionContext","location":"kord-extensions/dev.kordex.core.types/-interaction-context/index.html","searchKeys":["InteractionContext","interface InteractionContext<ResponseBehavior : InteractionResponseBehavior, ResponseType : MessageInteractionResponse, FollowupType : FollowupMessage, OppositeFollowupType : FollowupMessage>","dev.kordex.core.types.InteractionContext"]},{"name":"interface KordExEvent : Event, KordExKoinComponent","description":"dev.kordex.core.events.KordExEvent","location":"kord-extensions/dev.kordex.core.events/-kord-ex-event/index.html","searchKeys":["KordExEvent","interface KordExEvent : Event, KordExKoinComponent","dev.kordex.core.events.KordExEvent"]},{"name":"interface KordExKoinComponent : KoinComponent","description":"dev.kordex.core.koin.KordExKoinComponent","location":"kord-extensions/dev.kordex.core.koin/-kord-ex-koin-component/index.html","searchKeys":["KordExKoinComponent","interface KordExKoinComponent : KoinComponent","dev.kordex.core.koin.KordExKoinComponent"]},{"name":"interface Lockable","description":"dev.kordex.core.types.Lockable","location":"kord-extensions/dev.kordex.core.types/-lockable/index.html","searchKeys":["Lockable","interface Lockable","dev.kordex.core.types.Lockable"]},{"name":"interface MemberEvent : GuildEvent, UserEvent","description":"dev.kordex.core.events.interfaces.MemberEvent","location":"kord-extensions/dev.kordex.core.events.interfaces/-member-event/index.html","searchKeys":["MemberEvent","interface MemberEvent : GuildEvent, UserEvent","dev.kordex.core.events.interfaces.MemberEvent"]},{"name":"interface MentionableSelectMenu","description":"dev.kordex.core.components.menus.mentionable.MentionableSelectMenu","location":"kord-extensions/dev.kordex.core.components.menus.mentionable/-mentionable-select-menu/index.html","searchKeys":["MentionableSelectMenu","interface MentionableSelectMenu","dev.kordex.core.components.menus.mentionable.MentionableSelectMenu"]},{"name":"interface MessageCommandFailedChecksEvent<C : MessageCommand<*, *>> : MessageCommandFailedEvent<C> , CommandFailedChecksEvent<C, MessageCommandInteractionCreateEvent> ","description":"dev.kordex.core.commands.events.MessageCommandFailedChecksEvent","location":"kord-extensions/dev.kordex.core.commands.events/-message-command-failed-checks-event/index.html","searchKeys":["MessageCommandFailedChecksEvent","interface MessageCommandFailedChecksEvent<C : MessageCommand<*, *>> : MessageCommandFailedEvent<C> , CommandFailedChecksEvent<C, MessageCommandInteractionCreateEvent> ","dev.kordex.core.commands.events.MessageCommandFailedChecksEvent"]},{"name":"interface MessageCommandFailedWithExceptionEvent<C : MessageCommand<*, *>> : MessageCommandFailedEvent<C> , CommandFailedWithExceptionEvent<C, MessageCommandInteractionCreateEvent> ","description":"dev.kordex.core.commands.events.MessageCommandFailedWithExceptionEvent","location":"kord-extensions/dev.kordex.core.commands.events/-message-command-failed-with-exception-event/index.html","searchKeys":["MessageCommandFailedWithExceptionEvent","interface MessageCommandFailedWithExceptionEvent<C : MessageCommand<*, *>> : MessageCommandFailedEvent<C> , CommandFailedWithExceptionEvent<C, MessageCommandInteractionCreateEvent> ","dev.kordex.core.commands.events.MessageCommandFailedWithExceptionEvent"]},{"name":"interface MessageCommandInvocationEvent<C : MessageCommand<*, *>> : CommandInvocationEvent<C, MessageCommandInteractionCreateEvent> ","description":"dev.kordex.core.commands.events.MessageCommandInvocationEvent","location":"kord-extensions/dev.kordex.core.commands.events/-message-command-invocation-event/index.html","searchKeys":["MessageCommandInvocationEvent","interface MessageCommandInvocationEvent<C : MessageCommand<*, *>> : CommandInvocationEvent<C, MessageCommandInteractionCreateEvent> ","dev.kordex.core.commands.events.MessageCommandInvocationEvent"]},{"name":"interface MessageCommandSucceededEvent<C : MessageCommand<*, *>> : CommandSucceededEvent<C, MessageCommandInteractionCreateEvent> ","description":"dev.kordex.core.commands.events.MessageCommandSucceededEvent","location":"kord-extensions/dev.kordex.core.commands.events/-message-command-succeeded-event/index.html","searchKeys":["MessageCommandSucceededEvent","interface MessageCommandSucceededEvent<C : MessageCommand<*, *>> : CommandSucceededEvent<C, MessageCommandInteractionCreateEvent> ","dev.kordex.core.commands.events.MessageCommandSucceededEvent"]},{"name":"interface MessageEvent","description":"dev.kordex.core.events.interfaces.MessageEvent","location":"kord-extensions/dev.kordex.core.events.interfaces/-message-event/index.html","searchKeys":["MessageEvent","interface MessageEvent","dev.kordex.core.events.interfaces.MessageEvent"]},{"name":"interface PublicInteractionContext : InteractionContext<PublicMessageInteractionResponseBehavior, PublicMessageInteractionResponse, PublicFollowupMessage, EphemeralFollowupMessage> ","description":"dev.kordex.core.types.PublicInteractionContext","location":"kord-extensions/dev.kordex.core.types/-public-interaction-context/index.html","searchKeys":["PublicInteractionContext","interface PublicInteractionContext : InteractionContext<PublicMessageInteractionResponseBehavior, PublicMessageInteractionResponse, PublicFollowupMessage, EphemeralFollowupMessage> ","dev.kordex.core.types.PublicInteractionContext"]},{"name":"interface RegistryStorage<K, T>","description":"dev.kordex.core.registry.RegistryStorage","location":"kord-extensions/dev.kordex.core.registry/-registry-storage/index.html","searchKeys":["RegistryStorage","interface RegistryStorage<K, T>","dev.kordex.core.registry.RegistryStorage"]},{"name":"interface RoleEvent","description":"dev.kordex.core.events.interfaces.RoleEvent","location":"kord-extensions/dev.kordex.core.events.interfaces/-role-event/index.html","searchKeys":["RoleEvent","interface RoleEvent","dev.kordex.core.events.interfaces.RoleEvent"]},{"name":"interface RoleSelectMenu","description":"dev.kordex.core.components.menus.role.RoleSelectMenu","location":"kord-extensions/dev.kordex.core.components.menus.role/-role-select-menu/index.html","searchKeys":["RoleSelectMenu","interface RoleSelectMenu","dev.kordex.core.components.menus.role.RoleSelectMenu"]},{"name":"interface SlashCommandConverter","description":"dev.kordex.core.commands.converters.SlashCommandConverter","location":"kord-extensions/dev.kordex.core.commands.converters/-slash-command-converter/index.html","searchKeys":["SlashCommandConverter","interface SlashCommandConverter","dev.kordex.core.commands.converters.SlashCommandConverter"]},{"name":"interface SlashCommandFailedChecksEvent<C : SlashCommand<*, *, *>> : SlashCommandFailedEvent<C> , CommandFailedChecksEvent<C, ChatInputCommandInteractionCreateEvent> ","description":"dev.kordex.core.commands.events.SlashCommandFailedChecksEvent","location":"kord-extensions/dev.kordex.core.commands.events/-slash-command-failed-checks-event/index.html","searchKeys":["SlashCommandFailedChecksEvent","interface SlashCommandFailedChecksEvent<C : SlashCommand<*, *, *>> : SlashCommandFailedEvent<C> , CommandFailedChecksEvent<C, ChatInputCommandInteractionCreateEvent> ","dev.kordex.core.commands.events.SlashCommandFailedChecksEvent"]},{"name":"interface SlashCommandFailedParsingEvent<C : SlashCommand<*, *, *>> : SlashCommandFailedEvent<C> , CommandFailedParsingEvent<C, ChatInputCommandInteractionCreateEvent> ","description":"dev.kordex.core.commands.events.SlashCommandFailedParsingEvent","location":"kord-extensions/dev.kordex.core.commands.events/-slash-command-failed-parsing-event/index.html","searchKeys":["SlashCommandFailedParsingEvent","interface SlashCommandFailedParsingEvent<C : SlashCommand<*, *, *>> : SlashCommandFailedEvent<C> , CommandFailedParsingEvent<C, ChatInputCommandInteractionCreateEvent> ","dev.kordex.core.commands.events.SlashCommandFailedParsingEvent"]},{"name":"interface SlashCommandFailedWithExceptionEvent<C : SlashCommand<*, *, *>> : SlashCommandFailedEvent<C> , CommandFailedWithExceptionEvent<C, ChatInputCommandInteractionCreateEvent> ","description":"dev.kordex.core.commands.events.SlashCommandFailedWithExceptionEvent","location":"kord-extensions/dev.kordex.core.commands.events/-slash-command-failed-with-exception-event/index.html","searchKeys":["SlashCommandFailedWithExceptionEvent","interface SlashCommandFailedWithExceptionEvent<C : SlashCommand<*, *, *>> : SlashCommandFailedEvent<C> , CommandFailedWithExceptionEvent<C, ChatInputCommandInteractionCreateEvent> ","dev.kordex.core.commands.events.SlashCommandFailedWithExceptionEvent"]},{"name":"interface SlashCommandInvocationEvent<C : SlashCommand<*, *, *>> : CommandInvocationEvent<C, ChatInputCommandInteractionCreateEvent> ","description":"dev.kordex.core.commands.events.SlashCommandInvocationEvent","location":"kord-extensions/dev.kordex.core.commands.events/-slash-command-invocation-event/index.html","searchKeys":["SlashCommandInvocationEvent","interface SlashCommandInvocationEvent<C : SlashCommand<*, *, *>> : CommandInvocationEvent<C, ChatInputCommandInteractionCreateEvent> ","dev.kordex.core.commands.events.SlashCommandInvocationEvent"]},{"name":"interface SlashCommandSucceededEvent<C : SlashCommand<*, *, *>> : CommandSucceededEvent<C, ChatInputCommandInteractionCreateEvent> ","description":"dev.kordex.core.commands.events.SlashCommandSucceededEvent","location":"kord-extensions/dev.kordex.core.commands.events/-slash-command-succeeded-event/index.html","searchKeys":["SlashCommandSucceededEvent","interface SlashCommandSucceededEvent<C : SlashCommand<*, *, *>> : CommandSucceededEvent<C, ChatInputCommandInteractionCreateEvent> ","dev.kordex.core.commands.events.SlashCommandSucceededEvent"]},{"name":"interface StringSelectMenu","description":"dev.kordex.core.components.menus.string.StringSelectMenu","location":"kord-extensions/dev.kordex.core.components.menus.string/-string-select-menu/index.html","searchKeys":["StringSelectMenu","interface StringSelectMenu","dev.kordex.core.components.menus.string.StringSelectMenu"]},{"name":"interface TranslatableContext","description":"dev.kordex.core.types.TranslatableContext","location":"kord-extensions/dev.kordex.core.types/-translatable-context/index.html","searchKeys":["TranslatableContext","interface TranslatableContext","dev.kordex.core.types.TranslatableContext"]},{"name":"interface UserCommandFailedChecksEvent<C : UserCommand<*, *>> : UserCommandFailedEvent<C> , CommandFailedChecksEvent<C, UserCommandInteractionCreateEvent> ","description":"dev.kordex.core.commands.events.UserCommandFailedChecksEvent","location":"kord-extensions/dev.kordex.core.commands.events/-user-command-failed-checks-event/index.html","searchKeys":["UserCommandFailedChecksEvent","interface UserCommandFailedChecksEvent<C : UserCommand<*, *>> : UserCommandFailedEvent<C> , CommandFailedChecksEvent<C, UserCommandInteractionCreateEvent> ","dev.kordex.core.commands.events.UserCommandFailedChecksEvent"]},{"name":"interface UserCommandFailedWithExceptionEvent<C : UserCommand<*, *>> : UserCommandFailedEvent<C> , CommandFailedWithExceptionEvent<C, UserCommandInteractionCreateEvent> ","description":"dev.kordex.core.commands.events.UserCommandFailedWithExceptionEvent","location":"kord-extensions/dev.kordex.core.commands.events/-user-command-failed-with-exception-event/index.html","searchKeys":["UserCommandFailedWithExceptionEvent","interface UserCommandFailedWithExceptionEvent<C : UserCommand<*, *>> : UserCommandFailedEvent<C> , CommandFailedWithExceptionEvent<C, UserCommandInteractionCreateEvent> ","dev.kordex.core.commands.events.UserCommandFailedWithExceptionEvent"]},{"name":"interface UserCommandInvocationEvent<C : UserCommand<*, *>> : CommandInvocationEvent<C, UserCommandInteractionCreateEvent> ","description":"dev.kordex.core.commands.events.UserCommandInvocationEvent","location":"kord-extensions/dev.kordex.core.commands.events/-user-command-invocation-event/index.html","searchKeys":["UserCommandInvocationEvent","interface UserCommandInvocationEvent<C : UserCommand<*, *>> : CommandInvocationEvent<C, UserCommandInteractionCreateEvent> ","dev.kordex.core.commands.events.UserCommandInvocationEvent"]},{"name":"interface UserCommandSucceededEvent<C : UserCommand<*, *>> : CommandSucceededEvent<C, UserCommandInteractionCreateEvent> ","description":"dev.kordex.core.commands.events.UserCommandSucceededEvent","location":"kord-extensions/dev.kordex.core.commands.events/-user-command-succeeded-event/index.html","searchKeys":["UserCommandSucceededEvent","interface UserCommandSucceededEvent<C : UserCommand<*, *>> : CommandSucceededEvent<C, UserCommandInteractionCreateEvent> ","dev.kordex.core.commands.events.UserCommandSucceededEvent"]},{"name":"interface UserEvent","description":"dev.kordex.core.events.interfaces.UserEvent","location":"kord-extensions/dev.kordex.core.events.interfaces/-user-event/index.html","searchKeys":["UserEvent","interface UserEvent","dev.kordex.core.events.interfaces.UserEvent"]},{"name":"interface UserSelectMenu","description":"dev.kordex.core.components.menus.user.UserSelectMenu","location":"kord-extensions/dev.kordex.core.components.menus.user/-user-select-menu/index.html","searchKeys":["UserSelectMenu","interface UserSelectMenu","dev.kordex.core.components.menus.user.UserSelectMenu"]},{"name":"lateinit var body: suspend C.(M?) -> Unit","description":"dev.kordex.core.commands.application.message.MessageCommand.body","location":"kord-extensions/dev.kordex.core.commands.application.message/-message-command/body.html","searchKeys":["body","lateinit var body: suspend C.(M?) -> Unit","dev.kordex.core.commands.application.message.MessageCommand.body"]},{"name":"lateinit var body: suspend C.(M?) -> Unit","description":"dev.kordex.core.commands.application.slash.SlashCommand.body","location":"kord-extensions/dev.kordex.core.commands.application.slash/-slash-command/body.html","searchKeys":["body","lateinit var body: suspend C.(M?) -> Unit","dev.kordex.core.commands.application.slash.SlashCommand.body"]},{"name":"lateinit var body: suspend C.(M?) -> Unit","description":"dev.kordex.core.commands.application.user.UserCommand.body","location":"kord-extensions/dev.kordex.core.commands.application.user/-user-command/body.html","searchKeys":["body","lateinit var body: suspend C.(M?) -> Unit","dev.kordex.core.commands.application.user.UserCommand.body"]},{"name":"lateinit var body: suspend C.(M?) -> Unit","description":"dev.kordex.core.components.ComponentWithAction.body","location":"kord-extensions/dev.kordex.core.components/-component-with-action/body.html","searchKeys":["body","lateinit var body: suspend C.(M?) -> Unit","dev.kordex.core.components.ComponentWithAction.body"]},{"name":"lateinit var builder: SectionBuilder","description":"dev.kordex.core.builders.about.Section.builder","location":"kord-extensions/dev.kordex.core.builders.about/-section/builder.html","searchKeys":["builder","lateinit var builder: SectionBuilder","dev.kordex.core.builders.about.Section.builder"]},{"name":"lateinit var description: Key","description":"dev.kordex.core.commands.application.slash.SlashGroup.description","location":"kord-extensions/dev.kordex.core.commands.application.slash/-slash-group/description.html","searchKeys":["description","lateinit var description: Key","dev.kordex.core.commands.application.slash.SlashGroup.description"]},{"name":"lateinit var label: Key","description":"dev.kordex.core.components.forms.widgets.TextInputWidget.label","location":"kord-extensions/dev.kordex.core.components.forms.widgets/-text-input-widget/label.html","searchKeys":["label","lateinit var label: Key","dev.kordex.core.components.forms.widgets.TextInputWidget.label"]},{"name":"object BooleanParser : KordExKoinComponent","description":"dev.kordex.core.parsers.BooleanParser","location":"kord-extensions/dev.kordex.core.parsers/-boolean-parser/index.html","searchKeys":["BooleanParser","object BooleanParser : KordExKoinComponent","dev.kordex.core.parsers.BooleanParser"]},{"name":"object ColorCache : KordExKoinComponent","description":"dev.kordex.core.parsers.caches.ColorCache","location":"kord-extensions/dev.kordex.core.parsers.caches/-color-cache/index.html","searchKeys":["ColorCache","object ColorCache : KordExKoinComponent","dev.kordex.core.parsers.caches.ColorCache"]},{"name":"object ColorParser : KordExKoinComponent","description":"dev.kordex.core.parsers.ColorParser","location":"kord-extensions/dev.kordex.core.parsers/-color-parser/index.html","searchKeys":["ColorParser","object ColorParser : KordExKoinComponent","dev.kordex.core.parsers.ColorParser"]},{"name":"object Companion","description":"dev.kordex.core.sentry.captures.SentryCapture.Companion","location":"kord-extensions/dev.kordex.core.sentry.captures/-sentry-capture/-companion/index.html","searchKeys":["Companion","object Companion","dev.kordex.core.sentry.captures.SentryCapture.Companion"]},{"name":"object Companion","description":"dev.kordex.core.time.TimestampType.Companion","location":"kord-extensions/dev.kordex.core.time/-timestamp-type/-companion/index.html","searchKeys":["Companion","object Companion","dev.kordex.core.time.TimestampType.Companion"]},{"name":"object Companion","description":"dev.kordex.core.utils.deltas.MemberDelta.Companion","location":"kord-extensions/dev.kordex.core.utils.deltas/-member-delta/-companion/index.html","searchKeys":["Companion","object Companion","dev.kordex.core.utils.deltas.MemberDelta.Companion"]},{"name":"object Companion","description":"dev.kordex.core.utils.deltas.MessageDelta.Companion","location":"kord-extensions/dev.kordex.core.utils.deltas/-message-delta/-companion/index.html","searchKeys":["Companion","object Companion","dev.kordex.core.utils.deltas.MessageDelta.Companion"]},{"name":"object Companion","description":"dev.kordex.core.utils.deltas.RoleDelta.Companion","location":"kord-extensions/dev.kordex.core.utils.deltas/-role-delta/-companion/index.html","searchKeys":["Companion","object Companion","dev.kordex.core.utils.deltas.RoleDelta.Companion"]},{"name":"object Companion","description":"dev.kordex.core.utils.deltas.UserDelta.Companion","location":"kord-extensions/dev.kordex.core.utils.deltas/-user-delta/-companion/index.html","searchKeys":["Companion","object Companion","dev.kordex.core.utils.deltas.UserDelta.Companion"]},{"name":"object Companion : KordExKoinComponent","description":"dev.kordex.core.commands.converters.impl.TagConverter.Companion","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-tag-converter/-companion/index.html","searchKeys":["Companion","object Companion : KordExKoinComponent","dev.kordex.core.commands.converters.impl.TagConverter.Companion"]},{"name":"object Contains : FilterStrategy","description":"dev.kordex.core.utils.FilterStrategy.Contains","location":"kord-extensions/dev.kordex.core.utils/-filter-strategy/-contains/index.html","searchKeys":["Contains","object Contains : FilterStrategy","dev.kordex.core.utils.FilterStrategy.Contains"]},{"name":"object DataAPIClient","description":"dev.kordex.core.datacollection.DataAPIClient","location":"kord-extensions/dev.kordex.core.datacollection/-data-a-p-i-client/index.html","searchKeys":["DataAPIClient","object DataAPIClient","dev.kordex.core.datacollection.DataAPIClient"]},{"name":"object Debug : BreadcrumbType","description":"dev.kordex.core.sentry.BreadcrumbType.Debug","location":"kord-extensions/dev.kordex.core.sentry/-breadcrumb-type/-debug/index.html","searchKeys":["Debug","object Debug : BreadcrumbType","dev.kordex.core.sentry.BreadcrumbType.Debug"]},{"name":"object Default : BreadcrumbType","description":"dev.kordex.core.sentry.BreadcrumbType.Default","location":"kord-extensions/dev.kordex.core.sentry/-breadcrumb-type/-default/index.html","searchKeys":["Default","object Default : BreadcrumbType","dev.kordex.core.sentry.BreadcrumbType.Default"]},{"name":"object Default : TimestampType","description":"dev.kordex.core.time.TimestampType.Default","location":"kord-extensions/dev.kordex.core.time/-timestamp-type/-default/index.html","searchKeys":["Default","object Default : TimestampType","dev.kordex.core.time.TimestampType.Default"]},{"name":"object DurationParser : KordExKoinComponent","description":"dev.kordex.core.parsers.DurationParser","location":"kord-extensions/dev.kordex.core.parsers/-duration-parser/index.html","searchKeys":["DurationParser","object DurationParser : KordExKoinComponent","dev.kordex.core.parsers.DurationParser"]},{"name":"object Error : BreadcrumbType","description":"dev.kordex.core.sentry.BreadcrumbType.Error","location":"kord-extensions/dev.kordex.core.sentry/-breadcrumb-type/-error/index.html","searchKeys":["Error","object Error : BreadcrumbType","dev.kordex.core.sentry.BreadcrumbType.Error"]},{"name":"object Framework : CopyrightType","description":"dev.kordex.core.builders.about.CopyrightType.Framework","location":"kord-extensions/dev.kordex.core.builders.about/-copyright-type/-framework/index.html","searchKeys":["Framework","object Framework : CopyrightType","dev.kordex.core.builders.about.CopyrightType.Framework"]},{"name":"object HTTP : BreadcrumbType","description":"dev.kordex.core.sentry.BreadcrumbType.HTTP","location":"kord-extensions/dev.kordex.core.sentry/-breadcrumb-type/-h-t-t-p/index.html","searchKeys":["HTTP","object HTTP : BreadcrumbType","dev.kordex.core.sentry.BreadcrumbType.HTTP"]},{"name":"object Info : BreadcrumbType","description":"dev.kordex.core.sentry.BreadcrumbType.Info","location":"kord-extensions/dev.kordex.core.sentry/-breadcrumb-type/-info/index.html","searchKeys":["Info","object Info : BreadcrumbType","dev.kordex.core.sentry.BreadcrumbType.Info"]},{"name":"object KordExContext : KoinContext","description":"dev.kordex.core.koin.KordExContext","location":"kord-extensions/dev.kordex.core.koin/-kord-ex-context/index.html","searchKeys":["KordExContext","object KordExContext : KoinContext","dev.kordex.core.koin.KordExContext"]},{"name":"object Library : CopyrightType","description":"dev.kordex.core.builders.about.CopyrightType.Library","location":"kord-extensions/dev.kordex.core.builders.about/-copyright-type/-library/index.html","searchKeys":["Library","object Library : CopyrightType","dev.kordex.core.builders.about.CopyrightType.Library"]},{"name":"object LongDate : TimestampType","description":"dev.kordex.core.time.TimestampType.LongDate","location":"kord-extensions/dev.kordex.core.time/-timestamp-type/-long-date/index.html","searchKeys":["LongDate","object LongDate : TimestampType","dev.kordex.core.time.TimestampType.LongDate"]},{"name":"object LongDateTime : TimestampType","description":"dev.kordex.core.time.TimestampType.LongDateTime","location":"kord-extensions/dev.kordex.core.time/-timestamp-type/-long-date-time/index.html","searchKeys":["LongDateTime","object LongDateTime : TimestampType","dev.kordex.core.time.TimestampType.LongDateTime"]},{"name":"object LongTime : TimestampType","description":"dev.kordex.core.time.TimestampType.LongTime","location":"kord-extensions/dev.kordex.core.time/-timestamp-type/-long-time/index.html","searchKeys":["LongTime","object LongTime : TimestampType","dev.kordex.core.time.TimestampType.LongTime"]},{"name":"object Mentions","description":"dev.kordex.core.utils.Mentions","location":"kord-extensions/dev.kordex.core.utils/-mentions/index.html","searchKeys":["Mentions","object Mentions","dev.kordex.core.utils.Mentions"]},{"name":"object Missing : ChangeSet.State","description":"dev.kordex.core.utils.deltas.ChangeSet.State.Missing","location":"kord-extensions/dev.kordex.core.utils.deltas/-change-set/-state/-missing/index.html","searchKeys":["Missing","object Missing : ChangeSet.State","dev.kordex.core.utils.deltas.ChangeSet.State.Missing"]},{"name":"object Navigation : BreadcrumbType","description":"dev.kordex.core.sentry.BreadcrumbType.Navigation","location":"kord-extensions/dev.kordex.core.sentry/-breadcrumb-type/-navigation/index.html","searchKeys":["Navigation","object Navigation : BreadcrumbType","dev.kordex.core.sentry.BreadcrumbType.Navigation"]},{"name":"object PluginModule : CopyrightType","description":"dev.kordex.core.builders.about.CopyrightType.PluginModule","location":"kord-extensions/dev.kordex.core.builders.about/-copyright-type/-plugin-module/index.html","searchKeys":["PluginModule","object PluginModule : CopyrightType","dev.kordex.core.builders.about.CopyrightType.PluginModule"]},{"name":"object Prefix : FilterStrategy","description":"dev.kordex.core.utils.FilterStrategy.Prefix","location":"kord-extensions/dev.kordex.core.utils/-filter-strategy/-prefix/index.html","searchKeys":["Prefix","object Prefix : FilterStrategy","dev.kordex.core.utils.FilterStrategy.Prefix"]},{"name":"object Present : ChangeSet.State","description":"dev.kordex.core.utils.deltas.ChangeSet.State.Present","location":"kord-extensions/dev.kordex.core.utils.deltas/-change-set/-state/-present/index.html","searchKeys":["Present","object Present : ChangeSet.State","dev.kordex.core.utils.deltas.ChangeSet.State.Present"]},{"name":"object Query : BreadcrumbType","description":"dev.kordex.core.sentry.BreadcrumbType.Query","location":"kord-extensions/dev.kordex.core.sentry/-breadcrumb-type/-query/index.html","searchKeys":["Query","object Query : BreadcrumbType","dev.kordex.core.sentry.BreadcrumbType.Query"]},{"name":"object RelativeTime : TimestampType","description":"dev.kordex.core.time.TimestampType.RelativeTime","location":"kord-extensions/dev.kordex.core.time/-timestamp-type/-relative-time/index.html","searchKeys":["RelativeTime","object RelativeTime : TimestampType","dev.kordex.core.time.TimestampType.RelativeTime"]},{"name":"object ShortDate : TimestampType","description":"dev.kordex.core.time.TimestampType.ShortDate","location":"kord-extensions/dev.kordex.core.time/-timestamp-type/-short-date/index.html","searchKeys":["ShortDate","object ShortDate : TimestampType","dev.kordex.core.time.TimestampType.ShortDate"]},{"name":"object ShortDateTime : TimestampType","description":"dev.kordex.core.time.TimestampType.ShortDateTime","location":"kord-extensions/dev.kordex.core.time/-timestamp-type/-short-date-time/index.html","searchKeys":["ShortDateTime","object ShortDateTime : TimestampType","dev.kordex.core.time.TimestampType.ShortDateTime"]},{"name":"object ShortTime : TimestampType","description":"dev.kordex.core.time.TimestampType.ShortTime","location":"kord-extensions/dev.kordex.core.time/-timestamp-type/-short-time/index.html","searchKeys":["ShortTime","object ShortTime : TimestampType","dev.kordex.core.time.TimestampType.ShortTime"]},{"name":"object Suffix : FilterStrategy","description":"dev.kordex.core.utils.FilterStrategy.Suffix","location":"kord-extensions/dev.kordex.core.utils/-filter-strategy/-suffix/index.html","searchKeys":["Suffix","object Suffix : FilterStrategy","dev.kordex.core.utils.FilterStrategy.Suffix"]},{"name":"object SupportedLocales","description":"dev.kordex.core.i18n.SupportedLocales","location":"kord-extensions/dev.kordex.core.i18n/-supported-locales/index.html","searchKeys":["SupportedLocales","object SupportedLocales","dev.kordex.core.i18n.SupportedLocales"]},{"name":"object TimeUnitCache : KordExKoinComponent","description":"dev.kordex.core.parsers.caches.TimeUnitCache","location":"kord-extensions/dev.kordex.core.parsers.caches/-time-unit-cache/index.html","searchKeys":["TimeUnitCache","object TimeUnitCache : KordExKoinComponent","dev.kordex.core.parsers.caches.TimeUnitCache"]},{"name":"object Tool : CopyrightType","description":"dev.kordex.core.builders.about.CopyrightType.Tool","location":"kord-extensions/dev.kordex.core.builders.about/-copyright-type/-tool/index.html","searchKeys":["Tool","object Tool : CopyrightType","dev.kordex.core.builders.about.CopyrightType.Tool"]},{"name":"object Transaction : BreadcrumbType","description":"dev.kordex.core.sentry.BreadcrumbType.Transaction","location":"kord-extensions/dev.kordex.core.sentry/-breadcrumb-type/-transaction/index.html","searchKeys":["Transaction","object Transaction : BreadcrumbType","dev.kordex.core.sentry.BreadcrumbType.Transaction"]},{"name":"object UI : BreadcrumbType","description":"dev.kordex.core.sentry.BreadcrumbType.UI","location":"kord-extensions/dev.kordex.core.sentry/-breadcrumb-type/-u-i/index.html","searchKeys":["UI","object UI : BreadcrumbType","dev.kordex.core.sentry.BreadcrumbType.UI"]},{"name":"object User : BreadcrumbType","description":"dev.kordex.core.sentry.BreadcrumbType.User","location":"kord-extensions/dev.kordex.core.sentry/-breadcrumb-type/-user/index.html","searchKeys":["User","object User : BreadcrumbType","dev.kordex.core.sentry.BreadcrumbType.User"]},{"name":"open class ArgumentParsingException(val reason: Key, val argument: Argument<*>?, val arguments: Arguments, val parser: StringParser?) : DiscordRelayedException","description":"dev.kordex.core.ArgumentParsingException","location":"kord-extensions/dev.kordex.core/-argument-parsing-exception/index.html","searchKeys":["ArgumentParsingException","open class ArgumentParsingException(val reason: Key, val argument: Argument<*>?, val arguments: Arguments, val parser: StringParser?) : DiscordRelayedException","dev.kordex.core.ArgumentParsingException"]},{"name":"open class Arguments","description":"dev.kordex.core.commands.Arguments","location":"kord-extensions/dev.kordex.core.commands/-arguments/index.html","searchKeys":["Arguments","open class Arguments","dev.kordex.core.commands.Arguments"]},{"name":"open class BaseParserException : KordExException","description":"dev.kordex.core.parsers.BaseParserException","location":"kord-extensions/dev.kordex.core.parsers/-base-parser-exception/index.html","searchKeys":["BaseParserException","open class BaseParserException : KordExException","dev.kordex.core.parsers.BaseParserException"]},{"name":"open class ChatCommand<T : Arguments>(val extension: Extension, val arguments: () -> T? = null) : Command","description":"dev.kordex.core.commands.chat.ChatCommand","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-command/index.html","searchKeys":["ChatCommand","open class ChatCommand<T : Arguments>(val extension: Extension, val arguments: () -> T? = null) : Command","dev.kordex.core.commands.chat.ChatCommand"]},{"name":"open class ChatCommandContext<T : Arguments>(val chatCommand: ChatCommand<out T>, val eventObj: MessageCreateEvent, val commandName: Key, val parser: StringParser, val argString: String, val cache: MutableStringKeyedMap<Any>) : CommandContext","description":"dev.kordex.core.commands.chat.ChatCommandContext","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-command-context/index.html","searchKeys":["ChatCommandContext","open class ChatCommandContext<T : Arguments>(val chatCommand: ChatCommand<out T>, val eventObj: MessageCreateEvent, val commandName: Key, val parser: StringParser, val argString: String, val cache: MutableStringKeyedMap<Any>) : CommandContext","dev.kordex.core.commands.chat.ChatCommandContext"]},{"name":"open class ChatCommandParser : KordExKoinComponent","description":"dev.kordex.core.commands.chat.ChatCommandParser","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-command-parser/index.html","searchKeys":["ChatCommandParser","open class ChatCommandParser : KordExKoinComponent","dev.kordex.core.commands.chat.ChatCommandParser"]},{"name":"open class ChatCommandRegistry : KordExKoinComponent","description":"dev.kordex.core.commands.chat.ChatCommandRegistry","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-command-registry/index.html","searchKeys":["ChatCommandRegistry","open class ChatCommandRegistry : KordExKoinComponent","dev.kordex.core.commands.chat.ChatCommandRegistry"]},{"name":"open class ChatGroupCommand<T : Arguments>(extension: Extension, arguments: () -> T? = null, val parent: ChatGroupCommand<out Arguments>? = null) : ChatCommand<T> ","description":"dev.kordex.core.commands.chat.ChatGroupCommand","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-group-command/index.html","searchKeys":["ChatGroupCommand","open class ChatGroupCommand<T : Arguments>(extension: Extension, arguments: () -> T? = null, val parent: ChatGroupCommand<out Arguments>? = null) : ChatCommand<T> ","dev.kordex.core.commands.chat.ChatGroupCommand"]},{"name":"open class ChatSubCommand<T : Arguments>(extension: Extension, arguments: () -> T? = null, val parent: ChatGroupCommand<out Arguments>) : ChatCommand<T> ","description":"dev.kordex.core.commands.chat.ChatSubCommand","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-sub-command/index.html","searchKeys":["ChatSubCommand","open class ChatSubCommand<T : Arguments>(extension: Extension, arguments: () -> T? = null, val parent: ChatGroupCommand<out Arguments>) : ChatCommand<T> ","dev.kordex.core.commands.chat.ChatSubCommand"]},{"name":"open class CheckContext<out T : Event>(val event: T, val locale: Locale) : KordExKoinComponent","description":"dev.kordex.core.checks.types.CheckContext","location":"kord-extensions/dev.kordex.core.checks.types/-check-context/index.html","searchKeys":["CheckContext","open class CheckContext<out T : Event>(val event: T, val locale: Locale) : KordExKoinComponent","dev.kordex.core.checks.types.CheckContext"]},{"name":"open class ComponentContainer(val timeout: Duration? = null, startTimeoutNow: Boolean = false) : KordExKoinComponent","description":"dev.kordex.core.components.ComponentContainer","location":"kord-extensions/dev.kordex.core.components/-component-container/index.html","searchKeys":["ComponentContainer","open class ComponentContainer(val timeout: Duration? = null, startTimeoutNow: Boolean = false) : KordExKoinComponent","dev.kordex.core.components.ComponentContainer"]},{"name":"open class ComponentRegistry","description":"dev.kordex.core.components.ComponentRegistry","location":"kord-extensions/dev.kordex.core.components/-component-registry/index.html","searchKeys":["ComponentRegistry","open class ComponentRegistry","dev.kordex.core.components.ComponentRegistry"]},{"name":"open class DefaultApplicationCommandRegistry : ApplicationCommandRegistry","description":"dev.kordex.core.commands.application.DefaultApplicationCommandRegistry","location":"kord-extensions/dev.kordex.core.commands.application/-default-application-command-registry/index.html","searchKeys":["DefaultApplicationCommandRegistry","open class DefaultApplicationCommandRegistry : ApplicationCommandRegistry","dev.kordex.core.commands.application.DefaultApplicationCommandRegistry"]},{"name":"open class DefaultLocalRegistryStorage<K, T> : RegistryStorage<K, T> ","description":"dev.kordex.core.registry.DefaultLocalRegistryStorage","location":"kord-extensions/dev.kordex.core.registry/-default-local-registry-storage/index.html","searchKeys":["DefaultLocalRegistryStorage","open class DefaultLocalRegistryStorage<K, T> : RegistryStorage<K, T> ","dev.kordex.core.registry.DefaultLocalRegistryStorage"]},{"name":"open class DisabledInteractionButton : InteractionButtonWithID","description":"dev.kordex.core.components.buttons.DisabledInteractionButton","location":"kord-extensions/dev.kordex.core.components.buttons/-disabled-interaction-button/index.html","searchKeys":["DisabledInteractionButton","open class DisabledInteractionButton : InteractionButtonWithID","dev.kordex.core.components.buttons.DisabledInteractionButton"]},{"name":"open class DiscordRelayedException(val reason: Key) : KordExException","description":"dev.kordex.core.DiscordRelayedException","location":"kord-extensions/dev.kordex.core/-discord-relayed-exception/index.html","searchKeys":["DiscordRelayedException","open class DiscordRelayedException(val reason: Key) : KordExException","dev.kordex.core.DiscordRelayedException"]},{"name":"open class DurationParserException(var error: Key) : BaseParserException","description":"dev.kordex.core.parsers.DurationParserException","location":"kord-extensions/dev.kordex.core.parsers/-duration-parser-exception/index.html","searchKeys":["DurationParserException","open class DurationParserException(var error: Key) : BaseParserException","dev.kordex.core.parsers.DurationParserException"]},{"name":"open class EphemeralChannelSelectMenu<M : ModalForm>(timeoutTask: Task?, val modal: () -> M? = null) : EphemeralSelectMenu<EphemeralChannelSelectMenuContext<M>, M> , ChannelSelectMenu","description":"dev.kordex.core.components.menus.channel.EphemeralChannelSelectMenu","location":"kord-extensions/dev.kordex.core.components.menus.channel/-ephemeral-channel-select-menu/index.html","searchKeys":["EphemeralChannelSelectMenu","open class EphemeralChannelSelectMenu<M : ModalForm>(timeoutTask: Task?, val modal: () -> M? = null) : EphemeralSelectMenu<EphemeralChannelSelectMenuContext<M>, M> , ChannelSelectMenu","dev.kordex.core.components.menus.channel.EphemeralChannelSelectMenu"]},{"name":"open class EphemeralInteractionButton<M : ModalForm>(timeoutTask: Task?, val modal: () -> M? = null) : InteractionButtonWithAction<EphemeralInteractionButtonContext<M>, M> ","description":"dev.kordex.core.components.buttons.EphemeralInteractionButton","location":"kord-extensions/dev.kordex.core.components.buttons/-ephemeral-interaction-button/index.html","searchKeys":["EphemeralInteractionButton","open class EphemeralInteractionButton<M : ModalForm>(timeoutTask: Task?, val modal: () -> M? = null) : InteractionButtonWithAction<EphemeralInteractionButtonContext<M>, M> ","dev.kordex.core.components.buttons.EphemeralInteractionButton"]},{"name":"open class EphemeralMentionableSelectMenu<M : ModalForm>(timeoutTask: Task?, val modal: () -> M? = null) : EphemeralSelectMenu<EphemeralMentionableSelectMenuContext<M>, M> , MentionableSelectMenu","description":"dev.kordex.core.components.menus.mentionable.EphemeralMentionableSelectMenu","location":"kord-extensions/dev.kordex.core.components.menus.mentionable/-ephemeral-mentionable-select-menu/index.html","searchKeys":["EphemeralMentionableSelectMenu","open class EphemeralMentionableSelectMenu<M : ModalForm>(timeoutTask: Task?, val modal: () -> M? = null) : EphemeralSelectMenu<EphemeralMentionableSelectMenuContext<M>, M> , MentionableSelectMenu","dev.kordex.core.components.menus.mentionable.EphemeralMentionableSelectMenu"]},{"name":"open class EphemeralRoleSelectMenu<M : ModalForm>(timeoutTask: Task?, val modal: () -> M? = null) : EphemeralSelectMenu<EphemeralRoleSelectMenuContext<M>, M> , RoleSelectMenu","description":"dev.kordex.core.components.menus.role.EphemeralRoleSelectMenu","location":"kord-extensions/dev.kordex.core.components.menus.role/-ephemeral-role-select-menu/index.html","searchKeys":["EphemeralRoleSelectMenu","open class EphemeralRoleSelectMenu<M : ModalForm>(timeoutTask: Task?, val modal: () -> M? = null) : EphemeralSelectMenu<EphemeralRoleSelectMenuContext<M>, M> , RoleSelectMenu","dev.kordex.core.components.menus.role.EphemeralRoleSelectMenu"]},{"name":"open class EphemeralStringSelectMenu<M : ModalForm>(timeoutTask: Task?, val modal: () -> M? = null) : EphemeralSelectMenu<EphemeralStringSelectMenuContext<M>, M> , StringSelectMenu","description":"dev.kordex.core.components.menus.string.EphemeralStringSelectMenu","location":"kord-extensions/dev.kordex.core.components.menus.string/-ephemeral-string-select-menu/index.html","searchKeys":["EphemeralStringSelectMenu","open class EphemeralStringSelectMenu<M : ModalForm>(timeoutTask: Task?, val modal: () -> M? = null) : EphemeralSelectMenu<EphemeralStringSelectMenuContext<M>, M> , StringSelectMenu","dev.kordex.core.components.menus.string.EphemeralStringSelectMenu"]},{"name":"open class EphemeralUserSelectMenu<M : ModalForm>(timeoutTask: Task?, val modal: () -> M? = null) : EphemeralSelectMenu<EphemeralUserSelectMenuContext<M>, M> , UserSelectMenu","description":"dev.kordex.core.components.menus.user.EphemeralUserSelectMenu","location":"kord-extensions/dev.kordex.core.components.menus.user/-ephemeral-user-select-menu/index.html","searchKeys":["EphemeralUserSelectMenu","open class EphemeralUserSelectMenu<M : ModalForm>(timeoutTask: Task?, val modal: () -> M? = null) : EphemeralSelectMenu<EphemeralUserSelectMenuContext<M>, M> , UserSelectMenu","dev.kordex.core.components.menus.user.EphemeralUserSelectMenu"]},{"name":"open class EventContext<T : Event>(val eventHandler: EventHandler<T>, val event: T, val cache: MutableStringKeyedMap<Any>) : KordExKoinComponent, TranslatableContext","description":"dev.kordex.core.events.EventContext","location":"kord-extensions/dev.kordex.core.events/-event-context/index.html","searchKeys":["EventContext","open class EventContext<T : Event>(val eventHandler: EventHandler<T>, val event: T, val cache: MutableStringKeyedMap<Any>) : KordExKoinComponent, TranslatableContext","dev.kordex.core.events.EventContext"]},{"name":"open class EventHandler<T : Event>(val extension: Extension) : KordExKoinComponent","description":"dev.kordex.core.events.EventHandler","location":"kord-extensions/dev.kordex.core.events/-event-handler/index.html","searchKeys":["EventHandler","open class EventHandler<T : Event>(val extension: Extension) : KordExKoinComponent","dev.kordex.core.events.EventHandler"]},{"name":"open class ExtensibleBot(val settings: ExtensibleBotBuilder, token: String) : KordExKoinComponent, Lockable","description":"dev.kordex.core.ExtensibleBot","location":"kord-extensions/dev.kordex.core/-extensible-bot/index.html","searchKeys":["ExtensibleBot","open class ExtensibleBot(val settings: ExtensibleBotBuilder, token: String) : KordExKoinComponent, Lockable","dev.kordex.core.ExtensibleBot"]},{"name":"open class ExtensibleBotBuilder","description":"dev.kordex.core.builders.ExtensibleBotBuilder","location":"kord-extensions/dev.kordex.core.builders/-extensible-bot-builder/index.html","searchKeys":["ExtensibleBotBuilder","open class ExtensibleBotBuilder","dev.kordex.core.builders.ExtensibleBotBuilder"]},{"name":"open class ExtensionsBuilder","description":"dev.kordex.core.builders.ExtensionsBuilder","location":"kord-extensions/dev.kordex.core.builders/-extensions-builder/index.html","searchKeys":["ExtensionsBuilder","open class ExtensionsBuilder","dev.kordex.core.builders.ExtensionsBuilder"]},{"name":"open class FilterStrategy(val test: (provided: String, candidate: String) -> Boolean)","description":"dev.kordex.core.utils.FilterStrategy","location":"kord-extensions/dev.kordex.core.utils/-filter-strategy/index.html","searchKeys":["FilterStrategy","open class FilterStrategy(val test: (provided: String, candidate: String) -> Boolean)","dev.kordex.core.utils.FilterStrategy"]},{"name":"open class HelpExtensionBuilder","description":"dev.kordex.core.builders.extensions.HelpExtensionBuilder","location":"kord-extensions/dev.kordex.core.builders.extensions/-help-extension-builder/index.html","searchKeys":["HelpExtensionBuilder","open class HelpExtensionBuilder","dev.kordex.core.builders.extensions.HelpExtensionBuilder"]},{"name":"open class KordExException : Exception","description":"dev.kordex.core.KordExException","location":"kord-extensions/dev.kordex.core/-kord-ex-exception/index.html","searchKeys":["KordExException","open class KordExException : Exception","dev.kordex.core.KordExException"]},{"name":"open class LinkInteractionButton : InteractionButton","description":"dev.kordex.core.components.buttons.LinkInteractionButton","location":"kord-extensions/dev.kordex.core.components.buttons/-link-interaction-button/index.html","searchKeys":["LinkInteractionButton","open class LinkInteractionButton : InteractionButton","dev.kordex.core.components.buttons.LinkInteractionButton"]},{"name":"open class MessageDelta(val attachments: Optional<Set<Attachment>>, val content: Optional<String>, val editedTimestamp: Optional<Instant?>, val embeds: Optional<List<Embed>>, val isPinned: Optional<Boolean>, val mentionedChannelIds: Optional<Set<Snowflake>>, val mentionedRoleIds: Optional<Set<Snowflake>>, val mentionedUserIds: Optional<Set<Snowflake>>, val mentionsEveryone: Optional<Boolean>, val reactions: Optional<Set<Reaction>>, val stickers: Optional<List<StickerItem>>)","description":"dev.kordex.core.utils.deltas.MessageDelta","location":"kord-extensions/dev.kordex.core.utils.deltas/-message-delta/index.html","searchKeys":["MessageDelta","open class MessageDelta(val attachments: Optional<Set<Attachment>>, val content: Optional<String>, val editedTimestamp: Optional<Instant?>, val embeds: Optional<List<Embed>>, val isPinned: Optional<Boolean>, val mentionedChannelIds: Optional<Set<Snowflake>>, val mentionedRoleIds: Optional<Set<Snowflake>>, val mentionedUserIds: Optional<Set<Snowflake>>, val mentionsEveryone: Optional<Boolean>, val reactions: Optional<Set<Reaction>>, val stickers: Optional<List<StickerItem>>)","dev.kordex.core.utils.deltas.MessageDelta"]},{"name":"open class OptionWrapper<T : OptionsBuilder> constructor(var displayName: Key, var description: Key, val body: suspend T.() -> Unit, val type: KClass<T>)","description":"dev.kordex.core.commands.OptionWrapper","location":"kord-extensions/dev.kordex.core.commands/-option-wrapper/index.html","searchKeys":["OptionWrapper","open class OptionWrapper<T : OptionsBuilder> constructor(var displayName: Key, var description: Key, val body: suspend T.() -> Unit, val type: KClass<T>)","dev.kordex.core.commands.OptionWrapper"]},{"name":"open class Page(val builder: suspend EmbedBuilder.() -> Unit) : KordExKoinComponent","description":"dev.kordex.core.pagination.pages.Page","location":"kord-extensions/dev.kordex.core.pagination.pages/-page/index.html","searchKeys":["Page","open class Page(val builder: suspend EmbedBuilder.() -> Unit) : KordExKoinComponent","dev.kordex.core.pagination.pages.Page"]},{"name":"open class Pages(var defaultGroup: Key = EMPTY_KEY)","description":"dev.kordex.core.pagination.pages.Pages","location":"kord-extensions/dev.kordex.core.pagination.pages/-pages/index.html","searchKeys":["Pages","open class Pages(var defaultGroup: Key = EMPTY_KEY)","dev.kordex.core.pagination.pages.Pages"]},{"name":"open class PluginManager(roots: List<Path>) : DefaultPluginManager","description":"dev.kordex.core.plugins.PluginManager","location":"kord-extensions/dev.kordex.core.plugins/-plugin-manager/index.html","searchKeys":["PluginManager","open class PluginManager(roots: List<Path>) : DefaultPluginManager","dev.kordex.core.plugins.PluginManager"]},{"name":"open class PublicChannelSelectMenu<M : ModalForm>(timeoutTask: Task?, val modal: () -> M? = null) : PublicSelectMenu<PublicChannelSelectMenuContext<M>, M> , ChannelSelectMenu","description":"dev.kordex.core.components.menus.channel.PublicChannelSelectMenu","location":"kord-extensions/dev.kordex.core.components.menus.channel/-public-channel-select-menu/index.html","searchKeys":["PublicChannelSelectMenu","open class PublicChannelSelectMenu<M : ModalForm>(timeoutTask: Task?, val modal: () -> M? = null) : PublicSelectMenu<PublicChannelSelectMenuContext<M>, M> , ChannelSelectMenu","dev.kordex.core.components.menus.channel.PublicChannelSelectMenu"]},{"name":"open class PublicInteractionButton<M : ModalForm>(timeoutTask: Task?, val modal: () -> M? = null) : InteractionButtonWithAction<PublicInteractionButtonContext<M>, M> ","description":"dev.kordex.core.components.buttons.PublicInteractionButton","location":"kord-extensions/dev.kordex.core.components.buttons/-public-interaction-button/index.html","searchKeys":["PublicInteractionButton","open class PublicInteractionButton<M : ModalForm>(timeoutTask: Task?, val modal: () -> M? = null) : InteractionButtonWithAction<PublicInteractionButtonContext<M>, M> ","dev.kordex.core.components.buttons.PublicInteractionButton"]},{"name":"open class PublicMentionableSelectMenu<M : ModalForm>(timeoutTask: Task?, val modal: () -> M? = null) : PublicSelectMenu<PublicMentionableSelectMenuContext<M>, M> , MentionableSelectMenu","description":"dev.kordex.core.components.menus.mentionable.PublicMentionableSelectMenu","location":"kord-extensions/dev.kordex.core.components.menus.mentionable/-public-mentionable-select-menu/index.html","searchKeys":["PublicMentionableSelectMenu","open class PublicMentionableSelectMenu<M : ModalForm>(timeoutTask: Task?, val modal: () -> M? = null) : PublicSelectMenu<PublicMentionableSelectMenuContext<M>, M> , MentionableSelectMenu","dev.kordex.core.components.menus.mentionable.PublicMentionableSelectMenu"]},{"name":"open class PublicRoleSelectMenu<M : ModalForm>(timeoutTask: Task?, val modal: () -> M? = null) : PublicSelectMenu<PublicRoleSelectMenuContext<M>, M> , RoleSelectMenu","description":"dev.kordex.core.components.menus.role.PublicRoleSelectMenu","location":"kord-extensions/dev.kordex.core.components.menus.role/-public-role-select-menu/index.html","searchKeys":["PublicRoleSelectMenu","open class PublicRoleSelectMenu<M : ModalForm>(timeoutTask: Task?, val modal: () -> M? = null) : PublicSelectMenu<PublicRoleSelectMenuContext<M>, M> , RoleSelectMenu","dev.kordex.core.components.menus.role.PublicRoleSelectMenu"]},{"name":"open class PublicStringSelectMenu<M : ModalForm>(timeoutTask: Task?, val modal: () -> M? = null) : PublicSelectMenu<PublicStringSelectMenuContext<M>, M> , StringSelectMenu","description":"dev.kordex.core.components.menus.string.PublicStringSelectMenu","location":"kord-extensions/dev.kordex.core.components.menus.string/-public-string-select-menu/index.html","searchKeys":["PublicStringSelectMenu","open class PublicStringSelectMenu<M : ModalForm>(timeoutTask: Task?, val modal: () -> M? = null) : PublicSelectMenu<PublicStringSelectMenuContext<M>, M> , StringSelectMenu","dev.kordex.core.components.menus.string.PublicStringSelectMenu"]},{"name":"open class PublicUserSelectMenu<M : ModalForm>(timeoutTask: Task?, val modal: () -> M? = null) : PublicSelectMenu<PublicUserSelectMenuContext<M>, M> , UserSelectMenu","description":"dev.kordex.core.components.menus.user.PublicUserSelectMenu","location":"kord-extensions/dev.kordex.core.components.menus.user/-public-user-select-menu/index.html","searchKeys":["PublicUserSelectMenu","open class PublicUserSelectMenu<M : ModalForm>(timeoutTask: Task?, val modal: () -> M? = null) : PublicSelectMenu<PublicUserSelectMenuContext<M>, M> , UserSelectMenu","dev.kordex.core.components.menus.user.PublicUserSelectMenu"]},{"name":"open class ResourceBundleTranslations(val defaultLocaleBuilder: () -> Locale) : TranslationsProvider","description":"dev.kordex.core.i18n.ResourceBundleTranslations","location":"kord-extensions/dev.kordex.core.i18n/-resource-bundle-translations/index.html","searchKeys":["ResourceBundleTranslations","open class ResourceBundleTranslations(val defaultLocaleBuilder: () -> Locale) : TranslationsProvider","dev.kordex.core.i18n.ResourceBundleTranslations"]},{"name":"open class Scheduler : CoroutineScope","description":"dev.kordex.core.utils.scheduling.Scheduler","location":"kord-extensions/dev.kordex.core.utils.scheduling/-scheduler/index.html","searchKeys":["Scheduler","open class Scheduler : CoroutineScope","dev.kordex.core.utils.scheduling.Scheduler"]},{"name":"open class SentryAdapter : KordExKoinComponent","description":"dev.kordex.core.sentry.SentryAdapter","location":"kord-extensions/dev.kordex.core.sentry/-sentry-adapter/index.html","searchKeys":["SentryAdapter","open class SentryAdapter : KordExKoinComponent","dev.kordex.core.sentry.SentryAdapter"]},{"name":"open class SentryExtensionBuilder","description":"dev.kordex.core.builders.extensions.SentryExtensionBuilder","location":"kord-extensions/dev.kordex.core.builders.extensions/-sentry-extension-builder/index.html","searchKeys":["SentryExtensionBuilder","open class SentryExtensionBuilder","dev.kordex.core.builders.extensions.SentryExtensionBuilder"]},{"name":"open class SentryScopeCapture : SentryCapture","description":"dev.kordex.core.sentry.captures.SentryScopeCapture","location":"kord-extensions/dev.kordex.core.sentry.captures/-sentry-scope-capture/index.html","searchKeys":["SentryScopeCapture","open class SentryScopeCapture : SentryCapture","dev.kordex.core.sentry.captures.SentryScopeCapture"]},{"name":"open class SlashCommandContext<C : SlashCommandContext<C, A, M>, A : Arguments, M : ModalForm>(val event: ChatInputCommandInteractionCreateEvent, val command: SlashCommand<C, A, M>, val cache: MutableStringKeyedMap<Any>) : ApplicationCommandContext","description":"dev.kordex.core.commands.application.slash.SlashCommandContext","location":"kord-extensions/dev.kordex.core.commands.application.slash/-slash-command-context/index.html","searchKeys":["SlashCommandContext","open class SlashCommandContext<C : SlashCommandContext<C, A, M>, A : Arguments, M : ModalForm>(val event: ChatInputCommandInteractionCreateEvent, val command: SlashCommand<C, A, M>, val cache: MutableStringKeyedMap<Any>) : ApplicationCommandContext","dev.kordex.core.commands.application.slash.SlashCommandContext"]},{"name":"open class SlashCommandParser","description":"dev.kordex.core.commands.application.slash.SlashCommandParser","location":"kord-extensions/dev.kordex.core.commands.application.slash/-slash-command-parser/index.html","searchKeys":["SlashCommandParser","open class SlashCommandParser","dev.kordex.core.commands.application.slash.SlashCommandParser"]},{"name":"open class StorageAwareApplicationCommandRegistry(builder: () -> RegistryStorage<Snowflake, ApplicationCommand<*>>) : ApplicationCommandRegistry","description":"dev.kordex.core.commands.application.StorageAwareApplicationCommandRegistry","location":"kord-extensions/dev.kordex.core.commands.application/-storage-aware-application-command-registry/index.html","searchKeys":["StorageAwareApplicationCommandRegistry","open class StorageAwareApplicationCommandRegistry(builder: () -> RegistryStorage<Snowflake, ApplicationCommand<*>>) : ApplicationCommandRegistry","dev.kordex.core.commands.application.StorageAwareApplicationCommandRegistry"]},{"name":"open class StorageUnit<T : Data>(val storageType: StorageType, val namespace: String, val identifier: String, val dataType: KClass<T>) : KordExKoinComponent","description":"dev.kordex.core.storage.StorageUnit","location":"kord-extensions/dev.kordex.core.storage/-storage-unit/index.html","searchKeys":["StorageUnit","open class StorageUnit<T : Data>(val storageType: StorageType, val namespace: String, val identifier: String, val dataType: KClass<T>) : KordExKoinComponent","dev.kordex.core.storage.StorageUnit"]},{"name":"open class Task(var duration: Duration, val callback: suspend () -> Unit, var pollingSeconds: Long = 1, val coroutineScope: CoroutineScope = dev.kordex.core.utils.getKoin().get<Kord>(), val parent: Scheduler? = null, val name: String = \"Unnamed\", val repeat: Boolean = false) : KordExKoinComponent","description":"dev.kordex.core.utils.scheduling.Task","location":"kord-extensions/dev.kordex.core.utils.scheduling/-task/index.html","searchKeys":["Task","open class Task(var duration: Duration, val callback: suspend () -> Unit, var pollingSeconds: Long = 1, val coroutineScope: CoroutineScope = dev.kordex.core.utils.getKoin().get<Kord>(), val parent: Scheduler? = null, val name: String = \"Unnamed\", val repeat: Boolean = false) : KordExKoinComponent","dev.kordex.core.utils.scheduling.Task"]},{"name":"open class TomlDataAdapter : DataAdapter<String> ","description":"dev.kordex.core.storage.toml.TomlDataAdapter","location":"kord-extensions/dev.kordex.core.storage.toml/-toml-data-adapter/index.html","searchKeys":["TomlDataAdapter","open class TomlDataAdapter : DataAdapter<String> ","dev.kordex.core.storage.toml.TomlDataAdapter"]},{"name":"open class UserDelta(val avatar: Optional<Asset?>, val username: Optional<String>, val discriminator: Optional<String>, val flags: Optional<UserFlags?>)","description":"dev.kordex.core.utils.deltas.UserDelta","location":"kord-extensions/dev.kordex.core.utils.deltas/-user-delta/index.html","searchKeys":["UserDelta","open class UserDelta(val avatar: Optional<Asset?>, val username: Optional<String>, val discriminator: Optional<String>, val flags: Optional<UserFlags?>)","dev.kordex.core.utils.deltas.UserDelta"]},{"name":"open fun <R : Any> arg(displayName: Key, description: Key, converter: CoalescingConverter<R>): CoalescingConverter<R>","description":"dev.kordex.core.commands.Arguments.arg","location":"kord-extensions/dev.kordex.core.commands/-arguments/arg.html","searchKeys":["arg","open fun <R : Any> arg(displayName: Key, description: Key, converter: CoalescingConverter<R>): CoalescingConverter<R>","dev.kordex.core.commands.Arguments.arg"]},{"name":"open fun <R : Any> arg(displayName: Key, description: Key, converter: DefaultingCoalescingConverter<R>): DefaultingCoalescingConverter<R>","description":"dev.kordex.core.commands.Arguments.arg","location":"kord-extensions/dev.kordex.core.commands/-arguments/arg.html","searchKeys":["arg","open fun <R : Any> arg(displayName: Key, description: Key, converter: DefaultingCoalescingConverter<R>): DefaultingCoalescingConverter<R>","dev.kordex.core.commands.Arguments.arg"]},{"name":"open fun <R : Any> arg(displayName: Key, description: Key, converter: DefaultingConverter<R>): DefaultingConverter<R>","description":"dev.kordex.core.commands.Arguments.arg","location":"kord-extensions/dev.kordex.core.commands/-arguments/arg.html","searchKeys":["arg","open fun <R : Any> arg(displayName: Key, description: Key, converter: DefaultingConverter<R>): DefaultingConverter<R>","dev.kordex.core.commands.Arguments.arg"]},{"name":"open fun <R : Any> arg(displayName: Key, description: Key, converter: ListConverter<R>): ListConverter<R>","description":"dev.kordex.core.commands.Arguments.arg","location":"kord-extensions/dev.kordex.core.commands/-arguments/arg.html","searchKeys":["arg","open fun <R : Any> arg(displayName: Key, description: Key, converter: ListConverter<R>): ListConverter<R>","dev.kordex.core.commands.Arguments.arg"]},{"name":"open fun <R : Any> arg(displayName: Key, description: Key, converter: OptionalCoalescingConverter<R>): OptionalCoalescingConverter<R>","description":"dev.kordex.core.commands.Arguments.arg","location":"kord-extensions/dev.kordex.core.commands/-arguments/arg.html","searchKeys":["arg","open fun <R : Any> arg(displayName: Key, description: Key, converter: OptionalCoalescingConverter<R>): OptionalCoalescingConverter<R>","dev.kordex.core.commands.Arguments.arg"]},{"name":"open fun <R : Any> arg(displayName: Key, description: Key, converter: OptionalConverter<R>): OptionalConverter<R>","description":"dev.kordex.core.commands.Arguments.arg","location":"kord-extensions/dev.kordex.core.commands/-arguments/arg.html","searchKeys":["arg","open fun <R : Any> arg(displayName: Key, description: Key, converter: OptionalConverter<R>): OptionalConverter<R>","dev.kordex.core.commands.Arguments.arg"]},{"name":"open fun <R : Any> arg(displayName: Key, description: Key, converter: SingleConverter<R>): SingleConverter<R>","description":"dev.kordex.core.commands.Arguments.arg","location":"kord-extensions/dev.kordex.core.commands/-arguments/arg.html","searchKeys":["arg","open fun <R : Any> arg(displayName: Key, description: Key, converter: SingleConverter<R>): SingleConverter<R>","dev.kordex.core.commands.Arguments.arg"]},{"name":"open fun ApplicationCommand<*>.matches(locale: Locale, other: ApplicationCommand): Boolean","description":"dev.kordex.core.commands.application.ApplicationCommandRegistry.matches","location":"kord-extensions/dev.kordex.core.commands.application/-application-command-registry/matches.html","searchKeys":["matches","open fun ApplicationCommand<*>.matches(locale: Locale, other: ApplicationCommand): Boolean","dev.kordex.core.commands.application.ApplicationCommandRegistry.matches"]},{"name":"open fun ApplicationCommandCreateBuilder.registerGuildPermissions(locale: Locale, command: ApplicationCommand<*>)","description":"dev.kordex.core.commands.application.ApplicationCommandRegistry.registerGuildPermissions","location":"kord-extensions/dev.kordex.core.commands.application/-application-command-registry/register-guild-permissions.html","searchKeys":["registerGuildPermissions","open fun ApplicationCommandCreateBuilder.registerGuildPermissions(locale: Locale, command: ApplicationCommand<*>)","dev.kordex.core.commands.application.ApplicationCommandRegistry.registerGuildPermissions"]},{"name":"open fun GlobalApplicationCommandCreateBuilder.registerGlobalPermissions(locale: Locale, command: ApplicationCommand<*>)","description":"dev.kordex.core.commands.application.ApplicationCommandRegistry.registerGlobalPermissions","location":"kord-extensions/dev.kordex.core.commands.application/-application-command-registry/register-global-permissions.html","searchKeys":["registerGlobalPermissions","open fun GlobalApplicationCommandCreateBuilder.registerGlobalPermissions(locale: Locale, command: ApplicationCommand<*>)","dev.kordex.core.commands.application.ApplicationCommandRegistry.registerGlobalPermissions"]},{"name":"open fun GlobalMessageCommandCreateBuilder.register(locale: Locale, command: MessageCommand<*, *>)","description":"dev.kordex.core.commands.application.ApplicationCommandRegistry.register","location":"kord-extensions/dev.kordex.core.commands.application/-application-command-registry/register.html","searchKeys":["register","open fun GlobalMessageCommandCreateBuilder.register(locale: Locale, command: MessageCommand<*, *>)","dev.kordex.core.commands.application.ApplicationCommandRegistry.register"]},{"name":"open fun GlobalUserCommandCreateBuilder.register(locale: Locale, command: UserCommand<*, *>)","description":"dev.kordex.core.commands.application.ApplicationCommandRegistry.register","location":"kord-extensions/dev.kordex.core.commands.application/-application-command-registry/register.html","searchKeys":["register","open fun GlobalUserCommandCreateBuilder.register(locale: Locale, command: UserCommand<*, *>)","dev.kordex.core.commands.application.ApplicationCommandRegistry.register"]},{"name":"open fun MessageCommandCreateBuilder.register(locale: Locale, command: MessageCommand<*, *>)","description":"dev.kordex.core.commands.application.ApplicationCommandRegistry.register","location":"kord-extensions/dev.kordex.core.commands.application/-application-command-registry/register.html","searchKeys":["register","open fun MessageCommandCreateBuilder.register(locale: Locale, command: MessageCommand<*, *>)","dev.kordex.core.commands.application.ApplicationCommandRegistry.register"]},{"name":"open fun String.startsWithSelfMention(): String?","description":"dev.kordex.core.commands.chat.ChatCommandRegistry.startsWithSelfMention","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-command-registry/starts-with-self-mention.html","searchKeys":["startsWithSelfMention","open fun String.startsWithSelfMention(): String?","dev.kordex.core.commands.chat.ChatCommandRegistry.startsWithSelfMention"]},{"name":"open fun UserCommandCreateBuilder.register(locale: Locale, command: UserCommand<*, *>)","description":"dev.kordex.core.commands.application.ApplicationCommandRegistry.register","location":"kord-extensions/dev.kordex.core.commands.application/-application-command-registry/register.html","searchKeys":["register","open fun UserCommandCreateBuilder.register(locale: Locale, command: UserCommand<*, *>)","dev.kordex.core.commands.application.ApplicationCommandRegistry.register"]},{"name":"open fun action(action: suspend ChatCommandContext<out T>.() -> Unit)","description":"dev.kordex.core.commands.chat.ChatCommand.action","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-command/action.html","searchKeys":["action","open fun action(action: suspend ChatCommandContext<out T>.() -> Unit)","dev.kordex.core.commands.chat.ChatCommand.action"]},{"name":"open fun add(builder: () -> Extension)","description":"dev.kordex.core.builders.ExtensionsBuilder.add","location":"kord-extensions/dev.kordex.core.builders/-extensions-builder/add.html","searchKeys":["add","open fun add(builder: () -> Extension)","dev.kordex.core.builders.ExtensionsBuilder.add"]},{"name":"open fun add(command: ChatCommand<out Arguments>)","description":"dev.kordex.core.commands.chat.ChatCommandRegistry.add","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-command-registry/add.html","searchKeys":["add","open fun add(command: ChatCommand<out Arguments>)","dev.kordex.core.commands.chat.ChatCommandRegistry.add"]},{"name":"open fun addPage(group: Key, page: Page)","description":"dev.kordex.core.pagination.pages.Pages.addPage","location":"kord-extensions/dev.kordex.core.pagination.pages/-pages/add-page.html","searchKeys":["addPage","open fun addPage(group: Key, page: Page)","dev.kordex.core.pagination.pages.Pages.addPage"]},{"name":"open fun addPage(page: Page)","description":"dev.kordex.core.pagination.pages.Pages.addPage","location":"kord-extensions/dev.kordex.core.pagination.pages/-pages/add-page.html","searchKeys":["addPage","open fun addPage(page: Page)","dev.kordex.core.pagination.pages.Pages.addPage"]},{"name":"open fun apply(scope: IScope)","description":"dev.kordex.core.sentry.captures.SentryScopeCapture.apply","location":"kord-extensions/dev.kordex.core.sentry.captures/-sentry-scope-capture/apply.html","searchKeys":["apply","open fun apply(scope: IScope)","dev.kordex.core.sentry.captures.SentryScopeCapture.apply"]},{"name":"open fun applyChannelSelectMenu(selectMenu: SelectMenu<*, *>, builder: ActionRowBuilder)","description":"dev.kordex.core.components.menus.channel.ChannelSelectMenu.applyChannelSelectMenu","location":"kord-extensions/dev.kordex.core.components.menus.channel/-channel-select-menu/apply-channel-select-menu.html","searchKeys":["applyChannelSelectMenu","open fun applyChannelSelectMenu(selectMenu: SelectMenu<*, *>, builder: ActionRowBuilder)","dev.kordex.core.components.menus.channel.ChannelSelectMenu.applyChannelSelectMenu"]},{"name":"open fun applyMentionableSelectMenu(selectMenu: SelectMenu<*, *>, builder: ActionRowBuilder)","description":"dev.kordex.core.components.menus.mentionable.MentionableSelectMenu.applyMentionableSelectMenu","location":"kord-extensions/dev.kordex.core.components.menus.mentionable/-mentionable-select-menu/apply-mentionable-select-menu.html","searchKeys":["applyMentionableSelectMenu","open fun applyMentionableSelectMenu(selectMenu: SelectMenu<*, *>, builder: ActionRowBuilder)","dev.kordex.core.components.menus.mentionable.MentionableSelectMenu.applyMentionableSelectMenu"]},{"name":"open fun applyRoleSelectMenu(selectMenu: SelectMenu<*, *>, builder: ActionRowBuilder)","description":"dev.kordex.core.components.menus.role.RoleSelectMenu.applyRoleSelectMenu","location":"kord-extensions/dev.kordex.core.components.menus.role/-role-select-menu/apply-role-select-menu.html","searchKeys":["applyRoleSelectMenu","open fun applyRoleSelectMenu(selectMenu: SelectMenu<*, *>, builder: ActionRowBuilder)","dev.kordex.core.components.menus.role.RoleSelectMenu.applyRoleSelectMenu"]},{"name":"open fun applyStringSelectMenu(selectMenu: SelectMenu<*, *>, builder: ActionRowBuilder)","description":"dev.kordex.core.components.menus.string.StringSelectMenu.applyStringSelectMenu","location":"kord-extensions/dev.kordex.core.components.menus.string/-string-select-menu/apply-string-select-menu.html","searchKeys":["applyStringSelectMenu","open fun applyStringSelectMenu(selectMenu: SelectMenu<*, *>, builder: ActionRowBuilder)","dev.kordex.core.components.menus.string.StringSelectMenu.applyStringSelectMenu"]},{"name":"open fun applyUserSelectMenu(selectMenu: SelectMenu<*, *>, builder: ActionRowBuilder)","description":"dev.kordex.core.components.menus.user.UserSelectMenu.applyUserSelectMenu","location":"kord-extensions/dev.kordex.core.components.menus.user/-user-select-menu/apply-user-select-menu.html","searchKeys":["applyUserSelectMenu","open fun applyUserSelectMenu(selectMenu: SelectMenu<*, *>, builder: ActionRowBuilder)","dev.kordex.core.components.menus.user.UserSelectMenu.applyUserSelectMenu"]},{"name":"open fun autoComplete(body: AutoCompleteCallback)","description":"dev.kordex.core.commands.converters.builders.ConverterBuilder.autoComplete","location":"kord-extensions/dev.kordex.core.commands.converters.builders/-converter-builder/auto-complete.html","searchKeys":["autoComplete","open fun autoComplete(body: AutoCompleteCallback)","dev.kordex.core.commands.converters.builders.ConverterBuilder.autoComplete"]},{"name":"open fun channelType(vararg type: ChannelType)","description":"dev.kordex.core.components.menus.channel.ChannelSelectMenu.channelType","location":"kord-extensions/dev.kordex.core.components.menus.channel/-channel-select-menu/channel-type.html","searchKeys":["channelType","open fun channelType(vararg type: ChannelType)","dev.kordex.core.components.menus.channel.ChannelSelectMenu.channelType"]},{"name":"open fun check(check: ChatCommandCheck)","description":"dev.kordex.core.commands.chat.ChatCommand.check","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-command/check.html","searchKeys":["check","open fun check(check: ChatCommandCheck)","dev.kordex.core.commands.chat.ChatCommand.check"]},{"name":"open fun check(check: CheckWithCache<E>)","description":"dev.kordex.core.commands.application.ApplicationCommand.check","location":"kord-extensions/dev.kordex.core.commands.application/-application-command/check.html","searchKeys":["check","open fun check(check: CheckWithCache<E>)","dev.kordex.core.commands.application.ApplicationCommand.check"]},{"name":"open fun check(check: CheckWithCache<E>)","description":"dev.kordex.core.components.ComponentWithAction.check","location":"kord-extensions/dev.kordex.core.components/-component-with-action/check.html","searchKeys":["check","open fun check(check: CheckWithCache<E>)","dev.kordex.core.components.ComponentWithAction.check"]},{"name":"open fun check(vararg checks: ChatCommandCheck)","description":"dev.kordex.core.commands.chat.ChatCommand.check","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-command/check.html","searchKeys":["check","open fun check(vararg checks: ChatCommandCheck)","dev.kordex.core.commands.chat.ChatCommand.check"]},{"name":"open fun check(vararg checks: CheckWithCache<E>)","description":"dev.kordex.core.commands.application.ApplicationCommand.check","location":"kord-extensions/dev.kordex.core.commands.application/-application-command/check.html","searchKeys":["check","open fun check(vararg checks: CheckWithCache<E>)","dev.kordex.core.commands.application.ApplicationCommand.check"]},{"name":"open fun check(vararg checks: CheckWithCache<E>)","description":"dev.kordex.core.components.ComponentWithAction.check","location":"kord-extensions/dev.kordex.core.components/-component-with-action/check.html","searchKeys":["check","open fun check(vararg checks: CheckWithCache<E>)","dev.kordex.core.components.ComponentWithAction.check"]},{"name":"open fun choice(key: Key, value: T)","description":"dev.kordex.core.commands.converters.builders.ChoiceConverterBuilder.choice","location":"kord-extensions/dev.kordex.core.commands.converters.builders/-choice-converter-builder/choice.html","searchKeys":["choice","open fun choice(key: Key, value: T)","dev.kordex.core.commands.converters.builders.ChoiceConverterBuilder.choice"]},{"name":"open fun choices(all: Map<Key, T>)","description":"dev.kordex.core.commands.converters.builders.ChoiceConverterBuilder.choices","location":"kord-extensions/dev.kordex.core.commands.converters.builders/-choice-converter-builder/choices.html","searchKeys":["choices","open fun choices(all: Map<Key, T>)","dev.kordex.core.commands.converters.builders.ChoiceConverterBuilder.choices"]},{"name":"open fun copy(): StorageUnit<T>","description":"dev.kordex.core.storage.StorageUnit.copy","location":"kord-extensions/dev.kordex.core.storage/-storage-unit/copy.html","searchKeys":["copy","open fun copy(): StorageUnit<T>","dev.kordex.core.storage.StorageUnit.copy"]},{"name":"open fun defaultChannel(channel: ChannelBehavior)","description":"dev.kordex.core.components.menus.channel.ChannelSelectMenu.defaultChannel","location":"kord-extensions/dev.kordex.core.components.menus.channel/-channel-select-menu/default-channel.html","searchKeys":["defaultChannel","open fun defaultChannel(channel: ChannelBehavior)","dev.kordex.core.components.menus.channel.ChannelSelectMenu.defaultChannel"]},{"name":"open fun defaultChannel(id: Snowflake)","description":"dev.kordex.core.components.menus.channel.ChannelSelectMenu.defaultChannel","location":"kord-extensions/dev.kordex.core.components.menus.channel/-channel-select-menu/default-channel.html","searchKeys":["defaultChannel","open fun defaultChannel(id: Snowflake)","dev.kordex.core.components.menus.channel.ChannelSelectMenu.defaultChannel"]},{"name":"open fun defaultRole(id: Snowflake)","description":"dev.kordex.core.components.menus.mentionable.MentionableSelectMenu.defaultRole","location":"kord-extensions/dev.kordex.core.components.menus.mentionable/-mentionable-select-menu/default-role.html","searchKeys":["defaultRole","open fun defaultRole(id: Snowflake)","dev.kordex.core.components.menus.mentionable.MentionableSelectMenu.defaultRole"]},{"name":"open fun defaultRole(id: Snowflake)","description":"dev.kordex.core.components.menus.role.RoleSelectMenu.defaultRole","location":"kord-extensions/dev.kordex.core.components.menus.role/-role-select-menu/default-role.html","searchKeys":["defaultRole","open fun defaultRole(id: Snowflake)","dev.kordex.core.components.menus.role.RoleSelectMenu.defaultRole"]},{"name":"open fun defaultRole(role: RoleBehavior)","description":"dev.kordex.core.components.menus.mentionable.MentionableSelectMenu.defaultRole","location":"kord-extensions/dev.kordex.core.components.menus.mentionable/-mentionable-select-menu/default-role.html","searchKeys":["defaultRole","open fun defaultRole(role: RoleBehavior)","dev.kordex.core.components.menus.mentionable.MentionableSelectMenu.defaultRole"]},{"name":"open fun defaultRole(role: RoleBehavior)","description":"dev.kordex.core.components.menus.role.RoleSelectMenu.defaultRole","location":"kord-extensions/dev.kordex.core.components.menus.role/-role-select-menu/default-role.html","searchKeys":["defaultRole","open fun defaultRole(role: RoleBehavior)","dev.kordex.core.components.menus.role.RoleSelectMenu.defaultRole"]},{"name":"open fun defaultUser(id: Snowflake)","description":"dev.kordex.core.components.menus.mentionable.MentionableSelectMenu.defaultUser","location":"kord-extensions/dev.kordex.core.components.menus.mentionable/-mentionable-select-menu/default-user.html","searchKeys":["defaultUser","open fun defaultUser(id: Snowflake)","dev.kordex.core.components.menus.mentionable.MentionableSelectMenu.defaultUser"]},{"name":"open fun defaultUser(id: Snowflake)","description":"dev.kordex.core.components.menus.user.UserSelectMenu.defaultUser","location":"kord-extensions/dev.kordex.core.components.menus.user/-user-select-menu/default-user.html","searchKeys":["defaultUser","open fun defaultUser(id: Snowflake)","dev.kordex.core.components.menus.user.UserSelectMenu.defaultUser"]},{"name":"open fun defaultUser(user: UserBehavior)","description":"dev.kordex.core.components.menus.mentionable.MentionableSelectMenu.defaultUser","location":"kord-extensions/dev.kordex.core.components.menus.mentionable/-mentionable-select-menu/default-user.html","searchKeys":["defaultUser","open fun defaultUser(user: UserBehavior)","dev.kordex.core.components.menus.mentionable.MentionableSelectMenu.defaultUser"]},{"name":"open fun defaultUser(user: UserBehavior)","description":"dev.kordex.core.components.menus.user.UserSelectMenu.defaultUser","location":"kord-extensions/dev.kordex.core.components.menus.user/-user-select-menu/default-user.html","searchKeys":["defaultUser","open fun defaultUser(user: UserBehavior)","dev.kordex.core.components.menus.user.UserSelectMenu.defaultUser"]},{"name":"open fun disable()","description":"dev.kordex.core.components.buttons.InteractionButtonWithAction.disable","location":"kord-extensions/dev.kordex.core.components.buttons/-interaction-button-with-action/disable.html","searchKeys":["disable","open fun disable()","dev.kordex.core.components.buttons.InteractionButtonWithAction.disable"]},{"name":"open fun disable()","description":"dev.kordex.core.components.menus.SelectMenu.disable","location":"kord-extensions/dev.kordex.core.components.menus/-select-menu/disable.html","searchKeys":["disable","open fun disable()","dev.kordex.core.components.menus.SelectMenu.disable"]},{"name":"open fun enable()","description":"dev.kordex.core.components.buttons.InteractionButtonWithAction.enable","location":"kord-extensions/dev.kordex.core.components.buttons/-interaction-button-with-action/enable.html","searchKeys":["enable","open fun enable()","dev.kordex.core.components.buttons.InteractionButtonWithAction.enable"]},{"name":"open fun enable()","description":"dev.kordex.core.components.menus.SelectMenu.enable","location":"kord-extensions/dev.kordex.core.components.menus/-select-menu/enable.html","searchKeys":["enable","open fun enable()","dev.kordex.core.components.menus.SelectMenu.enable"]},{"name":"open fun extension(builder: ExtensionBuilder)","description":"dev.kordex.core.plugins.KordExPlugin.extension","location":"kord-extensions/dev.kordex.core.plugins/-kord-ex-plugin/extension.html","searchKeys":["extension","open fun extension(builder: ExtensionBuilder)","dev.kordex.core.plugins.KordExPlugin.extension"]},{"name":"open fun findCommand(event: AutoCompleteInteractionCreateEvent): SlashCommand<*, *, *>","description":"dev.kordex.core.commands.application.slash.SlashCommand.findCommand","location":"kord-extensions/dev.kordex.core.commands.application.slash/-slash-command/find-command.html","searchKeys":["findCommand","open fun findCommand(event: AutoCompleteInteractionCreateEvent): SlashCommand<*, *, *>","dev.kordex.core.commands.application.slash.SlashCommand.findCommand"]},{"name":"open fun findCommand(event: ChatInputCommandInteractionCreateEvent): SlashCommand<*, *, *>","description":"dev.kordex.core.commands.application.slash.SlashCommand.findCommand","location":"kord-extensions/dev.kordex.core.commands.application.slash/-slash-command/find-command.html","searchKeys":["findCommand","open fun findCommand(event: ChatInputCommandInteractionCreateEvent): SlashCommand<*, *, *>","dev.kordex.core.commands.application.slash.SlashCommand.findCommand"]},{"name":"open fun findCommand(eventCommand: InteractionCommand): SlashCommand<*, *, *>","description":"dev.kordex.core.commands.application.slash.SlashCommand.findCommand","location":"kord-extensions/dev.kordex.core.commands.application.slash/-slash-command/find-command.html","searchKeys":["findCommand","open fun findCommand(eventCommand: InteractionCommand): SlashCommand<*, *, *>","dev.kordex.core.commands.application.slash.SlashCommand.findCommand"]},{"name":"open fun get(group: Key, page: Int): Page","description":"dev.kordex.core.pagination.pages.Pages.get","location":"kord-extensions/dev.kordex.core.pagination.pages/-pages/get.html","searchKeys":["get","open fun get(group: Key, page: Int): Page","dev.kordex.core.pagination.pages.Pages.get"]},{"name":"open fun get(page: Int): Page","description":"dev.kordex.core.pagination.pages.Pages.get","location":"kord-extensions/dev.kordex.core.pagination.pages/-pages/get.html","searchKeys":["get","open fun get(page: Int): Page","dev.kordex.core.pagination.pages.Pages.get"]},{"name":"open fun getChunk(): List<Page>","description":"dev.kordex.core.pagination.BasePaginator.getChunk","location":"kord-extensions/dev.kordex.core.pagination/-base-paginator/get-chunk.html","searchKeys":["getChunk","open fun getChunk(): List<Page>","dev.kordex.core.pagination.BasePaginator.getChunk"]},{"name":"open fun getTranslatedAliases(locale: Locale): Set<String>","description":"dev.kordex.core.commands.chat.ChatCommand.getTranslatedAliases","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-command/get-translated-aliases.html","searchKeys":["getTranslatedAliases","open fun getTranslatedAliases(locale: Locale): Set<String>","dev.kordex.core.commands.chat.ChatCommand.getTranslatedAliases"]},{"name":"open fun getTranslatedName(locale: Locale): String","description":"dev.kordex.core.commands.chat.ChatCommand.getTranslatedName","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-command/get-translated-name.html","searchKeys":["getTranslatedName","open fun getTranslatedName(locale: Locale): String","dev.kordex.core.commands.chat.ChatCommand.getTranslatedName"]},{"name":"open fun guild(guild: Snowflake?)","description":"dev.kordex.core.commands.application.ApplicationCommand.guild","location":"kord-extensions/dev.kordex.core.commands.application/-application-command/guild.html","searchKeys":["guild","open fun guild(guild: Snowflake?)","dev.kordex.core.commands.application.ApplicationCommand.guild"]},{"name":"open fun mutate(body: Mutator<T>)","description":"dev.kordex.core.commands.converters.builders.ConverterBuilder.mutate","location":"kord-extensions/dev.kordex.core.commands.converters.builders/-converter-builder/mutate.html","searchKeys":["mutate","open fun mutate(body: Mutator<T>)","dev.kordex.core.commands.converters.builders.ConverterBuilder.mutate"]},{"name":"open fun onTimeout(body: suspend () -> Unit): BasePaginator","description":"dev.kordex.core.pagination.BasePaginator.onTimeout","location":"kord-extensions/dev.kordex.core.pagination/-base-paginator/on-timeout.html","searchKeys":["onTimeout","open fun onTimeout(body: suspend () -> Unit): BasePaginator","dev.kordex.core.pagination.BasePaginator.onTimeout"]},{"name":"open fun onTimeout(callback: suspend ComponentContainer.() -> Unit)","description":"dev.kordex.core.components.ComponentContainer.onTimeout","location":"kord-extensions/dev.kordex.core.components/-component-container/on-timeout.html","searchKeys":["onTimeout","open fun onTimeout(callback: suspend ComponentContainer.() -> Unit)","dev.kordex.core.components.ComponentContainer.onTimeout"]},{"name":"open fun remove(command: ChatCommand<out Arguments>): Boolean","description":"dev.kordex.core.commands.chat.ChatCommandRegistry.remove","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-command-registry/remove.html","searchKeys":["remove","open fun remove(command: ChatCommand<out Arguments>): Boolean","dev.kordex.core.commands.chat.ChatCommandRegistry.remove"]},{"name":"open fun removeEventHandler(handler: EventHandler<out Event>): Boolean","description":"dev.kordex.core.ExtensibleBot.removeEventHandler","location":"kord-extensions/dev.kordex.core/-extensible-bot/remove-event-handler.html","searchKeys":["removeEventHandler","open fun removeEventHandler(handler: EventHandler<out Event>): Boolean","dev.kordex.core.ExtensibleBot.removeEventHandler"]},{"name":"open fun settings(body: SettingsCallback)","description":"dev.kordex.core.plugins.KordExPlugin.settings","location":"kord-extensions/dev.kordex.core.plugins/-kord-ex-plugin/settings.html","searchKeys":["settings","open fun settings(body: SettingsCallback)","dev.kordex.core.plugins.KordExPlugin.settings"]},{"name":"open fun signature(builder: () -> Arguments, locale: Locale): String","description":"dev.kordex.core.commands.chat.ChatCommandParser.signature","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-command-parser/signature.html","searchKeys":["signature","open fun signature(builder: () -> Arguments, locale: Locale): String","dev.kordex.core.commands.chat.ChatCommandParser.signature"]},{"name":"open fun startAsync(): Job","description":"dev.kordex.core.ExtensibleBot.startAsync","location":"kord-extensions/dev.kordex.core/-extensible-bot/start-async.html","searchKeys":["startAsync","open fun startAsync(): Job","dev.kordex.core.ExtensibleBot.startAsync"]},{"name":"open fun toDefaulting(defaultValue: T, outputError: Boolean = false, signatureType: Key? = null, showTypeInSignature: Boolean? = null, errorType: Key? = null, nestedValidator: Validator<T> = null): DefaultingCoalescingConverter<T>","description":"dev.kordex.core.commands.converters.CoalescingConverter.toDefaulting","location":"kord-extensions/dev.kordex.core.commands.converters/-coalescing-converter/to-defaulting.html","searchKeys":["toDefaulting","open fun toDefaulting(defaultValue: T, outputError: Boolean = false, signatureType: Key? = null, showTypeInSignature: Boolean? = null, errorType: Key? = null, nestedValidator: Validator<T> = null): DefaultingCoalescingConverter<T>","dev.kordex.core.commands.converters.CoalescingConverter.toDefaulting"]},{"name":"open fun toDefaulting(defaultValue: T, outputError: Boolean = false, signatureType: Key? = null, showTypeInSignature: Boolean? = null, errorType: Key? = null, nestedValidator: Validator<T> = null): DefaultingConverter<T>","description":"dev.kordex.core.commands.converters.SingleConverter.toDefaulting","location":"kord-extensions/dev.kordex.core.commands.converters/-single-converter/to-defaulting.html","searchKeys":["toDefaulting","open fun toDefaulting(defaultValue: T, outputError: Boolean = false, signatureType: Key? = null, showTypeInSignature: Boolean? = null, errorType: Key? = null, nestedValidator: Validator<T> = null): DefaultingConverter<T>","dev.kordex.core.commands.converters.SingleConverter.toDefaulting"]},{"name":"open fun toList(required: Boolean = true, signatureType: Key? = null, showTypeInSignature: Boolean? = null, errorType: Key? = null, nestedValidator: Validator<List<T>> = null): ListConverter<T>","description":"dev.kordex.core.commands.converters.SingleConverter.toList","location":"kord-extensions/dev.kordex.core.commands.converters/-single-converter/to-list.html","searchKeys":["toList","open fun toList(required: Boolean = true, signatureType: Key? = null, showTypeInSignature: Boolean? = null, errorType: Key? = null, nestedValidator: Validator<List<T>> = null): ListConverter<T>","dev.kordex.core.commands.converters.SingleConverter.toList"]},{"name":"open fun toOptional(signatureType: Key? = null, showTypeInSignature: Boolean? = null, errorType: Key? = null, outputError: Boolean = false, nestedValidator: Validator<T?> = null): OptionalCoalescingConverter<T>","description":"dev.kordex.core.commands.converters.CoalescingConverter.toOptional","location":"kord-extensions/dev.kordex.core.commands.converters/-coalescing-converter/to-optional.html","searchKeys":["toOptional","open fun toOptional(signatureType: Key? = null, showTypeInSignature: Boolean? = null, errorType: Key? = null, outputError: Boolean = false, nestedValidator: Validator<T?> = null): OptionalCoalescingConverter<T>","dev.kordex.core.commands.converters.CoalescingConverter.toOptional"]},{"name":"open fun toOptional(signatureType: Key? = null, showTypeInSignature: Boolean? = null, errorType: Key? = null, outputError: Boolean = false, nestedValidator: Validator<T?> = null): OptionalConverter<T>","description":"dev.kordex.core.commands.converters.SingleConverter.toOptional","location":"kord-extensions/dev.kordex.core.commands.converters/-single-converter/to-optional.html","searchKeys":["toOptional","open fun toOptional(signatureType: Key? = null, showTypeInSignature: Boolean? = null, errorType: Key? = null, outputError: Boolean = false, nestedValidator: Validator<T?> = null): OptionalConverter<T>","dev.kordex.core.commands.converters.SingleConverter.toOptional"]},{"name":"open fun unlock()","description":"dev.kordex.core.types.Lockable.unlock","location":"kord-extensions/dev.kordex.core.types/-lockable/unlock.html","searchKeys":["unlock","open fun unlock()","dev.kordex.core.types.Lockable.unlock"]},{"name":"open fun validate()","description":"dev.kordex.core.commands.Command.validate","location":"kord-extensions/dev.kordex.core.commands/-command/validate.html","searchKeys":["validate","open fun validate()","dev.kordex.core.commands.Command.validate"]},{"name":"open fun validate()","description":"dev.kordex.core.pagination.pages.Pages.validate","location":"kord-extensions/dev.kordex.core.pagination.pages/-pages/validate.html","searchKeys":["validate","open fun validate()","dev.kordex.core.pagination.pages.Pages.validate"]},{"name":"open fun validate(body: Validator<T>)","description":"dev.kordex.core.commands.converters.builders.ConverterBuilder.validate","location":"kord-extensions/dev.kordex.core.commands.converters.builders/-converter-builder/validate.html","searchKeys":["validate","open fun validate(body: Validator<T>)","dev.kordex.core.commands.converters.builders.ConverterBuilder.validate"]},{"name":"open fun validate(locale: Locale)","description":"dev.kordex.core.commands.Arguments.validate","location":"kord-extensions/dev.kordex.core.commands/-arguments/validate.html","searchKeys":["validate","open fun validate(locale: Locale)","dev.kordex.core.commands.Arguments.validate"]},{"name":"open fun validateArgument()","description":"dev.kordex.core.commands.converters.builders.ConverterBuilder.validateArgument","location":"kord-extensions/dev.kordex.core.commands.converters.builders/-converter-builder/validate-argument.html","searchKeys":["validateArgument","open fun validateArgument()","dev.kordex.core.commands.converters.builders.ConverterBuilder.validateArgument"]},{"name":"open fun validateOptions()","description":"dev.kordex.core.components.menus.string.StringSelectMenu.validateOptions","location":"kord-extensions/dev.kordex.core.components.menus.string/-string-select-menu/validate-options.html","searchKeys":["validateOptions","open fun validateOptions()","dev.kordex.core.components.menus.string.StringSelectMenu.validateOptions"]},{"name":"open lateinit override var name: Key","description":"dev.kordex.core.commands.chat.ChatGroupCommand.name","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-group-command/name.html","searchKeys":["name","open lateinit override var name: Key","dev.kordex.core.commands.chat.ChatGroupCommand.name"]},{"name":"open lateinit override var parsed: T","description":"dev.kordex.core.commands.converters.CoalescingConverter.parsed","location":"kord-extensions/dev.kordex.core.commands.converters/-coalescing-converter/parsed.html","searchKeys":["parsed","open lateinit override var parsed: T","dev.kordex.core.commands.converters.CoalescingConverter.parsed"]},{"name":"open lateinit override var parsed: T","description":"dev.kordex.core.commands.converters.SingleConverter.parsed","location":"kord-extensions/dev.kordex.core.commands.converters/-single-converter/parsed.html","searchKeys":["parsed","open lateinit override var parsed: T","dev.kordex.core.commands.converters.SingleConverter.parsed"]},{"name":"open lateinit var argumentObj: Argument<*>","description":"dev.kordex.core.commands.converters.Converter.argumentObj","location":"kord-extensions/dev.kordex.core.commands.converters/-converter/argument-obj.html","searchKeys":["argumentObj","open lateinit var argumentObj: Argument<*>","dev.kordex.core.commands.converters.Converter.argumentObj"]},{"name":"open lateinit var arguments: A","description":"dev.kordex.core.commands.application.slash.SlashCommandContext.arguments","location":"kord-extensions/dev.kordex.core.commands.application.slash/-slash-command-context/arguments.html","searchKeys":["arguments","open lateinit var arguments: A","dev.kordex.core.commands.application.slash.SlashCommandContext.arguments"]},{"name":"open lateinit var arguments: T","description":"dev.kordex.core.commands.chat.ChatCommandContext.arguments","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-command-context/arguments.html","searchKeys":["arguments","open lateinit var arguments: T","dev.kordex.core.commands.chat.ChatCommandContext.arguments"]},{"name":"open lateinit var builder: CoalescingConverterBuilder<T>","description":"dev.kordex.core.commands.converters.CoalescingConverter.builder","location":"kord-extensions/dev.kordex.core.commands.converters/-coalescing-converter/builder.html","searchKeys":["builder","open lateinit var builder: CoalescingConverterBuilder<T>","dev.kordex.core.commands.converters.CoalescingConverter.builder"]},{"name":"open lateinit var builder: ConverterBuilder<T>","description":"dev.kordex.core.commands.converters.SingleConverter.builder","location":"kord-extensions/dev.kordex.core.commands.converters/-single-converter/builder.html","searchKeys":["builder","open lateinit var builder: ConverterBuilder<T>","dev.kordex.core.commands.converters.SingleConverter.builder"]},{"name":"open lateinit var builder: DefaultingCoalescingConverterBuilder<T>","description":"dev.kordex.core.commands.converters.DefaultingCoalescingConverter.builder","location":"kord-extensions/dev.kordex.core.commands.converters/-defaulting-coalescing-converter/builder.html","searchKeys":["builder","open lateinit var builder: DefaultingCoalescingConverterBuilder<T>","dev.kordex.core.commands.converters.DefaultingCoalescingConverter.builder"]},{"name":"open lateinit var builder: DefaultingConverterBuilder<T>","description":"dev.kordex.core.commands.converters.DefaultingConverter.builder","location":"kord-extensions/dev.kordex.core.commands.converters/-defaulting-converter/builder.html","searchKeys":["builder","open lateinit var builder: DefaultingConverterBuilder<T>","dev.kordex.core.commands.converters.DefaultingConverter.builder"]},{"name":"open lateinit var builder: ListConverterBuilder<T>","description":"dev.kordex.core.commands.converters.ListConverter.builder","location":"kord-extensions/dev.kordex.core.commands.converters/-list-converter/builder.html","searchKeys":["builder","open lateinit var builder: ListConverterBuilder<T>","dev.kordex.core.commands.converters.ListConverter.builder"]},{"name":"open lateinit var builder: OptionalCoalescingConverterBuilder<T>","description":"dev.kordex.core.commands.converters.OptionalCoalescingConverter.builder","location":"kord-extensions/dev.kordex.core.commands.converters/-optional-coalescing-converter/builder.html","searchKeys":["builder","open lateinit var builder: OptionalCoalescingConverterBuilder<T>","dev.kordex.core.commands.converters.OptionalCoalescingConverter.builder"]},{"name":"open lateinit var builder: OptionalConverterBuilder<T>","description":"dev.kordex.core.commands.converters.OptionalConverter.builder","location":"kord-extensions/dev.kordex.core.commands.converters/-optional-converter/builder.html","searchKeys":["builder","open lateinit var builder: OptionalConverterBuilder<T>","dev.kordex.core.commands.converters.OptionalConverter.builder"]},{"name":"open lateinit var channel: MessageChannelBehavior","description":"dev.kordex.core.commands.application.ApplicationCommandContext.channel","location":"kord-extensions/dev.kordex.core.commands.application/-application-command-context/channel.html","searchKeys":["channel","open lateinit var channel: MessageChannelBehavior","dev.kordex.core.commands.application.ApplicationCommandContext.channel"]},{"name":"open lateinit var channel: MessageChannelBehavior","description":"dev.kordex.core.commands.chat.ChatCommandContext.channel","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-command-context/channel.html","searchKeys":["channel","open lateinit var channel: MessageChannelBehavior","dev.kordex.core.commands.chat.ChatCommandContext.channel"]},{"name":"open lateinit var channel: MessageChannelBehavior","description":"dev.kordex.core.components.ComponentContext.channel","location":"kord-extensions/dev.kordex.core.components/-component-context/channel.html","searchKeys":["channel","open lateinit var channel: MessageChannelBehavior","dev.kordex.core.components.ComponentContext.channel"]},{"name":"open lateinit var defaultValue: T","description":"dev.kordex.core.commands.converters.builders.DefaultingCoalescingConverterBuilder.defaultValue","location":"kord-extensions/dev.kordex.core.commands.converters.builders/-defaulting-coalescing-converter-builder/default-value.html","searchKeys":["defaultValue","open lateinit var defaultValue: T","dev.kordex.core.commands.converters.builders.DefaultingCoalescingConverterBuilder.defaultValue"]},{"name":"open lateinit var defaultValue: T","description":"dev.kordex.core.commands.converters.builders.DefaultingConverterBuilder.defaultValue","location":"kord-extensions/dev.kordex.core.commands.converters.builders/-defaulting-converter-builder/default-value.html","searchKeys":["defaultValue","open lateinit var defaultValue: T","dev.kordex.core.commands.converters.builders.DefaultingConverterBuilder.defaultValue"]},{"name":"open lateinit var description: Key","description":"dev.kordex.core.commands.application.slash.SlashCommand.description","location":"kord-extensions/dev.kordex.core.commands.application.slash/-slash-command/description.html","searchKeys":["description","open lateinit var description: Key","dev.kordex.core.commands.application.slash.SlashCommand.description"]},{"name":"open lateinit var description: Key","description":"dev.kordex.core.commands.converters.builders.ConverterBuilder.description","location":"kord-extensions/dev.kordex.core.commands.converters.builders/-converter-builder/description.html","searchKeys":["description","open lateinit var description: Key","dev.kordex.core.commands.converters.builders.ConverterBuilder.description"]},{"name":"open lateinit var message: Message","description":"dev.kordex.core.commands.chat.ChatCommandContext.message","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-command-context/message.html","searchKeys":["message","open lateinit var message: Message","dev.kordex.core.commands.chat.ChatCommandContext.message"]},{"name":"open lateinit var message: Message","description":"dev.kordex.core.components.ComponentContext.message","location":"kord-extensions/dev.kordex.core.components/-component-context/message.html","searchKeys":["message","open lateinit var message: Message","dev.kordex.core.components.ComponentContext.message"]},{"name":"open lateinit var name: Key","description":"dev.kordex.core.commands.Command.name","location":"kord-extensions/dev.kordex.core.commands/-command/name.html","searchKeys":["name","open lateinit var name: Key","dev.kordex.core.commands.Command.name"]},{"name":"open lateinit var name: Key","description":"dev.kordex.core.commands.converters.builders.ConverterBuilder.name","location":"kord-extensions/dev.kordex.core.commands.converters.builders/-converter-builder/name.html","searchKeys":["name","open lateinit var name: Key","dev.kordex.core.commands.converters.builders.ConverterBuilder.name"]},{"name":"open lateinit var url: String","description":"dev.kordex.core.components.buttons.LinkInteractionButton.url","location":"kord-extensions/dev.kordex.core.components.buttons/-link-interaction-button/url.html","searchKeys":["url","open lateinit var url: String","dev.kordex.core.components.buttons.LinkInteractionButton.url"]},{"name":"open lateinit var user: UserBehavior","description":"dev.kordex.core.commands.application.ApplicationCommandContext.user","location":"kord-extensions/dev.kordex.core.commands.application/-application-command-context/user.html","searchKeys":["user","open lateinit var user: UserBehavior","dev.kordex.core.commands.application.ApplicationCommandContext.user"]},{"name":"open lateinit var user: UserBehavior","description":"dev.kordex.core.components.ComponentContext.user","location":"kord-extensions/dev.kordex.core.components/-component-context/user.html","searchKeys":["user","open lateinit var user: UserBehavior","dev.kordex.core.components.ComponentContext.user"]},{"name":"open operator override fun contains(element: E): Boolean","description":"dev.kordex.core.utils.collections.FixedLengthQueue.contains","location":"kord-extensions/dev.kordex.core.utils.collections/-fixed-length-queue/contains.html","searchKeys":["contains","open operator override fun contains(element: E): Boolean","dev.kordex.core.utils.collections.FixedLengthQueue.contains"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"dev.kordex.core.storage.StorageUnit.equals","location":"kord-extensions/dev.kordex.core.storage/-storage-unit/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","dev.kordex.core.storage.StorageUnit.equals"]},{"name":"open operator override fun iterator(): MutableIterator<E>","description":"dev.kordex.core.utils.collections.FixedLengthQueue.iterator","location":"kord-extensions/dev.kordex.core.utils.collections/-fixed-length-queue/iterator.html","searchKeys":["iterator","open operator override fun iterator(): MutableIterator<E>","dev.kordex.core.utils.collections.FixedLengthQueue.iterator"]},{"name":"open override fun add(element: E): Boolean","description":"dev.kordex.core.utils.collections.FixedLengthQueue.add","location":"kord-extensions/dev.kordex.core.utils.collections/-fixed-length-queue/add.html","searchKeys":["add","open override fun add(element: E): Boolean","dev.kordex.core.utils.collections.FixedLengthQueue.add"]},{"name":"open override fun addAll(elements: Collection<E>): Boolean","description":"dev.kordex.core.utils.collections.FixedLengthQueue.addAll","location":"kord-extensions/dev.kordex.core.utils.collections/-fixed-length-queue/add-all.html","searchKeys":["addAll","open override fun addAll(elements: Collection<E>): Boolean","dev.kordex.core.utils.collections.FixedLengthQueue.addAll"]},{"name":"open override fun apply(builder: ActionRowBuilder)","description":"dev.kordex.core.components.buttons.DisabledInteractionButton.apply","location":"kord-extensions/dev.kordex.core.components.buttons/-disabled-interaction-button/apply.html","searchKeys":["apply","open override fun apply(builder: ActionRowBuilder)","dev.kordex.core.components.buttons.DisabledInteractionButton.apply"]},{"name":"open override fun apply(builder: ActionRowBuilder)","description":"dev.kordex.core.components.buttons.EphemeralInteractionButton.apply","location":"kord-extensions/dev.kordex.core.components.buttons/-ephemeral-interaction-button/apply.html","searchKeys":["apply","open override fun apply(builder: ActionRowBuilder)","dev.kordex.core.components.buttons.EphemeralInteractionButton.apply"]},{"name":"open override fun apply(builder: ActionRowBuilder)","description":"dev.kordex.core.components.buttons.LinkInteractionButton.apply","location":"kord-extensions/dev.kordex.core.components.buttons/-link-interaction-button/apply.html","searchKeys":["apply","open override fun apply(builder: ActionRowBuilder)","dev.kordex.core.components.buttons.LinkInteractionButton.apply"]},{"name":"open override fun apply(builder: ActionRowBuilder)","description":"dev.kordex.core.components.buttons.PublicInteractionButton.apply","location":"kord-extensions/dev.kordex.core.components.buttons/-public-interaction-button/apply.html","searchKeys":["apply","open override fun apply(builder: ActionRowBuilder)","dev.kordex.core.components.buttons.PublicInteractionButton.apply"]},{"name":"open override fun apply(builder: ActionRowBuilder)","description":"dev.kordex.core.components.menus.channel.EphemeralChannelSelectMenu.apply","location":"kord-extensions/dev.kordex.core.components.menus.channel/-ephemeral-channel-select-menu/apply.html","searchKeys":["apply","open override fun apply(builder: ActionRowBuilder)","dev.kordex.core.components.menus.channel.EphemeralChannelSelectMenu.apply"]},{"name":"open override fun apply(builder: ActionRowBuilder)","description":"dev.kordex.core.components.menus.channel.PublicChannelSelectMenu.apply","location":"kord-extensions/dev.kordex.core.components.menus.channel/-public-channel-select-menu/apply.html","searchKeys":["apply","open override fun apply(builder: ActionRowBuilder)","dev.kordex.core.components.menus.channel.PublicChannelSelectMenu.apply"]},{"name":"open override fun apply(builder: ActionRowBuilder)","description":"dev.kordex.core.components.menus.mentionable.EphemeralMentionableSelectMenu.apply","location":"kord-extensions/dev.kordex.core.components.menus.mentionable/-ephemeral-mentionable-select-menu/apply.html","searchKeys":["apply","open override fun apply(builder: ActionRowBuilder)","dev.kordex.core.components.menus.mentionable.EphemeralMentionableSelectMenu.apply"]},{"name":"open override fun apply(builder: ActionRowBuilder)","description":"dev.kordex.core.components.menus.mentionable.PublicMentionableSelectMenu.apply","location":"kord-extensions/dev.kordex.core.components.menus.mentionable/-public-mentionable-select-menu/apply.html","searchKeys":["apply","open override fun apply(builder: ActionRowBuilder)","dev.kordex.core.components.menus.mentionable.PublicMentionableSelectMenu.apply"]},{"name":"open override fun apply(builder: ActionRowBuilder)","description":"dev.kordex.core.components.menus.role.EphemeralRoleSelectMenu.apply","location":"kord-extensions/dev.kordex.core.components.menus.role/-ephemeral-role-select-menu/apply.html","searchKeys":["apply","open override fun apply(builder: ActionRowBuilder)","dev.kordex.core.components.menus.role.EphemeralRoleSelectMenu.apply"]},{"name":"open override fun apply(builder: ActionRowBuilder)","description":"dev.kordex.core.components.menus.role.PublicRoleSelectMenu.apply","location":"kord-extensions/dev.kordex.core.components.menus.role/-public-role-select-menu/apply.html","searchKeys":["apply","open override fun apply(builder: ActionRowBuilder)","dev.kordex.core.components.menus.role.PublicRoleSelectMenu.apply"]},{"name":"open override fun apply(builder: ActionRowBuilder)","description":"dev.kordex.core.components.menus.string.EphemeralStringSelectMenu.apply","location":"kord-extensions/dev.kordex.core.components.menus.string/-ephemeral-string-select-menu/apply.html","searchKeys":["apply","open override fun apply(builder: ActionRowBuilder)","dev.kordex.core.components.menus.string.EphemeralStringSelectMenu.apply"]},{"name":"open override fun apply(builder: ActionRowBuilder)","description":"dev.kordex.core.components.menus.string.PublicStringSelectMenu.apply","location":"kord-extensions/dev.kordex.core.components.menus.string/-public-string-select-menu/apply.html","searchKeys":["apply","open override fun apply(builder: ActionRowBuilder)","dev.kordex.core.components.menus.string.PublicStringSelectMenu.apply"]},{"name":"open override fun apply(builder: ActionRowBuilder)","description":"dev.kordex.core.components.menus.user.EphemeralUserSelectMenu.apply","location":"kord-extensions/dev.kordex.core.components.menus.user/-ephemeral-user-select-menu/apply.html","searchKeys":["apply","open override fun apply(builder: ActionRowBuilder)","dev.kordex.core.components.menus.user.EphemeralUserSelectMenu.apply"]},{"name":"open override fun apply(builder: ActionRowBuilder)","description":"dev.kordex.core.components.menus.user.PublicUserSelectMenu.apply","location":"kord-extensions/dev.kordex.core.components.menus.user/-public-user-select-menu/apply.html","searchKeys":["apply","open override fun apply(builder: ActionRowBuilder)","dev.kordex.core.components.menus.user.PublicUserSelectMenu.apply"]},{"name":"open override fun clear()","description":"dev.kordex.core.utils.collections.FixedLengthQueue.clear","location":"kord-extensions/dev.kordex.core.utils.collections/-fixed-length-queue/clear.html","searchKeys":["clear","open override fun clear()","dev.kordex.core.utils.collections.FixedLengthQueue.clear"]},{"name":"open override fun constructUniqueIdentifier(data: T): String","description":"dev.kordex.core.registry.AbstractDeconstructingApplicationCommandRegistryStorage.constructUniqueIdentifier","location":"kord-extensions/dev.kordex.core.registry/-abstract-deconstructing-application-command-registry-storage/construct-unique-identifier.html","searchKeys":["constructUniqueIdentifier","open override fun constructUniqueIdentifier(data: T): String","dev.kordex.core.registry.AbstractDeconstructingApplicationCommandRegistryStorage.constructUniqueIdentifier"]},{"name":"open override fun constructUniqueIdentifier(data: T): String","description":"dev.kordex.core.registry.DefaultLocalRegistryStorage.constructUniqueIdentifier","location":"kord-extensions/dev.kordex.core.registry/-default-local-registry-storage/construct-unique-identifier.html","searchKeys":["constructUniqueIdentifier","open override fun constructUniqueIdentifier(data: T): String","dev.kordex.core.registry.DefaultLocalRegistryStorage.constructUniqueIdentifier"]},{"name":"open override fun containsAll(elements: Collection<E>): Boolean","description":"dev.kordex.core.utils.collections.FixedLengthQueue.containsAll","location":"kord-extensions/dev.kordex.core.utils.collections/-fixed-length-queue/contains-all.html","searchKeys":["containsAll","open override fun containsAll(elements: Collection<E>): Boolean","dev.kordex.core.utils.collections.FixedLengthQueue.containsAll"]},{"name":"open override fun createContext(event: SelectMenuInteractionCreateEvent, interactionResponse: EphemeralMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>): EphemeralChannelSelectMenuContext<M>","description":"dev.kordex.core.components.menus.channel.EphemeralChannelSelectMenu.createContext","location":"kord-extensions/dev.kordex.core.components.menus.channel/-ephemeral-channel-select-menu/create-context.html","searchKeys":["createContext","open override fun createContext(event: SelectMenuInteractionCreateEvent, interactionResponse: EphemeralMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>): EphemeralChannelSelectMenuContext<M>","dev.kordex.core.components.menus.channel.EphemeralChannelSelectMenu.createContext"]},{"name":"open override fun createContext(event: SelectMenuInteractionCreateEvent, interactionResponse: EphemeralMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>): EphemeralMentionableSelectMenuContext<M>","description":"dev.kordex.core.components.menus.mentionable.EphemeralMentionableSelectMenu.createContext","location":"kord-extensions/dev.kordex.core.components.menus.mentionable/-ephemeral-mentionable-select-menu/create-context.html","searchKeys":["createContext","open override fun createContext(event: SelectMenuInteractionCreateEvent, interactionResponse: EphemeralMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>): EphemeralMentionableSelectMenuContext<M>","dev.kordex.core.components.menus.mentionable.EphemeralMentionableSelectMenu.createContext"]},{"name":"open override fun createContext(event: SelectMenuInteractionCreateEvent, interactionResponse: EphemeralMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>): EphemeralRoleSelectMenuContext<M>","description":"dev.kordex.core.components.menus.role.EphemeralRoleSelectMenu.createContext","location":"kord-extensions/dev.kordex.core.components.menus.role/-ephemeral-role-select-menu/create-context.html","searchKeys":["createContext","open override fun createContext(event: SelectMenuInteractionCreateEvent, interactionResponse: EphemeralMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>): EphemeralRoleSelectMenuContext<M>","dev.kordex.core.components.menus.role.EphemeralRoleSelectMenu.createContext"]},{"name":"open override fun createContext(event: SelectMenuInteractionCreateEvent, interactionResponse: EphemeralMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>): EphemeralStringSelectMenuContext<M>","description":"dev.kordex.core.components.menus.string.EphemeralStringSelectMenu.createContext","location":"kord-extensions/dev.kordex.core.components.menus.string/-ephemeral-string-select-menu/create-context.html","searchKeys":["createContext","open override fun createContext(event: SelectMenuInteractionCreateEvent, interactionResponse: EphemeralMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>): EphemeralStringSelectMenuContext<M>","dev.kordex.core.components.menus.string.EphemeralStringSelectMenu.createContext"]},{"name":"open override fun createContext(event: SelectMenuInteractionCreateEvent, interactionResponse: EphemeralMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>): EphemeralUserSelectMenuContext<M>","description":"dev.kordex.core.components.menus.user.EphemeralUserSelectMenu.createContext","location":"kord-extensions/dev.kordex.core.components.menus.user/-ephemeral-user-select-menu/create-context.html","searchKeys":["createContext","open override fun createContext(event: SelectMenuInteractionCreateEvent, interactionResponse: EphemeralMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>): EphemeralUserSelectMenuContext<M>","dev.kordex.core.components.menus.user.EphemeralUserSelectMenu.createContext"]},{"name":"open override fun createContext(event: SelectMenuInteractionCreateEvent, interactionResponse: PublicMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>): PublicChannelSelectMenuContext<M>","description":"dev.kordex.core.components.menus.channel.PublicChannelSelectMenu.createContext","location":"kord-extensions/dev.kordex.core.components.menus.channel/-public-channel-select-menu/create-context.html","searchKeys":["createContext","open override fun createContext(event: SelectMenuInteractionCreateEvent, interactionResponse: PublicMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>): PublicChannelSelectMenuContext<M>","dev.kordex.core.components.menus.channel.PublicChannelSelectMenu.createContext"]},{"name":"open override fun createContext(event: SelectMenuInteractionCreateEvent, interactionResponse: PublicMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>): PublicMentionableSelectMenuContext<M>","description":"dev.kordex.core.components.menus.mentionable.PublicMentionableSelectMenu.createContext","location":"kord-extensions/dev.kordex.core.components.menus.mentionable/-public-mentionable-select-menu/create-context.html","searchKeys":["createContext","open override fun createContext(event: SelectMenuInteractionCreateEvent, interactionResponse: PublicMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>): PublicMentionableSelectMenuContext<M>","dev.kordex.core.components.menus.mentionable.PublicMentionableSelectMenu.createContext"]},{"name":"open override fun createContext(event: SelectMenuInteractionCreateEvent, interactionResponse: PublicMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>): PublicRoleSelectMenuContext<M>","description":"dev.kordex.core.components.menus.role.PublicRoleSelectMenu.createContext","location":"kord-extensions/dev.kordex.core.components.menus.role/-public-role-select-menu/create-context.html","searchKeys":["createContext","open override fun createContext(event: SelectMenuInteractionCreateEvent, interactionResponse: PublicMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>): PublicRoleSelectMenuContext<M>","dev.kordex.core.components.menus.role.PublicRoleSelectMenu.createContext"]},{"name":"open override fun createContext(event: SelectMenuInteractionCreateEvent, interactionResponse: PublicMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>): PublicStringSelectMenuContext<M>","description":"dev.kordex.core.components.menus.string.PublicStringSelectMenu.createContext","location":"kord-extensions/dev.kordex.core.components.menus.string/-public-string-select-menu/create-context.html","searchKeys":["createContext","open override fun createContext(event: SelectMenuInteractionCreateEvent, interactionResponse: PublicMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>): PublicStringSelectMenuContext<M>","dev.kordex.core.components.menus.string.PublicStringSelectMenu.createContext"]},{"name":"open override fun createContext(event: SelectMenuInteractionCreateEvent, interactionResponse: PublicMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>): PublicUserSelectMenuContext<M>","description":"dev.kordex.core.components.menus.user.PublicUserSelectMenu.createContext","location":"kord-extensions/dev.kordex.core.components.menus.user/-public-user-select-menu/create-context.html","searchKeys":["createContext","open override fun createContext(event: SelectMenuInteractionCreateEvent, interactionResponse: PublicMessageInteractionResponseBehavior, cache: MutableStringKeyedMap<Any>): PublicUserSelectMenuContext<M>","dev.kordex.core.components.menus.user.PublicUserSelectMenu.createContext"]},{"name":"open override fun delete()","description":"dev.kordex.core.plugins.KordExPlugin.delete","location":"kord-extensions/dev.kordex.core.plugins/-kord-ex-plugin/delete.html","searchKeys":["delete","open override fun delete()","dev.kordex.core.plugins.KordExPlugin.delete"]},{"name":"open override fun deserialize(decoder: Decoder): FixedLengthQueue<T>","description":"dev.kordex.core.utils.collections.serializers.FixedLengthQueueSerializer.deserialize","location":"kord-extensions/dev.kordex.core.utils.collections.serializers/-fixed-length-queue-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): FixedLengthQueue<T>","dev.kordex.core.utils.collections.serializers.FixedLengthQueueSerializer.deserialize"]},{"name":"open override fun deserialize(decoder: Decoder): Locale","description":"dev.kordex.core.i18n.serializers.LocaleSerializer.deserialize","location":"kord-extensions/dev.kordex.core.i18n.serializers/-locale-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): Locale","dev.kordex.core.i18n.serializers.LocaleSerializer.deserialize"]},{"name":"open override fun deserialize(decoder: Decoder): StorageType","description":"dev.kordex.core.storage.StorageTypeSerializer.deserialize","location":"kord-extensions/dev.kordex.core.storage/-storage-type-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): StorageType","dev.kordex.core.storage.StorageTypeSerializer.deserialize"]},{"name":"open override fun editingPaginator(defaultGroup: Key, locale: Locale?, builder: PaginatorBuilder.() -> Unit): EphemeralResponsePaginator","description":"dev.kordex.core.types.EphemeralInteractionContext.editingPaginator","location":"kord-extensions/dev.kordex.core.types/-ephemeral-interaction-context/editing-paginator.html","searchKeys":["editingPaginator","open override fun editingPaginator(defaultGroup: Key, locale: Locale?, builder: PaginatorBuilder.() -> Unit): EphemeralResponsePaginator","dev.kordex.core.types.EphemeralInteractionContext.editingPaginator"]},{"name":"open override fun editingPaginator(defaultGroup: Key, locale: Locale?, builder: PaginatorBuilder.() -> Unit): PublicResponsePaginator","description":"dev.kordex.core.types.PublicInteractionContext.editingPaginator","location":"kord-extensions/dev.kordex.core.types/-public-interaction-context/editing-paginator.html","searchKeys":["editingPaginator","open override fun editingPaginator(defaultGroup: Key, locale: Locale?, builder: PaginatorBuilder.() -> Unit): PublicResponsePaginator","dev.kordex.core.types.PublicInteractionContext.editingPaginator"]},{"name":"open override fun element(): E?","description":"dev.kordex.core.utils.collections.FixedLengthQueue.element","location":"kord-extensions/dev.kordex.core.utils.collections/-fixed-length-queue/element.html","searchKeys":["element","open override fun element(): E?","dev.kordex.core.utils.collections.FixedLengthQueue.element"]},{"name":"open override fun entryFlow(): Flow<RegistryStorage.StorageEntry<K, T>>","description":"dev.kordex.core.registry.DefaultLocalRegistryStorage.entryFlow","location":"kord-extensions/dev.kordex.core.registry/-default-local-registry-storage/entry-flow.html","searchKeys":["entryFlow","open override fun entryFlow(): Flow<RegistryStorage.StorageEntry<K, T>>","dev.kordex.core.registry.DefaultLocalRegistryStorage.entryFlow"]},{"name":"open override fun entryFlow(): Flow<RegistryStorage.StorageEntry<Snowflake, T>>","description":"dev.kordex.core.registry.AbstractDeconstructingApplicationCommandRegistryStorage.entryFlow","location":"kord-extensions/dev.kordex.core.registry/-abstract-deconstructing-application-command-registry-storage/entry-flow.html","searchKeys":["entryFlow","open override fun entryFlow(): Flow<RegistryStorage.StorageEntry<Snowflake, T>>","dev.kordex.core.registry.AbstractDeconstructingApplicationCommandRegistryStorage.entryFlow"]},{"name":"open override fun get(): Koin","description":"dev.kordex.core.koin.KordExContext.get","location":"kord-extensions/dev.kordex.core.koin/-kord-ex-context/get.html","searchKeys":["get","open override fun get(): Koin","dev.kordex.core.koin.KordExContext.get"]},{"name":"open override fun get(key: Key): String","description":"dev.kordex.core.i18n.ResourceBundleTranslations.get","location":"kord-extensions/dev.kordex.core.i18n/-resource-bundle-translations/get.html","searchKeys":["get","open override fun get(key: Key): String","dev.kordex.core.i18n.ResourceBundleTranslations.get"]},{"name":"open override fun getKoin(): Koin","description":"dev.kordex.core.koin.KordExKoinComponent.getKoin","location":"kord-extensions/dev.kordex.core.koin/-kord-ex-koin-component/get-koin.html","searchKeys":["getKoin","open override fun getKoin(): Koin","dev.kordex.core.koin.KordExKoinComponent.getKoin"]},{"name":"open override fun getOrNull(): Koin?","description":"dev.kordex.core.koin.KordExContext.getOrNull","location":"kord-extensions/dev.kordex.core.koin/-kord-ex-context/get-or-null.html","searchKeys":["getOrNull","open override fun getOrNull(): Koin?","dev.kordex.core.koin.KordExContext.getOrNull"]},{"name":"open override fun getTranslatedName(locale: Locale): String","description":"dev.kordex.core.commands.chat.ChatSubCommand.getTranslatedName","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-sub-command/get-translated-name.html","searchKeys":["getTranslatedName","open override fun getTranslatedName(locale: Locale): String","dev.kordex.core.commands.chat.ChatSubCommand.getTranslatedName"]},{"name":"open override fun hasKey(key: Key): Boolean","description":"dev.kordex.core.i18n.ResourceBundleTranslations.hasKey","location":"kord-extensions/dev.kordex.core.i18n/-resource-bundle-translations/has-key.html","searchKeys":["hasKey","open override fun hasKey(key: Key): Boolean","dev.kordex.core.i18n.ResourceBundleTranslations.hasKey"]},{"name":"open override fun hashCode(): Int","description":"dev.kordex.core.storage.StorageUnit.hashCode","location":"kord-extensions/dev.kordex.core.storage/-storage-unit/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","dev.kordex.core.storage.StorageUnit.hashCode"]},{"name":"open override fun isEmpty(): Boolean","description":"dev.kordex.core.utils.collections.FixedLengthQueue.isEmpty","location":"kord-extensions/dev.kordex.core.utils.collections/-fixed-length-queue/is-empty.html","searchKeys":["isEmpty","open override fun isEmpty(): Boolean","dev.kordex.core.utils.collections.FixedLengthQueue.isEmpty"]},{"name":"open override fun loadKoinModules(module: Module, createEagerInstances: Boolean)","description":"dev.kordex.core.koin.KordExContext.loadKoinModules","location":"kord-extensions/dev.kordex.core.koin/-kord-ex-context/load-koin-modules.html","searchKeys":["loadKoinModules","open override fun loadKoinModules(module: Module, createEagerInstances: Boolean)","dev.kordex.core.koin.KordExContext.loadKoinModules"]},{"name":"open override fun loadKoinModules(modules: List<Module>, createEagerInstances: Boolean)","description":"dev.kordex.core.koin.KordExContext.loadKoinModules","location":"kord-extensions/dev.kordex.core.koin/-kord-ex-context/load-koin-modules.html","searchKeys":["loadKoinModules","open override fun loadKoinModules(modules: List<Module>, createEagerInstances: Boolean)","dev.kordex.core.koin.KordExContext.loadKoinModules"]},{"name":"open override fun offer(element: E): Boolean","description":"dev.kordex.core.utils.collections.FixedLengthQueue.offer","location":"kord-extensions/dev.kordex.core.utils.collections/-fixed-length-queue/offer.html","searchKeys":["offer","open override fun offer(element: E): Boolean","dev.kordex.core.utils.collections.FixedLengthQueue.offer"]},{"name":"open override fun peek(): E?","description":"dev.kordex.core.utils.collections.FixedLengthQueue.peek","location":"kord-extensions/dev.kordex.core.utils.collections/-fixed-length-queue/peek.html","searchKeys":["peek","open override fun peek(): E?","dev.kordex.core.utils.collections.FixedLengthQueue.peek"]},{"name":"open override fun poll(): E?","description":"dev.kordex.core.utils.collections.FixedLengthQueue.poll","location":"kord-extensions/dev.kordex.core.utils.collections/-fixed-length-queue/poll.html","searchKeys":["poll","open override fun poll(): E?","dev.kordex.core.utils.collections.FixedLengthQueue.poll"]},{"name":"open override fun remove(): E?","description":"dev.kordex.core.utils.collections.FixedLengthQueue.remove","location":"kord-extensions/dev.kordex.core.utils.collections/-fixed-length-queue/remove.html","searchKeys":["remove","open override fun remove(): E?","dev.kordex.core.utils.collections.FixedLengthQueue.remove"]},{"name":"open override fun remove(element: E): Boolean","description":"dev.kordex.core.utils.collections.FixedLengthQueue.remove","location":"kord-extensions/dev.kordex.core.utils.collections/-fixed-length-queue/remove.html","searchKeys":["remove","open override fun remove(element: E): Boolean","dev.kordex.core.utils.collections.FixedLengthQueue.remove"]},{"name":"open override fun removeAll(elements: Collection<E>): Boolean","description":"dev.kordex.core.utils.collections.FixedLengthQueue.removeAll","location":"kord-extensions/dev.kordex.core.utils.collections/-fixed-length-queue/remove-all.html","searchKeys":["removeAll","open override fun removeAll(elements: Collection<E>): Boolean","dev.kordex.core.utils.collections.FixedLengthQueue.removeAll"]},{"name":"open override fun retainAll(elements: Collection<E>): Boolean","description":"dev.kordex.core.utils.collections.FixedLengthQueue.retainAll","location":"kord-extensions/dev.kordex.core.utils.collections/-fixed-length-queue/retain-all.html","searchKeys":["retainAll","open override fun retainAll(elements: Collection<E>): Boolean","dev.kordex.core.utils.collections.FixedLengthQueue.retainAll"]},{"name":"open override fun serialize(encoder: Encoder, value: FixedLengthQueue<T>)","description":"dev.kordex.core.utils.collections.serializers.FixedLengthQueueSerializer.serialize","location":"kord-extensions/dev.kordex.core.utils.collections.serializers/-fixed-length-queue-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: FixedLengthQueue<T>)","dev.kordex.core.utils.collections.serializers.FixedLengthQueueSerializer.serialize"]},{"name":"open override fun serialize(encoder: Encoder, value: Locale)","description":"dev.kordex.core.i18n.serializers.LocaleSerializer.serialize","location":"kord-extensions/dev.kordex.core.i18n.serializers/-locale-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: Locale)","dev.kordex.core.i18n.serializers.LocaleSerializer.serialize"]},{"name":"open override fun serialize(encoder: Encoder, value: StorageType)","description":"dev.kordex.core.storage.StorageTypeSerializer.serialize","location":"kord-extensions/dev.kordex.core.storage/-storage-type-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: StorageType)","dev.kordex.core.storage.StorageTypeSerializer.serialize"]},{"name":"open override fun start()","description":"dev.kordex.core.plugins.KordExPlugin.start","location":"kord-extensions/dev.kordex.core.plugins/-kord-ex-plugin/start.html","searchKeys":["start","open override fun start()","dev.kordex.core.plugins.KordExPlugin.start"]},{"name":"open override fun startKoin(appDeclaration: KoinAppDeclaration): KoinApplication","description":"dev.kordex.core.koin.KordExContext.startKoin","location":"kord-extensions/dev.kordex.core.koin/-kord-ex-context/start-koin.html","searchKeys":["startKoin","open override fun startKoin(appDeclaration: KoinAppDeclaration): KoinApplication","dev.kordex.core.koin.KordExContext.startKoin"]},{"name":"open override fun startKoin(koinApplication: KoinApplication): KoinApplication","description":"dev.kordex.core.koin.KordExContext.startKoin","location":"kord-extensions/dev.kordex.core.koin/-kord-ex-context/start-koin.html","searchKeys":["startKoin","open override fun startKoin(koinApplication: KoinApplication): KoinApplication","dev.kordex.core.koin.KordExContext.startKoin"]},{"name":"open override fun stop()","description":"dev.kordex.core.plugins.KordExPlugin.stop","location":"kord-extensions/dev.kordex.core.plugins/-kord-ex-plugin/stop.html","searchKeys":["stop","open override fun stop()","dev.kordex.core.plugins.KordExPlugin.stop"]},{"name":"open override fun stopKoin()","description":"dev.kordex.core.koin.KordExContext.stopKoin","location":"kord-extensions/dev.kordex.core.koin/-kord-ex-context/stop-koin.html","searchKeys":["stopKoin","open override fun stopKoin()","dev.kordex.core.koin.KordExContext.stopKoin"]},{"name":"open override fun toString(): String","description":"dev.kordex.core.ArgumentParsingException.toString","location":"kord-extensions/dev.kordex.core/-argument-parsing-exception/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kordex.core.ArgumentParsingException.toString"]},{"name":"open override fun toString(): String","description":"dev.kordex.core.CommandRegistrationException.toString","location":"kord-extensions/dev.kordex.core/-command-registration-exception/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kordex.core.CommandRegistrationException.toString"]},{"name":"open override fun toString(): String","description":"dev.kordex.core.DiscordRelayedException.toString","location":"kord-extensions/dev.kordex.core/-discord-relayed-exception/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kordex.core.DiscordRelayedException.toString"]},{"name":"open override fun toString(): String","description":"dev.kordex.core.EventHandlerRegistrationException.toString","location":"kord-extensions/dev.kordex.core/-event-handler-registration-exception/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kordex.core.EventHandlerRegistrationException.toString"]},{"name":"open override fun toString(): String","description":"dev.kordex.core.InvalidArgumentException.toString","location":"kord-extensions/dev.kordex.core/-invalid-argument-exception/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kordex.core.InvalidArgumentException.toString"]},{"name":"open override fun toString(): String","description":"dev.kordex.core.InvalidCommandException.toString","location":"kord-extensions/dev.kordex.core/-invalid-command-exception/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kordex.core.InvalidCommandException.toString"]},{"name":"open override fun toString(): String","description":"dev.kordex.core.InvalidEventHandlerException.toString","location":"kord-extensions/dev.kordex.core/-invalid-event-handler-exception/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kordex.core.InvalidEventHandlerException.toString"]},{"name":"open override fun toString(): String","description":"dev.kordex.core.InvalidExtensionException.toString","location":"kord-extensions/dev.kordex.core/-invalid-extension-exception/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kordex.core.InvalidExtensionException.toString"]},{"name":"open override fun toString(): String","description":"dev.kordex.core.components.forms.widgets.Widget.toString","location":"kord-extensions/dev.kordex.core.components.forms.widgets/-widget/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kordex.core.components.forms.widgets.Widget.toString"]},{"name":"open override fun toString(): String","description":"dev.kordex.core.i18n.types.Bundle.toString","location":"kord-extensions/dev.kordex.core.i18n.types/-bundle/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kordex.core.i18n.types.Bundle.toString"]},{"name":"open override fun toString(): String","description":"dev.kordex.core.i18n.types.Key.toString","location":"kord-extensions/dev.kordex.core.i18n.types/-key/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kordex.core.i18n.types.Key.toString"]},{"name":"open override fun toString(): String","description":"dev.kordex.core.parsers.DurationParserException.toString","location":"kord-extensions/dev.kordex.core.parsers/-duration-parser-exception/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kordex.core.parsers.DurationParserException.toString"]},{"name":"open override fun toString(): String","description":"dev.kordex.core.storage.StorageUnit.toString","location":"kord-extensions/dev.kordex.core.storage/-storage-unit/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kordex.core.storage.StorageUnit.toString"]},{"name":"open override fun translate(key: Key, replacements: Array<Any?>): String","description":"dev.kordex.core.i18n.ResourceBundleTranslations.translate","location":"kord-extensions/dev.kordex.core.i18n/-resource-bundle-translations/translate.html","searchKeys":["translate","open override fun translate(key: Key, replacements: Array<Any?>): String","dev.kordex.core.i18n.ResourceBundleTranslations.translate"]},{"name":"open override fun translateNamed(key: Key, replacements: Map<String, Any?>): String","description":"dev.kordex.core.i18n.ResourceBundleTranslations.translateNamed","location":"kord-extensions/dev.kordex.core.i18n/-resource-bundle-translations/translate-named.html","searchKeys":["translateNamed","open override fun translateNamed(key: Key, replacements: Map<String, Any?>): String","dev.kordex.core.i18n.ResourceBundleTranslations.translateNamed"]},{"name":"open override fun unloadKoinModules(module: Module)","description":"dev.kordex.core.koin.KordExContext.unloadKoinModules","location":"kord-extensions/dev.kordex.core.koin/-kord-ex-context/unload-koin-modules.html","searchKeys":["unloadKoinModules","open override fun unloadKoinModules(module: Module)","dev.kordex.core.koin.KordExContext.unloadKoinModules"]},{"name":"open override fun unloadKoinModules(modules: List<Module>)","description":"dev.kordex.core.koin.KordExContext.unloadKoinModules","location":"kord-extensions/dev.kordex.core.koin/-kord-ex-context/unload-koin-modules.html","searchKeys":["unloadKoinModules","open override fun unloadKoinModules(modules: List<Module>)","dev.kordex.core.koin.KordExContext.unloadKoinModules"]},{"name":"open override fun validate()","description":"dev.kordex.core.commands.application.message.EphemeralMessageCommand.validate","location":"kord-extensions/dev.kordex.core.commands.application.message/-ephemeral-message-command/validate.html","searchKeys":["validate","open override fun validate()","dev.kordex.core.commands.application.message.EphemeralMessageCommand.validate"]},{"name":"open override fun validate()","description":"dev.kordex.core.commands.application.message.MessageCommand.validate","location":"kord-extensions/dev.kordex.core.commands.application.message/-message-command/validate.html","searchKeys":["validate","open override fun validate()","dev.kordex.core.commands.application.message.MessageCommand.validate"]},{"name":"open override fun validate()","description":"dev.kordex.core.commands.application.message.PublicMessageCommand.validate","location":"kord-extensions/dev.kordex.core.commands.application.message/-public-message-command/validate.html","searchKeys":["validate","open override fun validate()","dev.kordex.core.commands.application.message.PublicMessageCommand.validate"]},{"name":"open override fun validate()","description":"dev.kordex.core.commands.application.slash.EphemeralSlashCommand.validate","location":"kord-extensions/dev.kordex.core.commands.application.slash/-ephemeral-slash-command/validate.html","searchKeys":["validate","open override fun validate()","dev.kordex.core.commands.application.slash.EphemeralSlashCommand.validate"]},{"name":"open override fun validate()","description":"dev.kordex.core.commands.application.slash.PublicSlashCommand.validate","location":"kord-extensions/dev.kordex.core.commands.application.slash/-public-slash-command/validate.html","searchKeys":["validate","open override fun validate()","dev.kordex.core.commands.application.slash.PublicSlashCommand.validate"]},{"name":"open override fun validate()","description":"dev.kordex.core.commands.application.slash.SlashCommand.validate","location":"kord-extensions/dev.kordex.core.commands.application.slash/-slash-command/validate.html","searchKeys":["validate","open override fun validate()","dev.kordex.core.commands.application.slash.SlashCommand.validate"]},{"name":"open override fun validate()","description":"dev.kordex.core.commands.application.user.EphemeralUserCommand.validate","location":"kord-extensions/dev.kordex.core.commands.application.user/-ephemeral-user-command/validate.html","searchKeys":["validate","open override fun validate()","dev.kordex.core.commands.application.user.EphemeralUserCommand.validate"]},{"name":"open override fun validate()","description":"dev.kordex.core.commands.application.user.PublicUserCommand.validate","location":"kord-extensions/dev.kordex.core.commands.application.user/-public-user-command/validate.html","searchKeys":["validate","open override fun validate()","dev.kordex.core.commands.application.user.PublicUserCommand.validate"]},{"name":"open override fun validate()","description":"dev.kordex.core.commands.application.user.UserCommand.validate","location":"kord-extensions/dev.kordex.core.commands.application.user/-user-command/validate.html","searchKeys":["validate","open override fun validate()","dev.kordex.core.commands.application.user.UserCommand.validate"]},{"name":"open override fun validate()","description":"dev.kordex.core.commands.chat.ChatCommand.validate","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-command/validate.html","searchKeys":["validate","open override fun validate()","dev.kordex.core.commands.chat.ChatCommand.validate"]},{"name":"open override fun validate()","description":"dev.kordex.core.commands.chat.ChatGroupCommand.validate","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-group-command/validate.html","searchKeys":["validate","open override fun validate()","dev.kordex.core.commands.chat.ChatGroupCommand.validate"]},{"name":"open override fun validate()","description":"dev.kordex.core.components.ComponentWithAction.validate","location":"kord-extensions/dev.kordex.core.components/-component-with-action/validate.html","searchKeys":["validate","open override fun validate()","dev.kordex.core.components.ComponentWithAction.validate"]},{"name":"open override fun validate()","description":"dev.kordex.core.components.ComponentWithID.validate","location":"kord-extensions/dev.kordex.core.components/-component-with-i-d/validate.html","searchKeys":["validate","open override fun validate()","dev.kordex.core.components.ComponentWithID.validate"]},{"name":"open override fun validate()","description":"dev.kordex.core.components.buttons.DisabledInteractionButton.validate","location":"kord-extensions/dev.kordex.core.components.buttons/-disabled-interaction-button/validate.html","searchKeys":["validate","open override fun validate()","dev.kordex.core.components.buttons.DisabledInteractionButton.validate"]},{"name":"open override fun validate()","description":"dev.kordex.core.components.buttons.EphemeralInteractionButton.validate","location":"kord-extensions/dev.kordex.core.components.buttons/-ephemeral-interaction-button/validate.html","searchKeys":["validate","open override fun validate()","dev.kordex.core.components.buttons.EphemeralInteractionButton.validate"]},{"name":"open override fun validate()","description":"dev.kordex.core.components.buttons.InteractionButton.validate","location":"kord-extensions/dev.kordex.core.components.buttons/-interaction-button/validate.html","searchKeys":["validate","open override fun validate()","dev.kordex.core.components.buttons.InteractionButton.validate"]},{"name":"open override fun validate()","description":"dev.kordex.core.components.buttons.InteractionButtonWithAction.validate","location":"kord-extensions/dev.kordex.core.components.buttons/-interaction-button-with-action/validate.html","searchKeys":["validate","open override fun validate()","dev.kordex.core.components.buttons.InteractionButtonWithAction.validate"]},{"name":"open override fun validate()","description":"dev.kordex.core.components.buttons.InteractionButtonWithID.validate","location":"kord-extensions/dev.kordex.core.components.buttons/-interaction-button-with-i-d/validate.html","searchKeys":["validate","open override fun validate()","dev.kordex.core.components.buttons.InteractionButtonWithID.validate"]},{"name":"open override fun validate()","description":"dev.kordex.core.components.buttons.LinkInteractionButton.validate","location":"kord-extensions/dev.kordex.core.components.buttons/-link-interaction-button/validate.html","searchKeys":["validate","open override fun validate()","dev.kordex.core.components.buttons.LinkInteractionButton.validate"]},{"name":"open override fun validate()","description":"dev.kordex.core.components.buttons.PublicInteractionButton.validate","location":"kord-extensions/dev.kordex.core.components.buttons/-public-interaction-button/validate.html","searchKeys":["validate","open override fun validate()","dev.kordex.core.components.buttons.PublicInteractionButton.validate"]},{"name":"open override fun validate()","description":"dev.kordex.core.components.forms.widgets.TextInputWidget.validate","location":"kord-extensions/dev.kordex.core.components.forms.widgets/-text-input-widget/validate.html","searchKeys":["validate","open override fun validate()","dev.kordex.core.components.forms.widgets.TextInputWidget.validate"]},{"name":"open override fun validate()","description":"dev.kordex.core.components.menus.EphemeralSelectMenu.validate","location":"kord-extensions/dev.kordex.core.components.menus/-ephemeral-select-menu/validate.html","searchKeys":["validate","open override fun validate()","dev.kordex.core.components.menus.EphemeralSelectMenu.validate"]},{"name":"open override fun validate()","description":"dev.kordex.core.components.menus.PublicSelectMenu.validate","location":"kord-extensions/dev.kordex.core.components.menus/-public-select-menu/validate.html","searchKeys":["validate","open override fun validate()","dev.kordex.core.components.menus.PublicSelectMenu.validate"]},{"name":"open override fun validate()","description":"dev.kordex.core.components.menus.SelectMenu.validate","location":"kord-extensions/dev.kordex.core.components.menus/-select-menu/validate.html","searchKeys":["validate","open override fun validate()","dev.kordex.core.components.menus.SelectMenu.validate"]},{"name":"open override fun validateArgument()","description":"dev.kordex.core.commands.converters.builders.DefaultingCoalescingConverterBuilder.validateArgument","location":"kord-extensions/dev.kordex.core.commands.converters.builders/-defaulting-coalescing-converter-builder/validate-argument.html","searchKeys":["validateArgument","open override fun validateArgument()","dev.kordex.core.commands.converters.builders.DefaultingCoalescingConverterBuilder.validateArgument"]},{"name":"open override fun validateArgument()","description":"dev.kordex.core.commands.converters.builders.DefaultingConverterBuilder.validateArgument","location":"kord-extensions/dev.kordex.core.commands.converters.builders/-defaulting-converter-builder/validate-argument.html","searchKeys":["validateArgument","open override fun validateArgument()","dev.kordex.core.commands.converters.builders.DefaultingConverterBuilder.validateArgument"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): GuildJoinRequestDeleteEvent","description":"dev.kordex.core.events.extra.GuildJoinRequestDeleteEvent.withStrategy","location":"kord-extensions/dev.kordex.core.events.extra/-guild-join-request-delete-event/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): GuildJoinRequestDeleteEvent","dev.kordex.core.events.extra.GuildJoinRequestDeleteEvent.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): GuildJoinRequestUpdateEvent","description":"dev.kordex.core.events.extra.GuildJoinRequestUpdateEvent.withStrategy","location":"kord-extensions/dev.kordex.core.events.extra/-guild-join-request-update-event/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): GuildJoinRequestUpdateEvent","dev.kordex.core.events.extra.GuildJoinRequestUpdateEvent.withStrategy"]},{"name":"open override val arguments: () -> A? = null","description":"dev.kordex.core.commands.application.slash.EphemeralSlashCommand.arguments","location":"kord-extensions/dev.kordex.core.commands.application.slash/-ephemeral-slash-command/arguments.html","searchKeys":["arguments","open override val arguments: () -> A? = null","dev.kordex.core.commands.application.slash.EphemeralSlashCommand.arguments"]},{"name":"open override val arguments: () -> A? = null","description":"dev.kordex.core.commands.application.slash.PublicSlashCommand.arguments","location":"kord-extensions/dev.kordex.core.commands.application.slash/-public-slash-command/arguments.html","searchKeys":["arguments","open override val arguments: () -> A? = null","dev.kordex.core.commands.application.slash.PublicSlashCommand.arguments"]},{"name":"open override val changes: Set<String>","description":"dev.kordex.core.utils.deltas.MemberDelta.changes","location":"kord-extensions/dev.kordex.core.utils.deltas/-member-delta/changes.html","searchKeys":["changes","open override val changes: Set<String>","dev.kordex.core.utils.deltas.MemberDelta.changes"]},{"name":"open override val command: ChatCommand<*>","description":"dev.kordex.core.commands.events.ChatCommandFailedChecksEvent.command","location":"kord-extensions/dev.kordex.core.commands.events/-chat-command-failed-checks-event/command.html","searchKeys":["command","open override val command: ChatCommand<*>","dev.kordex.core.commands.events.ChatCommandFailedChecksEvent.command"]},{"name":"open override val command: ChatCommand<*>","description":"dev.kordex.core.commands.events.ChatCommandFailedParsingEvent.command","location":"kord-extensions/dev.kordex.core.commands.events/-chat-command-failed-parsing-event/command.html","searchKeys":["command","open override val command: ChatCommand<*>","dev.kordex.core.commands.events.ChatCommandFailedParsingEvent.command"]},{"name":"open override val command: ChatCommand<*>","description":"dev.kordex.core.commands.events.ChatCommandFailedWithExceptionEvent.command","location":"kord-extensions/dev.kordex.core.commands.events/-chat-command-failed-with-exception-event/command.html","searchKeys":["command","open override val command: ChatCommand<*>","dev.kordex.core.commands.events.ChatCommandFailedWithExceptionEvent.command"]},{"name":"open override val command: ChatCommand<*>","description":"dev.kordex.core.commands.events.ChatCommandInvocationEvent.command","location":"kord-extensions/dev.kordex.core.commands.events/-chat-command-invocation-event/command.html","searchKeys":["command","open override val command: ChatCommand<*>","dev.kordex.core.commands.events.ChatCommandInvocationEvent.command"]},{"name":"open override val command: ChatCommand<*>","description":"dev.kordex.core.commands.events.ChatCommandSucceededEvent.command","location":"kord-extensions/dev.kordex.core.commands.events/-chat-command-succeeded-event/command.html","searchKeys":["command","open override val command: ChatCommand<*>","dev.kordex.core.commands.events.ChatCommandSucceededEvent.command"]},{"name":"open override val command: EphemeralMessageCommand<*>","description":"dev.kordex.core.commands.events.EphemeralMessageCommandFailedChecksEvent.command","location":"kord-extensions/dev.kordex.core.commands.events/-ephemeral-message-command-failed-checks-event/command.html","searchKeys":["command","open override val command: EphemeralMessageCommand<*>","dev.kordex.core.commands.events.EphemeralMessageCommandFailedChecksEvent.command"]},{"name":"open override val command: EphemeralMessageCommand<*>","description":"dev.kordex.core.commands.events.EphemeralMessageCommandFailedWithExceptionEvent.command","location":"kord-extensions/dev.kordex.core.commands.events/-ephemeral-message-command-failed-with-exception-event/command.html","searchKeys":["command","open override val command: EphemeralMessageCommand<*>","dev.kordex.core.commands.events.EphemeralMessageCommandFailedWithExceptionEvent.command"]},{"name":"open override val command: EphemeralMessageCommand<*>","description":"dev.kordex.core.commands.events.EphemeralMessageCommandInvocationEvent.command","location":"kord-extensions/dev.kordex.core.commands.events/-ephemeral-message-command-invocation-event/command.html","searchKeys":["command","open override val command: EphemeralMessageCommand<*>","dev.kordex.core.commands.events.EphemeralMessageCommandInvocationEvent.command"]},{"name":"open override val command: EphemeralMessageCommand<*>","description":"dev.kordex.core.commands.events.EphemeralMessageCommandSucceededEvent.command","location":"kord-extensions/dev.kordex.core.commands.events/-ephemeral-message-command-succeeded-event/command.html","searchKeys":["command","open override val command: EphemeralMessageCommand<*>","dev.kordex.core.commands.events.EphemeralMessageCommandSucceededEvent.command"]},{"name":"open override val command: EphemeralSlashCommand<*, *>","description":"dev.kordex.core.commands.events.EphemeralSlashCommandFailedChecksEvent.command","location":"kord-extensions/dev.kordex.core.commands.events/-ephemeral-slash-command-failed-checks-event/command.html","searchKeys":["command","open override val command: EphemeralSlashCommand<*, *>","dev.kordex.core.commands.events.EphemeralSlashCommandFailedChecksEvent.command"]},{"name":"open override val command: EphemeralSlashCommand<*, *>","description":"dev.kordex.core.commands.events.EphemeralSlashCommandFailedParsingEvent.command","location":"kord-extensions/dev.kordex.core.commands.events/-ephemeral-slash-command-failed-parsing-event/command.html","searchKeys":["command","open override val command: EphemeralSlashCommand<*, *>","dev.kordex.core.commands.events.EphemeralSlashCommandFailedParsingEvent.command"]},{"name":"open override val command: EphemeralSlashCommand<*, *>","description":"dev.kordex.core.commands.events.EphemeralSlashCommandFailedWithExceptionEvent.command","location":"kord-extensions/dev.kordex.core.commands.events/-ephemeral-slash-command-failed-with-exception-event/command.html","searchKeys":["command","open override val command: EphemeralSlashCommand<*, *>","dev.kordex.core.commands.events.EphemeralSlashCommandFailedWithExceptionEvent.command"]},{"name":"open override val command: EphemeralSlashCommand<*, *>","description":"dev.kordex.core.commands.events.EphemeralSlashCommandInvocationEvent.command","location":"kord-extensions/dev.kordex.core.commands.events/-ephemeral-slash-command-invocation-event/command.html","searchKeys":["command","open override val command: EphemeralSlashCommand<*, *>","dev.kordex.core.commands.events.EphemeralSlashCommandInvocationEvent.command"]},{"name":"open override val command: EphemeralSlashCommand<*, *>","description":"dev.kordex.core.commands.events.EphemeralSlashCommandSucceededEvent.command","location":"kord-extensions/dev.kordex.core.commands.events/-ephemeral-slash-command-succeeded-event/command.html","searchKeys":["command","open override val command: EphemeralSlashCommand<*, *>","dev.kordex.core.commands.events.EphemeralSlashCommandSucceededEvent.command"]},{"name":"open override val command: EphemeralUserCommand<*>","description":"dev.kordex.core.commands.events.EphemeralUserCommandFailedChecksEvent.command","location":"kord-extensions/dev.kordex.core.commands.events/-ephemeral-user-command-failed-checks-event/command.html","searchKeys":["command","open override val command: EphemeralUserCommand<*>","dev.kordex.core.commands.events.EphemeralUserCommandFailedChecksEvent.command"]},{"name":"open override val command: EphemeralUserCommand<*>","description":"dev.kordex.core.commands.events.EphemeralUserCommandFailedWithExceptionEvent.command","location":"kord-extensions/dev.kordex.core.commands.events/-ephemeral-user-command-failed-with-exception-event/command.html","searchKeys":["command","open override val command: EphemeralUserCommand<*>","dev.kordex.core.commands.events.EphemeralUserCommandFailedWithExceptionEvent.command"]},{"name":"open override val command: EphemeralUserCommand<*>","description":"dev.kordex.core.commands.events.EphemeralUserCommandInvocationEvent.command","location":"kord-extensions/dev.kordex.core.commands.events/-ephemeral-user-command-invocation-event/command.html","searchKeys":["command","open override val command: EphemeralUserCommand<*>","dev.kordex.core.commands.events.EphemeralUserCommandInvocationEvent.command"]},{"name":"open override val command: EphemeralUserCommand<*>","description":"dev.kordex.core.commands.events.EphemeralUserCommandSucceededEvent.command","location":"kord-extensions/dev.kordex.core.commands.events/-ephemeral-user-command-succeeded-event/command.html","searchKeys":["command","open override val command: EphemeralUserCommand<*>","dev.kordex.core.commands.events.EphemeralUserCommandSucceededEvent.command"]},{"name":"open override val command: MessageCommand<C, M>","description":"dev.kordex.core.commands.application.message.MessageCommandContext.command","location":"kord-extensions/dev.kordex.core.commands.application.message/-message-command-context/command.html","searchKeys":["command","open override val command: MessageCommand<C, M>","dev.kordex.core.commands.application.message.MessageCommandContext.command"]},{"name":"open override val command: MessageCommand<EphemeralMessageCommandContext<M>, M>","description":"dev.kordex.core.commands.application.message.EphemeralMessageCommandContext.command","location":"kord-extensions/dev.kordex.core.commands.application.message/-ephemeral-message-command-context/command.html","searchKeys":["command","open override val command: MessageCommand<EphemeralMessageCommandContext<M>, M>","dev.kordex.core.commands.application.message.EphemeralMessageCommandContext.command"]},{"name":"open override val command: MessageCommand<PublicMessageCommandContext<M>, M>","description":"dev.kordex.core.commands.application.message.PublicMessageCommandContext.command","location":"kord-extensions/dev.kordex.core.commands.application.message/-public-message-command-context/command.html","searchKeys":["command","open override val command: MessageCommand<PublicMessageCommandContext<M>, M>","dev.kordex.core.commands.application.message.PublicMessageCommandContext.command"]},{"name":"open override val command: PublicMessageCommand<*>","description":"dev.kordex.core.commands.events.PublicMessageCommandFailedChecksEvent.command","location":"kord-extensions/dev.kordex.core.commands.events/-public-message-command-failed-checks-event/command.html","searchKeys":["command","open override val command: PublicMessageCommand<*>","dev.kordex.core.commands.events.PublicMessageCommandFailedChecksEvent.command"]},{"name":"open override val command: PublicMessageCommand<*>","description":"dev.kordex.core.commands.events.PublicMessageCommandFailedWithExceptionEvent.command","location":"kord-extensions/dev.kordex.core.commands.events/-public-message-command-failed-with-exception-event/command.html","searchKeys":["command","open override val command: PublicMessageCommand<*>","dev.kordex.core.commands.events.PublicMessageCommandFailedWithExceptionEvent.command"]},{"name":"open override val command: PublicMessageCommand<*>","description":"dev.kordex.core.commands.events.PublicMessageCommandInvocationEvent.command","location":"kord-extensions/dev.kordex.core.commands.events/-public-message-command-invocation-event/command.html","searchKeys":["command","open override val command: PublicMessageCommand<*>","dev.kordex.core.commands.events.PublicMessageCommandInvocationEvent.command"]},{"name":"open override val command: PublicMessageCommand<*>","description":"dev.kordex.core.commands.events.PublicMessageCommandSucceededEvent.command","location":"kord-extensions/dev.kordex.core.commands.events/-public-message-command-succeeded-event/command.html","searchKeys":["command","open override val command: PublicMessageCommand<*>","dev.kordex.core.commands.events.PublicMessageCommandSucceededEvent.command"]},{"name":"open override val command: PublicSlashCommand<*, *>","description":"dev.kordex.core.commands.events.PublicSlashCommandFailedChecksEvent.command","location":"kord-extensions/dev.kordex.core.commands.events/-public-slash-command-failed-checks-event/command.html","searchKeys":["command","open override val command: PublicSlashCommand<*, *>","dev.kordex.core.commands.events.PublicSlashCommandFailedChecksEvent.command"]},{"name":"open override val command: PublicSlashCommand<*, *>","description":"dev.kordex.core.commands.events.PublicSlashCommandFailedParsingEvent.command","location":"kord-extensions/dev.kordex.core.commands.events/-public-slash-command-failed-parsing-event/command.html","searchKeys":["command","open override val command: PublicSlashCommand<*, *>","dev.kordex.core.commands.events.PublicSlashCommandFailedParsingEvent.command"]},{"name":"open override val command: PublicSlashCommand<*, *>","description":"dev.kordex.core.commands.events.PublicSlashCommandFailedWithExceptionEvent.command","location":"kord-extensions/dev.kordex.core.commands.events/-public-slash-command-failed-with-exception-event/command.html","searchKeys":["command","open override val command: PublicSlashCommand<*, *>","dev.kordex.core.commands.events.PublicSlashCommandFailedWithExceptionEvent.command"]},{"name":"open override val command: PublicSlashCommand<*, *>","description":"dev.kordex.core.commands.events.PublicSlashCommandInvocationEvent.command","location":"kord-extensions/dev.kordex.core.commands.events/-public-slash-command-invocation-event/command.html","searchKeys":["command","open override val command: PublicSlashCommand<*, *>","dev.kordex.core.commands.events.PublicSlashCommandInvocationEvent.command"]},{"name":"open override val command: PublicSlashCommand<*, *>","description":"dev.kordex.core.commands.events.PublicSlashCommandSucceededEvent.command","location":"kord-extensions/dev.kordex.core.commands.events/-public-slash-command-succeeded-event/command.html","searchKeys":["command","open override val command: PublicSlashCommand<*, *>","dev.kordex.core.commands.events.PublicSlashCommandSucceededEvent.command"]},{"name":"open override val command: PublicUserCommand<*>","description":"dev.kordex.core.commands.events.PublicUserCommandFailedChecksEvent.command","location":"kord-extensions/dev.kordex.core.commands.events/-public-user-command-failed-checks-event/command.html","searchKeys":["command","open override val command: PublicUserCommand<*>","dev.kordex.core.commands.events.PublicUserCommandFailedChecksEvent.command"]},{"name":"open override val command: PublicUserCommand<*>","description":"dev.kordex.core.commands.events.PublicUserCommandFailedWithExceptionEvent.command","location":"kord-extensions/dev.kordex.core.commands.events/-public-user-command-failed-with-exception-event/command.html","searchKeys":["command","open override val command: PublicUserCommand<*>","dev.kordex.core.commands.events.PublicUserCommandFailedWithExceptionEvent.command"]},{"name":"open override val command: PublicUserCommand<*>","description":"dev.kordex.core.commands.events.PublicUserCommandInvocationEvent.command","location":"kord-extensions/dev.kordex.core.commands.events/-public-user-command-invocation-event/command.html","searchKeys":["command","open override val command: PublicUserCommand<*>","dev.kordex.core.commands.events.PublicUserCommandInvocationEvent.command"]},{"name":"open override val command: PublicUserCommand<*>","description":"dev.kordex.core.commands.events.PublicUserCommandSucceededEvent.command","location":"kord-extensions/dev.kordex.core.commands.events/-public-user-command-succeeded-event/command.html","searchKeys":["command","open override val command: PublicUserCommand<*>","dev.kordex.core.commands.events.PublicUserCommandSucceededEvent.command"]},{"name":"open override val command: SlashCommand<C, A, M>","description":"dev.kordex.core.commands.application.slash.SlashCommandContext.command","location":"kord-extensions/dev.kordex.core.commands.application.slash/-slash-command-context/command.html","searchKeys":["command","open override val command: SlashCommand<C, A, M>","dev.kordex.core.commands.application.slash.SlashCommandContext.command"]},{"name":"open override val command: SlashCommand<EphemeralSlashCommandContext<A, M>, A, M>","description":"dev.kordex.core.commands.application.slash.EphemeralSlashCommandContext.command","location":"kord-extensions/dev.kordex.core.commands.application.slash/-ephemeral-slash-command-context/command.html","searchKeys":["command","open override val command: SlashCommand<EphemeralSlashCommandContext<A, M>, A, M>","dev.kordex.core.commands.application.slash.EphemeralSlashCommandContext.command"]},{"name":"open override val command: SlashCommand<PublicSlashCommandContext<A, M>, A, M>","description":"dev.kordex.core.commands.application.slash.PublicSlashCommandContext.command","location":"kord-extensions/dev.kordex.core.commands.application.slash/-public-slash-command-context/command.html","searchKeys":["command","open override val command: SlashCommand<PublicSlashCommandContext<A, M>, A, M>","dev.kordex.core.commands.application.slash.PublicSlashCommandContext.command"]},{"name":"open override val command: UserCommand<C, M>","description":"dev.kordex.core.commands.application.user.UserCommandContext.command","location":"kord-extensions/dev.kordex.core.commands.application.user/-user-command-context/command.html","searchKeys":["command","open override val command: UserCommand<C, M>","dev.kordex.core.commands.application.user.UserCommandContext.command"]},{"name":"open override val command: UserCommand<EphemeralUserCommandContext<M>, M>","description":"dev.kordex.core.commands.application.user.EphemeralUserCommandContext.command","location":"kord-extensions/dev.kordex.core.commands.application.user/-ephemeral-user-command-context/command.html","searchKeys":["command","open override val command: UserCommand<EphemeralUserCommandContext<M>, M>","dev.kordex.core.commands.application.user.EphemeralUserCommandContext.command"]},{"name":"open override val command: UserCommand<PublicUserCommandContext<M>, M>","description":"dev.kordex.core.commands.application.user.PublicUserCommandContext.command","location":"kord-extensions/dev.kordex.core.commands.application.user/-public-user-command-context/command.html","searchKeys":["command","open override val command: UserCommand<PublicUserCommandContext<M>, M>","dev.kordex.core.commands.application.user.PublicUserCommandContext.command"]},{"name":"open override val component: EphemeralChannelSelectMenu<M>","description":"dev.kordex.core.components.menus.channel.EphemeralChannelSelectMenuContext.component","location":"kord-extensions/dev.kordex.core.components.menus.channel/-ephemeral-channel-select-menu-context/component.html","searchKeys":["component","open override val component: EphemeralChannelSelectMenu<M>","dev.kordex.core.components.menus.channel.EphemeralChannelSelectMenuContext.component"]},{"name":"open override val component: EphemeralInteractionButton<M>","description":"dev.kordex.core.components.buttons.EphemeralInteractionButtonContext.component","location":"kord-extensions/dev.kordex.core.components.buttons/-ephemeral-interaction-button-context/component.html","searchKeys":["component","open override val component: EphemeralInteractionButton<M>","dev.kordex.core.components.buttons.EphemeralInteractionButtonContext.component"]},{"name":"open override val component: EphemeralMentionableSelectMenu<M>","description":"dev.kordex.core.components.menus.mentionable.EphemeralMentionableSelectMenuContext.component","location":"kord-extensions/dev.kordex.core.components.menus.mentionable/-ephemeral-mentionable-select-menu-context/component.html","searchKeys":["component","open override val component: EphemeralMentionableSelectMenu<M>","dev.kordex.core.components.menus.mentionable.EphemeralMentionableSelectMenuContext.component"]},{"name":"open override val component: EphemeralRoleSelectMenu<M>","description":"dev.kordex.core.components.menus.role.EphemeralRoleSelectMenuContext.component","location":"kord-extensions/dev.kordex.core.components.menus.role/-ephemeral-role-select-menu-context/component.html","searchKeys":["component","open override val component: EphemeralRoleSelectMenu<M>","dev.kordex.core.components.menus.role.EphemeralRoleSelectMenuContext.component"]},{"name":"open override val component: EphemeralStringSelectMenu<M>","description":"dev.kordex.core.components.menus.string.EphemeralStringSelectMenuContext.component","location":"kord-extensions/dev.kordex.core.components.menus.string/-ephemeral-string-select-menu-context/component.html","searchKeys":["component","open override val component: EphemeralStringSelectMenu<M>","dev.kordex.core.components.menus.string.EphemeralStringSelectMenuContext.component"]},{"name":"open override val component: EphemeralUserSelectMenu<M>","description":"dev.kordex.core.components.menus.user.EphemeralUserSelectMenuContext.component","location":"kord-extensions/dev.kordex.core.components.menus.user/-ephemeral-user-select-menu-context/component.html","searchKeys":["component","open override val component: EphemeralUserSelectMenu<M>","dev.kordex.core.components.menus.user.EphemeralUserSelectMenuContext.component"]},{"name":"open override val component: PublicChannelSelectMenu<M>","description":"dev.kordex.core.components.menus.channel.PublicChannelSelectMenuContext.component","location":"kord-extensions/dev.kordex.core.components.menus.channel/-public-channel-select-menu-context/component.html","searchKeys":["component","open override val component: PublicChannelSelectMenu<M>","dev.kordex.core.components.menus.channel.PublicChannelSelectMenuContext.component"]},{"name":"open override val component: PublicMentionableSelectMenu<M>","description":"dev.kordex.core.components.menus.mentionable.PublicMentionableSelectMenuContext.component","location":"kord-extensions/dev.kordex.core.components.menus.mentionable/-public-mentionable-select-menu-context/component.html","searchKeys":["component","open override val component: PublicMentionableSelectMenu<M>","dev.kordex.core.components.menus.mentionable.PublicMentionableSelectMenuContext.component"]},{"name":"open override val component: PublicRoleSelectMenu<M>","description":"dev.kordex.core.components.menus.role.PublicRoleSelectMenuContext.component","location":"kord-extensions/dev.kordex.core.components.menus.role/-public-role-select-menu-context/component.html","searchKeys":["component","open override val component: PublicRoleSelectMenu<M>","dev.kordex.core.components.menus.role.PublicRoleSelectMenuContext.component"]},{"name":"open override val component: PublicStringSelectMenu<M>","description":"dev.kordex.core.components.menus.string.PublicStringSelectMenuContext.component","location":"kord-extensions/dev.kordex.core.components.menus.string/-public-string-select-menu-context/component.html","searchKeys":["component","open override val component: PublicStringSelectMenu<M>","dev.kordex.core.components.menus.string.PublicStringSelectMenuContext.component"]},{"name":"open override val component: PublicUserSelectMenu<M>","description":"dev.kordex.core.components.menus.user.PublicUserSelectMenuContext.component","location":"kord-extensions/dev.kordex.core.components.menus.user/-public-user-select-menu-context/component.html","searchKeys":["component","open override val component: PublicUserSelectMenu<M>","dev.kordex.core.components.menus.user.PublicUserSelectMenuContext.component"]},{"name":"open override val coroutineContext: CoroutineContext","description":"dev.kordex.core.utils.scheduling.Scheduler.coroutineContext","location":"kord-extensions/dev.kordex.core.utils.scheduling/-scheduler/coroutine-context.html","searchKeys":["coroutineContext","open override val coroutineContext: CoroutineContext","dev.kordex.core.utils.scheduling.Scheduler.coroutineContext"]},{"name":"open override val customContext: MutableStringKeyedMap<Any>","description":"dev.kordex.core.events.KordExEvent.customContext","location":"kord-extensions/dev.kordex.core.events/-kord-ex-event/custom-context.html","searchKeys":["customContext","open override val customContext: MutableStringKeyedMap<Any>","dev.kordex.core.events.KordExEvent.customContext"]},{"name":"open override val descriptor: SerialDescriptor","description":"dev.kordex.core.i18n.serializers.LocaleSerializer.descriptor","location":"kord-extensions/dev.kordex.core.i18n.serializers/-locale-serializer/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","dev.kordex.core.i18n.serializers.LocaleSerializer.descriptor"]},{"name":"open override val descriptor: SerialDescriptor","description":"dev.kordex.core.storage.StorageTypeSerializer.descriptor","location":"kord-extensions/dev.kordex.core.storage/-storage-type-serializer/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","dev.kordex.core.storage.StorageTypeSerializer.descriptor"]},{"name":"open override val descriptor: SerialDescriptor","description":"dev.kordex.core.utils.collections.serializers.FixedLengthQueueSerializer.descriptor","location":"kord-extensions/dev.kordex.core.utils.collections.serializers/-fixed-length-queue-serializer/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","dev.kordex.core.utils.collections.serializers.FixedLengthQueueSerializer.descriptor"]},{"name":"open override val errorType: Key","description":"dev.kordex.core.commands.converters.impl.BooleanConverter.errorType","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-boolean-converter/error-type.html","searchKeys":["errorType","open override val errorType: Key","dev.kordex.core.commands.converters.impl.BooleanConverter.errorType"]},{"name":"open override val errorType: Key?","description":"dev.kordex.core.commands.converters.CoalescingToDefaultingConverter.errorType","location":"kord-extensions/dev.kordex.core.commands.converters/-coalescing-to-defaulting-converter/error-type.html","searchKeys":["errorType","open override val errorType: Key?","dev.kordex.core.commands.converters.CoalescingToDefaultingConverter.errorType"]},{"name":"open override val errorType: Key?","description":"dev.kordex.core.commands.converters.CoalescingToOptionalConverter.errorType","location":"kord-extensions/dev.kordex.core.commands.converters/-coalescing-to-optional-converter/error-type.html","searchKeys":["errorType","open override val errorType: Key?","dev.kordex.core.commands.converters.CoalescingToOptionalConverter.errorType"]},{"name":"open override val errorType: Key?","description":"dev.kordex.core.commands.converters.SingleToDefaultingConverter.errorType","location":"kord-extensions/dev.kordex.core.commands.converters/-single-to-defaulting-converter/error-type.html","searchKeys":["errorType","open override val errorType: Key?","dev.kordex.core.commands.converters.SingleToDefaultingConverter.errorType"]},{"name":"open override val errorType: Key?","description":"dev.kordex.core.commands.converters.SingleToListConverter.errorType","location":"kord-extensions/dev.kordex.core.commands.converters/-single-to-list-converter/error-type.html","searchKeys":["errorType","open override val errorType: Key?","dev.kordex.core.commands.converters.SingleToListConverter.errorType"]},{"name":"open override val errorType: Key?","description":"dev.kordex.core.commands.converters.SingleToOptionalConverter.errorType","location":"kord-extensions/dev.kordex.core.commands.converters/-single-to-optional-converter/error-type.html","searchKeys":["errorType","open override val errorType: Key?","dev.kordex.core.commands.converters.SingleToOptionalConverter.errorType"]},{"name":"open override val event: ButtonInteractionCreateEvent","description":"dev.kordex.core.components.buttons.EphemeralInteractionButtonContext.event","location":"kord-extensions/dev.kordex.core.components.buttons/-ephemeral-interaction-button-context/event.html","searchKeys":["event","open override val event: ButtonInteractionCreateEvent","dev.kordex.core.components.buttons.EphemeralInteractionButtonContext.event"]},{"name":"open override val event: ChatInputCommandInteractionCreateEvent","description":"dev.kordex.core.commands.application.slash.EphemeralSlashCommandContext.event","location":"kord-extensions/dev.kordex.core.commands.application.slash/-ephemeral-slash-command-context/event.html","searchKeys":["event","open override val event: ChatInputCommandInteractionCreateEvent","dev.kordex.core.commands.application.slash.EphemeralSlashCommandContext.event"]},{"name":"open override val event: ChatInputCommandInteractionCreateEvent","description":"dev.kordex.core.commands.application.slash.PublicSlashCommandContext.event","location":"kord-extensions/dev.kordex.core.commands.application.slash/-public-slash-command-context/event.html","searchKeys":["event","open override val event: ChatInputCommandInteractionCreateEvent","dev.kordex.core.commands.application.slash.PublicSlashCommandContext.event"]},{"name":"open override val event: ChatInputCommandInteractionCreateEvent","description":"dev.kordex.core.commands.events.EphemeralSlashCommandFailedChecksEvent.event","location":"kord-extensions/dev.kordex.core.commands.events/-ephemeral-slash-command-failed-checks-event/event.html","searchKeys":["event","open override val event: ChatInputCommandInteractionCreateEvent","dev.kordex.core.commands.events.EphemeralSlashCommandFailedChecksEvent.event"]},{"name":"open override val event: ChatInputCommandInteractionCreateEvent","description":"dev.kordex.core.commands.events.EphemeralSlashCommandFailedParsingEvent.event","location":"kord-extensions/dev.kordex.core.commands.events/-ephemeral-slash-command-failed-parsing-event/event.html","searchKeys":["event","open override val event: ChatInputCommandInteractionCreateEvent","dev.kordex.core.commands.events.EphemeralSlashCommandFailedParsingEvent.event"]},{"name":"open override val event: ChatInputCommandInteractionCreateEvent","description":"dev.kordex.core.commands.events.EphemeralSlashCommandFailedWithExceptionEvent.event","location":"kord-extensions/dev.kordex.core.commands.events/-ephemeral-slash-command-failed-with-exception-event/event.html","searchKeys":["event","open override val event: ChatInputCommandInteractionCreateEvent","dev.kordex.core.commands.events.EphemeralSlashCommandFailedWithExceptionEvent.event"]},{"name":"open override val event: ChatInputCommandInteractionCreateEvent","description":"dev.kordex.core.commands.events.EphemeralSlashCommandInvocationEvent.event","location":"kord-extensions/dev.kordex.core.commands.events/-ephemeral-slash-command-invocation-event/event.html","searchKeys":["event","open override val event: ChatInputCommandInteractionCreateEvent","dev.kordex.core.commands.events.EphemeralSlashCommandInvocationEvent.event"]},{"name":"open override val event: ChatInputCommandInteractionCreateEvent","description":"dev.kordex.core.commands.events.EphemeralSlashCommandSucceededEvent.event","location":"kord-extensions/dev.kordex.core.commands.events/-ephemeral-slash-command-succeeded-event/event.html","searchKeys":["event","open override val event: ChatInputCommandInteractionCreateEvent","dev.kordex.core.commands.events.EphemeralSlashCommandSucceededEvent.event"]},{"name":"open override val event: ChatInputCommandInteractionCreateEvent","description":"dev.kordex.core.commands.events.PublicSlashCommandFailedChecksEvent.event","location":"kord-extensions/dev.kordex.core.commands.events/-public-slash-command-failed-checks-event/event.html","searchKeys":["event","open override val event: ChatInputCommandInteractionCreateEvent","dev.kordex.core.commands.events.PublicSlashCommandFailedChecksEvent.event"]},{"name":"open override val event: ChatInputCommandInteractionCreateEvent","description":"dev.kordex.core.commands.events.PublicSlashCommandFailedParsingEvent.event","location":"kord-extensions/dev.kordex.core.commands.events/-public-slash-command-failed-parsing-event/event.html","searchKeys":["event","open override val event: ChatInputCommandInteractionCreateEvent","dev.kordex.core.commands.events.PublicSlashCommandFailedParsingEvent.event"]},{"name":"open override val event: ChatInputCommandInteractionCreateEvent","description":"dev.kordex.core.commands.events.PublicSlashCommandFailedWithExceptionEvent.event","location":"kord-extensions/dev.kordex.core.commands.events/-public-slash-command-failed-with-exception-event/event.html","searchKeys":["event","open override val event: ChatInputCommandInteractionCreateEvent","dev.kordex.core.commands.events.PublicSlashCommandFailedWithExceptionEvent.event"]},{"name":"open override val event: ChatInputCommandInteractionCreateEvent","description":"dev.kordex.core.commands.events.PublicSlashCommandInvocationEvent.event","location":"kord-extensions/dev.kordex.core.commands.events/-public-slash-command-invocation-event/event.html","searchKeys":["event","open override val event: ChatInputCommandInteractionCreateEvent","dev.kordex.core.commands.events.PublicSlashCommandInvocationEvent.event"]},{"name":"open override val event: ChatInputCommandInteractionCreateEvent","description":"dev.kordex.core.commands.events.PublicSlashCommandSucceededEvent.event","location":"kord-extensions/dev.kordex.core.commands.events/-public-slash-command-succeeded-event/event.html","searchKeys":["event","open override val event: ChatInputCommandInteractionCreateEvent","dev.kordex.core.commands.events.PublicSlashCommandSucceededEvent.event"]},{"name":"open override val event: MessageCommandInteractionCreateEvent","description":"dev.kordex.core.commands.application.message.EphemeralMessageCommandContext.event","location":"kord-extensions/dev.kordex.core.commands.application.message/-ephemeral-message-command-context/event.html","searchKeys":["event","open override val event: MessageCommandInteractionCreateEvent","dev.kordex.core.commands.application.message.EphemeralMessageCommandContext.event"]},{"name":"open override val event: MessageCommandInteractionCreateEvent","description":"dev.kordex.core.commands.application.message.PublicMessageCommandContext.event","location":"kord-extensions/dev.kordex.core.commands.application.message/-public-message-command-context/event.html","searchKeys":["event","open override val event: MessageCommandInteractionCreateEvent","dev.kordex.core.commands.application.message.PublicMessageCommandContext.event"]},{"name":"open override val event: MessageCommandInteractionCreateEvent","description":"dev.kordex.core.commands.events.EphemeralMessageCommandFailedChecksEvent.event","location":"kord-extensions/dev.kordex.core.commands.events/-ephemeral-message-command-failed-checks-event/event.html","searchKeys":["event","open override val event: MessageCommandInteractionCreateEvent","dev.kordex.core.commands.events.EphemeralMessageCommandFailedChecksEvent.event"]},{"name":"open override val event: MessageCommandInteractionCreateEvent","description":"dev.kordex.core.commands.events.EphemeralMessageCommandFailedWithExceptionEvent.event","location":"kord-extensions/dev.kordex.core.commands.events/-ephemeral-message-command-failed-with-exception-event/event.html","searchKeys":["event","open override val event: MessageCommandInteractionCreateEvent","dev.kordex.core.commands.events.EphemeralMessageCommandFailedWithExceptionEvent.event"]},{"name":"open override val event: MessageCommandInteractionCreateEvent","description":"dev.kordex.core.commands.events.EphemeralMessageCommandInvocationEvent.event","location":"kord-extensions/dev.kordex.core.commands.events/-ephemeral-message-command-invocation-event/event.html","searchKeys":["event","open override val event: MessageCommandInteractionCreateEvent","dev.kordex.core.commands.events.EphemeralMessageCommandInvocationEvent.event"]},{"name":"open override val event: MessageCommandInteractionCreateEvent","description":"dev.kordex.core.commands.events.EphemeralMessageCommandSucceededEvent.event","location":"kord-extensions/dev.kordex.core.commands.events/-ephemeral-message-command-succeeded-event/event.html","searchKeys":["event","open override val event: MessageCommandInteractionCreateEvent","dev.kordex.core.commands.events.EphemeralMessageCommandSucceededEvent.event"]},{"name":"open override val event: MessageCommandInteractionCreateEvent","description":"dev.kordex.core.commands.events.PublicMessageCommandFailedChecksEvent.event","location":"kord-extensions/dev.kordex.core.commands.events/-public-message-command-failed-checks-event/event.html","searchKeys":["event","open override val event: MessageCommandInteractionCreateEvent","dev.kordex.core.commands.events.PublicMessageCommandFailedChecksEvent.event"]},{"name":"open override val event: MessageCommandInteractionCreateEvent","description":"dev.kordex.core.commands.events.PublicMessageCommandFailedWithExceptionEvent.event","location":"kord-extensions/dev.kordex.core.commands.events/-public-message-command-failed-with-exception-event/event.html","searchKeys":["event","open override val event: MessageCommandInteractionCreateEvent","dev.kordex.core.commands.events.PublicMessageCommandFailedWithExceptionEvent.event"]},{"name":"open override val event: MessageCommandInteractionCreateEvent","description":"dev.kordex.core.commands.events.PublicMessageCommandInvocationEvent.event","location":"kord-extensions/dev.kordex.core.commands.events/-public-message-command-invocation-event/event.html","searchKeys":["event","open override val event: MessageCommandInteractionCreateEvent","dev.kordex.core.commands.events.PublicMessageCommandInvocationEvent.event"]},{"name":"open override val event: MessageCommandInteractionCreateEvent","description":"dev.kordex.core.commands.events.PublicMessageCommandSucceededEvent.event","location":"kord-extensions/dev.kordex.core.commands.events/-public-message-command-succeeded-event/event.html","searchKeys":["event","open override val event: MessageCommandInteractionCreateEvent","dev.kordex.core.commands.events.PublicMessageCommandSucceededEvent.event"]},{"name":"open override val event: MessageCreateEvent","description":"dev.kordex.core.commands.events.ChatCommandFailedChecksEvent.event","location":"kord-extensions/dev.kordex.core.commands.events/-chat-command-failed-checks-event/event.html","searchKeys":["event","open override val event: MessageCreateEvent","dev.kordex.core.commands.events.ChatCommandFailedChecksEvent.event"]},{"name":"open override val event: MessageCreateEvent","description":"dev.kordex.core.commands.events.ChatCommandFailedParsingEvent.event","location":"kord-extensions/dev.kordex.core.commands.events/-chat-command-failed-parsing-event/event.html","searchKeys":["event","open override val event: MessageCreateEvent","dev.kordex.core.commands.events.ChatCommandFailedParsingEvent.event"]},{"name":"open override val event: MessageCreateEvent","description":"dev.kordex.core.commands.events.ChatCommandFailedWithExceptionEvent.event","location":"kord-extensions/dev.kordex.core.commands.events/-chat-command-failed-with-exception-event/event.html","searchKeys":["event","open override val event: MessageCreateEvent","dev.kordex.core.commands.events.ChatCommandFailedWithExceptionEvent.event"]},{"name":"open override val event: MessageCreateEvent","description":"dev.kordex.core.commands.events.ChatCommandInvocationEvent.event","location":"kord-extensions/dev.kordex.core.commands.events/-chat-command-invocation-event/event.html","searchKeys":["event","open override val event: MessageCreateEvent","dev.kordex.core.commands.events.ChatCommandInvocationEvent.event"]},{"name":"open override val event: MessageCreateEvent","description":"dev.kordex.core.commands.events.ChatCommandSucceededEvent.event","location":"kord-extensions/dev.kordex.core.commands.events/-chat-command-succeeded-event/event.html","searchKeys":["event","open override val event: MessageCreateEvent","dev.kordex.core.commands.events.ChatCommandSucceededEvent.event"]},{"name":"open override val event: SelectMenuInteractionCreateEvent","description":"dev.kordex.core.components.menus.channel.EphemeralChannelSelectMenuContext.event","location":"kord-extensions/dev.kordex.core.components.menus.channel/-ephemeral-channel-select-menu-context/event.html","searchKeys":["event","open override val event: SelectMenuInteractionCreateEvent","dev.kordex.core.components.menus.channel.EphemeralChannelSelectMenuContext.event"]},{"name":"open override val event: SelectMenuInteractionCreateEvent","description":"dev.kordex.core.components.menus.channel.PublicChannelSelectMenuContext.event","location":"kord-extensions/dev.kordex.core.components.menus.channel/-public-channel-select-menu-context/event.html","searchKeys":["event","open override val event: SelectMenuInteractionCreateEvent","dev.kordex.core.components.menus.channel.PublicChannelSelectMenuContext.event"]},{"name":"open override val event: SelectMenuInteractionCreateEvent","description":"dev.kordex.core.components.menus.mentionable.EphemeralMentionableSelectMenuContext.event","location":"kord-extensions/dev.kordex.core.components.menus.mentionable/-ephemeral-mentionable-select-menu-context/event.html","searchKeys":["event","open override val event: SelectMenuInteractionCreateEvent","dev.kordex.core.components.menus.mentionable.EphemeralMentionableSelectMenuContext.event"]},{"name":"open override val event: SelectMenuInteractionCreateEvent","description":"dev.kordex.core.components.menus.mentionable.PublicMentionableSelectMenuContext.event","location":"kord-extensions/dev.kordex.core.components.menus.mentionable/-public-mentionable-select-menu-context/event.html","searchKeys":["event","open override val event: SelectMenuInteractionCreateEvent","dev.kordex.core.components.menus.mentionable.PublicMentionableSelectMenuContext.event"]},{"name":"open override val event: SelectMenuInteractionCreateEvent","description":"dev.kordex.core.components.menus.role.EphemeralRoleSelectMenuContext.event","location":"kord-extensions/dev.kordex.core.components.menus.role/-ephemeral-role-select-menu-context/event.html","searchKeys":["event","open override val event: SelectMenuInteractionCreateEvent","dev.kordex.core.components.menus.role.EphemeralRoleSelectMenuContext.event"]},{"name":"open override val event: SelectMenuInteractionCreateEvent","description":"dev.kordex.core.components.menus.role.PublicRoleSelectMenuContext.event","location":"kord-extensions/dev.kordex.core.components.menus.role/-public-role-select-menu-context/event.html","searchKeys":["event","open override val event: SelectMenuInteractionCreateEvent","dev.kordex.core.components.menus.role.PublicRoleSelectMenuContext.event"]},{"name":"open override val event: SelectMenuInteractionCreateEvent","description":"dev.kordex.core.components.menus.string.EphemeralStringSelectMenuContext.event","location":"kord-extensions/dev.kordex.core.components.menus.string/-ephemeral-string-select-menu-context/event.html","searchKeys":["event","open override val event: SelectMenuInteractionCreateEvent","dev.kordex.core.components.menus.string.EphemeralStringSelectMenuContext.event"]},{"name":"open override val event: SelectMenuInteractionCreateEvent","description":"dev.kordex.core.components.menus.string.PublicStringSelectMenuContext.event","location":"kord-extensions/dev.kordex.core.components.menus.string/-public-string-select-menu-context/event.html","searchKeys":["event","open override val event: SelectMenuInteractionCreateEvent","dev.kordex.core.components.menus.string.PublicStringSelectMenuContext.event"]},{"name":"open override val event: SelectMenuInteractionCreateEvent","description":"dev.kordex.core.components.menus.user.EphemeralUserSelectMenuContext.event","location":"kord-extensions/dev.kordex.core.components.menus.user/-ephemeral-user-select-menu-context/event.html","searchKeys":["event","open override val event: SelectMenuInteractionCreateEvent","dev.kordex.core.components.menus.user.EphemeralUserSelectMenuContext.event"]},{"name":"open override val event: SelectMenuInteractionCreateEvent","description":"dev.kordex.core.components.menus.user.PublicUserSelectMenuContext.event","location":"kord-extensions/dev.kordex.core.components.menus.user/-public-user-select-menu-context/event.html","searchKeys":["event","open override val event: SelectMenuInteractionCreateEvent","dev.kordex.core.components.menus.user.PublicUserSelectMenuContext.event"]},{"name":"open override val event: UserCommandInteractionCreateEvent","description":"dev.kordex.core.commands.application.user.EphemeralUserCommandContext.event","location":"kord-extensions/dev.kordex.core.commands.application.user/-ephemeral-user-command-context/event.html","searchKeys":["event","open override val event: UserCommandInteractionCreateEvent","dev.kordex.core.commands.application.user.EphemeralUserCommandContext.event"]},{"name":"open override val event: UserCommandInteractionCreateEvent","description":"dev.kordex.core.commands.application.user.PublicUserCommandContext.event","location":"kord-extensions/dev.kordex.core.commands.application.user/-public-user-command-context/event.html","searchKeys":["event","open override val event: UserCommandInteractionCreateEvent","dev.kordex.core.commands.application.user.PublicUserCommandContext.event"]},{"name":"open override val event: UserCommandInteractionCreateEvent","description":"dev.kordex.core.commands.events.EphemeralUserCommandFailedChecksEvent.event","location":"kord-extensions/dev.kordex.core.commands.events/-ephemeral-user-command-failed-checks-event/event.html","searchKeys":["event","open override val event: UserCommandInteractionCreateEvent","dev.kordex.core.commands.events.EphemeralUserCommandFailedChecksEvent.event"]},{"name":"open override val event: UserCommandInteractionCreateEvent","description":"dev.kordex.core.commands.events.EphemeralUserCommandFailedWithExceptionEvent.event","location":"kord-extensions/dev.kordex.core.commands.events/-ephemeral-user-command-failed-with-exception-event/event.html","searchKeys":["event","open override val event: UserCommandInteractionCreateEvent","dev.kordex.core.commands.events.EphemeralUserCommandFailedWithExceptionEvent.event"]},{"name":"open override val event: UserCommandInteractionCreateEvent","description":"dev.kordex.core.commands.events.EphemeralUserCommandInvocationEvent.event","location":"kord-extensions/dev.kordex.core.commands.events/-ephemeral-user-command-invocation-event/event.html","searchKeys":["event","open override val event: UserCommandInteractionCreateEvent","dev.kordex.core.commands.events.EphemeralUserCommandInvocationEvent.event"]},{"name":"open override val event: UserCommandInteractionCreateEvent","description":"dev.kordex.core.commands.events.EphemeralUserCommandSucceededEvent.event","location":"kord-extensions/dev.kordex.core.commands.events/-ephemeral-user-command-succeeded-event/event.html","searchKeys":["event","open override val event: UserCommandInteractionCreateEvent","dev.kordex.core.commands.events.EphemeralUserCommandSucceededEvent.event"]},{"name":"open override val event: UserCommandInteractionCreateEvent","description":"dev.kordex.core.commands.events.PublicUserCommandFailedChecksEvent.event","location":"kord-extensions/dev.kordex.core.commands.events/-public-user-command-failed-checks-event/event.html","searchKeys":["event","open override val event: UserCommandInteractionCreateEvent","dev.kordex.core.commands.events.PublicUserCommandFailedChecksEvent.event"]},{"name":"open override val event: UserCommandInteractionCreateEvent","description":"dev.kordex.core.commands.events.PublicUserCommandFailedWithExceptionEvent.event","location":"kord-extensions/dev.kordex.core.commands.events/-public-user-command-failed-with-exception-event/event.html","searchKeys":["event","open override val event: UserCommandInteractionCreateEvent","dev.kordex.core.commands.events.PublicUserCommandFailedWithExceptionEvent.event"]},{"name":"open override val event: UserCommandInteractionCreateEvent","description":"dev.kordex.core.commands.events.PublicUserCommandInvocationEvent.event","location":"kord-extensions/dev.kordex.core.commands.events/-public-user-command-invocation-event/event.html","searchKeys":["event","open override val event: UserCommandInteractionCreateEvent","dev.kordex.core.commands.events.PublicUserCommandInvocationEvent.event"]},{"name":"open override val event: UserCommandInteractionCreateEvent","description":"dev.kordex.core.commands.events.PublicUserCommandSucceededEvent.event","location":"kord-extensions/dev.kordex.core.commands.events/-public-user-command-succeeded-event/event.html","searchKeys":["event","open override val event: UserCommandInteractionCreateEvent","dev.kordex.core.commands.events.PublicUserCommandSucceededEvent.event"]},{"name":"open override val exception: ArgumentParsingException","description":"dev.kordex.core.commands.events.ChatCommandFailedParsingEvent.exception","location":"kord-extensions/dev.kordex.core.commands.events/-chat-command-failed-parsing-event/exception.html","searchKeys":["exception","open override val exception: ArgumentParsingException","dev.kordex.core.commands.events.ChatCommandFailedParsingEvent.exception"]},{"name":"open override val exception: ArgumentParsingException","description":"dev.kordex.core.commands.events.EphemeralSlashCommandFailedParsingEvent.exception","location":"kord-extensions/dev.kordex.core.commands.events/-ephemeral-slash-command-failed-parsing-event/exception.html","searchKeys":["exception","open override val exception: ArgumentParsingException","dev.kordex.core.commands.events.EphemeralSlashCommandFailedParsingEvent.exception"]},{"name":"open override val exception: ArgumentParsingException","description":"dev.kordex.core.commands.events.PublicSlashCommandFailedParsingEvent.exception","location":"kord-extensions/dev.kordex.core.commands.events/-public-slash-command-failed-parsing-event/exception.html","searchKeys":["exception","open override val exception: ArgumentParsingException","dev.kordex.core.commands.events.PublicSlashCommandFailedParsingEvent.exception"]},{"name":"open override val guild: GuildBehavior","description":"dev.kordex.core.events.extra.GuildJoinRequestDeleteEvent.guild","location":"kord-extensions/dev.kordex.core.events.extra/-guild-join-request-delete-event/guild.html","searchKeys":["guild","open override val guild: GuildBehavior","dev.kordex.core.events.extra.GuildJoinRequestDeleteEvent.guild"]},{"name":"open override val guild: GuildBehavior","description":"dev.kordex.core.events.extra.GuildJoinRequestUpdateEvent.guild","location":"kord-extensions/dev.kordex.core.events.extra/-guild-join-request-update-event/guild.html","searchKeys":["guild","open override val guild: GuildBehavior","dev.kordex.core.events.extra.GuildJoinRequestUpdateEvent.guild"]},{"name":"open override val interactionResponse: EphemeralMessageInteractionResponseBehavior","description":"dev.kordex.core.commands.application.message.EphemeralMessageCommandContext.interactionResponse","location":"kord-extensions/dev.kordex.core.commands.application.message/-ephemeral-message-command-context/interaction-response.html","searchKeys":["interactionResponse","open override val interactionResponse: EphemeralMessageInteractionResponseBehavior","dev.kordex.core.commands.application.message.EphemeralMessageCommandContext.interactionResponse"]},{"name":"open override val interactionResponse: EphemeralMessageInteractionResponseBehavior","description":"dev.kordex.core.commands.application.slash.EphemeralSlashCommandContext.interactionResponse","location":"kord-extensions/dev.kordex.core.commands.application.slash/-ephemeral-slash-command-context/interaction-response.html","searchKeys":["interactionResponse","open override val interactionResponse: EphemeralMessageInteractionResponseBehavior","dev.kordex.core.commands.application.slash.EphemeralSlashCommandContext.interactionResponse"]},{"name":"open override val interactionResponse: EphemeralMessageInteractionResponseBehavior","description":"dev.kordex.core.commands.application.user.EphemeralUserCommandContext.interactionResponse","location":"kord-extensions/dev.kordex.core.commands.application.user/-ephemeral-user-command-context/interaction-response.html","searchKeys":["interactionResponse","open override val interactionResponse: EphemeralMessageInteractionResponseBehavior","dev.kordex.core.commands.application.user.EphemeralUserCommandContext.interactionResponse"]},{"name":"open override val interactionResponse: EphemeralMessageInteractionResponseBehavior","description":"dev.kordex.core.components.buttons.EphemeralInteractionButtonContext.interactionResponse","location":"kord-extensions/dev.kordex.core.components.buttons/-ephemeral-interaction-button-context/interaction-response.html","searchKeys":["interactionResponse","open override val interactionResponse: EphemeralMessageInteractionResponseBehavior","dev.kordex.core.components.buttons.EphemeralInteractionButtonContext.interactionResponse"]},{"name":"open override val interactionResponse: EphemeralMessageInteractionResponseBehavior","description":"dev.kordex.core.components.menus.channel.EphemeralChannelSelectMenuContext.interactionResponse","location":"kord-extensions/dev.kordex.core.components.menus.channel/-ephemeral-channel-select-menu-context/interaction-response.html","searchKeys":["interactionResponse","open override val interactionResponse: EphemeralMessageInteractionResponseBehavior","dev.kordex.core.components.menus.channel.EphemeralChannelSelectMenuContext.interactionResponse"]},{"name":"open override val interactionResponse: EphemeralMessageInteractionResponseBehavior","description":"dev.kordex.core.components.menus.mentionable.EphemeralMentionableSelectMenuContext.interactionResponse","location":"kord-extensions/dev.kordex.core.components.menus.mentionable/-ephemeral-mentionable-select-menu-context/interaction-response.html","searchKeys":["interactionResponse","open override val interactionResponse: EphemeralMessageInteractionResponseBehavior","dev.kordex.core.components.menus.mentionable.EphemeralMentionableSelectMenuContext.interactionResponse"]},{"name":"open override val interactionResponse: EphemeralMessageInteractionResponseBehavior","description":"dev.kordex.core.components.menus.role.EphemeralRoleSelectMenuContext.interactionResponse","location":"kord-extensions/dev.kordex.core.components.menus.role/-ephemeral-role-select-menu-context/interaction-response.html","searchKeys":["interactionResponse","open override val interactionResponse: EphemeralMessageInteractionResponseBehavior","dev.kordex.core.components.menus.role.EphemeralRoleSelectMenuContext.interactionResponse"]},{"name":"open override val interactionResponse: EphemeralMessageInteractionResponseBehavior","description":"dev.kordex.core.components.menus.string.EphemeralStringSelectMenuContext.interactionResponse","location":"kord-extensions/dev.kordex.core.components.menus.string/-ephemeral-string-select-menu-context/interaction-response.html","searchKeys":["interactionResponse","open override val interactionResponse: EphemeralMessageInteractionResponseBehavior","dev.kordex.core.components.menus.string.EphemeralStringSelectMenuContext.interactionResponse"]},{"name":"open override val interactionResponse: EphemeralMessageInteractionResponseBehavior","description":"dev.kordex.core.components.menus.user.EphemeralUserSelectMenuContext.interactionResponse","location":"kord-extensions/dev.kordex.core.components.menus.user/-ephemeral-user-select-menu-context/interaction-response.html","searchKeys":["interactionResponse","open override val interactionResponse: EphemeralMessageInteractionResponseBehavior","dev.kordex.core.components.menus.user.EphemeralUserSelectMenuContext.interactionResponse"]},{"name":"open override val interactionResponse: PublicMessageInteractionResponseBehavior","description":"dev.kordex.core.commands.application.message.PublicMessageCommandContext.interactionResponse","location":"kord-extensions/dev.kordex.core.commands.application.message/-public-message-command-context/interaction-response.html","searchKeys":["interactionResponse","open override val interactionResponse: PublicMessageInteractionResponseBehavior","dev.kordex.core.commands.application.message.PublicMessageCommandContext.interactionResponse"]},{"name":"open override val interactionResponse: PublicMessageInteractionResponseBehavior","description":"dev.kordex.core.commands.application.slash.PublicSlashCommandContext.interactionResponse","location":"kord-extensions/dev.kordex.core.commands.application.slash/-public-slash-command-context/interaction-response.html","searchKeys":["interactionResponse","open override val interactionResponse: PublicMessageInteractionResponseBehavior","dev.kordex.core.commands.application.slash.PublicSlashCommandContext.interactionResponse"]},{"name":"open override val interactionResponse: PublicMessageInteractionResponseBehavior","description":"dev.kordex.core.commands.application.user.PublicUserCommandContext.interactionResponse","location":"kord-extensions/dev.kordex.core.commands.application.user/-public-user-command-context/interaction-response.html","searchKeys":["interactionResponse","open override val interactionResponse: PublicMessageInteractionResponseBehavior","dev.kordex.core.commands.application.user.PublicUserCommandContext.interactionResponse"]},{"name":"open override val interactionResponse: PublicMessageInteractionResponseBehavior","description":"dev.kordex.core.components.buttons.PublicInteractionButtonContext.interactionResponse","location":"kord-extensions/dev.kordex.core.components.buttons/-public-interaction-button-context/interaction-response.html","searchKeys":["interactionResponse","open override val interactionResponse: PublicMessageInteractionResponseBehavior","dev.kordex.core.components.buttons.PublicInteractionButtonContext.interactionResponse"]},{"name":"open override val interactionResponse: PublicMessageInteractionResponseBehavior","description":"dev.kordex.core.components.menus.channel.PublicChannelSelectMenuContext.interactionResponse","location":"kord-extensions/dev.kordex.core.components.menus.channel/-public-channel-select-menu-context/interaction-response.html","searchKeys":["interactionResponse","open override val interactionResponse: PublicMessageInteractionResponseBehavior","dev.kordex.core.components.menus.channel.PublicChannelSelectMenuContext.interactionResponse"]},{"name":"open override val interactionResponse: PublicMessageInteractionResponseBehavior","description":"dev.kordex.core.components.menus.mentionable.PublicMentionableSelectMenuContext.interactionResponse","location":"kord-extensions/dev.kordex.core.components.menus.mentionable/-public-mentionable-select-menu-context/interaction-response.html","searchKeys":["interactionResponse","open override val interactionResponse: PublicMessageInteractionResponseBehavior","dev.kordex.core.components.menus.mentionable.PublicMentionableSelectMenuContext.interactionResponse"]},{"name":"open override val interactionResponse: PublicMessageInteractionResponseBehavior","description":"dev.kordex.core.components.menus.role.PublicRoleSelectMenuContext.interactionResponse","location":"kord-extensions/dev.kordex.core.components.menus.role/-public-role-select-menu-context/interaction-response.html","searchKeys":["interactionResponse","open override val interactionResponse: PublicMessageInteractionResponseBehavior","dev.kordex.core.components.menus.role.PublicRoleSelectMenuContext.interactionResponse"]},{"name":"open override val interactionResponse: PublicMessageInteractionResponseBehavior","description":"dev.kordex.core.components.menus.string.PublicStringSelectMenuContext.interactionResponse","location":"kord-extensions/dev.kordex.core.components.menus.string/-public-string-select-menu-context/interaction-response.html","searchKeys":["interactionResponse","open override val interactionResponse: PublicMessageInteractionResponseBehavior","dev.kordex.core.components.menus.string.PublicStringSelectMenuContext.interactionResponse"]},{"name":"open override val interactionResponse: PublicMessageInteractionResponseBehavior","description":"dev.kordex.core.components.menus.user.PublicUserSelectMenuContext.interactionResponse","location":"kord-extensions/dev.kordex.core.components.menus.user/-public-user-select-menu-context/interaction-response.html","searchKeys":["interactionResponse","open override val interactionResponse: PublicMessageInteractionResponseBehavior","dev.kordex.core.components.menus.user.PublicUserSelectMenuContext.interactionResponse"]},{"name":"open override val kord: Kord","description":"dev.kordex.core.events.KordExEvent.kord","location":"kord-extensions/dev.kordex.core.events/-kord-ex-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kordex.core.events.KordExEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kordex.core.events.extra.GuildJoinRequestDeleteEvent.kord","location":"kord-extensions/dev.kordex.core.events.extra/-guild-join-request-delete-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kordex.core.events.extra.GuildJoinRequestDeleteEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kordex.core.events.extra.GuildJoinRequestUpdateEvent.kord","location":"kord-extensions/dev.kordex.core.events.extra/-guild-join-request-update-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kordex.core.events.extra.GuildJoinRequestUpdateEvent.kord"]},{"name":"open override val label: String","description":"dev.kordex.core.events.extra.models.GuildJoinRequestResponse.MultipleChoiceResponse.label","location":"kord-extensions/dev.kordex.core.events.extra.models/-guild-join-request-response/-multiple-choice-response/label.html","searchKeys":["label","open override val label: String","dev.kordex.core.events.extra.models.GuildJoinRequestResponse.MultipleChoiceResponse.label"]},{"name":"open override val label: String","description":"dev.kordex.core.events.extra.models.GuildJoinRequestResponse.ParagraphResponse.label","location":"kord-extensions/dev.kordex.core.events.extra.models/-guild-join-request-response/-paragraph-response/label.html","searchKeys":["label","open override val label: String","dev.kordex.core.events.extra.models.GuildJoinRequestResponse.ParagraphResponse.label"]},{"name":"open override val label: String","description":"dev.kordex.core.events.extra.models.GuildJoinRequestResponse.TermsResponse.label","location":"kord-extensions/dev.kordex.core.events.extra.models/-guild-join-request-response/-terms-response/label.html","searchKeys":["label","open override val label: String","dev.kordex.core.events.extra.models.GuildJoinRequestResponse.TermsResponse.label"]},{"name":"open override val member: MemberBehavior","description":"dev.kordex.core.events.extra.GuildJoinRequestDeleteEvent.member","location":"kord-extensions/dev.kordex.core.events.extra/-guild-join-request-delete-event/member.html","searchKeys":["member","open override val member: MemberBehavior","dev.kordex.core.events.extra.GuildJoinRequestDeleteEvent.member"]},{"name":"open override val member: MemberBehavior","description":"dev.kordex.core.events.extra.GuildJoinRequestUpdateEvent.member","location":"kord-extensions/dev.kordex.core.events.extra/-guild-join-request-update-event/member.html","searchKeys":["member","open override val member: MemberBehavior","dev.kordex.core.events.extra.GuildJoinRequestUpdateEvent.member"]},{"name":"open override val message: String","description":"dev.kordex.core.ArgumentParsingException.message","location":"kord-extensions/dev.kordex.core/-argument-parsing-exception/message.html","searchKeys":["message","open override val message: String","dev.kordex.core.ArgumentParsingException.message"]},{"name":"open override val message: String","description":"dev.kordex.core.CommandRegistrationException.message","location":"kord-extensions/dev.kordex.core/-command-registration-exception/message.html","searchKeys":["message","open override val message: String","dev.kordex.core.CommandRegistrationException.message"]},{"name":"open override val message: String","description":"dev.kordex.core.DiscordRelayedException.message","location":"kord-extensions/dev.kordex.core/-discord-relayed-exception/message.html","searchKeys":["message","open override val message: String","dev.kordex.core.DiscordRelayedException.message"]},{"name":"open override val message: String","description":"dev.kordex.core.EventHandlerRegistrationException.message","location":"kord-extensions/dev.kordex.core/-event-handler-registration-exception/message.html","searchKeys":["message","open override val message: String","dev.kordex.core.EventHandlerRegistrationException.message"]},{"name":"open override val message: String","description":"dev.kordex.core.InvalidArgumentException.message","location":"kord-extensions/dev.kordex.core/-invalid-argument-exception/message.html","searchKeys":["message","open override val message: String","dev.kordex.core.InvalidArgumentException.message"]},{"name":"open override val message: String","description":"dev.kordex.core.InvalidCommandException.message","location":"kord-extensions/dev.kordex.core/-invalid-command-exception/message.html","searchKeys":["message","open override val message: String","dev.kordex.core.InvalidCommandException.message"]},{"name":"open override val message: String","description":"dev.kordex.core.InvalidEventHandlerException.message","location":"kord-extensions/dev.kordex.core/-invalid-event-handler-exception/message.html","searchKeys":["message","open override val message: String","dev.kordex.core.InvalidEventHandlerException.message"]},{"name":"open override val message: String","description":"dev.kordex.core.InvalidExtensionException.message","location":"kord-extensions/dev.kordex.core/-invalid-extension-exception/message.html","searchKeys":["message","open override val message: String","dev.kordex.core.InvalidExtensionException.message"]},{"name":"open override val message: String?","description":"dev.kordex.core.parsers.DurationParserException.message","location":"kord-extensions/dev.kordex.core.parsers/-duration-parser-exception/message.html","searchKeys":["message","open override val message: String?","dev.kordex.core.parsers.DurationParserException.message"]},{"name":"open override val modal: () -> M? = null","description":"dev.kordex.core.commands.application.message.EphemeralMessageCommand.modal","location":"kord-extensions/dev.kordex.core.commands.application.message/-ephemeral-message-command/modal.html","searchKeys":["modal","open override val modal: () -> M? = null","dev.kordex.core.commands.application.message.EphemeralMessageCommand.modal"]},{"name":"open override val modal: () -> M? = null","description":"dev.kordex.core.commands.application.message.PublicMessageCommand.modal","location":"kord-extensions/dev.kordex.core.commands.application.message/-public-message-command/modal.html","searchKeys":["modal","open override val modal: () -> M? = null","dev.kordex.core.commands.application.message.PublicMessageCommand.modal"]},{"name":"open override val modal: () -> M? = null","description":"dev.kordex.core.commands.application.slash.EphemeralSlashCommand.modal","location":"kord-extensions/dev.kordex.core.commands.application.slash/-ephemeral-slash-command/modal.html","searchKeys":["modal","open override val modal: () -> M? = null","dev.kordex.core.commands.application.slash.EphemeralSlashCommand.modal"]},{"name":"open override val modal: () -> M? = null","description":"dev.kordex.core.commands.application.slash.PublicSlashCommand.modal","location":"kord-extensions/dev.kordex.core.commands.application.slash/-public-slash-command/modal.html","searchKeys":["modal","open override val modal: () -> M? = null","dev.kordex.core.commands.application.slash.PublicSlashCommand.modal"]},{"name":"open override val modal: () -> M? = null","description":"dev.kordex.core.commands.application.user.EphemeralUserCommand.modal","location":"kord-extensions/dev.kordex.core.commands.application.user/-ephemeral-user-command/modal.html","searchKeys":["modal","open override val modal: () -> M? = null","dev.kordex.core.commands.application.user.EphemeralUserCommand.modal"]},{"name":"open override val modal: () -> M? = null","description":"dev.kordex.core.commands.application.user.PublicUserCommand.modal","location":"kord-extensions/dev.kordex.core.commands.application.user/-public-user-command/modal.html","searchKeys":["modal","open override val modal: () -> M? = null","dev.kordex.core.commands.application.user.PublicUserCommand.modal"]},{"name":"open override val modal: () -> M? = null","description":"dev.kordex.core.components.buttons.EphemeralInteractionButton.modal","location":"kord-extensions/dev.kordex.core.components.buttons/-ephemeral-interaction-button/modal.html","searchKeys":["modal","open override val modal: () -> M? = null","dev.kordex.core.components.buttons.EphemeralInteractionButton.modal"]},{"name":"open override val modal: () -> M? = null","description":"dev.kordex.core.components.buttons.PublicInteractionButton.modal","location":"kord-extensions/dev.kordex.core.components.buttons/-public-interaction-button/modal.html","searchKeys":["modal","open override val modal: () -> M? = null","dev.kordex.core.components.buttons.PublicInteractionButton.modal"]},{"name":"open override val modal: () -> M? = null","description":"dev.kordex.core.components.menus.EphemeralSelectMenu.modal","location":"kord-extensions/dev.kordex.core.components.menus/-ephemeral-select-menu/modal.html","searchKeys":["modal","open override val modal: () -> M? = null","dev.kordex.core.components.menus.EphemeralSelectMenu.modal"]},{"name":"open override val modal: () -> M? = null","description":"dev.kordex.core.components.menus.PublicSelectMenu.modal","location":"kord-extensions/dev.kordex.core.components.menus/-public-select-menu/modal.html","searchKeys":["modal","open override val modal: () -> M? = null","dev.kordex.core.components.menus.PublicSelectMenu.modal"]},{"name":"open override val modal: () -> M? = null","description":"dev.kordex.core.components.menus.channel.EphemeralChannelSelectMenu.modal","location":"kord-extensions/dev.kordex.core.components.menus.channel/-ephemeral-channel-select-menu/modal.html","searchKeys":["modal","open override val modal: () -> M? = null","dev.kordex.core.components.menus.channel.EphemeralChannelSelectMenu.modal"]},{"name":"open override val modal: () -> M? = null","description":"dev.kordex.core.components.menus.channel.PublicChannelSelectMenu.modal","location":"kord-extensions/dev.kordex.core.components.menus.channel/-public-channel-select-menu/modal.html","searchKeys":["modal","open override val modal: () -> M? = null","dev.kordex.core.components.menus.channel.PublicChannelSelectMenu.modal"]},{"name":"open override val modal: () -> M? = null","description":"dev.kordex.core.components.menus.mentionable.EphemeralMentionableSelectMenu.modal","location":"kord-extensions/dev.kordex.core.components.menus.mentionable/-ephemeral-mentionable-select-menu/modal.html","searchKeys":["modal","open override val modal: () -> M? = null","dev.kordex.core.components.menus.mentionable.EphemeralMentionableSelectMenu.modal"]},{"name":"open override val modal: () -> M? = null","description":"dev.kordex.core.components.menus.mentionable.PublicMentionableSelectMenu.modal","location":"kord-extensions/dev.kordex.core.components.menus.mentionable/-public-mentionable-select-menu/modal.html","searchKeys":["modal","open override val modal: () -> M? = null","dev.kordex.core.components.menus.mentionable.PublicMentionableSelectMenu.modal"]},{"name":"open override val modal: () -> M? = null","description":"dev.kordex.core.components.menus.role.EphemeralRoleSelectMenu.modal","location":"kord-extensions/dev.kordex.core.components.menus.role/-ephemeral-role-select-menu/modal.html","searchKeys":["modal","open override val modal: () -> M? = null","dev.kordex.core.components.menus.role.EphemeralRoleSelectMenu.modal"]},{"name":"open override val modal: () -> M? = null","description":"dev.kordex.core.components.menus.role.PublicRoleSelectMenu.modal","location":"kord-extensions/dev.kordex.core.components.menus.role/-public-role-select-menu/modal.html","searchKeys":["modal","open override val modal: () -> M? = null","dev.kordex.core.components.menus.role.PublicRoleSelectMenu.modal"]},{"name":"open override val modal: () -> M? = null","description":"dev.kordex.core.components.menus.string.EphemeralStringSelectMenu.modal","location":"kord-extensions/dev.kordex.core.components.menus.string/-ephemeral-string-select-menu/modal.html","searchKeys":["modal","open override val modal: () -> M? = null","dev.kordex.core.components.menus.string.EphemeralStringSelectMenu.modal"]},{"name":"open override val modal: () -> M? = null","description":"dev.kordex.core.components.menus.string.PublicStringSelectMenu.modal","location":"kord-extensions/dev.kordex.core.components.menus.string/-public-string-select-menu/modal.html","searchKeys":["modal","open override val modal: () -> M? = null","dev.kordex.core.components.menus.string.PublicStringSelectMenu.modal"]},{"name":"open override val modal: () -> M? = null","description":"dev.kordex.core.components.menus.user.EphemeralUserSelectMenu.modal","location":"kord-extensions/dev.kordex.core.components.menus.user/-ephemeral-user-select-menu/modal.html","searchKeys":["modal","open override val modal: () -> M? = null","dev.kordex.core.components.menus.user.EphemeralUserSelectMenu.modal"]},{"name":"open override val modal: () -> M? = null","description":"dev.kordex.core.components.menus.user.PublicUserSelectMenu.modal","location":"kord-extensions/dev.kordex.core.components.menus.user/-public-user-select-menu/modal.html","searchKeys":["modal","open override val modal: () -> M? = null","dev.kordex.core.components.menus.user.PublicUserSelectMenu.modal"]},{"name":"open override val name: String","description":"dev.kordex.core.extensions.impl.AboutExtension.name","location":"kord-extensions/dev.kordex.core.extensions.impl/-about-extension/name.html","searchKeys":["name","open override val name: String","dev.kordex.core.extensions.impl.AboutExtension.name"]},{"name":"open override val name: String","description":"dev.kordex.core.extensions.impl.HelpExtension.name","location":"kord-extensions/dev.kordex.core.extensions.impl/-help-extension/name.html","searchKeys":["name","open override val name: String","dev.kordex.core.extensions.impl.HelpExtension.name"]},{"name":"open override val name: String","description":"dev.kordex.core.extensions.impl.SentryExtension.name","location":"kord-extensions/dev.kordex.core.extensions.impl/-sentry-extension/name.html","searchKeys":["name","open override val name: String","dev.kordex.core.extensions.impl.SentryExtension.name"]},{"name":"open override val options: MutableList<SelectOptionBuilder>","description":"dev.kordex.core.components.menus.string.EphemeralStringSelectMenu.options","location":"kord-extensions/dev.kordex.core.components.menus.string/-ephemeral-string-select-menu/options.html","searchKeys":["options","open override val options: MutableList<SelectOptionBuilder>","dev.kordex.core.components.menus.string.EphemeralStringSelectMenu.options"]},{"name":"open override val options: MutableList<SelectOptionBuilder>","description":"dev.kordex.core.components.menus.string.PublicStringSelectMenu.options","location":"kord-extensions/dev.kordex.core.components.menus.string/-public-string-select-menu/options.html","searchKeys":["options","open override val options: MutableList<SelectOptionBuilder>","dev.kordex.core.components.menus.string.PublicStringSelectMenu.options"]},{"name":"open override val parentCommand: SlashCommand<*, *, *>? = null","description":"dev.kordex.core.commands.application.slash.EphemeralSlashCommand.parentCommand","location":"kord-extensions/dev.kordex.core.commands.application.slash/-ephemeral-slash-command/parent-command.html","searchKeys":["parentCommand","open override val parentCommand: SlashCommand<*, *, *>? = null","dev.kordex.core.commands.application.slash.EphemeralSlashCommand.parentCommand"]},{"name":"open override val parentCommand: SlashCommand<*, *, *>? = null","description":"dev.kordex.core.commands.application.slash.PublicSlashCommand.parentCommand","location":"kord-extensions/dev.kordex.core.commands.application.slash/-public-slash-command/parent-command.html","searchKeys":["parentCommand","open override val parentCommand: SlashCommand<*, *, *>? = null","dev.kordex.core.commands.application.slash.PublicSlashCommand.parentCommand"]},{"name":"open override val parentGroup: SlashGroup? = null","description":"dev.kordex.core.commands.application.slash.EphemeralSlashCommand.parentGroup","location":"kord-extensions/dev.kordex.core.commands.application.slash/-ephemeral-slash-command/parent-group.html","searchKeys":["parentGroup","open override val parentGroup: SlashGroup? = null","dev.kordex.core.commands.application.slash.EphemeralSlashCommand.parentGroup"]},{"name":"open override val parentGroup: SlashGroup? = null","description":"dev.kordex.core.commands.application.slash.PublicSlashCommand.parentGroup","location":"kord-extensions/dev.kordex.core.commands.application.slash/-public-slash-command/parent-group.html","searchKeys":["parentGroup","open override val parentGroup: SlashGroup? = null","dev.kordex.core.commands.application.slash.PublicSlashCommand.parentGroup"]},{"name":"open override val reason: Key","description":"dev.kordex.core.ArgumentParsingException.reason","location":"kord-extensions/dev.kordex.core/-argument-parsing-exception/reason.html","searchKeys":["reason","open override val reason: Key","dev.kordex.core.ArgumentParsingException.reason"]},{"name":"open override val reason: Key","description":"dev.kordex.core.commands.events.ChatCommandFailedChecksEvent.reason","location":"kord-extensions/dev.kordex.core.commands.events/-chat-command-failed-checks-event/reason.html","searchKeys":["reason","open override val reason: Key","dev.kordex.core.commands.events.ChatCommandFailedChecksEvent.reason"]},{"name":"open override val reason: Key","description":"dev.kordex.core.commands.events.EphemeralMessageCommandFailedChecksEvent.reason","location":"kord-extensions/dev.kordex.core.commands.events/-ephemeral-message-command-failed-checks-event/reason.html","searchKeys":["reason","open override val reason: Key","dev.kordex.core.commands.events.EphemeralMessageCommandFailedChecksEvent.reason"]},{"name":"open override val reason: Key","description":"dev.kordex.core.commands.events.EphemeralSlashCommandFailedChecksEvent.reason","location":"kord-extensions/dev.kordex.core.commands.events/-ephemeral-slash-command-failed-checks-event/reason.html","searchKeys":["reason","open override val reason: Key","dev.kordex.core.commands.events.EphemeralSlashCommandFailedChecksEvent.reason"]},{"name":"open override val reason: Key","description":"dev.kordex.core.commands.events.EphemeralUserCommandFailedChecksEvent.reason","location":"kord-extensions/dev.kordex.core.commands.events/-ephemeral-user-command-failed-checks-event/reason.html","searchKeys":["reason","open override val reason: Key","dev.kordex.core.commands.events.EphemeralUserCommandFailedChecksEvent.reason"]},{"name":"open override val reason: Key","description":"dev.kordex.core.commands.events.PublicMessageCommandFailedChecksEvent.reason","location":"kord-extensions/dev.kordex.core.commands.events/-public-message-command-failed-checks-event/reason.html","searchKeys":["reason","open override val reason: Key","dev.kordex.core.commands.events.PublicMessageCommandFailedChecksEvent.reason"]},{"name":"open override val reason: Key","description":"dev.kordex.core.commands.events.PublicSlashCommandFailedChecksEvent.reason","location":"kord-extensions/dev.kordex.core.commands.events/-public-slash-command-failed-checks-event/reason.html","searchKeys":["reason","open override val reason: Key","dev.kordex.core.commands.events.PublicSlashCommandFailedChecksEvent.reason"]},{"name":"open override val reason: Key","description":"dev.kordex.core.commands.events.PublicUserCommandFailedChecksEvent.reason","location":"kord-extensions/dev.kordex.core.commands.events/-public-user-command-failed-checks-event/reason.html","searchKeys":["reason","open override val reason: Key","dev.kordex.core.commands.events.PublicUserCommandFailedChecksEvent.reason"]},{"name":"open override val required: Boolean","description":"dev.kordex.core.events.extra.models.GuildJoinRequestResponse.MultipleChoiceResponse.required","location":"kord-extensions/dev.kordex.core.events.extra.models/-guild-join-request-response/-multiple-choice-response/required.html","searchKeys":["required","open override val required: Boolean","dev.kordex.core.events.extra.models.GuildJoinRequestResponse.MultipleChoiceResponse.required"]},{"name":"open override val required: Boolean","description":"dev.kordex.core.events.extra.models.GuildJoinRequestResponse.ParagraphResponse.required","location":"kord-extensions/dev.kordex.core.events.extra.models/-guild-join-request-response/-paragraph-response/required.html","searchKeys":["required","open override val required: Boolean","dev.kordex.core.events.extra.models.GuildJoinRequestResponse.ParagraphResponse.required"]},{"name":"open override val required: Boolean","description":"dev.kordex.core.events.extra.models.GuildJoinRequestResponse.TermsResponse.required","location":"kord-extensions/dev.kordex.core.events.extra.models/-guild-join-request-response/-terms-response/required.html","searchKeys":["required","open override val required: Boolean","dev.kordex.core.events.extra.models.GuildJoinRequestResponse.TermsResponse.required"]},{"name":"open override val required: Boolean = true","description":"dev.kordex.core.commands.converters.types.MultiNamedInputConverter.required","location":"kord-extensions/dev.kordex.core.commands.converters.types/-multi-named-input-converter/required.html","searchKeys":["required","open override val required: Boolean = true","dev.kordex.core.commands.converters.types.MultiNamedInputConverter.required"]},{"name":"open override val required: Boolean = true","description":"dev.kordex.core.commands.converters.types.SingleNamedInputConverter.required","location":"kord-extensions/dev.kordex.core.commands.converters.types/-single-named-input-converter/required.html","searchKeys":["required","open override val required: Boolean = true","dev.kordex.core.commands.converters.types.SingleNamedInputConverter.required"]},{"name":"open override val requiredPerms: MutableSet<Permission>","description":"dev.kordex.core.commands.application.ApplicationCommand.requiredPerms","location":"kord-extensions/dev.kordex.core.commands.application/-application-command/required-perms.html","searchKeys":["requiredPerms","open override val requiredPerms: MutableSet<Permission>","dev.kordex.core.commands.application.ApplicationCommand.requiredPerms"]},{"name":"open override val shard: Int","description":"dev.kordex.core.events.KordExEvent.shard","location":"kord-extensions/dev.kordex.core.events/-kord-ex-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kordex.core.events.KordExEvent.shard"]},{"name":"open override val showTypeInSignature: Boolean","description":"dev.kordex.core.commands.converters.CoalescingToDefaultingConverter.showTypeInSignature","location":"kord-extensions/dev.kordex.core.commands.converters/-coalescing-to-defaulting-converter/show-type-in-signature.html","searchKeys":["showTypeInSignature","open override val showTypeInSignature: Boolean","dev.kordex.core.commands.converters.CoalescingToDefaultingConverter.showTypeInSignature"]},{"name":"open override val showTypeInSignature: Boolean","description":"dev.kordex.core.commands.converters.CoalescingToOptionalConverter.showTypeInSignature","location":"kord-extensions/dev.kordex.core.commands.converters/-coalescing-to-optional-converter/show-type-in-signature.html","searchKeys":["showTypeInSignature","open override val showTypeInSignature: Boolean","dev.kordex.core.commands.converters.CoalescingToOptionalConverter.showTypeInSignature"]},{"name":"open override val showTypeInSignature: Boolean","description":"dev.kordex.core.commands.converters.SingleToDefaultingConverter.showTypeInSignature","location":"kord-extensions/dev.kordex.core.commands.converters/-single-to-defaulting-converter/show-type-in-signature.html","searchKeys":["showTypeInSignature","open override val showTypeInSignature: Boolean","dev.kordex.core.commands.converters.SingleToDefaultingConverter.showTypeInSignature"]},{"name":"open override val showTypeInSignature: Boolean","description":"dev.kordex.core.commands.converters.SingleToListConverter.showTypeInSignature","location":"kord-extensions/dev.kordex.core.commands.converters/-single-to-list-converter/show-type-in-signature.html","searchKeys":["showTypeInSignature","open override val showTypeInSignature: Boolean","dev.kordex.core.commands.converters.SingleToListConverter.showTypeInSignature"]},{"name":"open override val showTypeInSignature: Boolean","description":"dev.kordex.core.commands.converters.SingleToOptionalConverter.showTypeInSignature","location":"kord-extensions/dev.kordex.core.commands.converters/-single-to-optional-converter/show-type-in-signature.html","searchKeys":["showTypeInSignature","open override val showTypeInSignature: Boolean","dev.kordex.core.commands.converters.SingleToOptionalConverter.showTypeInSignature"]},{"name":"open override val showTypeInSignature: Boolean = false","description":"dev.kordex.core.commands.converters.impl.RegexCoalescingConverter.showTypeInSignature","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-regex-coalescing-converter/show-type-in-signature.html","searchKeys":["showTypeInSignature","open override val showTypeInSignature: Boolean = false","dev.kordex.core.commands.converters.impl.RegexCoalescingConverter.showTypeInSignature"]},{"name":"open override val showTypeInSignature: Boolean = false","description":"dev.kordex.core.commands.converters.impl.StringCoalescingConverter.showTypeInSignature","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-string-coalescing-converter/show-type-in-signature.html","searchKeys":["showTypeInSignature","open override val showTypeInSignature: Boolean = false","dev.kordex.core.commands.converters.impl.StringCoalescingConverter.showTypeInSignature"]},{"name":"open override val showTypeInSignature: Boolean = false","description":"dev.kordex.core.commands.converters.impl.StringConverter.showTypeInSignature","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-string-converter/show-type-in-signature.html","searchKeys":["showTypeInSignature","open override val showTypeInSignature: Boolean = false","dev.kordex.core.commands.converters.impl.StringConverter.showTypeInSignature"]},{"name":"open override val signatureType: Key","description":"dev.kordex.core.commands.application.slash.converters.impl.EnumChoiceConverter.signatureType","location":"kord-extensions/dev.kordex.core.commands.application.slash.converters.impl/-enum-choice-converter/signature-type.html","searchKeys":["signatureType","open override val signatureType: Key","dev.kordex.core.commands.application.slash.converters.impl.EnumChoiceConverter.signatureType"]},{"name":"open override val signatureType: Key","description":"dev.kordex.core.commands.application.slash.converters.impl.NumberChoiceConverter.signatureType","location":"kord-extensions/dev.kordex.core.commands.application.slash.converters.impl/-number-choice-converter/signature-type.html","searchKeys":["signatureType","open override val signatureType: Key","dev.kordex.core.commands.application.slash.converters.impl.NumberChoiceConverter.signatureType"]},{"name":"open override val signatureType: Key","description":"dev.kordex.core.commands.application.slash.converters.impl.StringChoiceConverter.signatureType","location":"kord-extensions/dev.kordex.core.commands.application.slash.converters.impl/-string-choice-converter/signature-type.html","searchKeys":["signatureType","open override val signatureType: Key","dev.kordex.core.commands.application.slash.converters.impl.StringChoiceConverter.signatureType"]},{"name":"open override val signatureType: Key","description":"dev.kordex.core.commands.converters.CoalescingToDefaultingConverter.signatureType","location":"kord-extensions/dev.kordex.core.commands.converters/-coalescing-to-defaulting-converter/signature-type.html","searchKeys":["signatureType","open override val signatureType: Key","dev.kordex.core.commands.converters.CoalescingToDefaultingConverter.signatureType"]},{"name":"open override val signatureType: Key","description":"dev.kordex.core.commands.converters.CoalescingToOptionalConverter.signatureType","location":"kord-extensions/dev.kordex.core.commands.converters/-coalescing-to-optional-converter/signature-type.html","searchKeys":["signatureType","open override val signatureType: Key","dev.kordex.core.commands.converters.CoalescingToOptionalConverter.signatureType"]},{"name":"open override val signatureType: Key","description":"dev.kordex.core.commands.converters.SingleToDefaultingConverter.signatureType","location":"kord-extensions/dev.kordex.core.commands.converters/-single-to-defaulting-converter/signature-type.html","searchKeys":["signatureType","open override val signatureType: Key","dev.kordex.core.commands.converters.SingleToDefaultingConverter.signatureType"]},{"name":"open override val signatureType: Key","description":"dev.kordex.core.commands.converters.SingleToListConverter.signatureType","location":"kord-extensions/dev.kordex.core.commands.converters/-single-to-list-converter/signature-type.html","searchKeys":["signatureType","open override val signatureType: Key","dev.kordex.core.commands.converters.SingleToListConverter.signatureType"]},{"name":"open override val signatureType: Key","description":"dev.kordex.core.commands.converters.SingleToOptionalConverter.signatureType","location":"kord-extensions/dev.kordex.core.commands.converters/-single-to-optional-converter/signature-type.html","searchKeys":["signatureType","open override val signatureType: Key","dev.kordex.core.commands.converters.SingleToOptionalConverter.signatureType"]},{"name":"open override val signatureType: Key","description":"dev.kordex.core.commands.converters.impl.AttachmentConverter.signatureType","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-attachment-converter/signature-type.html","searchKeys":["signatureType","open override val signatureType: Key","dev.kordex.core.commands.converters.impl.AttachmentConverter.signatureType"]},{"name":"open override val signatureType: Key","description":"dev.kordex.core.commands.converters.impl.BooleanConverter.signatureType","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-boolean-converter/signature-type.html","searchKeys":["signatureType","open override val signatureType: Key","dev.kordex.core.commands.converters.impl.BooleanConverter.signatureType"]},{"name":"open override val signatureType: Key","description":"dev.kordex.core.commands.converters.impl.ChannelConverter.signatureType","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-channel-converter/signature-type.html","searchKeys":["signatureType","open override val signatureType: Key","dev.kordex.core.commands.converters.impl.ChannelConverter.signatureType"]},{"name":"open override val signatureType: Key","description":"dev.kordex.core.commands.converters.impl.ColorConverter.signatureType","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-color-converter/signature-type.html","searchKeys":["signatureType","open override val signatureType: Key","dev.kordex.core.commands.converters.impl.ColorConverter.signatureType"]},{"name":"open override val signatureType: Key","description":"dev.kordex.core.commands.converters.impl.DecimalConverter.signatureType","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-decimal-converter/signature-type.html","searchKeys":["signatureType","open override val signatureType: Key","dev.kordex.core.commands.converters.impl.DecimalConverter.signatureType"]},{"name":"open override val signatureType: Key","description":"dev.kordex.core.commands.converters.impl.DurationCoalescingConverter.signatureType","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-duration-coalescing-converter/signature-type.html","searchKeys":["signatureType","open override val signatureType: Key","dev.kordex.core.commands.converters.impl.DurationCoalescingConverter.signatureType"]},{"name":"open override val signatureType: Key","description":"dev.kordex.core.commands.converters.impl.DurationConverter.signatureType","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-duration-converter/signature-type.html","searchKeys":["signatureType","open override val signatureType: Key","dev.kordex.core.commands.converters.impl.DurationConverter.signatureType"]},{"name":"open override val signatureType: Key","description":"dev.kordex.core.commands.converters.impl.EmailConverter.signatureType","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-email-converter/signature-type.html","searchKeys":["signatureType","open override val signatureType: Key","dev.kordex.core.commands.converters.impl.EmailConverter.signatureType"]},{"name":"open override val signatureType: Key","description":"dev.kordex.core.commands.converters.impl.EmojiConverter.signatureType","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-emoji-converter/signature-type.html","searchKeys":["signatureType","open override val signatureType: Key","dev.kordex.core.commands.converters.impl.EmojiConverter.signatureType"]},{"name":"open override val signatureType: Key","description":"dev.kordex.core.commands.converters.impl.EnumConverter.signatureType","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-enum-converter/signature-type.html","searchKeys":["signatureType","open override val signatureType: Key","dev.kordex.core.commands.converters.impl.EnumConverter.signatureType"]},{"name":"open override val signatureType: Key","description":"dev.kordex.core.commands.converters.impl.GuildConverter.signatureType","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-guild-converter/signature-type.html","searchKeys":["signatureType","open override val signatureType: Key","dev.kordex.core.commands.converters.impl.GuildConverter.signatureType"]},{"name":"open override val signatureType: Key","description":"dev.kordex.core.commands.converters.impl.IntConverter.signatureType","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-int-converter/signature-type.html","searchKeys":["signatureType","open override val signatureType: Key","dev.kordex.core.commands.converters.impl.IntConverter.signatureType"]},{"name":"open override val signatureType: Key","description":"dev.kordex.core.commands.converters.impl.LongConverter.signatureType","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-long-converter/signature-type.html","searchKeys":["signatureType","open override val signatureType: Key","dev.kordex.core.commands.converters.impl.LongConverter.signatureType"]},{"name":"open override val signatureType: Key","description":"dev.kordex.core.commands.converters.impl.MemberConverter.signatureType","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-member-converter/signature-type.html","searchKeys":["signatureType","open override val signatureType: Key","dev.kordex.core.commands.converters.impl.MemberConverter.signatureType"]},{"name":"open override val signatureType: Key","description":"dev.kordex.core.commands.converters.impl.MessageConverter.signatureType","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-message-converter/signature-type.html","searchKeys":["signatureType","open override val signatureType: Key","dev.kordex.core.commands.converters.impl.MessageConverter.signatureType"]},{"name":"open override val signatureType: Key","description":"dev.kordex.core.commands.converters.impl.RegexCoalescingConverter.signatureType","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-regex-coalescing-converter/signature-type.html","searchKeys":["signatureType","open override val signatureType: Key","dev.kordex.core.commands.converters.impl.RegexCoalescingConverter.signatureType"]},{"name":"open override val signatureType: Key","description":"dev.kordex.core.commands.converters.impl.RegexConverter.signatureType","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-regex-converter/signature-type.html","searchKeys":["signatureType","open override val signatureType: Key","dev.kordex.core.commands.converters.impl.RegexConverter.signatureType"]},{"name":"open override val signatureType: Key","description":"dev.kordex.core.commands.converters.impl.RoleConverter.signatureType","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-role-converter/signature-type.html","searchKeys":["signatureType","open override val signatureType: Key","dev.kordex.core.commands.converters.impl.RoleConverter.signatureType"]},{"name":"open override val signatureType: Key","description":"dev.kordex.core.commands.converters.impl.SnowflakeConverter.signatureType","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-snowflake-converter/signature-type.html","searchKeys":["signatureType","open override val signatureType: Key","dev.kordex.core.commands.converters.impl.SnowflakeConverter.signatureType"]},{"name":"open override val signatureType: Key","description":"dev.kordex.core.commands.converters.impl.StringCoalescingConverter.signatureType","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-string-coalescing-converter/signature-type.html","searchKeys":["signatureType","open override val signatureType: Key","dev.kordex.core.commands.converters.impl.StringCoalescingConverter.signatureType"]},{"name":"open override val signatureType: Key","description":"dev.kordex.core.commands.converters.impl.StringConverter.signatureType","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-string-converter/signature-type.html","searchKeys":["signatureType","open override val signatureType: Key","dev.kordex.core.commands.converters.impl.StringConverter.signatureType"]},{"name":"open override val signatureType: Key","description":"dev.kordex.core.commands.converters.impl.SupportedLocaleConverter.signatureType","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-supported-locale-converter/signature-type.html","searchKeys":["signatureType","open override val signatureType: Key","dev.kordex.core.commands.converters.impl.SupportedLocaleConverter.signatureType"]},{"name":"open override val signatureType: Key","description":"dev.kordex.core.commands.converters.impl.TagConverter.signatureType","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-tag-converter/signature-type.html","searchKeys":["signatureType","open override val signatureType: Key","dev.kordex.core.commands.converters.impl.TagConverter.signatureType"]},{"name":"open override val signatureType: Key","description":"dev.kordex.core.commands.converters.impl.TimestampConverter.signatureType","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-timestamp-converter/signature-type.html","searchKeys":["signatureType","open override val signatureType: Key","dev.kordex.core.commands.converters.impl.TimestampConverter.signatureType"]},{"name":"open override val signatureType: Key","description":"dev.kordex.core.commands.converters.impl.UserConverter.signatureType","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-user-converter/signature-type.html","searchKeys":["signatureType","open override val signatureType: Key","dev.kordex.core.commands.converters.impl.UserConverter.signatureType"]},{"name":"open override val signatureType: Key","description":"dev.kordex.core.sentry.SentryIdConverter.signatureType","location":"kord-extensions/dev.kordex.core.sentry/-sentry-id-converter/signature-type.html","searchKeys":["signatureType","open override val signatureType: Key","dev.kordex.core.sentry.SentryIdConverter.signatureType"]},{"name":"open override val size: Int","description":"dev.kordex.core.utils.collections.FixedLengthQueue.size","location":"kord-extensions/dev.kordex.core.utils.collections/-fixed-length-queue/size.html","searchKeys":["size","open override val size: Int","dev.kordex.core.utils.collections.FixedLengthQueue.size"]},{"name":"open override val style: TextInputStyle","description":"dev.kordex.core.components.forms.widgets.LineTextWidget.style","location":"kord-extensions/dev.kordex.core.components.forms.widgets/-line-text-widget/style.html","searchKeys":["style","open override val style: TextInputStyle","dev.kordex.core.components.forms.widgets.LineTextWidget.style"]},{"name":"open override val style: TextInputStyle","description":"dev.kordex.core.components.forms.widgets.ParagraphTextWidget.style","location":"kord-extensions/dev.kordex.core.components.forms.widgets/-paragraph-text-widget/style.html","searchKeys":["style","open override val style: TextInputStyle","dev.kordex.core.components.forms.widgets.ParagraphTextWidget.style"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kordex.core.events.extra.GuildJoinRequestDeleteEvent.supplier","location":"kord-extensions/dev.kordex.core.events.extra/-guild-join-request-delete-event/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kordex.core.events.extra.GuildJoinRequestDeleteEvent.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kordex.core.events.extra.GuildJoinRequestUpdateEvent.supplier","location":"kord-extensions/dev.kordex.core.events.extra/-guild-join-request-update-event/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kordex.core.events.extra.GuildJoinRequestUpdateEvent.supplier"]},{"name":"open override val throwable: Throwable","description":"dev.kordex.core.commands.events.ChatCommandFailedWithExceptionEvent.throwable","location":"kord-extensions/dev.kordex.core.commands.events/-chat-command-failed-with-exception-event/throwable.html","searchKeys":["throwable","open override val throwable: Throwable","dev.kordex.core.commands.events.ChatCommandFailedWithExceptionEvent.throwable"]},{"name":"open override val throwable: Throwable","description":"dev.kordex.core.commands.events.EphemeralMessageCommandFailedWithExceptionEvent.throwable","location":"kord-extensions/dev.kordex.core.commands.events/-ephemeral-message-command-failed-with-exception-event/throwable.html","searchKeys":["throwable","open override val throwable: Throwable","dev.kordex.core.commands.events.EphemeralMessageCommandFailedWithExceptionEvent.throwable"]},{"name":"open override val throwable: Throwable","description":"dev.kordex.core.commands.events.EphemeralSlashCommandFailedWithExceptionEvent.throwable","location":"kord-extensions/dev.kordex.core.commands.events/-ephemeral-slash-command-failed-with-exception-event/throwable.html","searchKeys":["throwable","open override val throwable: Throwable","dev.kordex.core.commands.events.EphemeralSlashCommandFailedWithExceptionEvent.throwable"]},{"name":"open override val throwable: Throwable","description":"dev.kordex.core.commands.events.EphemeralUserCommandFailedWithExceptionEvent.throwable","location":"kord-extensions/dev.kordex.core.commands.events/-ephemeral-user-command-failed-with-exception-event/throwable.html","searchKeys":["throwable","open override val throwable: Throwable","dev.kordex.core.commands.events.EphemeralUserCommandFailedWithExceptionEvent.throwable"]},{"name":"open override val throwable: Throwable","description":"dev.kordex.core.commands.events.PublicMessageCommandFailedWithExceptionEvent.throwable","location":"kord-extensions/dev.kordex.core.commands.events/-public-message-command-failed-with-exception-event/throwable.html","searchKeys":["throwable","open override val throwable: Throwable","dev.kordex.core.commands.events.PublicMessageCommandFailedWithExceptionEvent.throwable"]},{"name":"open override val throwable: Throwable","description":"dev.kordex.core.commands.events.PublicSlashCommandFailedWithExceptionEvent.throwable","location":"kord-extensions/dev.kordex.core.commands.events/-public-slash-command-failed-with-exception-event/throwable.html","searchKeys":["throwable","open override val throwable: Throwable","dev.kordex.core.commands.events.PublicSlashCommandFailedWithExceptionEvent.throwable"]},{"name":"open override val throwable: Throwable","description":"dev.kordex.core.commands.events.PublicUserCommandFailedWithExceptionEvent.throwable","location":"kord-extensions/dev.kordex.core.commands.events/-public-user-command-failed-with-exception-event/throwable.html","searchKeys":["throwable","open override val throwable: Throwable","dev.kordex.core.commands.events.PublicUserCommandFailedWithExceptionEvent.throwable"]},{"name":"open override val timeout: Duration","description":"dev.kordex.core.components.forms.ModalForm.timeout","location":"kord-extensions/dev.kordex.core.components.forms/-modal-form/timeout.html","searchKeys":["timeout","open override val timeout: Duration","dev.kordex.core.components.forms.ModalForm.timeout"]},{"name":"open override val type: ApplicationCommandType","description":"dev.kordex.core.commands.application.message.MessageCommand.type","location":"kord-extensions/dev.kordex.core.commands.application.message/-message-command/type.html","searchKeys":["type","open override val type: ApplicationCommandType","dev.kordex.core.commands.application.message.MessageCommand.type"]},{"name":"open override val type: ApplicationCommandType","description":"dev.kordex.core.commands.application.slash.SlashCommand.type","location":"kord-extensions/dev.kordex.core.commands.application.slash/-slash-command/type.html","searchKeys":["type","open override val type: ApplicationCommandType","dev.kordex.core.commands.application.slash.SlashCommand.type"]},{"name":"open override val type: ApplicationCommandType","description":"dev.kordex.core.commands.application.user.UserCommand.type","location":"kord-extensions/dev.kordex.core.commands.application.user/-user-command/type.html","searchKeys":["type","open override val type: ApplicationCommandType","dev.kordex.core.commands.application.user.UserCommand.type"]},{"name":"open override val unitWidth: Int = 5","description":"dev.kordex.core.components.menus.SelectMenu.unitWidth","location":"kord-extensions/dev.kordex.core.components.menus/-select-menu/unit-width.html","searchKeys":["unitWidth","open override val unitWidth: Int = 5","dev.kordex.core.components.menus.SelectMenu.unitWidth"]},{"name":"open override val user: UserBehavior","description":"dev.kordex.core.events.extra.GuildJoinRequestDeleteEvent.user","location":"kord-extensions/dev.kordex.core.events.extra/-guild-join-request-delete-event/user.html","searchKeys":["user","open override val user: UserBehavior","dev.kordex.core.events.extra.GuildJoinRequestDeleteEvent.user"]},{"name":"open override val user: UserBehavior","description":"dev.kordex.core.events.extra.GuildJoinRequestUpdateEvent.user","location":"kord-extensions/dev.kordex.core.events.extra/-guild-join-request-update-event/user.html","searchKeys":["user","open override val user: UserBehavior","dev.kordex.core.events.extra.GuildJoinRequestUpdateEvent.user"]},{"name":"open override var channelTypes: MutableList<ChannelType>","description":"dev.kordex.core.components.menus.channel.EphemeralChannelSelectMenu.channelTypes","location":"kord-extensions/dev.kordex.core.components.menus.channel/-ephemeral-channel-select-menu/channel-types.html","searchKeys":["channelTypes","open override var channelTypes: MutableList<ChannelType>","dev.kordex.core.components.menus.channel.EphemeralChannelSelectMenu.channelTypes"]},{"name":"open override var channelTypes: MutableList<ChannelType>","description":"dev.kordex.core.components.menus.channel.PublicChannelSelectMenu.channelTypes","location":"kord-extensions/dev.kordex.core.components.menus.channel/-public-channel-select-menu/channel-types.html","searchKeys":["channelTypes","open override var channelTypes: MutableList<ChannelType>","dev.kordex.core.components.menus.channel.PublicChannelSelectMenu.channelTypes"]},{"name":"open override var defaultChannels: MutableList<Snowflake>","description":"dev.kordex.core.components.menus.channel.EphemeralChannelSelectMenu.defaultChannels","location":"kord-extensions/dev.kordex.core.components.menus.channel/-ephemeral-channel-select-menu/default-channels.html","searchKeys":["defaultChannels","open override var defaultChannels: MutableList<Snowflake>","dev.kordex.core.components.menus.channel.EphemeralChannelSelectMenu.defaultChannels"]},{"name":"open override var defaultChannels: MutableList<Snowflake>","description":"dev.kordex.core.components.menus.channel.PublicChannelSelectMenu.defaultChannels","location":"kord-extensions/dev.kordex.core.components.menus.channel/-public-channel-select-menu/default-channels.html","searchKeys":["defaultChannels","open override var defaultChannels: MutableList<Snowflake>","dev.kordex.core.components.menus.channel.PublicChannelSelectMenu.defaultChannels"]},{"name":"open override var defaultRoles: MutableList<Snowflake>","description":"dev.kordex.core.components.menus.mentionable.EphemeralMentionableSelectMenu.defaultRoles","location":"kord-extensions/dev.kordex.core.components.menus.mentionable/-ephemeral-mentionable-select-menu/default-roles.html","searchKeys":["defaultRoles","open override var defaultRoles: MutableList<Snowflake>","dev.kordex.core.components.menus.mentionable.EphemeralMentionableSelectMenu.defaultRoles"]},{"name":"open override var defaultRoles: MutableList<Snowflake>","description":"dev.kordex.core.components.menus.mentionable.PublicMentionableSelectMenu.defaultRoles","location":"kord-extensions/dev.kordex.core.components.menus.mentionable/-public-mentionable-select-menu/default-roles.html","searchKeys":["defaultRoles","open override var defaultRoles: MutableList<Snowflake>","dev.kordex.core.components.menus.mentionable.PublicMentionableSelectMenu.defaultRoles"]},{"name":"open override var defaultRoles: MutableList<Snowflake>","description":"dev.kordex.core.components.menus.role.EphemeralRoleSelectMenu.defaultRoles","location":"kord-extensions/dev.kordex.core.components.menus.role/-ephemeral-role-select-menu/default-roles.html","searchKeys":["defaultRoles","open override var defaultRoles: MutableList<Snowflake>","dev.kordex.core.components.menus.role.EphemeralRoleSelectMenu.defaultRoles"]},{"name":"open override var defaultRoles: MutableList<Snowflake>","description":"dev.kordex.core.components.menus.role.PublicRoleSelectMenu.defaultRoles","location":"kord-extensions/dev.kordex.core.components.menus.role/-public-role-select-menu/default-roles.html","searchKeys":["defaultRoles","open override var defaultRoles: MutableList<Snowflake>","dev.kordex.core.components.menus.role.PublicRoleSelectMenu.defaultRoles"]},{"name":"open override var defaultUsers: MutableList<Snowflake>","description":"dev.kordex.core.components.menus.mentionable.EphemeralMentionableSelectMenu.defaultUsers","location":"kord-extensions/dev.kordex.core.components.menus.mentionable/-ephemeral-mentionable-select-menu/default-users.html","searchKeys":["defaultUsers","open override var defaultUsers: MutableList<Snowflake>","dev.kordex.core.components.menus.mentionable.EphemeralMentionableSelectMenu.defaultUsers"]},{"name":"open override var defaultUsers: MutableList<Snowflake>","description":"dev.kordex.core.components.menus.mentionable.PublicMentionableSelectMenu.defaultUsers","location":"kord-extensions/dev.kordex.core.components.menus.mentionable/-public-mentionable-select-menu/default-users.html","searchKeys":["defaultUsers","open override var defaultUsers: MutableList<Snowflake>","dev.kordex.core.components.menus.mentionable.PublicMentionableSelectMenu.defaultUsers"]},{"name":"open override var defaultUsers: MutableList<Snowflake>","description":"dev.kordex.core.components.menus.user.EphemeralUserSelectMenu.defaultUsers","location":"kord-extensions/dev.kordex.core.components.menus.user/-ephemeral-user-select-menu/default-users.html","searchKeys":["defaultUsers","open override var defaultUsers: MutableList<Snowflake>","dev.kordex.core.components.menus.user.EphemeralUserSelectMenu.defaultUsers"]},{"name":"open override var defaultUsers: MutableList<Snowflake>","description":"dev.kordex.core.components.menus.user.PublicUserSelectMenu.defaultUsers","location":"kord-extensions/dev.kordex.core.components.menus.user/-public-user-select-menu/default-users.html","searchKeys":["defaultUsers","open override var defaultUsers: MutableList<Snowflake>","dev.kordex.core.components.menus.user.PublicUserSelectMenu.defaultUsers"]},{"name":"open override var height: Int","description":"dev.kordex.core.components.forms.widgets.TextInputWidget.height","location":"kord-extensions/dev.kordex.core.components.forms.widgets/-text-input-widget/height.html","searchKeys":["height","open override var height: Int","dev.kordex.core.components.forms.widgets.TextInputWidget.height"]},{"name":"open override var ignoreErrors: Boolean","description":"dev.kordex.core.commands.converters.builders.DefaultingCoalescingConverterBuilder.ignoreErrors","location":"kord-extensions/dev.kordex.core.commands.converters.builders/-defaulting-coalescing-converter-builder/ignore-errors.html","searchKeys":["ignoreErrors","open override var ignoreErrors: Boolean","dev.kordex.core.commands.converters.builders.DefaultingCoalescingConverterBuilder.ignoreErrors"]},{"name":"open override var ignoreErrors: Boolean","description":"dev.kordex.core.commands.converters.builders.OptionalCoalescingConverterBuilder.ignoreErrors","location":"kord-extensions/dev.kordex.core.commands.converters.builders/-optional-coalescing-converter-builder/ignore-errors.html","searchKeys":["ignoreErrors","open override var ignoreErrors: Boolean","dev.kordex.core.commands.converters.builders.OptionalCoalescingConverterBuilder.ignoreErrors"]},{"name":"open override var locking: Boolean","description":"dev.kordex.core.ExtensibleBot.locking","location":"kord-extensions/dev.kordex.core/-extensible-bot/locking.html","searchKeys":["locking","open override var locking: Boolean","dev.kordex.core.ExtensibleBot.locking"]},{"name":"open override var locking: Boolean","description":"dev.kordex.core.commands.Command.locking","location":"kord-extensions/dev.kordex.core.commands/-command/locking.html","searchKeys":["locking","open override var locking: Boolean","dev.kordex.core.commands.Command.locking"]},{"name":"open override var locking: Boolean","description":"dev.kordex.core.components.ComponentWithAction.locking","location":"kord-extensions/dev.kordex.core.components/-component-with-action/locking.html","searchKeys":["locking","open override var locking: Boolean","dev.kordex.core.components.ComponentWithAction.locking"]},{"name":"open override var mutex: Mutex?","description":"dev.kordex.core.ExtensibleBot.mutex","location":"kord-extensions/dev.kordex.core/-extensible-bot/mutex.html","searchKeys":["mutex","open override var mutex: Mutex?","dev.kordex.core.ExtensibleBot.mutex"]},{"name":"open override var mutex: Mutex?","description":"dev.kordex.core.commands.Command.mutex","location":"kord-extensions/dev.kordex.core.commands/-command/mutex.html","searchKeys":["mutex","open override var mutex: Mutex?","dev.kordex.core.commands.Command.mutex"]},{"name":"open override var mutex: Mutex?","description":"dev.kordex.core.components.ComponentWithAction.mutex","location":"kord-extensions/dev.kordex.core.components/-component-with-action/mutex.html","searchKeys":["mutex","open override var mutex: Mutex?","dev.kordex.core.components.ComponentWithAction.mutex"]},{"name":"open override var parsed: List<T>","description":"dev.kordex.core.commands.converters.ListConverter.parsed","location":"kord-extensions/dev.kordex.core.commands.converters/-list-converter/parsed.html","searchKeys":["parsed","open override var parsed: List<T>","dev.kordex.core.commands.converters.ListConverter.parsed"]},{"name":"open override var parsed: T","description":"dev.kordex.core.commands.converters.DefaultingCoalescingConverter.parsed","location":"kord-extensions/dev.kordex.core.commands.converters/-defaulting-coalescing-converter/parsed.html","searchKeys":["parsed","open override var parsed: T","dev.kordex.core.commands.converters.DefaultingCoalescingConverter.parsed"]},{"name":"open override var parsed: T","description":"dev.kordex.core.commands.converters.DefaultingConverter.parsed","location":"kord-extensions/dev.kordex.core.commands.converters/-defaulting-converter/parsed.html","searchKeys":["parsed","open override var parsed: T","dev.kordex.core.commands.converters.DefaultingConverter.parsed"]},{"name":"open override var parsed: T?","description":"dev.kordex.core.commands.converters.OptionalCoalescingConverter.parsed","location":"kord-extensions/dev.kordex.core.commands.converters/-optional-coalescing-converter/parsed.html","searchKeys":["parsed","open override var parsed: T?","dev.kordex.core.commands.converters.OptionalCoalescingConverter.parsed"]},{"name":"open override var parsed: T?","description":"dev.kordex.core.commands.converters.OptionalConverter.parsed","location":"kord-extensions/dev.kordex.core.commands.converters/-optional-converter/parsed.html","searchKeys":["parsed","open override var parsed: T?","dev.kordex.core.commands.converters.OptionalConverter.parsed"]},{"name":"open override var partialEmoji: DiscordPartialEmoji?","description":"dev.kordex.core.components.buttons.InteractionButton.partialEmoji","location":"kord-extensions/dev.kordex.core.components.buttons/-interaction-button/partial-emoji.html","searchKeys":["partialEmoji","open override var partialEmoji: DiscordPartialEmoji?","dev.kordex.core.components.buttons.InteractionButton.partialEmoji"]},{"name":"open override var partialEmoji: DiscordPartialEmoji?","description":"dev.kordex.core.components.buttons.InteractionButtonWithAction.partialEmoji","location":"kord-extensions/dev.kordex.core.components.buttons/-interaction-button-with-action/partial-emoji.html","searchKeys":["partialEmoji","open override var partialEmoji: DiscordPartialEmoji?","dev.kordex.core.components.buttons.InteractionButtonWithAction.partialEmoji"]},{"name":"open override var partialEmoji: DiscordPartialEmoji?","description":"dev.kordex.core.components.buttons.InteractionButtonWithID.partialEmoji","location":"kord-extensions/dev.kordex.core.components.buttons/-interaction-button-with-i-d/partial-emoji.html","searchKeys":["partialEmoji","open override var partialEmoji: DiscordPartialEmoji?","dev.kordex.core.components.buttons.InteractionButtonWithID.partialEmoji"]},{"name":"open override var resolvedLocale: Locale?","description":"dev.kordex.core.commands.CommandContext.resolvedLocale","location":"kord-extensions/dev.kordex.core.commands/-command-context/resolved-locale.html","searchKeys":["resolvedLocale","open override var resolvedLocale: Locale?","dev.kordex.core.commands.CommandContext.resolvedLocale"]},{"name":"open override var resolvedLocale: Locale?","description":"dev.kordex.core.components.ComponentContext.resolvedLocale","location":"kord-extensions/dev.kordex.core.components/-component-context/resolved-locale.html","searchKeys":["resolvedLocale","open override var resolvedLocale: Locale?","dev.kordex.core.components.ComponentContext.resolvedLocale"]},{"name":"open override var resolvedLocale: Locale?","description":"dev.kordex.core.events.EventContext.resolvedLocale","location":"kord-extensions/dev.kordex.core.events/-event-context/resolved-locale.html","searchKeys":["resolvedLocale","open override var resolvedLocale: Locale?","dev.kordex.core.events.EventContext.resolvedLocale"]},{"name":"open override var validator: Validator<Attachment>","description":"dev.kordex.core.commands.converters.impl.AttachmentConverter.validator","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-attachment-converter/validator.html","searchKeys":["validator","open override var validator: Validator<Attachment>","dev.kordex.core.commands.converters.impl.AttachmentConverter.validator"]},{"name":"open override var validator: Validator<Boolean>","description":"dev.kordex.core.commands.converters.impl.BooleanConverter.validator","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-boolean-converter/validator.html","searchKeys":["validator","open override var validator: Validator<Boolean>","dev.kordex.core.commands.converters.impl.BooleanConverter.validator"]},{"name":"open override var validator: Validator<Channel>","description":"dev.kordex.core.commands.converters.impl.ChannelConverter.validator","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-channel-converter/validator.html","searchKeys":["validator","open override var validator: Validator<Channel>","dev.kordex.core.commands.converters.impl.ChannelConverter.validator"]},{"name":"open override var validator: Validator<Color>","description":"dev.kordex.core.commands.converters.impl.ColorConverter.validator","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-color-converter/validator.html","searchKeys":["validator","open override var validator: Validator<Color>","dev.kordex.core.commands.converters.impl.ColorConverter.validator"]},{"name":"open override var validator: Validator<DateTimePeriod>","description":"dev.kordex.core.commands.converters.impl.DurationCoalescingConverter.validator","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-duration-coalescing-converter/validator.html","searchKeys":["validator","open override var validator: Validator<DateTimePeriod>","dev.kordex.core.commands.converters.impl.DurationCoalescingConverter.validator"]},{"name":"open override var validator: Validator<DateTimePeriod>","description":"dev.kordex.core.commands.converters.impl.DurationConverter.validator","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-duration-converter/validator.html","searchKeys":["validator","open override var validator: Validator<DateTimePeriod>","dev.kordex.core.commands.converters.impl.DurationConverter.validator"]},{"name":"open override var validator: Validator<Double>","description":"dev.kordex.core.commands.converters.impl.DecimalConverter.validator","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-decimal-converter/validator.html","searchKeys":["validator","open override var validator: Validator<Double>","dev.kordex.core.commands.converters.impl.DecimalConverter.validator"]},{"name":"open override var validator: Validator<E>","description":"dev.kordex.core.commands.application.slash.converters.impl.EnumChoiceConverter.validator","location":"kord-extensions/dev.kordex.core.commands.application.slash.converters.impl/-enum-choice-converter/validator.html","searchKeys":["validator","open override var validator: Validator<E>","dev.kordex.core.commands.application.slash.converters.impl.EnumChoiceConverter.validator"]},{"name":"open override var validator: Validator<E>","description":"dev.kordex.core.commands.converters.impl.EnumConverter.validator","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-enum-converter/validator.html","searchKeys":["validator","open override var validator: Validator<E>","dev.kordex.core.commands.converters.impl.EnumConverter.validator"]},{"name":"open override var validator: Validator<Emoji>","description":"dev.kordex.core.commands.converters.impl.EmojiConverter.validator","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-emoji-converter/validator.html","searchKeys":["validator","open override var validator: Validator<Emoji>","dev.kordex.core.commands.converters.impl.EmojiConverter.validator"]},{"name":"open override var validator: Validator<FormattedTimestamp>","description":"dev.kordex.core.commands.converters.impl.TimestampConverter.validator","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-timestamp-converter/validator.html","searchKeys":["validator","open override var validator: Validator<FormattedTimestamp>","dev.kordex.core.commands.converters.impl.TimestampConverter.validator"]},{"name":"open override var validator: Validator<ForumTag>","description":"dev.kordex.core.commands.converters.impl.TagConverter.validator","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-tag-converter/validator.html","searchKeys":["validator","open override var validator: Validator<ForumTag>","dev.kordex.core.commands.converters.impl.TagConverter.validator"]},{"name":"open override var validator: Validator<Guild>","description":"dev.kordex.core.commands.converters.impl.GuildConverter.validator","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-guild-converter/validator.html","searchKeys":["validator","open override var validator: Validator<Guild>","dev.kordex.core.commands.converters.impl.GuildConverter.validator"]},{"name":"open override var validator: Validator<Int>","description":"dev.kordex.core.commands.converters.impl.IntConverter.validator","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-int-converter/validator.html","searchKeys":["validator","open override var validator: Validator<Int>","dev.kordex.core.commands.converters.impl.IntConverter.validator"]},{"name":"open override var validator: Validator<List<T>>","description":"dev.kordex.core.commands.converters.ListConverter.validator","location":"kord-extensions/dev.kordex.core.commands.converters/-list-converter/validator.html","searchKeys":["validator","open override var validator: Validator<List<T>>","dev.kordex.core.commands.converters.ListConverter.validator"]},{"name":"open override var validator: Validator<List<T>>","description":"dev.kordex.core.commands.converters.SingleToListConverter.validator","location":"kord-extensions/dev.kordex.core.commands.converters/-single-to-list-converter/validator.html","searchKeys":["validator","open override var validator: Validator<List<T>>","dev.kordex.core.commands.converters.SingleToListConverter.validator"]},{"name":"open override var validator: Validator<Locale>","description":"dev.kordex.core.commands.converters.impl.SupportedLocaleConverter.validator","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-supported-locale-converter/validator.html","searchKeys":["validator","open override var validator: Validator<Locale>","dev.kordex.core.commands.converters.impl.SupportedLocaleConverter.validator"]},{"name":"open override var validator: Validator<Long>","description":"dev.kordex.core.commands.application.slash.converters.impl.NumberChoiceConverter.validator","location":"kord-extensions/dev.kordex.core.commands.application.slash.converters.impl/-number-choice-converter/validator.html","searchKeys":["validator","open override var validator: Validator<Long>","dev.kordex.core.commands.application.slash.converters.impl.NumberChoiceConverter.validator"]},{"name":"open override var validator: Validator<Long>","description":"dev.kordex.core.commands.converters.impl.LongConverter.validator","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-long-converter/validator.html","searchKeys":["validator","open override var validator: Validator<Long>","dev.kordex.core.commands.converters.impl.LongConverter.validator"]},{"name":"open override var validator: Validator<Member>","description":"dev.kordex.core.commands.converters.impl.MemberConverter.validator","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-member-converter/validator.html","searchKeys":["validator","open override var validator: Validator<Member>","dev.kordex.core.commands.converters.impl.MemberConverter.validator"]},{"name":"open override var validator: Validator<Message>","description":"dev.kordex.core.commands.converters.impl.MessageConverter.validator","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-message-converter/validator.html","searchKeys":["validator","open override var validator: Validator<Message>","dev.kordex.core.commands.converters.impl.MessageConverter.validator"]},{"name":"open override var validator: Validator<Regex>","description":"dev.kordex.core.commands.converters.impl.RegexCoalescingConverter.validator","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-regex-coalescing-converter/validator.html","searchKeys":["validator","open override var validator: Validator<Regex>","dev.kordex.core.commands.converters.impl.RegexCoalescingConverter.validator"]},{"name":"open override var validator: Validator<Regex>","description":"dev.kordex.core.commands.converters.impl.RegexConverter.validator","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-regex-converter/validator.html","searchKeys":["validator","open override var validator: Validator<Regex>","dev.kordex.core.commands.converters.impl.RegexConverter.validator"]},{"name":"open override var validator: Validator<Role>","description":"dev.kordex.core.commands.converters.impl.RoleConverter.validator","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-role-converter/validator.html","searchKeys":["validator","open override var validator: Validator<Role>","dev.kordex.core.commands.converters.impl.RoleConverter.validator"]},{"name":"open override var validator: Validator<SentryId>","description":"dev.kordex.core.sentry.SentryIdConverter.validator","location":"kord-extensions/dev.kordex.core.sentry/-sentry-id-converter/validator.html","searchKeys":["validator","open override var validator: Validator<SentryId>","dev.kordex.core.sentry.SentryIdConverter.validator"]},{"name":"open override var validator: Validator<Snowflake>","description":"dev.kordex.core.commands.converters.impl.SnowflakeConverter.validator","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-snowflake-converter/validator.html","searchKeys":["validator","open override var validator: Validator<Snowflake>","dev.kordex.core.commands.converters.impl.SnowflakeConverter.validator"]},{"name":"open override var validator: Validator<String>","description":"dev.kordex.core.commands.application.slash.converters.impl.StringChoiceConverter.validator","location":"kord-extensions/dev.kordex.core.commands.application.slash.converters.impl/-string-choice-converter/validator.html","searchKeys":["validator","open override var validator: Validator<String>","dev.kordex.core.commands.application.slash.converters.impl.StringChoiceConverter.validator"]},{"name":"open override var validator: Validator<String>","description":"dev.kordex.core.commands.converters.impl.EmailConverter.validator","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-email-converter/validator.html","searchKeys":["validator","open override var validator: Validator<String>","dev.kordex.core.commands.converters.impl.EmailConverter.validator"]},{"name":"open override var validator: Validator<String>","description":"dev.kordex.core.commands.converters.impl.StringCoalescingConverter.validator","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-string-coalescing-converter/validator.html","searchKeys":["validator","open override var validator: Validator<String>","dev.kordex.core.commands.converters.impl.StringCoalescingConverter.validator"]},{"name":"open override var validator: Validator<String>","description":"dev.kordex.core.commands.converters.impl.StringConverter.validator","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-string-converter/validator.html","searchKeys":["validator","open override var validator: Validator<String>","dev.kordex.core.commands.converters.impl.StringConverter.validator"]},{"name":"open override var validator: Validator<T>","description":"dev.kordex.core.commands.converters.CoalescingConverter.validator","location":"kord-extensions/dev.kordex.core.commands.converters/-coalescing-converter/validator.html","searchKeys":["validator","open override var validator: Validator<T>","dev.kordex.core.commands.converters.CoalescingConverter.validator"]},{"name":"open override var validator: Validator<T>","description":"dev.kordex.core.commands.converters.CoalescingToDefaultingConverter.validator","location":"kord-extensions/dev.kordex.core.commands.converters/-coalescing-to-defaulting-converter/validator.html","searchKeys":["validator","open override var validator: Validator<T>","dev.kordex.core.commands.converters.CoalescingToDefaultingConverter.validator"]},{"name":"open override var validator: Validator<T>","description":"dev.kordex.core.commands.converters.DefaultingCoalescingConverter.validator","location":"kord-extensions/dev.kordex.core.commands.converters/-defaulting-coalescing-converter/validator.html","searchKeys":["validator","open override var validator: Validator<T>","dev.kordex.core.commands.converters.DefaultingCoalescingConverter.validator"]},{"name":"open override var validator: Validator<T>","description":"dev.kordex.core.commands.converters.DefaultingConverter.validator","location":"kord-extensions/dev.kordex.core.commands.converters/-defaulting-converter/validator.html","searchKeys":["validator","open override var validator: Validator<T>","dev.kordex.core.commands.converters.DefaultingConverter.validator"]},{"name":"open override var validator: Validator<T>","description":"dev.kordex.core.commands.converters.SingleConverter.validator","location":"kord-extensions/dev.kordex.core.commands.converters/-single-converter/validator.html","searchKeys":["validator","open override var validator: Validator<T>","dev.kordex.core.commands.converters.SingleConverter.validator"]},{"name":"open override var validator: Validator<T>","description":"dev.kordex.core.commands.converters.SingleToDefaultingConverter.validator","location":"kord-extensions/dev.kordex.core.commands.converters/-single-to-defaulting-converter/validator.html","searchKeys":["validator","open override var validator: Validator<T>","dev.kordex.core.commands.converters.SingleToDefaultingConverter.validator"]},{"name":"open override var validator: Validator<T?>","description":"dev.kordex.core.commands.converters.CoalescingToOptionalConverter.validator","location":"kord-extensions/dev.kordex.core.commands.converters/-coalescing-to-optional-converter/validator.html","searchKeys":["validator","open override var validator: Validator<T?>","dev.kordex.core.commands.converters.CoalescingToOptionalConverter.validator"]},{"name":"open override var validator: Validator<T?>","description":"dev.kordex.core.commands.converters.OptionalCoalescingConverter.validator","location":"kord-extensions/dev.kordex.core.commands.converters/-optional-coalescing-converter/validator.html","searchKeys":["validator","open override var validator: Validator<T?>","dev.kordex.core.commands.converters.OptionalCoalescingConverter.validator"]},{"name":"open override var validator: Validator<T?>","description":"dev.kordex.core.commands.converters.OptionalConverter.validator","location":"kord-extensions/dev.kordex.core.commands.converters/-optional-converter/validator.html","searchKeys":["validator","open override var validator: Validator<T?>","dev.kordex.core.commands.converters.OptionalConverter.validator"]},{"name":"open override var validator: Validator<T?>","description":"dev.kordex.core.commands.converters.SingleToOptionalConverter.validator","location":"kord-extensions/dev.kordex.core.commands.converters/-single-to-optional-converter/validator.html","searchKeys":["validator","open override var validator: Validator<T?>","dev.kordex.core.commands.converters.SingleToOptionalConverter.validator"]},{"name":"open override var validator: Validator<User>","description":"dev.kordex.core.commands.converters.impl.UserConverter.validator","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-user-converter/validator.html","searchKeys":["validator","open override var validator: Validator<User>","dev.kordex.core.commands.converters.impl.UserConverter.validator"]},{"name":"open override var value: String?","description":"dev.kordex.core.components.forms.widgets.TextInputWidget.value","location":"kord-extensions/dev.kordex.core.components.forms.widgets/-text-input-widget/value.html","searchKeys":["value","open override var value: String?","dev.kordex.core.components.forms.widgets.TextInputWidget.value"]},{"name":"open override var width: Int","description":"dev.kordex.core.components.forms.widgets.TextInputWidget.width","location":"kord-extensions/dev.kordex.core.components.forms.widgets/-text-input-widget/width.html","searchKeys":["width","open override var width: Int","dev.kordex.core.components.forms.widgets.TextInputWidget.width"]},{"name":"open suspend fun <R : Arguments> chatCommand(arguments: () -> R?, body: suspend ChatCommand<R>.() -> Unit): ChatCommand<R>","description":"dev.kordex.core.commands.chat.ChatGroupCommand.chatCommand","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-group-command/chat-command.html","searchKeys":["chatCommand","open suspend fun <R : Arguments> chatCommand(arguments: () -> R?, body: suspend ChatCommand<R>.() -> Unit): ChatCommand<R>","dev.kordex.core.commands.chat.ChatGroupCommand.chatCommand"]},{"name":"open suspend fun <R : Arguments> chatCommand(commandObj: ChatCommand<R>): ChatCommand<R>","description":"dev.kordex.core.commands.chat.ChatGroupCommand.chatCommand","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-group-command/chat-command.html","searchKeys":["chatCommand","open suspend fun <R : Arguments> chatCommand(commandObj: ChatCommand<R>): ChatCommand<R>","dev.kordex.core.commands.chat.ChatGroupCommand.chatCommand"]},{"name":"open suspend fun <R : Arguments> chatGroupCommand(arguments: () -> R?, body: suspend ChatGroupCommand<R>.() -> Unit): ChatGroupCommand<R>","description":"dev.kordex.core.commands.chat.ChatGroupCommand.chatGroupCommand","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-group-command/chat-group-command.html","searchKeys":["chatGroupCommand","open suspend fun <R : Arguments> chatGroupCommand(arguments: () -> R?, body: suspend ChatGroupCommand<R>.() -> Unit): ChatGroupCommand<R>","dev.kordex.core.commands.chat.ChatGroupCommand.chatGroupCommand"]},{"name":"open suspend fun <R : Data> getOrSaveDefault(unit: StorageUnit<R>, data: suspend () -> R): R","description":"dev.kordex.core.storage.DataAdapter.getOrSaveDefault","location":"kord-extensions/dev.kordex.core.storage/-data-adapter/get-or-save-default.html","searchKeys":["getOrSaveDefault","open suspend fun <R : Data> getOrSaveDefault(unit: StorageUnit<R>, data: suspend () -> R): R","dev.kordex.core.storage.DataAdapter.getOrSaveDefault"]},{"name":"open suspend fun <T : ApplicationCommand<*>> registerAll(vararg commands: T): List<T>","description":"dev.kordex.core.commands.application.ApplicationCommandRegistry.registerAll","location":"kord-extensions/dev.kordex.core.commands.application/-application-command-registry/register-all.html","searchKeys":["registerAll","open suspend fun <T : ApplicationCommand<*>> registerAll(vararg commands: T): List<T>","dev.kordex.core.commands.application.ApplicationCommandRegistry.registerAll"]},{"name":"open suspend fun <T : Arguments> parse(builder: () -> T, context: ChatCommandContext<*>): T","description":"dev.kordex.core.commands.chat.ChatCommandParser.parse","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-command-parser/parse.html","searchKeys":["parse","open suspend fun <T : Arguments> parse(builder: () -> T, context: ChatCommandContext<*>): T","dev.kordex.core.commands.chat.ChatCommandParser.parse"]},{"name":"open suspend fun <T> withLock(body: suspend () -> T)","description":"dev.kordex.core.types.Lockable.withLock","location":"kord-extensions/dev.kordex.core.types/-lockable/with-lock.html","searchKeys":["withLock","open suspend fun <T> withLock(body: suspend () -> T)","dev.kordex.core.types.Lockable.withLock"]},{"name":"open suspend fun ChatInputCreateBuilder.register(locale: Locale, command: SlashCommand<*, *, *>)","description":"dev.kordex.core.commands.application.ApplicationCommandRegistry.register","location":"kord-extensions/dev.kordex.core.commands.application/-application-command-registry/register.html","searchKeys":["register","open suspend fun ChatInputCreateBuilder.register(locale: Locale, command: SlashCommand<*, *, *>)","dev.kordex.core.commands.application.ApplicationCommandRegistry.register"]},{"name":"open suspend fun MessageBuilder.applyPage()","description":"dev.kordex.core.pagination.BasePaginator.applyPage","location":"kord-extensions/dev.kordex.core.pagination/-base-paginator/apply-page.html","searchKeys":["applyPage","open suspend fun MessageBuilder.applyPage()","dev.kordex.core.pagination.BasePaginator.applyPage"]},{"name":"open suspend fun MessageBuilder.applyToMessage()","description":"dev.kordex.core.components.ComponentContainer.applyToMessage","location":"kord-extensions/dev.kordex.core.components/-component-container/apply-to-message.html","searchKeys":["applyToMessage","open suspend fun MessageBuilder.applyToMessage()","dev.kordex.core.components.ComponentContainer.applyToMessage"]},{"name":"open suspend fun add(component: Component, rowNum: Int? = null)","description":"dev.kordex.core.components.ComponentContainer.add","location":"kord-extensions/dev.kordex.core.components/-component-container/add.html","searchKeys":["add","open suspend fun add(component: Component, rowNum: Int? = null)","dev.kordex.core.components.ComponentContainer.add"]},{"name":"open suspend fun addDefaultExtensions()","description":"dev.kordex.core.ExtensibleBot.addDefaultExtensions","location":"kord-extensions/dev.kordex.core/-extensible-bot/add-default-extensions.html","searchKeys":["addDefaultExtensions","open suspend fun addDefaultExtensions()","dev.kordex.core.ExtensibleBot.addDefaultExtensions"]},{"name":"open suspend fun addExtension(builder: () -> Extension)","description":"dev.kordex.core.ExtensibleBot.addExtension","location":"kord-extensions/dev.kordex.core/-extensible-bot/add-extension.html","searchKeys":["addExtension","open suspend fun addExtension(builder: () -> Extension)","dev.kordex.core.ExtensibleBot.addExtension"]},{"name":"open suspend fun build(locale: Locale, pageNum: Int, chunkSize: Int, pages: Int, group: Key?, groupIndex: Int, groups: Int, shouldMutateFooter: Boolean = true, shouldPutFooterInDescription: Boolean = false, mutator: PageMutator? = null): suspend EmbedBuilder.() -> Unit","description":"dev.kordex.core.pagination.pages.Page.build","location":"kord-extensions/dev.kordex.core.pagination.pages/-page/build.html","searchKeys":["build","open suspend fun build(locale: Locale, pageNum: Int, chunkSize: Int, pages: Int, group: Key?, groupIndex: Int, groups: Int, shouldMutateFooter: Boolean = true, shouldPutFooterInDescription: Boolean = false, mutator: PageMutator? = null): suspend EmbedBuilder.() -> Unit","dev.kordex.core.pagination.pages.Page.build"]},{"name":"open suspend fun call(event: E)","description":"dev.kordex.core.components.ComponentWithAction.call","location":"kord-extensions/dev.kordex.core.components/-component-with-action/call.html","searchKeys":["call","open suspend fun call(event: E)","dev.kordex.core.components.ComponentWithAction.call"]},{"name":"open suspend fun call(event: MessageCreateEvent, commandName: String, parser: StringParser, argString: String, skipChecks: Boolean = false, cache: MutableStringKeyedMap<Any> = mutableMapOf())","description":"dev.kordex.core.commands.chat.ChatCommand.call","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-command/call.html","searchKeys":["call","open suspend fun call(event: MessageCreateEvent, commandName: String, parser: StringParser, argString: String, skipChecks: Boolean = false, cache: MutableStringKeyedMap<Any> = mutableMapOf())","dev.kordex.core.commands.chat.ChatCommand.call"]},{"name":"open suspend fun cancel()","description":"dev.kordex.core.components.ComponentContainer.cancel","location":"kord-extensions/dev.kordex.core.components/-component-container/cancel.html","searchKeys":["cancel","open suspend fun cancel()","dev.kordex.core.components.ComponentContainer.cancel"]},{"name":"open suspend fun chatCommand(body: suspend ChatCommand<Arguments>.() -> Unit): ChatCommand<Arguments>","description":"dev.kordex.core.commands.chat.ChatGroupCommand.chatCommand","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-group-command/chat-command.html","searchKeys":["chatCommand","open suspend fun chatCommand(body: suspend ChatCommand<Arguments>.() -> Unit): ChatCommand<Arguments>","dev.kordex.core.commands.chat.ChatGroupCommand.chatCommand"]},{"name":"open suspend fun chatGroupCommand(body: suspend ChatGroupCommand<Arguments>.() -> Unit): ChatGroupCommand<Arguments>","description":"dev.kordex.core.commands.chat.ChatGroupCommand.chatGroupCommand","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-group-command/chat-group-command.html","searchKeys":["chatGroupCommand","open suspend fun chatGroupCommand(body: suspend ChatGroupCommand<Arguments>.() -> Unit): ChatGroupCommand<Arguments>","dev.kordex.core.commands.chat.ChatGroupCommand.chatGroupCommand"]},{"name":"open suspend fun checkBotPerms(context: C)","description":"dev.kordex.core.components.ComponentWithAction.checkBotPerms","location":"kord-extensions/dev.kordex.core.components/-component-with-action/check-bot-perms.html","searchKeys":["checkBotPerms","open suspend fun checkBotPerms(context: C)","dev.kordex.core.components.ComponentWithAction.checkBotPerms"]},{"name":"open suspend fun checkBotPerms(context: CommandContext)","description":"dev.kordex.core.commands.Command.checkBotPerms","location":"kord-extensions/dev.kordex.core.commands/-command/check-bot-perms.html","searchKeys":["checkBotPerms","open suspend fun checkBotPerms(context: CommandContext)","dev.kordex.core.commands.Command.checkBotPerms"]},{"name":"open suspend fun checkResult(arguments: Arguments, argument: Argument<*>, parser: StringParser, context: ChatCommandContext<*>, kwArgs: MutableList<String>?, result: Any)","description":"dev.kordex.core.commands.chat.ChatCommandParser.checkResult","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-command-parser/check-result.html","searchKeys":["checkResult","open suspend fun checkResult(arguments: Arguments, argument: Argument<*>, parser: StringParser, context: ChatCommandContext<*>, kwArgs: MutableList<String>?, result: Any)","dev.kordex.core.commands.chat.ChatCommandParser.checkResult"]},{"name":"open suspend fun close()","description":"dev.kordex.core.ExtensibleBot.close","location":"kord-extensions/dev.kordex.core/-extensible-bot/close.html","searchKeys":["close","open suspend fun close()","dev.kordex.core.ExtensibleBot.close"]},{"name":"open suspend fun createDiscordCommand(command: ApplicationCommand<*>): Snowflake?","description":"dev.kordex.core.commands.application.ApplicationCommandRegistry.createDiscordCommand","location":"kord-extensions/dev.kordex.core.commands.application/-application-command-registry/create-discord-command.html","searchKeys":["createDiscordCommand","open suspend fun createDiscordCommand(command: ApplicationCommand<*>): Snowflake?","dev.kordex.core.commands.application.ApplicationCommandRegistry.createDiscordCommand"]},{"name":"open suspend fun createDiscordMessageCommand(command: MessageCommand<*, *>): Snowflake?","description":"dev.kordex.core.commands.application.ApplicationCommandRegistry.createDiscordMessageCommand","location":"kord-extensions/dev.kordex.core.commands.application/-application-command-registry/create-discord-message-command.html","searchKeys":["createDiscordMessageCommand","open suspend fun createDiscordMessageCommand(command: MessageCommand<*, *>): Snowflake?","dev.kordex.core.commands.application.ApplicationCommandRegistry.createDiscordMessageCommand"]},{"name":"open suspend fun createDiscordSlashCommand(command: SlashCommand<*, *, *>): Snowflake?","description":"dev.kordex.core.commands.application.ApplicationCommandRegistry.createDiscordSlashCommand","location":"kord-extensions/dev.kordex.core.commands.application/-application-command-registry/create-discord-slash-command.html","searchKeys":["createDiscordSlashCommand","open suspend fun createDiscordSlashCommand(command: SlashCommand<*, *, *>): Snowflake?","dev.kordex.core.commands.application.ApplicationCommandRegistry.createDiscordSlashCommand"]},{"name":"open suspend fun createDiscordUserCommand(command: UserCommand<*, *>): Snowflake?","description":"dev.kordex.core.commands.application.ApplicationCommandRegistry.createDiscordUserCommand","location":"kord-extensions/dev.kordex.core.commands.application/-application-command-registry/create-discord-user-command.html","searchKeys":["createDiscordUserCommand","open suspend fun createDiscordUserCommand(command: UserCommand<*, *>): Snowflake?","dev.kordex.core.commands.application.ApplicationCommandRegistry.createDiscordUserCommand"]},{"name":"open suspend fun doCall(event: E)","description":"dev.kordex.core.commands.application.ApplicationCommand.doCall","location":"kord-extensions/dev.kordex.core.commands.application/-application-command/do-call.html","searchKeys":["doCall","open suspend fun doCall(event: E)","dev.kordex.core.commands.application.ApplicationCommand.doCall"]},{"name":"open suspend fun doParse(arguments: Arguments, argument: Argument<*>, parser: StringParser, context: ChatCommandContext<*>, kwArgs: MutableList<String>?): Any","description":"dev.kordex.core.commands.chat.ChatCommandParser.doParse","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-command-parser/do-parse.html","searchKeys":["doParse","open suspend fun doParse(arguments: Arguments, argument: Argument<*>, parser: StringParser, context: ChatCommandContext<*>, kwArgs: MutableList<String>?): Any","dev.kordex.core.commands.chat.ChatCommandParser.doParse"]},{"name":"open suspend fun emitEventAsync(event: CommandEvent<*, *>): Job","description":"dev.kordex.core.commands.Command.emitEventAsync","location":"kord-extensions/dev.kordex.core.commands/-command/emit-event-async.html","searchKeys":["emitEventAsync","open suspend fun emitEventAsync(event: CommandEvent<*, *>): Job","dev.kordex.core.commands.Command.emitEventAsync"]},{"name":"open suspend fun extensions(builder: suspend ExtensionsBuilder.() -> Unit)","description":"dev.kordex.core.builders.ExtensibleBotBuilder.extensions","location":"kord-extensions/dev.kordex.core.builders/-extensible-bot-builder/extensions.html","searchKeys":["extensions","open suspend fun extensions(builder: suspend ExtensionsBuilder.() -> Unit)","dev.kordex.core.builders.ExtensibleBotBuilder.extensions"]},{"name":"open suspend fun firstSentryBreadcrumb(context: C)","description":"dev.kordex.core.commands.application.message.MessageCommand.firstSentryBreadcrumb","location":"kord-extensions/dev.kordex.core.commands.application.message/-message-command/first-sentry-breadcrumb.html","searchKeys":["firstSentryBreadcrumb","open suspend fun firstSentryBreadcrumb(context: C)","dev.kordex.core.commands.application.message.MessageCommand.firstSentryBreadcrumb"]},{"name":"open suspend fun firstSentryBreadcrumb(context: C)","description":"dev.kordex.core.commands.application.user.UserCommand.firstSentryBreadcrumb","location":"kord-extensions/dev.kordex.core.commands.application.user/-user-command/first-sentry-breadcrumb.html","searchKeys":["firstSentryBreadcrumb","open suspend fun firstSentryBreadcrumb(context: C)","dev.kordex.core.commands.application.user.UserCommand.firstSentryBreadcrumb"]},{"name":"open suspend fun firstSentryBreadcrumb(context: C, button: InteractionButtonWithAction<*, *>)","description":"dev.kordex.core.components.buttons.InteractionButtonWithAction.firstSentryBreadcrumb","location":"kord-extensions/dev.kordex.core.components.buttons/-interaction-button-with-action/first-sentry-breadcrumb.html","searchKeys":["firstSentryBreadcrumb","open suspend fun firstSentryBreadcrumb(context: C, button: InteractionButtonWithAction<*, *>)","dev.kordex.core.components.buttons.InteractionButtonWithAction.firstSentryBreadcrumb"]},{"name":"open suspend fun firstSentryBreadcrumb(context: C, commandObj: SlashCommand<*, *, *>)","description":"dev.kordex.core.commands.application.slash.SlashCommand.firstSentryBreadcrumb","location":"kord-extensions/dev.kordex.core.commands.application.slash/-slash-command/first-sentry-breadcrumb.html","searchKeys":["firstSentryBreadcrumb","open suspend fun firstSentryBreadcrumb(context: C, commandObj: SlashCommand<*, *, *>)","dev.kordex.core.commands.application.slash.SlashCommand.firstSentryBreadcrumb"]},{"name":"open suspend fun firstSentryBreadcrumb(context: C, component: SelectMenu<*, *>)","description":"dev.kordex.core.components.menus.SelectMenu.firstSentryBreadcrumb","location":"kord-extensions/dev.kordex.core.components.menus/-select-menu/first-sentry-breadcrumb.html","searchKeys":["firstSentryBreadcrumb","open suspend fun firstSentryBreadcrumb(context: C, component: SelectMenu<*, *>)","dev.kordex.core.components.menus.SelectMenu.firstSentryBreadcrumb"]},{"name":"open suspend fun formatCommandHelp(context: ChatCommandContext<*>, command: ChatCommand<out Arguments>, longDescription: Boolean = false): Triple<String, String, String>","description":"dev.kordex.core.extensions.base.HelpProvider.formatCommandHelp","location":"kord-extensions/dev.kordex.core.extensions.base/-help-provider/format-command-help.html","searchKeys":["formatCommandHelp","open suspend fun formatCommandHelp(context: ChatCommandContext<*>, command: ChatCommand<out Arguments>, longDescription: Boolean = false): Triple<String, String, String>","dev.kordex.core.extensions.base.HelpProvider.formatCommandHelp"]},{"name":"open suspend fun getCommand(name: String, event: MessageCreateEvent): ChatCommand<out Arguments>?","description":"dev.kordex.core.commands.chat.ChatCommandRegistry.getCommand","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-command-registry/get-command.html","searchKeys":["getCommand","open suspend fun getCommand(name: String, event: MessageCreateEvent): ChatCommand<out Arguments>?","dev.kordex.core.commands.chat.ChatCommandRegistry.getCommand"]},{"name":"open suspend fun getCommandHelpPaginator(context: ChatCommandContext<*>, args: List<String>): BasePaginator","description":"dev.kordex.core.extensions.base.HelpProvider.getCommandHelpPaginator","location":"kord-extensions/dev.kordex.core.extensions.base/-help-provider/get-command-help-paginator.html","searchKeys":["getCommandHelpPaginator","open suspend fun getCommandHelpPaginator(context: ChatCommandContext<*>, args: List<String>): BasePaginator","dev.kordex.core.extensions.base.HelpProvider.getCommandHelpPaginator"]},{"name":"open suspend fun getCommandHelpPaginator(context: ChatCommandContext<*>, command: ChatCommand<out Arguments>?): BasePaginator","description":"dev.kordex.core.extensions.base.HelpProvider.getCommandHelpPaginator","location":"kord-extensions/dev.kordex.core.extensions.base/-help-provider/get-command-help-paginator.html","searchKeys":["getCommandHelpPaginator","open suspend fun getCommandHelpPaginator(context: ChatCommandContext<*>, command: ChatCommand<out Arguments>?): BasePaginator","dev.kordex.core.extensions.base.HelpProvider.getCommandHelpPaginator"]},{"name":"open suspend fun getErrorKey(): Key","description":"dev.kordex.core.commands.converters.Converter.getErrorKey","location":"kord-extensions/dev.kordex.core.commands.converters/-converter/get-error-key.html","searchKeys":["getErrorKey","open suspend fun getErrorKey(): Key","dev.kordex.core.commands.converters.Converter.getErrorKey"]},{"name":"open suspend fun getErrorString(context: CommandContext): String","description":"dev.kordex.core.commands.converters.Converter.getErrorString","location":"kord-extensions/dev.kordex.core.commands.converters/-converter/get-error-string.html","searchKeys":["getErrorString","open suspend fun getErrorString(context: CommandContext): String","dev.kordex.core.commands.converters.Converter.getErrorString"]},{"name":"open suspend fun getFullTranslatedName(locale: Locale): String","description":"dev.kordex.core.commands.chat.ChatGroupCommand.getFullTranslatedName","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-group-command/get-full-translated-name.html","searchKeys":["getFullTranslatedName","open suspend fun getFullTranslatedName(locale: Locale): String","dev.kordex.core.commands.chat.ChatGroupCommand.getFullTranslatedName"]},{"name":"open suspend fun getFullTranslatedName(locale: Locale): String","description":"dev.kordex.core.commands.chat.ChatSubCommand.getFullTranslatedName","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-sub-command/get-full-translated-name.html","searchKeys":["getFullTranslatedName","open suspend fun getFullTranslatedName(locale: Locale): String","dev.kordex.core.commands.chat.ChatSubCommand.getFullTranslatedName"]},{"name":"open suspend fun getMainHelpPaginator(context: ChatCommandContext<*>): BasePaginator","description":"dev.kordex.core.extensions.base.HelpProvider.getMainHelpPaginator","location":"kord-extensions/dev.kordex.core.extensions.base/-help-provider/get-main-help-paginator.html","searchKeys":["getMainHelpPaginator","open suspend fun getMainHelpPaginator(context: ChatCommandContext<*>): BasePaginator","dev.kordex.core.extensions.base.HelpProvider.getMainHelpPaginator"]},{"name":"open suspend fun getMessage(): Message","description":"dev.kordex.core.commands.chat.ChatCommandContext.getMessage","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-command-context/get-message.html","searchKeys":["getMessage","open suspend fun getMessage(): Message","dev.kordex.core.commands.chat.ChatCommandContext.getMessage"]},{"name":"open suspend fun getPrefix(event: MessageCreateEvent): String","description":"dev.kordex.core.commands.chat.ChatCommandRegistry.getPrefix","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-command-registry/get-prefix.html","searchKeys":["getPrefix","open suspend fun getPrefix(event: MessageCreateEvent): String","dev.kordex.core.commands.chat.ChatCommandRegistry.getPrefix"]},{"name":"open suspend fun getSignature(locale: Locale): String","description":"dev.kordex.core.commands.chat.ChatCommand.getSignature","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-command/get-signature.html","searchKeys":["getSignature","open suspend fun getSignature(locale: Locale): String","dev.kordex.core.commands.chat.ChatCommand.getSignature"]},{"name":"open suspend fun handleError(context: C, t: Throwable)","description":"dev.kordex.core.commands.application.message.MessageCommand.handleError","location":"kord-extensions/dev.kordex.core.commands.application.message/-message-command/handle-error.html","searchKeys":["handleError","open suspend fun handleError(context: C, t: Throwable)","dev.kordex.core.commands.application.message.MessageCommand.handleError"]},{"name":"open suspend fun handleError(context: C, t: Throwable)","description":"dev.kordex.core.commands.application.user.UserCommand.handleError","location":"kord-extensions/dev.kordex.core.commands.application.user/-user-command/handle-error.html","searchKeys":["handleError","open suspend fun handleError(context: C, t: Throwable)","dev.kordex.core.commands.application.user.UserCommand.handleError"]},{"name":"open suspend fun handleError(context: C, t: Throwable, button: InteractionButtonWithAction<*, *>)","description":"dev.kordex.core.components.buttons.InteractionButtonWithAction.handleError","location":"kord-extensions/dev.kordex.core.components.buttons/-interaction-button-with-action/handle-error.html","searchKeys":["handleError","open suspend fun handleError(context: C, t: Throwable, button: InteractionButtonWithAction<*, *>)","dev.kordex.core.components.buttons.InteractionButtonWithAction.handleError"]},{"name":"open suspend fun handleError(context: C, t: Throwable, button: SelectMenu<*, *>)","description":"dev.kordex.core.components.menus.SelectMenu.handleError","location":"kord-extensions/dev.kordex.core.components.menus/-select-menu/handle-error.html","searchKeys":["handleError","open suspend fun handleError(context: C, t: Throwable, button: SelectMenu<*, *>)","dev.kordex.core.components.menus.SelectMenu.handleError"]},{"name":"open suspend fun handleError(context: C, t: Throwable, commandObj: SlashCommand<*, *, *>)","description":"dev.kordex.core.commands.application.slash.SlashCommand.handleError","location":"kord-extensions/dev.kordex.core.commands.application.slash/-slash-command/handle-error.html","searchKeys":["handleError","open suspend fun handleError(context: C, t: Throwable, commandObj: SlashCommand<*, *, *>)","dev.kordex.core.commands.application.slash.SlashCommand.handleError"]},{"name":"open suspend fun handleError(t: Throwable, context: CommandContext): Key","description":"dev.kordex.core.commands.converters.Converter.handleError","location":"kord-extensions/dev.kordex.core.commands.converters/-converter/handle-error.html","searchKeys":["handleError","open suspend fun handleError(t: Throwable, context: CommandContext): Key","dev.kordex.core.commands.converters.Converter.handleError"]},{"name":"open suspend fun handleEvent(event: MessageCreateEvent)","description":"dev.kordex.core.commands.chat.ChatCommandRegistry.handleEvent","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-command-registry/handle-event.html","searchKeys":["handleEvent","open suspend fun handleEvent(event: MessageCreateEvent)","dev.kordex.core.commands.chat.ChatCommandRegistry.handleEvent"]},{"name":"open suspend fun handleThrowable(arguments: Arguments, argument: Argument<*>, parser: StringParser, context: ChatCommandContext<*>, kwArgs: MutableList<String>?, throwable: Throwable)","description":"dev.kordex.core.commands.chat.ChatCommandParser.handleThrowable","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-command-parser/handle-throwable.html","searchKeys":["handleThrowable","open suspend fun handleThrowable(arguments: Arguments, argument: Argument<*>, parser: StringParser, context: ChatCommandContext<*>, kwArgs: MutableList<String>?, throwable: Throwable)","dev.kordex.core.commands.chat.ChatCommandParser.handleThrowable"]},{"name":"open suspend fun help(builder: HelpExtensionBuilder.() -> Unit)","description":"dev.kordex.core.builders.ExtensionsBuilder.help","location":"kord-extensions/dev.kordex.core.builders/-extensions-builder/help.html","searchKeys":["help","open suspend fun help(builder: HelpExtensionBuilder.() -> Unit)","dev.kordex.core.builders.ExtensionsBuilder.help"]},{"name":"open suspend fun loadExtension(extension: String)","description":"dev.kordex.core.ExtensibleBot.loadExtension","location":"kord-extensions/dev.kordex.core/-extensible-bot/load-extension.html","searchKeys":["loadExtension","open suspend fun loadExtension(extension: String)","dev.kordex.core.ExtensibleBot.loadExtension"]},{"name":"open suspend fun lock()","description":"dev.kordex.core.types.Lockable.lock","location":"kord-extensions/dev.kordex.core.types/-lockable/lock.html","searchKeys":["lock","open suspend fun lock()","dev.kordex.core.types.Lockable.lock"]},{"name":"open suspend fun nextPage()","description":"dev.kordex.core.pagination.BasePaginator.nextPage","location":"kord-extensions/dev.kordex.core.pagination/-base-paginator/next-page.html","searchKeys":["nextPage","open suspend fun nextPage()","dev.kordex.core.pagination.BasePaginator.nextPage"]},{"name":"open suspend fun option(label: Key, value: String, body: suspend StringSelectOption.() -> Unit = {})","description":"dev.kordex.core.components.menus.string.StringSelectMenu.option","location":"kord-extensions/dev.kordex.core.components.menus.string/-string-select-menu/option.html","searchKeys":["option","open suspend fun option(label: Key, value: String, body: suspend StringSelectOption.() -> Unit = {})","dev.kordex.core.components.menus.string.StringSelectMenu.option"]},{"name":"open suspend fun populate()","description":"dev.kordex.core.components.ComponentContext.populate","location":"kord-extensions/dev.kordex.core.components/-component-context/populate.html","searchKeys":["populate","open suspend fun populate()","dev.kordex.core.components.ComponentContext.populate"]},{"name":"open suspend fun previousPage()","description":"dev.kordex.core.pagination.BasePaginator.previousPage","location":"kord-extensions/dev.kordex.core.pagination/-base-paginator/previous-page.html","searchKeys":["previousPage","open suspend fun previousPage()","dev.kordex.core.pagination.BasePaginator.previousPage"]},{"name":"open suspend fun register(component: ComponentWithID)","description":"dev.kordex.core.components.ComponentRegistry.register","location":"kord-extensions/dev.kordex.core.components/-component-registry/register.html","searchKeys":["register","open suspend fun register(component: ComponentWithID)","dev.kordex.core.components.ComponentRegistry.register"]},{"name":"open suspend fun register(modal: ModalForm)","description":"dev.kordex.core.components.ComponentRegistry.register","location":"kord-extensions/dev.kordex.core.components/-component-registry/register.html","searchKeys":["register","open suspend fun register(modal: ModalForm)","dev.kordex.core.components.ComponentRegistry.register"]},{"name":"open suspend fun registerListeners()","description":"dev.kordex.core.ExtensibleBot.registerListeners","location":"kord-extensions/dev.kordex.core/-extensible-bot/register-listeners.html","searchKeys":["registerListeners","open suspend fun registerListeners()","dev.kordex.core.ExtensibleBot.registerListeners"]},{"name":"open suspend fun reloadAll()","description":"dev.kordex.core.storage.DataAdapter.reloadAll","location":"kord-extensions/dev.kordex.core.storage/-data-adapter/reload-all.html","searchKeys":["reloadAll","open suspend fun reloadAll()","dev.kordex.core.storage.DataAdapter.reloadAll"]},{"name":"open suspend fun remove(component: Component): Boolean","description":"dev.kordex.core.components.ComponentContainer.remove","location":"kord-extensions/dev.kordex.core.components/-component-container/remove.html","searchKeys":["remove","open suspend fun remove(component: Component): Boolean","dev.kordex.core.components.ComponentContainer.remove"]},{"name":"open suspend fun removeAll()","description":"dev.kordex.core.components.ComponentContainer.removeAll","location":"kord-extensions/dev.kordex.core.components/-component-container/remove-all.html","searchKeys":["removeAll","open suspend fun removeAll()","dev.kordex.core.components.ComponentContainer.removeAll"]},{"name":"open suspend fun replace(id: String, new: Component): Boolean","description":"dev.kordex.core.components.ComponentContainer.replace","location":"kord-extensions/dev.kordex.core.components/-component-container/replace.html","searchKeys":["replace","open suspend fun replace(id: String, new: Component): Boolean","dev.kordex.core.components.ComponentContainer.replace"]},{"name":"open suspend fun replace(old: Component, new: Component): Boolean","description":"dev.kordex.core.components.ComponentContainer.replace","location":"kord-extensions/dev.kordex.core.components/-component-container/replace.html","searchKeys":["replace","open suspend fun replace(old: Component, new: Component): Boolean","dev.kordex.core.components.ComponentContainer.replace"]},{"name":"open suspend fun runChecks(event: E, cache: MutableStringKeyedMap<Any>): Boolean","description":"dev.kordex.core.commands.application.ApplicationCommand.runChecks","location":"kord-extensions/dev.kordex.core.commands.application/-application-command/run-checks.html","searchKeys":["runChecks","open suspend fun runChecks(event: E, cache: MutableStringKeyedMap<Any>): Boolean","dev.kordex.core.commands.application.ApplicationCommand.runChecks"]},{"name":"open suspend fun runChecks(event: E, cache: MutableStringKeyedMap<Any>): Boolean","description":"dev.kordex.core.components.ComponentWithAction.runChecks","location":"kord-extensions/dev.kordex.core.components/-component-with-action/run-checks.html","searchKeys":["runChecks","open suspend fun runChecks(event: E, cache: MutableStringKeyedMap<Any>): Boolean","dev.kordex.core.components.ComponentWithAction.runChecks"]},{"name":"open suspend fun runChecks(event: MessageCreateEvent, sendMessage: Boolean = true, cache: MutableStringKeyedMap<Any>): Boolean","description":"dev.kordex.core.commands.chat.ChatCommand.runChecks","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-command/run-checks.html","searchKeys":["runChecks","open suspend fun runChecks(event: MessageCreateEvent, sendMessage: Boolean = true, cache: MutableStringKeyedMap<Any>): Boolean","dev.kordex.core.commands.chat.ChatCommand.runChecks"]},{"name":"open suspend fun runStandardChecks(event: E, cache: MutableStringKeyedMap<Any>): Boolean","description":"dev.kordex.core.commands.application.ApplicationCommand.runStandardChecks","location":"kord-extensions/dev.kordex.core.commands.application/-application-command/run-standard-checks.html","searchKeys":["runStandardChecks","open suspend fun runStandardChecks(event: E, cache: MutableStringKeyedMap<Any>): Boolean","dev.kordex.core.commands.application.ApplicationCommand.runStandardChecks"]},{"name":"open suspend fun runStandardChecks(event: E, cache: MutableStringKeyedMap<Any>): Boolean","description":"dev.kordex.core.components.ComponentWithAction.runStandardChecks","location":"kord-extensions/dev.kordex.core.components/-component-with-action/run-standard-checks.html","searchKeys":["runStandardChecks","open suspend fun runStandardChecks(event: E, cache: MutableStringKeyedMap<Any>): Boolean","dev.kordex.core.components.ComponentWithAction.runStandardChecks"]},{"name":"open suspend fun saveAll()","description":"dev.kordex.core.storage.DataAdapter.saveAll","location":"kord-extensions/dev.kordex.core.storage/-data-adapter/save-all.html","searchKeys":["saveAll","open suspend fun saveAll()","dev.kordex.core.storage.DataAdapter.saveAll"]},{"name":"open suspend fun sentry(builder: SentryExtensionBuilder.() -> Unit)","description":"dev.kordex.core.builders.ExtensionsBuilder.sentry","location":"kord-extensions/dev.kordex.core.builders/-extensions-builder/sentry.html","searchKeys":["sentry","open suspend fun sentry(builder: SentryExtensionBuilder.() -> Unit)","dev.kordex.core.builders.ExtensionsBuilder.sentry"]},{"name":"open suspend fun setState(state: ExtensionState)","description":"dev.kordex.core.extensions.Extension.setState","location":"kord-extensions/dev.kordex.core.extensions/-extension/set-state.html","searchKeys":["setState","open suspend fun setState(state: ExtensionState)","dev.kordex.core.extensions.Extension.setState"]},{"name":"open suspend fun sort()","description":"dev.kordex.core.components.ComponentContainer.sort","location":"kord-extensions/dev.kordex.core.components/-component-container/sort.html","searchKeys":["sort","open suspend fun sort()","dev.kordex.core.components.ComponentContainer.sort"]},{"name":"open suspend fun start()","description":"dev.kordex.core.ExtensibleBot.start","location":"kord-extensions/dev.kordex.core/-extensible-bot/start.html","searchKeys":["start","open suspend fun start()","dev.kordex.core.ExtensibleBot.start"]},{"name":"open suspend fun stop()","description":"dev.kordex.core.ExtensibleBot.stop","location":"kord-extensions/dev.kordex.core/-extensible-bot/stop.html","searchKeys":["stop","open suspend fun stop()","dev.kordex.core.ExtensibleBot.stop"]},{"name":"open suspend fun sync(removeOthers: Boolean = false, guildId: Snowflake?, commands: List<ApplicationCommand<*>>)","description":"dev.kordex.core.commands.application.DefaultApplicationCommandRegistry.sync","location":"kord-extensions/dev.kordex.core.commands.application/-default-application-command-registry/sync.html","searchKeys":["sync","open suspend fun sync(removeOthers: Boolean = false, guildId: Snowflake?, commands: List<ApplicationCommand<*>>)","dev.kordex.core.commands.application.DefaultApplicationCommandRegistry.sync"]},{"name":"open suspend fun syncAll(removeOthers: Boolean = false, commands: List<ApplicationCommand<*>>)","description":"dev.kordex.core.commands.application.DefaultApplicationCommandRegistry.syncAll","location":"kord-extensions/dev.kordex.core.commands.application/-default-application-command-registry/sync-all.html","searchKeys":["syncAll","open suspend fun syncAll(removeOthers: Boolean = false, commands: List<ApplicationCommand<*>>)","dev.kordex.core.commands.application.DefaultApplicationCommandRegistry.syncAll"]},{"name":"open suspend fun unload()","description":"dev.kordex.core.extensions.Extension.unload","location":"kord-extensions/dev.kordex.core.extensions/-extension/unload.html","searchKeys":["unload","open suspend fun unload()","dev.kordex.core.extensions.Extension.unload"]},{"name":"open suspend fun unloadExtension(extension: String)","description":"dev.kordex.core.ExtensibleBot.unloadExtension","location":"kord-extensions/dev.kordex.core/-extensible-bot/unload-extension.html","searchKeys":["unloadExtension","open suspend fun unloadExtension(extension: String)","dev.kordex.core.ExtensibleBot.unloadExtension"]},{"name":"open suspend fun unregister(component: ComponentWithID): Component?","description":"dev.kordex.core.components.ComponentRegistry.unregister","location":"kord-extensions/dev.kordex.core.components/-component-registry/unregister.html","searchKeys":["unregister","open suspend fun unregister(component: ComponentWithID): Component?","dev.kordex.core.components.ComponentRegistry.unregister"]},{"name":"open suspend fun unregister(id: String): Component?","description":"dev.kordex.core.components.ComponentRegistry.unregister","location":"kord-extensions/dev.kordex.core.components/-component-registry/unregister.html","searchKeys":["unregister","open suspend fun unregister(id: String): Component?","dev.kordex.core.components.ComponentRegistry.unregister"]},{"name":"open suspend fun unregisterGeneric(command: ApplicationCommand<*>, delete: Boolean = true): ApplicationCommand<*>?","description":"dev.kordex.core.commands.application.ApplicationCommandRegistry.unregisterGeneric","location":"kord-extensions/dev.kordex.core.commands.application/-application-command-registry/unregister-generic.html","searchKeys":["unregisterGeneric","open suspend fun unregisterGeneric(command: ApplicationCommand<*>, delete: Boolean = true): ApplicationCommand<*>?","dev.kordex.core.commands.application.ApplicationCommandRegistry.unregisterGeneric"]},{"name":"open suspend fun unregisterModal(id: String): ModalForm?","description":"dev.kordex.core.components.ComponentRegistry.unregisterModal","location":"kord-extensions/dev.kordex.core.components/-component-registry/unregister-modal.html","searchKeys":["unregisterModal","open suspend fun unregisterModal(id: String): ModalForm?","dev.kordex.core.components.ComponentRegistry.unregisterModal"]},{"name":"open suspend fun unregisterModal(modal: ModalForm): ModalForm?","description":"dev.kordex.core.components.ComponentRegistry.unregisterModal","location":"kord-extensions/dev.kordex.core.components/-component-registry/unregister-modal.html","searchKeys":["unregisterModal","open suspend fun unregisterModal(modal: ModalForm): ModalForm?","dev.kordex.core.components.ComponentRegistry.unregisterModal"]},{"name":"open suspend fun validate(context: CommandContext)","description":"dev.kordex.core.commands.converters.Converter.validate","location":"kord-extensions/dev.kordex.core.commands.converters/-converter/validate.html","searchKeys":["validate","open suspend fun validate(context: CommandContext)","dev.kordex.core.commands.converters.Converter.validate"]},{"name":"open suspend fun validateValue(commandContext: CommandContext, value: T)","description":"dev.kordex.core.commands.converters.builders.ConverterBuilder.validateValue","location":"kord-extensions/dev.kordex.core.commands.converters.builders/-converter-builder/validate-value.html","searchKeys":["validateValue","open suspend fun validateValue(commandContext: CommandContext, value: T)","dev.kordex.core.commands.converters.builders.ConverterBuilder.validateValue"]},{"name":"open suspend override fun <R : Data> delete(unit: StorageUnit<R>): Boolean","description":"dev.kordex.core.storage.toml.TomlDataAdapter.delete","location":"kord-extensions/dev.kordex.core.storage.toml/-toml-data-adapter/delete.html","searchKeys":["delete","open suspend override fun <R : Data> delete(unit: StorageUnit<R>): Boolean","dev.kordex.core.storage.toml.TomlDataAdapter.delete"]},{"name":"open suspend override fun <R : Data> get(unit: StorageUnit<R>): R?","description":"dev.kordex.core.storage.toml.TomlDataAdapter.get","location":"kord-extensions/dev.kordex.core.storage.toml/-toml-data-adapter/get.html","searchKeys":["get","open suspend override fun <R : Data> get(unit: StorageUnit<R>): R?","dev.kordex.core.storage.toml.TomlDataAdapter.get"]},{"name":"open suspend override fun <R : Data> reload(unit: StorageUnit<R>): R?","description":"dev.kordex.core.storage.toml.TomlDataAdapter.reload","location":"kord-extensions/dev.kordex.core.storage.toml/-toml-data-adapter/reload.html","searchKeys":["reload","open suspend override fun <R : Data> reload(unit: StorageUnit<R>): R?","dev.kordex.core.storage.toml.TomlDataAdapter.reload"]},{"name":"open suspend override fun <R : Data> save(unit: StorageUnit<R>): R?","description":"dev.kordex.core.storage.toml.TomlDataAdapter.save","location":"kord-extensions/dev.kordex.core.storage.toml/-toml-data-adapter/save.html","searchKeys":["save","open suspend override fun <R : Data> save(unit: StorageUnit<R>): R?","dev.kordex.core.storage.toml.TomlDataAdapter.save"]},{"name":"open suspend override fun <R : Data> save(unit: StorageUnit<R>, data: R): R","description":"dev.kordex.core.storage.toml.TomlDataAdapter.save","location":"kord-extensions/dev.kordex.core.storage.toml/-toml-data-adapter/save.html","searchKeys":["save","open suspend override fun <R : Data> save(unit: StorageUnit<R>, data: R): R","dev.kordex.core.storage.toml.TomlDataAdapter.save"]},{"name":"open suspend override fun apply(builder: ActionRowBuilder, locale: Locale)","description":"dev.kordex.core.components.forms.widgets.TextInputWidget.apply","location":"kord-extensions/dev.kordex.core.components.forms.widgets/-text-input-widget/apply.html","searchKeys":["apply","open suspend override fun apply(builder: ActionRowBuilder, locale: Locale)","dev.kordex.core.components.forms.widgets.TextInputWidget.apply"]},{"name":"open suspend override fun call(event: ButtonInteractionCreateEvent)","description":"dev.kordex.core.components.buttons.EphemeralInteractionButton.call","location":"kord-extensions/dev.kordex.core.components.buttons/-ephemeral-interaction-button/call.html","searchKeys":["call","open suspend override fun call(event: ButtonInteractionCreateEvent)","dev.kordex.core.components.buttons.EphemeralInteractionButton.call"]},{"name":"open suspend override fun call(event: ButtonInteractionCreateEvent)","description":"dev.kordex.core.components.buttons.PublicInteractionButton.call","location":"kord-extensions/dev.kordex.core.components.buttons/-public-interaction-button/call.html","searchKeys":["call","open suspend override fun call(event: ButtonInteractionCreateEvent)","dev.kordex.core.components.buttons.PublicInteractionButton.call"]},{"name":"open suspend override fun call(event: ChatInputCommandInteractionCreateEvent, cache: MutableStringKeyedMap<Any>)","description":"dev.kordex.core.commands.application.slash.EphemeralSlashCommand.call","location":"kord-extensions/dev.kordex.core.commands.application.slash/-ephemeral-slash-command/call.html","searchKeys":["call","open suspend override fun call(event: ChatInputCommandInteractionCreateEvent, cache: MutableStringKeyedMap<Any>)","dev.kordex.core.commands.application.slash.EphemeralSlashCommand.call"]},{"name":"open suspend override fun call(event: ChatInputCommandInteractionCreateEvent, cache: MutableStringKeyedMap<Any>)","description":"dev.kordex.core.commands.application.slash.PublicSlashCommand.call","location":"kord-extensions/dev.kordex.core.commands.application.slash/-public-slash-command/call.html","searchKeys":["call","open suspend override fun call(event: ChatInputCommandInteractionCreateEvent, cache: MutableStringKeyedMap<Any>)","dev.kordex.core.commands.application.slash.PublicSlashCommand.call"]},{"name":"open suspend override fun call(event: MessageCommandInteractionCreateEvent, cache: MutableStringKeyedMap<Any>)","description":"dev.kordex.core.commands.application.message.EphemeralMessageCommand.call","location":"kord-extensions/dev.kordex.core.commands.application.message/-ephemeral-message-command/call.html","searchKeys":["call","open suspend override fun call(event: MessageCommandInteractionCreateEvent, cache: MutableStringKeyedMap<Any>)","dev.kordex.core.commands.application.message.EphemeralMessageCommand.call"]},{"name":"open suspend override fun call(event: MessageCommandInteractionCreateEvent, cache: MutableStringKeyedMap<Any>)","description":"dev.kordex.core.commands.application.message.PublicMessageCommand.call","location":"kord-extensions/dev.kordex.core.commands.application.message/-public-message-command/call.html","searchKeys":["call","open suspend override fun call(event: MessageCommandInteractionCreateEvent, cache: MutableStringKeyedMap<Any>)","dev.kordex.core.commands.application.message.PublicMessageCommand.call"]},{"name":"open suspend override fun call(event: MessageCreateEvent, commandName: String, parser: StringParser, argString: String, skipChecks: Boolean, cache: MutableStringKeyedMap<Any>)","description":"dev.kordex.core.commands.chat.ChatGroupCommand.call","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-group-command/call.html","searchKeys":["call","open suspend override fun call(event: MessageCreateEvent, commandName: String, parser: StringParser, argString: String, skipChecks: Boolean, cache: MutableStringKeyedMap<Any>)","dev.kordex.core.commands.chat.ChatGroupCommand.call"]},{"name":"open suspend override fun call(event: SelectMenuInteractionCreateEvent)","description":"dev.kordex.core.components.menus.EphemeralSelectMenu.call","location":"kord-extensions/dev.kordex.core.components.menus/-ephemeral-select-menu/call.html","searchKeys":["call","open suspend override fun call(event: SelectMenuInteractionCreateEvent)","dev.kordex.core.components.menus.EphemeralSelectMenu.call"]},{"name":"open suspend override fun call(event: SelectMenuInteractionCreateEvent)","description":"dev.kordex.core.components.menus.PublicSelectMenu.call","location":"kord-extensions/dev.kordex.core.components.menus/-public-select-menu/call.html","searchKeys":["call","open suspend override fun call(event: SelectMenuInteractionCreateEvent)","dev.kordex.core.components.menus.PublicSelectMenu.call"]},{"name":"open suspend override fun call(event: UserCommandInteractionCreateEvent, cache: MutableStringKeyedMap<Any>)","description":"dev.kordex.core.commands.application.user.EphemeralUserCommand.call","location":"kord-extensions/dev.kordex.core.commands.application.user/-ephemeral-user-command/call.html","searchKeys":["call","open suspend override fun call(event: UserCommandInteractionCreateEvent, cache: MutableStringKeyedMap<Any>)","dev.kordex.core.commands.application.user.EphemeralUserCommand.call"]},{"name":"open suspend override fun call(event: UserCommandInteractionCreateEvent, cache: MutableStringKeyedMap<Any>)","description":"dev.kordex.core.commands.application.user.PublicUserCommand.call","location":"kord-extensions/dev.kordex.core.commands.application.user/-public-user-command/call.html","searchKeys":["call","open suspend override fun call(event: UserCommandInteractionCreateEvent, cache: MutableStringKeyedMap<Any>)","dev.kordex.core.commands.application.user.PublicUserCommand.call"]},{"name":"open suspend override fun destroy()","description":"dev.kordex.core.pagination.BaseButtonPaginator.destroy","location":"kord-extensions/dev.kordex.core.pagination/-base-button-paginator/destroy.html","searchKeys":["destroy","open suspend override fun destroy()","dev.kordex.core.pagination.BaseButtonPaginator.destroy"]},{"name":"open suspend override fun destroy()","description":"dev.kordex.core.pagination.EphemeralResponsePaginator.destroy","location":"kord-extensions/dev.kordex.core.pagination/-ephemeral-response-paginator/destroy.html","searchKeys":["destroy","open suspend override fun destroy()","dev.kordex.core.pagination.EphemeralResponsePaginator.destroy"]},{"name":"open suspend override fun destroy()","description":"dev.kordex.core.pagination.MessageButtonPaginator.destroy","location":"kord-extensions/dev.kordex.core.pagination/-message-button-paginator/destroy.html","searchKeys":["destroy","open suspend override fun destroy()","dev.kordex.core.pagination.MessageButtonPaginator.destroy"]},{"name":"open suspend override fun destroy()","description":"dev.kordex.core.pagination.PublicFollowUpPaginator.destroy","location":"kord-extensions/dev.kordex.core.pagination/-public-follow-up-paginator/destroy.html","searchKeys":["destroy","open suspend override fun destroy()","dev.kordex.core.pagination.PublicFollowUpPaginator.destroy"]},{"name":"open suspend override fun destroy()","description":"dev.kordex.core.pagination.PublicResponsePaginator.destroy","location":"kord-extensions/dev.kordex.core.pagination/-public-response-paginator/destroy.html","searchKeys":["destroy","open suspend override fun destroy()","dev.kordex.core.pagination.PublicResponsePaginator.destroy"]},{"name":"open suspend override fun edit(builder: suspend InteractionResponseModifyBuilder.() -> Unit): EphemeralMessageInteractionResponse","description":"dev.kordex.core.types.EphemeralInteractionContext.edit","location":"kord-extensions/dev.kordex.core.types/-ephemeral-interaction-context/edit.html","searchKeys":["edit","open suspend override fun edit(builder: suspend InteractionResponseModifyBuilder.() -> Unit): EphemeralMessageInteractionResponse","dev.kordex.core.types.EphemeralInteractionContext.edit"]},{"name":"open suspend override fun edit(builder: suspend InteractionResponseModifyBuilder.() -> Unit): PublicMessageInteractionResponse","description":"dev.kordex.core.types.PublicInteractionContext.edit","location":"kord-extensions/dev.kordex.core.types/-public-interaction-context/edit.html","searchKeys":["edit","open suspend override fun edit(builder: suspend InteractionResponseModifyBuilder.() -> Unit): PublicMessageInteractionResponse","dev.kordex.core.types.PublicInteractionContext.edit"]},{"name":"open suspend override fun formatCommandHelp(prefix: String, event: MessageCreateEvent, command: ChatCommand<out Arguments>, longDescription: Boolean): Triple<String, String, String>","description":"dev.kordex.core.extensions.impl.HelpExtension.formatCommandHelp","location":"kord-extensions/dev.kordex.core.extensions.impl/-help-extension/format-command-help.html","searchKeys":["formatCommandHelp","open suspend override fun formatCommandHelp(prefix: String, event: MessageCreateEvent, command: ChatCommand<out Arguments>, longDescription: Boolean): Triple<String, String, String>","dev.kordex.core.extensions.impl.HelpExtension.formatCommandHelp"]},{"name":"open suspend override fun gatherCommands(event: MessageCreateEvent): List<ChatCommand<out Arguments>>","description":"dev.kordex.core.extensions.impl.HelpExtension.gatherCommands","location":"kord-extensions/dev.kordex.core.extensions.impl/-help-extension/gather-commands.html","searchKeys":["gatherCommands","open suspend override fun gatherCommands(event: MessageCreateEvent): List<ChatCommand<out Arguments>>","dev.kordex.core.extensions.impl.HelpExtension.gatherCommands"]},{"name":"open suspend override fun get(id: K): T?","description":"dev.kordex.core.registry.DefaultLocalRegistryStorage.get","location":"kord-extensions/dev.kordex.core.registry/-default-local-registry-storage/get.html","searchKeys":["get","open suspend override fun get(id: K): T?","dev.kordex.core.registry.DefaultLocalRegistryStorage.get"]},{"name":"open suspend override fun get(id: Snowflake): T?","description":"dev.kordex.core.registry.AbstractDeconstructingApplicationCommandRegistryStorage.get","location":"kord-extensions/dev.kordex.core.registry/-abstract-deconstructing-application-command-registry-storage/get.html","searchKeys":["get","open suspend override fun get(id: Snowflake): T?","dev.kordex.core.registry.AbstractDeconstructingApplicationCommandRegistryStorage.get"]},{"name":"open suspend override fun getChannel(): ChannelBehavior","description":"dev.kordex.core.commands.application.DummyAutocompleteCommandContext.getChannel","location":"kord-extensions/dev.kordex.core.commands.application/-dummy-autocomplete-command-context/get-channel.html","searchKeys":["getChannel","open suspend override fun getChannel(): ChannelBehavior","dev.kordex.core.commands.application.DummyAutocompleteCommandContext.getChannel"]},{"name":"open suspend override fun getChannel(): MessageChannelBehavior","description":"dev.kordex.core.commands.application.ApplicationCommandContext.getChannel","location":"kord-extensions/dev.kordex.core.commands.application/-application-command-context/get-channel.html","searchKeys":["getChannel","open suspend override fun getChannel(): MessageChannelBehavior","dev.kordex.core.commands.application.ApplicationCommandContext.getChannel"]},{"name":"open suspend override fun getChannel(): MessageChannelBehavior","description":"dev.kordex.core.commands.chat.ChatCommandContext.getChannel","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-command-context/get-channel.html","searchKeys":["getChannel","open suspend override fun getChannel(): MessageChannelBehavior","dev.kordex.core.commands.chat.ChatCommandContext.getChannel"]},{"name":"open suspend override fun getCommand(event: MessageCreateEvent, args: List<String>): ChatCommand<out Arguments>?","description":"dev.kordex.core.extensions.impl.HelpExtension.getCommand","location":"kord-extensions/dev.kordex.core.extensions.impl/-help-extension/get-command.html","searchKeys":["getCommand","open suspend override fun getCommand(event: MessageCreateEvent, args: List<String>): ChatCommand<out Arguments>?","dev.kordex.core.extensions.impl.HelpExtension.getCommand"]},{"name":"open suspend override fun getCommandHelpPaginator(context: ChatCommandContext<*>, args: List<String>): BasePaginator","description":"dev.kordex.core.extensions.impl.HelpExtension.getCommandHelpPaginator","location":"kord-extensions/dev.kordex.core.extensions.impl/-help-extension/get-command-help-paginator.html","searchKeys":["getCommandHelpPaginator","open suspend override fun getCommandHelpPaginator(context: ChatCommandContext<*>, args: List<String>): BasePaginator","dev.kordex.core.extensions.impl.HelpExtension.getCommandHelpPaginator"]},{"name":"open suspend override fun getCommandHelpPaginator(event: MessageCreateEvent, prefix: String, args: List<String>): BasePaginator","description":"dev.kordex.core.extensions.impl.HelpExtension.getCommandHelpPaginator","location":"kord-extensions/dev.kordex.core.extensions.impl/-help-extension/get-command-help-paginator.html","searchKeys":["getCommandHelpPaginator","open suspend override fun getCommandHelpPaginator(event: MessageCreateEvent, prefix: String, args: List<String>): BasePaginator","dev.kordex.core.extensions.impl.HelpExtension.getCommandHelpPaginator"]},{"name":"open suspend override fun getCommandHelpPaginator(event: MessageCreateEvent, prefix: String, command: ChatCommand<out Arguments>?): BasePaginator","description":"dev.kordex.core.extensions.impl.HelpExtension.getCommandHelpPaginator","location":"kord-extensions/dev.kordex.core.extensions.impl/-help-extension/get-command-help-paginator.html","searchKeys":["getCommandHelpPaginator","open suspend override fun getCommandHelpPaginator(event: MessageCreateEvent, prefix: String, command: ChatCommand<out Arguments>?): BasePaginator","dev.kordex.core.extensions.impl.HelpExtension.getCommandHelpPaginator"]},{"name":"open suspend override fun getGuild(): Guild","description":"dev.kordex.core.events.extra.GuildJoinRequestDeleteEvent.getGuild","location":"kord-extensions/dev.kordex.core.events.extra/-guild-join-request-delete-event/get-guild.html","searchKeys":["getGuild","open suspend override fun getGuild(): Guild","dev.kordex.core.events.extra.GuildJoinRequestDeleteEvent.getGuild"]},{"name":"open suspend override fun getGuild(): Guild","description":"dev.kordex.core.events.extra.GuildJoinRequestUpdateEvent.getGuild","location":"kord-extensions/dev.kordex.core.events.extra/-guild-join-request-update-event/get-guild.html","searchKeys":["getGuild","open suspend override fun getGuild(): Guild","dev.kordex.core.events.extra.GuildJoinRequestUpdateEvent.getGuild"]},{"name":"open suspend override fun getGuild(): GuildBehavior?","description":"dev.kordex.core.commands.application.ApplicationCommandContext.getGuild","location":"kord-extensions/dev.kordex.core.commands.application/-application-command-context/get-guild.html","searchKeys":["getGuild","open suspend override fun getGuild(): GuildBehavior?","dev.kordex.core.commands.application.ApplicationCommandContext.getGuild"]},{"name":"open suspend override fun getGuild(): GuildBehavior?","description":"dev.kordex.core.commands.application.DummyAutocompleteCommandContext.getGuild","location":"kord-extensions/dev.kordex.core.commands.application/-dummy-autocomplete-command-context/get-guild.html","searchKeys":["getGuild","open suspend override fun getGuild(): GuildBehavior?","dev.kordex.core.commands.application.DummyAutocompleteCommandContext.getGuild"]},{"name":"open suspend override fun getGuild(): GuildBehavior?","description":"dev.kordex.core.commands.chat.ChatCommandContext.getGuild","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-command-context/get-guild.html","searchKeys":["getGuild","open suspend override fun getGuild(): GuildBehavior?","dev.kordex.core.commands.chat.ChatCommandContext.getGuild"]},{"name":"open suspend override fun getGuildOrNull(): Guild?","description":"dev.kordex.core.events.extra.GuildJoinRequestDeleteEvent.getGuildOrNull","location":"kord-extensions/dev.kordex.core.events.extra/-guild-join-request-delete-event/get-guild-or-null.html","searchKeys":["getGuildOrNull","open suspend override fun getGuildOrNull(): Guild?","dev.kordex.core.events.extra.GuildJoinRequestDeleteEvent.getGuildOrNull"]},{"name":"open suspend override fun getGuildOrNull(): Guild?","description":"dev.kordex.core.events.extra.GuildJoinRequestUpdateEvent.getGuildOrNull","location":"kord-extensions/dev.kordex.core.events.extra/-guild-join-request-update-event/get-guild-or-null.html","searchKeys":["getGuildOrNull","open suspend override fun getGuildOrNull(): Guild?","dev.kordex.core.events.extra.GuildJoinRequestUpdateEvent.getGuildOrNull"]},{"name":"open suspend override fun getLocale(): Locale","description":"dev.kordex.core.commands.CommandContext.getLocale","location":"kord-extensions/dev.kordex.core.commands/-command-context/get-locale.html","searchKeys":["getLocale","open suspend override fun getLocale(): Locale","dev.kordex.core.commands.CommandContext.getLocale"]},{"name":"open suspend override fun getLocale(): Locale","description":"dev.kordex.core.components.ComponentContext.getLocale","location":"kord-extensions/dev.kordex.core.components/-component-context/get-locale.html","searchKeys":["getLocale","open suspend override fun getLocale(): Locale","dev.kordex.core.components.ComponentContext.getLocale"]},{"name":"open suspend override fun getLocale(): Locale","description":"dev.kordex.core.events.EventContext.getLocale","location":"kord-extensions/dev.kordex.core.events/-event-context/get-locale.html","searchKeys":["getLocale","open suspend override fun getLocale(): Locale","dev.kordex.core.events.EventContext.getLocale"]},{"name":"open suspend override fun getMainHelpPaginator(event: MessageCreateEvent, prefix: String): BasePaginator","description":"dev.kordex.core.extensions.impl.HelpExtension.getMainHelpPaginator","location":"kord-extensions/dev.kordex.core.extensions.impl/-help-extension/get-main-help-paginator.html","searchKeys":["getMainHelpPaginator","open suspend override fun getMainHelpPaginator(event: MessageCreateEvent, prefix: String): BasePaginator","dev.kordex.core.extensions.impl.HelpExtension.getMainHelpPaginator"]},{"name":"open suspend override fun getMember(): Member","description":"dev.kordex.core.events.extra.GuildJoinRequestDeleteEvent.getMember","location":"kord-extensions/dev.kordex.core.events.extra/-guild-join-request-delete-event/get-member.html","searchKeys":["getMember","open suspend override fun getMember(): Member","dev.kordex.core.events.extra.GuildJoinRequestDeleteEvent.getMember"]},{"name":"open suspend override fun getMember(): Member","description":"dev.kordex.core.events.extra.GuildJoinRequestUpdateEvent.getMember","location":"kord-extensions/dev.kordex.core.events.extra/-guild-join-request-update-event/get-member.html","searchKeys":["getMember","open suspend override fun getMember(): Member","dev.kordex.core.events.extra.GuildJoinRequestUpdateEvent.getMember"]},{"name":"open suspend override fun getMember(): MemberBehavior?","description":"dev.kordex.core.commands.application.ApplicationCommandContext.getMember","location":"kord-extensions/dev.kordex.core.commands.application/-application-command-context/get-member.html","searchKeys":["getMember","open suspend override fun getMember(): MemberBehavior?","dev.kordex.core.commands.application.ApplicationCommandContext.getMember"]},{"name":"open suspend override fun getMember(): MemberBehavior?","description":"dev.kordex.core.commands.application.DummyAutocompleteCommandContext.getMember","location":"kord-extensions/dev.kordex.core.commands.application/-dummy-autocomplete-command-context/get-member.html","searchKeys":["getMember","open suspend override fun getMember(): MemberBehavior?","dev.kordex.core.commands.application.DummyAutocompleteCommandContext.getMember"]},{"name":"open suspend override fun getMember(): MemberBehavior?","description":"dev.kordex.core.commands.chat.ChatCommandContext.getMember","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-command-context/get-member.html","searchKeys":["getMember","open suspend override fun getMember(): MemberBehavior?","dev.kordex.core.commands.chat.ChatCommandContext.getMember"]},{"name":"open suspend override fun getMemberOrNull(): Member?","description":"dev.kordex.core.events.extra.GuildJoinRequestDeleteEvent.getMemberOrNull","location":"kord-extensions/dev.kordex.core.events.extra/-guild-join-request-delete-event/get-member-or-null.html","searchKeys":["getMemberOrNull","open suspend override fun getMemberOrNull(): Member?","dev.kordex.core.events.extra.GuildJoinRequestDeleteEvent.getMemberOrNull"]},{"name":"open suspend override fun getMemberOrNull(): Member?","description":"dev.kordex.core.events.extra.GuildJoinRequestUpdateEvent.getMemberOrNull","location":"kord-extensions/dev.kordex.core.events.extra/-guild-join-request-update-event/get-member-or-null.html","searchKeys":["getMemberOrNull","open suspend override fun getMemberOrNull(): Member?","dev.kordex.core.events.extra.GuildJoinRequestUpdateEvent.getMemberOrNull"]},{"name":"open suspend override fun getUser(): User","description":"dev.kordex.core.events.extra.GuildJoinRequestDeleteEvent.getUser","location":"kord-extensions/dev.kordex.core.events.extra/-guild-join-request-delete-event/get-user.html","searchKeys":["getUser","open suspend override fun getUser(): User","dev.kordex.core.events.extra.GuildJoinRequestDeleteEvent.getUser"]},{"name":"open suspend override fun getUser(): User","description":"dev.kordex.core.events.extra.GuildJoinRequestUpdateEvent.getUser","location":"kord-extensions/dev.kordex.core.events.extra/-guild-join-request-update-event/get-user.html","searchKeys":["getUser","open suspend override fun getUser(): User","dev.kordex.core.events.extra.GuildJoinRequestUpdateEvent.getUser"]},{"name":"open suspend override fun getUser(): UserBehavior","description":"dev.kordex.core.commands.application.ApplicationCommandContext.getUser","location":"kord-extensions/dev.kordex.core.commands.application/-application-command-context/get-user.html","searchKeys":["getUser","open suspend override fun getUser(): UserBehavior","dev.kordex.core.commands.application.ApplicationCommandContext.getUser"]},{"name":"open suspend override fun getUser(): UserBehavior","description":"dev.kordex.core.commands.application.DummyAutocompleteCommandContext.getUser","location":"kord-extensions/dev.kordex.core.commands.application/-dummy-autocomplete-command-context/get-user.html","searchKeys":["getUser","open suspend override fun getUser(): UserBehavior","dev.kordex.core.commands.application.DummyAutocompleteCommandContext.getUser"]},{"name":"open suspend override fun getUser(): UserBehavior?","description":"dev.kordex.core.commands.chat.ChatCommandContext.getUser","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-command-context/get-user.html","searchKeys":["getUser","open suspend override fun getUser(): UserBehavior?","dev.kordex.core.commands.chat.ChatCommandContext.getUser"]},{"name":"open suspend override fun getUserOrNull(): User?","description":"dev.kordex.core.events.extra.GuildJoinRequestDeleteEvent.getUserOrNull","location":"kord-extensions/dev.kordex.core.events.extra/-guild-join-request-delete-event/get-user-or-null.html","searchKeys":["getUserOrNull","open suspend override fun getUserOrNull(): User?","dev.kordex.core.events.extra.GuildJoinRequestDeleteEvent.getUserOrNull"]},{"name":"open suspend override fun getUserOrNull(): User?","description":"dev.kordex.core.events.extra.GuildJoinRequestUpdateEvent.getUserOrNull","location":"kord-extensions/dev.kordex.core.events.extra/-guild-join-request-update-event/get-user-or-null.html","searchKeys":["getUserOrNull","open suspend override fun getUserOrNull(): User?","dev.kordex.core.events.extra.GuildJoinRequestUpdateEvent.getUserOrNull"]},{"name":"open suspend override fun goToPage(page: Int)","description":"dev.kordex.core.pagination.BaseButtonPaginator.goToPage","location":"kord-extensions/dev.kordex.core.pagination/-base-button-paginator/go-to-page.html","searchKeys":["goToPage","open suspend override fun goToPage(page: Int)","dev.kordex.core.pagination.BaseButtonPaginator.goToPage"]},{"name":"open suspend override fun handle(event: AutoCompleteInteractionCreateEvent)","description":"dev.kordex.core.commands.application.DefaultApplicationCommandRegistry.handle","location":"kord-extensions/dev.kordex.core.commands.application/-default-application-command-registry/handle.html","searchKeys":["handle","open suspend override fun handle(event: AutoCompleteInteractionCreateEvent)","dev.kordex.core.commands.application.DefaultApplicationCommandRegistry.handle"]},{"name":"open suspend override fun handle(event: AutoCompleteInteractionCreateEvent)","description":"dev.kordex.core.commands.application.StorageAwareApplicationCommandRegistry.handle","location":"kord-extensions/dev.kordex.core.commands.application/-storage-aware-application-command-registry/handle.html","searchKeys":["handle","open suspend override fun handle(event: AutoCompleteInteractionCreateEvent)","dev.kordex.core.commands.application.StorageAwareApplicationCommandRegistry.handle"]},{"name":"open suspend override fun handle(event: ChatInputCommandInteractionCreateEvent)","description":"dev.kordex.core.commands.application.DefaultApplicationCommandRegistry.handle","location":"kord-extensions/dev.kordex.core.commands.application/-default-application-command-registry/handle.html","searchKeys":["handle","open suspend override fun handle(event: ChatInputCommandInteractionCreateEvent)","dev.kordex.core.commands.application.DefaultApplicationCommandRegistry.handle"]},{"name":"open suspend override fun handle(event: ChatInputCommandInteractionCreateEvent)","description":"dev.kordex.core.commands.application.StorageAwareApplicationCommandRegistry.handle","location":"kord-extensions/dev.kordex.core.commands.application/-storage-aware-application-command-registry/handle.html","searchKeys":["handle","open suspend override fun handle(event: ChatInputCommandInteractionCreateEvent)","dev.kordex.core.commands.application.StorageAwareApplicationCommandRegistry.handle"]},{"name":"open suspend override fun handle(event: MessageCommandInteractionCreateEvent)","description":"dev.kordex.core.commands.application.DefaultApplicationCommandRegistry.handle","location":"kord-extensions/dev.kordex.core.commands.application/-default-application-command-registry/handle.html","searchKeys":["handle","open suspend override fun handle(event: MessageCommandInteractionCreateEvent)","dev.kordex.core.commands.application.DefaultApplicationCommandRegistry.handle"]},{"name":"open suspend override fun handle(event: MessageCommandInteractionCreateEvent)","description":"dev.kordex.core.commands.application.StorageAwareApplicationCommandRegistry.handle","location":"kord-extensions/dev.kordex.core.commands.application/-storage-aware-application-command-registry/handle.html","searchKeys":["handle","open suspend override fun handle(event: MessageCommandInteractionCreateEvent)","dev.kordex.core.commands.application.StorageAwareApplicationCommandRegistry.handle"]},{"name":"open suspend override fun handle(event: UserCommandInteractionCreateEvent)","description":"dev.kordex.core.commands.application.DefaultApplicationCommandRegistry.handle","location":"kord-extensions/dev.kordex.core.commands.application/-default-application-command-registry/handle.html","searchKeys":["handle","open suspend override fun handle(event: UserCommandInteractionCreateEvent)","dev.kordex.core.commands.application.DefaultApplicationCommandRegistry.handle"]},{"name":"open suspend override fun handle(event: UserCommandInteractionCreateEvent)","description":"dev.kordex.core.commands.application.StorageAwareApplicationCommandRegistry.handle","location":"kord-extensions/dev.kordex.core.commands.application/-storage-aware-application-command-registry/handle.html","searchKeys":["handle","open suspend override fun handle(event: UserCommandInteractionCreateEvent)","dev.kordex.core.commands.application.StorageAwareApplicationCommandRegistry.handle"]},{"name":"open suspend override fun handleError(t: Throwable, context: CommandContext): Key","description":"dev.kordex.core.commands.converters.CoalescingToDefaultingConverter.handleError","location":"kord-extensions/dev.kordex.core.commands.converters/-coalescing-to-defaulting-converter/handle-error.html","searchKeys":["handleError","open suspend override fun handleError(t: Throwable, context: CommandContext): Key","dev.kordex.core.commands.converters.CoalescingToDefaultingConverter.handleError"]},{"name":"open suspend override fun handleError(t: Throwable, context: CommandContext): Key","description":"dev.kordex.core.commands.converters.CoalescingToOptionalConverter.handleError","location":"kord-extensions/dev.kordex.core.commands.converters/-coalescing-to-optional-converter/handle-error.html","searchKeys":["handleError","open suspend override fun handleError(t: Throwable, context: CommandContext): Key","dev.kordex.core.commands.converters.CoalescingToOptionalConverter.handleError"]},{"name":"open suspend override fun handleError(t: Throwable, context: CommandContext): Key","description":"dev.kordex.core.commands.converters.SingleToDefaultingConverter.handleError","location":"kord-extensions/dev.kordex.core.commands.converters/-single-to-defaulting-converter/handle-error.html","searchKeys":["handleError","open suspend override fun handleError(t: Throwable, context: CommandContext): Key","dev.kordex.core.commands.converters.SingleToDefaultingConverter.handleError"]},{"name":"open suspend override fun handleError(t: Throwable, context: CommandContext): Key","description":"dev.kordex.core.commands.converters.SingleToListConverter.handleError","location":"kord-extensions/dev.kordex.core.commands.converters/-single-to-list-converter/handle-error.html","searchKeys":["handleError","open suspend override fun handleError(t: Throwable, context: CommandContext): Key","dev.kordex.core.commands.converters.SingleToListConverter.handleError"]},{"name":"open suspend override fun handleError(t: Throwable, context: CommandContext): Key","description":"dev.kordex.core.commands.converters.SingleToOptionalConverter.handleError","location":"kord-extensions/dev.kordex.core.commands.converters/-single-to-optional-converter/handle-error.html","searchKeys":["handleError","open suspend override fun handleError(t: Throwable, context: CommandContext): Key","dev.kordex.core.commands.converters.SingleToOptionalConverter.handleError"]},{"name":"open suspend override fun initialize(commands: List<ApplicationCommand<*>>)","description":"dev.kordex.core.commands.application.DefaultApplicationCommandRegistry.initialize","location":"kord-extensions/dev.kordex.core.commands.application/-default-application-command-registry/initialize.html","searchKeys":["initialize","open suspend override fun initialize(commands: List<ApplicationCommand<*>>)","dev.kordex.core.commands.application.DefaultApplicationCommandRegistry.initialize"]},{"name":"open suspend override fun nextGroup()","description":"dev.kordex.core.pagination.BaseButtonPaginator.nextGroup","location":"kord-extensions/dev.kordex.core.pagination/-base-button-paginator/next-group.html","searchKeys":["nextGroup","open suspend override fun nextGroup()","dev.kordex.core.pagination.BaseButtonPaginator.nextGroup"]},{"name":"open suspend override fun parse(parser: StringParser?, context: CommandContext, named: List<String>?): Int","description":"dev.kordex.core.commands.converters.CoalescingToDefaultingConverter.parse","location":"kord-extensions/dev.kordex.core.commands.converters/-coalescing-to-defaulting-converter/parse.html","searchKeys":["parse","open suspend override fun parse(parser: StringParser?, context: CommandContext, named: List<String>?): Int","dev.kordex.core.commands.converters.CoalescingToDefaultingConverter.parse"]},{"name":"open suspend override fun parse(parser: StringParser?, context: CommandContext, named: List<String>?): Int","description":"dev.kordex.core.commands.converters.CoalescingToOptionalConverter.parse","location":"kord-extensions/dev.kordex.core.commands.converters/-coalescing-to-optional-converter/parse.html","searchKeys":["parse","open suspend override fun parse(parser: StringParser?, context: CommandContext, named: List<String>?): Int","dev.kordex.core.commands.converters.CoalescingToOptionalConverter.parse"]},{"name":"open suspend override fun parse(parser: StringParser?, context: CommandContext, named: List<String>?): Int","description":"dev.kordex.core.commands.converters.SingleToListConverter.parse","location":"kord-extensions/dev.kordex.core.commands.converters/-single-to-list-converter/parse.html","searchKeys":["parse","open suspend override fun parse(parser: StringParser?, context: CommandContext, named: List<String>?): Int","dev.kordex.core.commands.converters.SingleToListConverter.parse"]},{"name":"open suspend override fun parse(parser: StringParser?, context: CommandContext, named: List<String>?): Int","description":"dev.kordex.core.commands.converters.impl.DurationCoalescingConverter.parse","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-duration-coalescing-converter/parse.html","searchKeys":["parse","open suspend override fun parse(parser: StringParser?, context: CommandContext, named: List<String>?): Int","dev.kordex.core.commands.converters.impl.DurationCoalescingConverter.parse"]},{"name":"open suspend override fun parse(parser: StringParser?, context: CommandContext, named: List<String>?): Int","description":"dev.kordex.core.commands.converters.impl.RegexCoalescingConverter.parse","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-regex-coalescing-converter/parse.html","searchKeys":["parse","open suspend override fun parse(parser: StringParser?, context: CommandContext, named: List<String>?): Int","dev.kordex.core.commands.converters.impl.RegexCoalescingConverter.parse"]},{"name":"open suspend override fun parse(parser: StringParser?, context: CommandContext, named: List<String>?): Int","description":"dev.kordex.core.commands.converters.impl.StringCoalescingConverter.parse","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-string-coalescing-converter/parse.html","searchKeys":["parse","open suspend override fun parse(parser: StringParser?, context: CommandContext, named: List<String>?): Int","dev.kordex.core.commands.converters.impl.StringCoalescingConverter.parse"]},{"name":"open suspend override fun parse(parser: StringParser?, context: CommandContext, named: String?): Boolean","description":"dev.kordex.core.commands.application.slash.converters.impl.EnumChoiceConverter.parse","location":"kord-extensions/dev.kordex.core.commands.application.slash.converters.impl/-enum-choice-converter/parse.html","searchKeys":["parse","open suspend override fun parse(parser: StringParser?, context: CommandContext, named: String?): Boolean","dev.kordex.core.commands.application.slash.converters.impl.EnumChoiceConverter.parse"]},{"name":"open suspend override fun parse(parser: StringParser?, context: CommandContext, named: String?): Boolean","description":"dev.kordex.core.commands.application.slash.converters.impl.NumberChoiceConverter.parse","location":"kord-extensions/dev.kordex.core.commands.application.slash.converters.impl/-number-choice-converter/parse.html","searchKeys":["parse","open suspend override fun parse(parser: StringParser?, context: CommandContext, named: String?): Boolean","dev.kordex.core.commands.application.slash.converters.impl.NumberChoiceConverter.parse"]},{"name":"open suspend override fun parse(parser: StringParser?, context: CommandContext, named: String?): Boolean","description":"dev.kordex.core.commands.application.slash.converters.impl.StringChoiceConverter.parse","location":"kord-extensions/dev.kordex.core.commands.application.slash.converters.impl/-string-choice-converter/parse.html","searchKeys":["parse","open suspend override fun parse(parser: StringParser?, context: CommandContext, named: String?): Boolean","dev.kordex.core.commands.application.slash.converters.impl.StringChoiceConverter.parse"]},{"name":"open suspend override fun parse(parser: StringParser?, context: CommandContext, named: String?): Boolean","description":"dev.kordex.core.commands.converters.SingleToDefaultingConverter.parse","location":"kord-extensions/dev.kordex.core.commands.converters/-single-to-defaulting-converter/parse.html","searchKeys":["parse","open suspend override fun parse(parser: StringParser?, context: CommandContext, named: String?): Boolean","dev.kordex.core.commands.converters.SingleToDefaultingConverter.parse"]},{"name":"open suspend override fun parse(parser: StringParser?, context: CommandContext, named: String?): Boolean","description":"dev.kordex.core.commands.converters.SingleToOptionalConverter.parse","location":"kord-extensions/dev.kordex.core.commands.converters/-single-to-optional-converter/parse.html","searchKeys":["parse","open suspend override fun parse(parser: StringParser?, context: CommandContext, named: String?): Boolean","dev.kordex.core.commands.converters.SingleToOptionalConverter.parse"]},{"name":"open suspend override fun parse(parser: StringParser?, context: CommandContext, named: String?): Boolean","description":"dev.kordex.core.commands.converters.impl.AttachmentConverter.parse","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-attachment-converter/parse.html","searchKeys":["parse","open suspend override fun parse(parser: StringParser?, context: CommandContext, named: String?): Boolean","dev.kordex.core.commands.converters.impl.AttachmentConverter.parse"]},{"name":"open suspend override fun parse(parser: StringParser?, context: CommandContext, named: String?): Boolean","description":"dev.kordex.core.commands.converters.impl.BooleanConverter.parse","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-boolean-converter/parse.html","searchKeys":["parse","open suspend override fun parse(parser: StringParser?, context: CommandContext, named: String?): Boolean","dev.kordex.core.commands.converters.impl.BooleanConverter.parse"]},{"name":"open suspend override fun parse(parser: StringParser?, context: CommandContext, named: String?): Boolean","description":"dev.kordex.core.commands.converters.impl.ChannelConverter.parse","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-channel-converter/parse.html","searchKeys":["parse","open suspend override fun parse(parser: StringParser?, context: CommandContext, named: String?): Boolean","dev.kordex.core.commands.converters.impl.ChannelConverter.parse"]},{"name":"open suspend override fun parse(parser: StringParser?, context: CommandContext, named: String?): Boolean","description":"dev.kordex.core.commands.converters.impl.ColorConverter.parse","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-color-converter/parse.html","searchKeys":["parse","open suspend override fun parse(parser: StringParser?, context: CommandContext, named: String?): Boolean","dev.kordex.core.commands.converters.impl.ColorConverter.parse"]},{"name":"open suspend override fun parse(parser: StringParser?, context: CommandContext, named: String?): Boolean","description":"dev.kordex.core.commands.converters.impl.DecimalConverter.parse","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-decimal-converter/parse.html","searchKeys":["parse","open suspend override fun parse(parser: StringParser?, context: CommandContext, named: String?): Boolean","dev.kordex.core.commands.converters.impl.DecimalConverter.parse"]},{"name":"open suspend override fun parse(parser: StringParser?, context: CommandContext, named: String?): Boolean","description":"dev.kordex.core.commands.converters.impl.DurationConverter.parse","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-duration-converter/parse.html","searchKeys":["parse","open suspend override fun parse(parser: StringParser?, context: CommandContext, named: String?): Boolean","dev.kordex.core.commands.converters.impl.DurationConverter.parse"]},{"name":"open suspend override fun parse(parser: StringParser?, context: CommandContext, named: String?): Boolean","description":"dev.kordex.core.commands.converters.impl.EmailConverter.parse","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-email-converter/parse.html","searchKeys":["parse","open suspend override fun parse(parser: StringParser?, context: CommandContext, named: String?): Boolean","dev.kordex.core.commands.converters.impl.EmailConverter.parse"]},{"name":"open suspend override fun parse(parser: StringParser?, context: CommandContext, named: String?): Boolean","description":"dev.kordex.core.commands.converters.impl.EmojiConverter.parse","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-emoji-converter/parse.html","searchKeys":["parse","open suspend override fun parse(parser: StringParser?, context: CommandContext, named: String?): Boolean","dev.kordex.core.commands.converters.impl.EmojiConverter.parse"]},{"name":"open suspend override fun parse(parser: StringParser?, context: CommandContext, named: String?): Boolean","description":"dev.kordex.core.commands.converters.impl.EnumConverter.parse","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-enum-converter/parse.html","searchKeys":["parse","open suspend override fun parse(parser: StringParser?, context: CommandContext, named: String?): Boolean","dev.kordex.core.commands.converters.impl.EnumConverter.parse"]},{"name":"open suspend override fun parse(parser: StringParser?, context: CommandContext, named: String?): Boolean","description":"dev.kordex.core.commands.converters.impl.GuildConverter.parse","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-guild-converter/parse.html","searchKeys":["parse","open suspend override fun parse(parser: StringParser?, context: CommandContext, named: String?): Boolean","dev.kordex.core.commands.converters.impl.GuildConverter.parse"]},{"name":"open suspend override fun parse(parser: StringParser?, context: CommandContext, named: String?): Boolean","description":"dev.kordex.core.commands.converters.impl.IntConverter.parse","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-int-converter/parse.html","searchKeys":["parse","open suspend override fun parse(parser: StringParser?, context: CommandContext, named: String?): Boolean","dev.kordex.core.commands.converters.impl.IntConverter.parse"]},{"name":"open suspend override fun parse(parser: StringParser?, context: CommandContext, named: String?): Boolean","description":"dev.kordex.core.commands.converters.impl.LongConverter.parse","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-long-converter/parse.html","searchKeys":["parse","open suspend override fun parse(parser: StringParser?, context: CommandContext, named: String?): Boolean","dev.kordex.core.commands.converters.impl.LongConverter.parse"]},{"name":"open suspend override fun parse(parser: StringParser?, context: CommandContext, named: String?): Boolean","description":"dev.kordex.core.commands.converters.impl.MemberConverter.parse","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-member-converter/parse.html","searchKeys":["parse","open suspend override fun parse(parser: StringParser?, context: CommandContext, named: String?): Boolean","dev.kordex.core.commands.converters.impl.MemberConverter.parse"]},{"name":"open suspend override fun parse(parser: StringParser?, context: CommandContext, named: String?): Boolean","description":"dev.kordex.core.commands.converters.impl.MessageConverter.parse","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-message-converter/parse.html","searchKeys":["parse","open suspend override fun parse(parser: StringParser?, context: CommandContext, named: String?): Boolean","dev.kordex.core.commands.converters.impl.MessageConverter.parse"]},{"name":"open suspend override fun parse(parser: StringParser?, context: CommandContext, named: String?): Boolean","description":"dev.kordex.core.commands.converters.impl.RegexConverter.parse","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-regex-converter/parse.html","searchKeys":["parse","open suspend override fun parse(parser: StringParser?, context: CommandContext, named: String?): Boolean","dev.kordex.core.commands.converters.impl.RegexConverter.parse"]},{"name":"open suspend override fun parse(parser: StringParser?, context: CommandContext, named: String?): Boolean","description":"dev.kordex.core.commands.converters.impl.RoleConverter.parse","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-role-converter/parse.html","searchKeys":["parse","open suspend override fun parse(parser: StringParser?, context: CommandContext, named: String?): Boolean","dev.kordex.core.commands.converters.impl.RoleConverter.parse"]},{"name":"open suspend override fun parse(parser: StringParser?, context: CommandContext, named: String?): Boolean","description":"dev.kordex.core.commands.converters.impl.SnowflakeConverter.parse","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-snowflake-converter/parse.html","searchKeys":["parse","open suspend override fun parse(parser: StringParser?, context: CommandContext, named: String?): Boolean","dev.kordex.core.commands.converters.impl.SnowflakeConverter.parse"]},{"name":"open suspend override fun parse(parser: StringParser?, context: CommandContext, named: String?): Boolean","description":"dev.kordex.core.commands.converters.impl.StringConverter.parse","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-string-converter/parse.html","searchKeys":["parse","open suspend override fun parse(parser: StringParser?, context: CommandContext, named: String?): Boolean","dev.kordex.core.commands.converters.impl.StringConverter.parse"]},{"name":"open suspend override fun parse(parser: StringParser?, context: CommandContext, named: String?): Boolean","description":"dev.kordex.core.commands.converters.impl.SupportedLocaleConverter.parse","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-supported-locale-converter/parse.html","searchKeys":["parse","open suspend override fun parse(parser: StringParser?, context: CommandContext, named: String?): Boolean","dev.kordex.core.commands.converters.impl.SupportedLocaleConverter.parse"]},{"name":"open suspend override fun parse(parser: StringParser?, context: CommandContext, named: String?): Boolean","description":"dev.kordex.core.commands.converters.impl.TagConverter.parse","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-tag-converter/parse.html","searchKeys":["parse","open suspend override fun parse(parser: StringParser?, context: CommandContext, named: String?): Boolean","dev.kordex.core.commands.converters.impl.TagConverter.parse"]},{"name":"open suspend override fun parse(parser: StringParser?, context: CommandContext, named: String?): Boolean","description":"dev.kordex.core.commands.converters.impl.TimestampConverter.parse","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-timestamp-converter/parse.html","searchKeys":["parse","open suspend override fun parse(parser: StringParser?, context: CommandContext, named: String?): Boolean","dev.kordex.core.commands.converters.impl.TimestampConverter.parse"]},{"name":"open suspend override fun parse(parser: StringParser?, context: CommandContext, named: String?): Boolean","description":"dev.kordex.core.commands.converters.impl.UserConverter.parse","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-user-converter/parse.html","searchKeys":["parse","open suspend override fun parse(parser: StringParser?, context: CommandContext, named: String?): Boolean","dev.kordex.core.commands.converters.impl.UserConverter.parse"]},{"name":"open suspend override fun parse(parser: StringParser?, context: CommandContext, named: String?): Boolean","description":"dev.kordex.core.sentry.SentryIdConverter.parse","location":"kord-extensions/dev.kordex.core.sentry/-sentry-id-converter/parse.html","searchKeys":["parse","open suspend override fun parse(parser: StringParser?, context: CommandContext, named: String?): Boolean","dev.kordex.core.sentry.SentryIdConverter.parse"]},{"name":"open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","description":"dev.kordex.core.commands.application.slash.converters.impl.EnumChoiceConverter.parseOption","location":"kord-extensions/dev.kordex.core.commands.application.slash.converters.impl/-enum-choice-converter/parse-option.html","searchKeys":["parseOption","open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","dev.kordex.core.commands.application.slash.converters.impl.EnumChoiceConverter.parseOption"]},{"name":"open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","description":"dev.kordex.core.commands.application.slash.converters.impl.NumberChoiceConverter.parseOption","location":"kord-extensions/dev.kordex.core.commands.application.slash.converters.impl/-number-choice-converter/parse-option.html","searchKeys":["parseOption","open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","dev.kordex.core.commands.application.slash.converters.impl.NumberChoiceConverter.parseOption"]},{"name":"open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","description":"dev.kordex.core.commands.application.slash.converters.impl.StringChoiceConverter.parseOption","location":"kord-extensions/dev.kordex.core.commands.application.slash.converters.impl/-string-choice-converter/parse-option.html","searchKeys":["parseOption","open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","dev.kordex.core.commands.application.slash.converters.impl.StringChoiceConverter.parseOption"]},{"name":"open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","description":"dev.kordex.core.commands.converters.CoalescingToDefaultingConverter.parseOption","location":"kord-extensions/dev.kordex.core.commands.converters/-coalescing-to-defaulting-converter/parse-option.html","searchKeys":["parseOption","open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","dev.kordex.core.commands.converters.CoalescingToDefaultingConverter.parseOption"]},{"name":"open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","description":"dev.kordex.core.commands.converters.CoalescingToOptionalConverter.parseOption","location":"kord-extensions/dev.kordex.core.commands.converters/-coalescing-to-optional-converter/parse-option.html","searchKeys":["parseOption","open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","dev.kordex.core.commands.converters.CoalescingToOptionalConverter.parseOption"]},{"name":"open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","description":"dev.kordex.core.commands.converters.SingleToDefaultingConverter.parseOption","location":"kord-extensions/dev.kordex.core.commands.converters/-single-to-defaulting-converter/parse-option.html","searchKeys":["parseOption","open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","dev.kordex.core.commands.converters.SingleToDefaultingConverter.parseOption"]},{"name":"open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","description":"dev.kordex.core.commands.converters.SingleToListConverter.parseOption","location":"kord-extensions/dev.kordex.core.commands.converters/-single-to-list-converter/parse-option.html","searchKeys":["parseOption","open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","dev.kordex.core.commands.converters.SingleToListConverter.parseOption"]},{"name":"open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","description":"dev.kordex.core.commands.converters.SingleToOptionalConverter.parseOption","location":"kord-extensions/dev.kordex.core.commands.converters/-single-to-optional-converter/parse-option.html","searchKeys":["parseOption","open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","dev.kordex.core.commands.converters.SingleToOptionalConverter.parseOption"]},{"name":"open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","description":"dev.kordex.core.commands.converters.impl.AttachmentConverter.parseOption","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-attachment-converter/parse-option.html","searchKeys":["parseOption","open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","dev.kordex.core.commands.converters.impl.AttachmentConverter.parseOption"]},{"name":"open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","description":"dev.kordex.core.commands.converters.impl.BooleanConverter.parseOption","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-boolean-converter/parse-option.html","searchKeys":["parseOption","open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","dev.kordex.core.commands.converters.impl.BooleanConverter.parseOption"]},{"name":"open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","description":"dev.kordex.core.commands.converters.impl.ChannelConverter.parseOption","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-channel-converter/parse-option.html","searchKeys":["parseOption","open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","dev.kordex.core.commands.converters.impl.ChannelConverter.parseOption"]},{"name":"open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","description":"dev.kordex.core.commands.converters.impl.ColorConverter.parseOption","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-color-converter/parse-option.html","searchKeys":["parseOption","open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","dev.kordex.core.commands.converters.impl.ColorConverter.parseOption"]},{"name":"open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","description":"dev.kordex.core.commands.converters.impl.DecimalConverter.parseOption","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-decimal-converter/parse-option.html","searchKeys":["parseOption","open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","dev.kordex.core.commands.converters.impl.DecimalConverter.parseOption"]},{"name":"open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","description":"dev.kordex.core.commands.converters.impl.DurationCoalescingConverter.parseOption","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-duration-coalescing-converter/parse-option.html","searchKeys":["parseOption","open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","dev.kordex.core.commands.converters.impl.DurationCoalescingConverter.parseOption"]},{"name":"open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","description":"dev.kordex.core.commands.converters.impl.DurationConverter.parseOption","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-duration-converter/parse-option.html","searchKeys":["parseOption","open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","dev.kordex.core.commands.converters.impl.DurationConverter.parseOption"]},{"name":"open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","description":"dev.kordex.core.commands.converters.impl.EmailConverter.parseOption","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-email-converter/parse-option.html","searchKeys":["parseOption","open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","dev.kordex.core.commands.converters.impl.EmailConverter.parseOption"]},{"name":"open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","description":"dev.kordex.core.commands.converters.impl.EmojiConverter.parseOption","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-emoji-converter/parse-option.html","searchKeys":["parseOption","open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","dev.kordex.core.commands.converters.impl.EmojiConverter.parseOption"]},{"name":"open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","description":"dev.kordex.core.commands.converters.impl.EnumConverter.parseOption","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-enum-converter/parse-option.html","searchKeys":["parseOption","open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","dev.kordex.core.commands.converters.impl.EnumConverter.parseOption"]},{"name":"open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","description":"dev.kordex.core.commands.converters.impl.GuildConverter.parseOption","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-guild-converter/parse-option.html","searchKeys":["parseOption","open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","dev.kordex.core.commands.converters.impl.GuildConverter.parseOption"]},{"name":"open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","description":"dev.kordex.core.commands.converters.impl.IntConverter.parseOption","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-int-converter/parse-option.html","searchKeys":["parseOption","open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","dev.kordex.core.commands.converters.impl.IntConverter.parseOption"]},{"name":"open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","description":"dev.kordex.core.commands.converters.impl.LongConverter.parseOption","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-long-converter/parse-option.html","searchKeys":["parseOption","open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","dev.kordex.core.commands.converters.impl.LongConverter.parseOption"]},{"name":"open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","description":"dev.kordex.core.commands.converters.impl.MemberConverter.parseOption","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-member-converter/parse-option.html","searchKeys":["parseOption","open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","dev.kordex.core.commands.converters.impl.MemberConverter.parseOption"]},{"name":"open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","description":"dev.kordex.core.commands.converters.impl.MessageConverter.parseOption","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-message-converter/parse-option.html","searchKeys":["parseOption","open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","dev.kordex.core.commands.converters.impl.MessageConverter.parseOption"]},{"name":"open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","description":"dev.kordex.core.commands.converters.impl.RegexCoalescingConverter.parseOption","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-regex-coalescing-converter/parse-option.html","searchKeys":["parseOption","open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","dev.kordex.core.commands.converters.impl.RegexCoalescingConverter.parseOption"]},{"name":"open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","description":"dev.kordex.core.commands.converters.impl.RegexConverter.parseOption","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-regex-converter/parse-option.html","searchKeys":["parseOption","open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","dev.kordex.core.commands.converters.impl.RegexConverter.parseOption"]},{"name":"open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","description":"dev.kordex.core.commands.converters.impl.RoleConverter.parseOption","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-role-converter/parse-option.html","searchKeys":["parseOption","open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","dev.kordex.core.commands.converters.impl.RoleConverter.parseOption"]},{"name":"open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","description":"dev.kordex.core.commands.converters.impl.SnowflakeConverter.parseOption","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-snowflake-converter/parse-option.html","searchKeys":["parseOption","open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","dev.kordex.core.commands.converters.impl.SnowflakeConverter.parseOption"]},{"name":"open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","description":"dev.kordex.core.commands.converters.impl.StringCoalescingConverter.parseOption","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-string-coalescing-converter/parse-option.html","searchKeys":["parseOption","open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","dev.kordex.core.commands.converters.impl.StringCoalescingConverter.parseOption"]},{"name":"open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","description":"dev.kordex.core.commands.converters.impl.StringConverter.parseOption","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-string-converter/parse-option.html","searchKeys":["parseOption","open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","dev.kordex.core.commands.converters.impl.StringConverter.parseOption"]},{"name":"open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","description":"dev.kordex.core.commands.converters.impl.SupportedLocaleConverter.parseOption","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-supported-locale-converter/parse-option.html","searchKeys":["parseOption","open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","dev.kordex.core.commands.converters.impl.SupportedLocaleConverter.parseOption"]},{"name":"open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","description":"dev.kordex.core.commands.converters.impl.TagConverter.parseOption","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-tag-converter/parse-option.html","searchKeys":["parseOption","open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","dev.kordex.core.commands.converters.impl.TagConverter.parseOption"]},{"name":"open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","description":"dev.kordex.core.commands.converters.impl.TimestampConverter.parseOption","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-timestamp-converter/parse-option.html","searchKeys":["parseOption","open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","dev.kordex.core.commands.converters.impl.TimestampConverter.parseOption"]},{"name":"open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","description":"dev.kordex.core.commands.converters.impl.UserConverter.parseOption","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-user-converter/parse-option.html","searchKeys":["parseOption","open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","dev.kordex.core.commands.converters.impl.UserConverter.parseOption"]},{"name":"open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","description":"dev.kordex.core.sentry.SentryIdConverter.parseOption","location":"kord-extensions/dev.kordex.core.sentry/-sentry-id-converter/parse-option.html","searchKeys":["parseOption","open suspend override fun parseOption(context: CommandContext, option: OptionValue<*>): Boolean","dev.kordex.core.sentry.SentryIdConverter.parseOption"]},{"name":"open suspend override fun populate()","description":"dev.kordex.core.commands.application.ApplicationCommandContext.populate","location":"kord-extensions/dev.kordex.core.commands.application/-application-command-context/populate.html","searchKeys":["populate","open suspend override fun populate()","dev.kordex.core.commands.application.ApplicationCommandContext.populate"]},{"name":"open suspend override fun populate()","description":"dev.kordex.core.commands.application.DummyAutocompleteCommandContext.populate","location":"kord-extensions/dev.kordex.core.commands.application/-dummy-autocomplete-command-context/populate.html","searchKeys":["populate","open suspend override fun populate()","dev.kordex.core.commands.application.DummyAutocompleteCommandContext.populate"]},{"name":"open suspend override fun populate()","description":"dev.kordex.core.commands.chat.ChatCommandContext.populate","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-command-context/populate.html","searchKeys":["populate","open suspend override fun populate()","dev.kordex.core.commands.chat.ChatCommandContext.populate"]},{"name":"open suspend override fun register(command: MessageCommand<*, *>): MessageCommand<*, *>?","description":"dev.kordex.core.commands.application.DefaultApplicationCommandRegistry.register","location":"kord-extensions/dev.kordex.core.commands.application/-default-application-command-registry/register.html","searchKeys":["register","open suspend override fun register(command: MessageCommand<*, *>): MessageCommand<*, *>?","dev.kordex.core.commands.application.DefaultApplicationCommandRegistry.register"]},{"name":"open suspend override fun register(command: MessageCommand<*, *>): MessageCommand<*, *>?","description":"dev.kordex.core.commands.application.StorageAwareApplicationCommandRegistry.register","location":"kord-extensions/dev.kordex.core.commands.application/-storage-aware-application-command-registry/register.html","searchKeys":["register","open suspend override fun register(command: MessageCommand<*, *>): MessageCommand<*, *>?","dev.kordex.core.commands.application.StorageAwareApplicationCommandRegistry.register"]},{"name":"open suspend override fun register(command: SlashCommand<*, *, *>): SlashCommand<*, *, *>?","description":"dev.kordex.core.commands.application.DefaultApplicationCommandRegistry.register","location":"kord-extensions/dev.kordex.core.commands.application/-default-application-command-registry/register.html","searchKeys":["register","open suspend override fun register(command: SlashCommand<*, *, *>): SlashCommand<*, *, *>?","dev.kordex.core.commands.application.DefaultApplicationCommandRegistry.register"]},{"name":"open suspend override fun register(command: SlashCommand<*, *, *>): SlashCommand<*, *, *>?","description":"dev.kordex.core.commands.application.StorageAwareApplicationCommandRegistry.register","location":"kord-extensions/dev.kordex.core.commands.application/-storage-aware-application-command-registry/register.html","searchKeys":["register","open suspend override fun register(command: SlashCommand<*, *, *>): SlashCommand<*, *, *>?","dev.kordex.core.commands.application.StorageAwareApplicationCommandRegistry.register"]},{"name":"open suspend override fun register(command: UserCommand<*, *>): UserCommand<*, *>?","description":"dev.kordex.core.commands.application.DefaultApplicationCommandRegistry.register","location":"kord-extensions/dev.kordex.core.commands.application/-default-application-command-registry/register.html","searchKeys":["register","open suspend override fun register(command: UserCommand<*, *>): UserCommand<*, *>?","dev.kordex.core.commands.application.DefaultApplicationCommandRegistry.register"]},{"name":"open suspend override fun register(command: UserCommand<*, *>): UserCommand<*, *>?","description":"dev.kordex.core.commands.application.StorageAwareApplicationCommandRegistry.register","location":"kord-extensions/dev.kordex.core.commands.application/-storage-aware-application-command-registry/register.html","searchKeys":["register","open suspend override fun register(command: UserCommand<*, *>): UserCommand<*, *>?","dev.kordex.core.commands.application.StorageAwareApplicationCommandRegistry.register"]},{"name":"open suspend override fun register(data: T)","description":"dev.kordex.core.registry.AbstractDeconstructingApplicationCommandRegistryStorage.register","location":"kord-extensions/dev.kordex.core.registry/-abstract-deconstructing-application-command-registry-storage/register.html","searchKeys":["register","open suspend override fun register(data: T)","dev.kordex.core.registry.AbstractDeconstructingApplicationCommandRegistryStorage.register"]},{"name":"open suspend override fun register(data: T)","description":"dev.kordex.core.registry.DefaultLocalRegistryStorage.register","location":"kord-extensions/dev.kordex.core.registry/-default-local-registry-storage/register.html","searchKeys":["register","open suspend override fun register(data: T)","dev.kordex.core.registry.DefaultLocalRegistryStorage.register"]},{"name":"open suspend override fun remove(id: K): T?","description":"dev.kordex.core.registry.DefaultLocalRegistryStorage.remove","location":"kord-extensions/dev.kordex.core.registry/-default-local-registry-storage/remove.html","searchKeys":["remove","open suspend override fun remove(id: K): T?","dev.kordex.core.registry.DefaultLocalRegistryStorage.remove"]},{"name":"open suspend override fun remove(id: Snowflake): T?","description":"dev.kordex.core.registry.AbstractDeconstructingApplicationCommandRegistryStorage.remove","location":"kord-extensions/dev.kordex.core.registry/-abstract-deconstructing-application-command-registry-storage/remove.html","searchKeys":["remove","open suspend override fun remove(id: Snowflake): T?","dev.kordex.core.registry.AbstractDeconstructingApplicationCommandRegistryStorage.remove"]},{"name":"open suspend override fun respond(builder: suspend FollowupMessageCreateBuilder.() -> Unit): EphemeralFollowupMessage","description":"dev.kordex.core.types.EphemeralInteractionContext.respond","location":"kord-extensions/dev.kordex.core.types/-ephemeral-interaction-context/respond.html","searchKeys":["respond","open suspend override fun respond(builder: suspend FollowupMessageCreateBuilder.() -> Unit): EphemeralFollowupMessage","dev.kordex.core.types.EphemeralInteractionContext.respond"]},{"name":"open suspend override fun respond(builder: suspend FollowupMessageCreateBuilder.() -> Unit): PublicFollowupMessage","description":"dev.kordex.core.types.PublicInteractionContext.respond","location":"kord-extensions/dev.kordex.core.types/-public-interaction-context/respond.html","searchKeys":["respond","open suspend override fun respond(builder: suspend FollowupMessageCreateBuilder.() -> Unit): PublicFollowupMessage","dev.kordex.core.types.PublicInteractionContext.respond"]},{"name":"open suspend override fun respondOpposite(builder: suspend FollowupMessageCreateBuilder.() -> Unit): EphemeralFollowupMessage","description":"dev.kordex.core.types.PublicInteractionContext.respondOpposite","location":"kord-extensions/dev.kordex.core.types/-public-interaction-context/respond-opposite.html","searchKeys":["respondOpposite","open suspend override fun respondOpposite(builder: suspend FollowupMessageCreateBuilder.() -> Unit): EphemeralFollowupMessage","dev.kordex.core.types.PublicInteractionContext.respondOpposite"]},{"name":"open suspend override fun respondOpposite(builder: suspend FollowupMessageCreateBuilder.() -> Unit): PublicFollowupMessage","description":"dev.kordex.core.types.EphemeralInteractionContext.respondOpposite","location":"kord-extensions/dev.kordex.core.types/-ephemeral-interaction-context/respond-opposite.html","searchKeys":["respondOpposite","open suspend override fun respondOpposite(builder: suspend FollowupMessageCreateBuilder.() -> Unit): PublicFollowupMessage","dev.kordex.core.types.EphemeralInteractionContext.respondOpposite"]},{"name":"open suspend override fun respondText(context: C, message: Key, failureType: FailureReason<*>)","description":"dev.kordex.core.components.menus.EphemeralSelectMenu.respondText","location":"kord-extensions/dev.kordex.core.components.menus/-ephemeral-select-menu/respond-text.html","searchKeys":["respondText","open suspend override fun respondText(context: C, message: Key, failureType: FailureReason<*>)","dev.kordex.core.components.menus.EphemeralSelectMenu.respondText"]},{"name":"open suspend override fun respondText(context: C, message: Key, failureType: FailureReason<*>)","description":"dev.kordex.core.components.menus.PublicSelectMenu.respondText","location":"kord-extensions/dev.kordex.core.components.menus/-public-select-menu/respond-text.html","searchKeys":["respondText","open suspend override fun respondText(context: C, message: Key, failureType: FailureReason<*>)","dev.kordex.core.components.menus.PublicSelectMenu.respondText"]},{"name":"open suspend override fun respondText(context: EphemeralInteractionButtonContext<M>, message: Key, failureType: FailureReason<*>)","description":"dev.kordex.core.components.buttons.EphemeralInteractionButton.respondText","location":"kord-extensions/dev.kordex.core.components.buttons/-ephemeral-interaction-button/respond-text.html","searchKeys":["respondText","open suspend override fun respondText(context: EphemeralInteractionButtonContext<M>, message: Key, failureType: FailureReason<*>)","dev.kordex.core.components.buttons.EphemeralInteractionButton.respondText"]},{"name":"open suspend override fun respondText(context: EphemeralMessageCommandContext<M>, message: Key, failureType: FailureReason<*>)","description":"dev.kordex.core.commands.application.message.EphemeralMessageCommand.respondText","location":"kord-extensions/dev.kordex.core.commands.application.message/-ephemeral-message-command/respond-text.html","searchKeys":["respondText","open suspend override fun respondText(context: EphemeralMessageCommandContext<M>, message: Key, failureType: FailureReason<*>)","dev.kordex.core.commands.application.message.EphemeralMessageCommand.respondText"]},{"name":"open suspend override fun respondText(context: EphemeralSlashCommandContext<A, M>, message: Key, failureType: FailureReason<*>)","description":"dev.kordex.core.commands.application.slash.EphemeralSlashCommand.respondText","location":"kord-extensions/dev.kordex.core.commands.application.slash/-ephemeral-slash-command/respond-text.html","searchKeys":["respondText","open suspend override fun respondText(context: EphemeralSlashCommandContext<A, M>, message: Key, failureType: FailureReason<*>)","dev.kordex.core.commands.application.slash.EphemeralSlashCommand.respondText"]},{"name":"open suspend override fun respondText(context: EphemeralUserCommandContext<M>, message: Key, failureType: FailureReason<*>)","description":"dev.kordex.core.commands.application.user.EphemeralUserCommand.respondText","location":"kord-extensions/dev.kordex.core.commands.application.user/-ephemeral-user-command/respond-text.html","searchKeys":["respondText","open suspend override fun respondText(context: EphemeralUserCommandContext<M>, message: Key, failureType: FailureReason<*>)","dev.kordex.core.commands.application.user.EphemeralUserCommand.respondText"]},{"name":"open suspend override fun respondText(context: PublicInteractionButtonContext<M>, message: Key, failureType: FailureReason<*>)","description":"dev.kordex.core.components.buttons.PublicInteractionButton.respondText","location":"kord-extensions/dev.kordex.core.components.buttons/-public-interaction-button/respond-text.html","searchKeys":["respondText","open suspend override fun respondText(context: PublicInteractionButtonContext<M>, message: Key, failureType: FailureReason<*>)","dev.kordex.core.components.buttons.PublicInteractionButton.respondText"]},{"name":"open suspend override fun respondText(context: PublicMessageCommandContext<M>, message: Key, failureType: FailureReason<*>)","description":"dev.kordex.core.commands.application.message.PublicMessageCommand.respondText","location":"kord-extensions/dev.kordex.core.commands.application.message/-public-message-command/respond-text.html","searchKeys":["respondText","open suspend override fun respondText(context: PublicMessageCommandContext<M>, message: Key, failureType: FailureReason<*>)","dev.kordex.core.commands.application.message.PublicMessageCommand.respondText"]},{"name":"open suspend override fun respondText(context: PublicSlashCommandContext<A, M>, message: Key, failureType: FailureReason<*>)","description":"dev.kordex.core.commands.application.slash.PublicSlashCommand.respondText","location":"kord-extensions/dev.kordex.core.commands.application.slash/-public-slash-command/respond-text.html","searchKeys":["respondText","open suspend override fun respondText(context: PublicSlashCommandContext<A, M>, message: Key, failureType: FailureReason<*>)","dev.kordex.core.commands.application.slash.PublicSlashCommand.respondText"]},{"name":"open suspend override fun respondText(context: PublicUserCommandContext<M>, message: Key, failureType: FailureReason<*>)","description":"dev.kordex.core.commands.application.user.PublicUserCommand.respondText","location":"kord-extensions/dev.kordex.core.commands.application.user/-public-user-command/respond-text.html","searchKeys":["respondText","open suspend override fun respondText(context: PublicUserCommandContext<M>, message: Key, failureType: FailureReason<*>)","dev.kordex.core.commands.application.user.PublicUserCommand.respondText"]},{"name":"open suspend override fun respondingPaginator(defaultGroup: Key, locale: Locale?, builder: suspend PaginatorBuilder.() -> Unit): PublicFollowUpPaginator","description":"dev.kordex.core.types.EphemeralInteractionContext.respondingPaginator","location":"kord-extensions/dev.kordex.core.types/-ephemeral-interaction-context/responding-paginator.html","searchKeys":["respondingPaginator","open suspend override fun respondingPaginator(defaultGroup: Key, locale: Locale?, builder: suspend PaginatorBuilder.() -> Unit): PublicFollowUpPaginator","dev.kordex.core.types.EphemeralInteractionContext.respondingPaginator"]},{"name":"open suspend override fun respondingPaginator(defaultGroup: Key, locale: Locale?, builder: suspend PaginatorBuilder.() -> Unit): PublicFollowUpPaginator","description":"dev.kordex.core.types.PublicInteractionContext.respondingPaginator","location":"kord-extensions/dev.kordex.core.types/-public-interaction-context/responding-paginator.html","searchKeys":["respondingPaginator","open suspend override fun respondingPaginator(defaultGroup: Key, locale: Locale?, builder: suspend PaginatorBuilder.() -> Unit): PublicFollowUpPaginator","dev.kordex.core.types.PublicInteractionContext.respondingPaginator"]},{"name":"open suspend override fun run(event: ChatInputCommandInteractionCreateEvent, cache: MutableStringKeyedMap<Any>)","description":"dev.kordex.core.commands.application.slash.EphemeralSlashCommand.run","location":"kord-extensions/dev.kordex.core.commands.application.slash/-ephemeral-slash-command/run.html","searchKeys":["run","open suspend override fun run(event: ChatInputCommandInteractionCreateEvent, cache: MutableStringKeyedMap<Any>)","dev.kordex.core.commands.application.slash.EphemeralSlashCommand.run"]},{"name":"open suspend override fun run(event: ChatInputCommandInteractionCreateEvent, cache: MutableStringKeyedMap<Any>)","description":"dev.kordex.core.commands.application.slash.PublicSlashCommand.run","location":"kord-extensions/dev.kordex.core.commands.application.slash/-public-slash-command/run.html","searchKeys":["run","open suspend override fun run(event: ChatInputCommandInteractionCreateEvent, cache: MutableStringKeyedMap<Any>)","dev.kordex.core.commands.application.slash.PublicSlashCommand.run"]},{"name":"open suspend override fun runChecks(event: ChatInputCommandInteractionCreateEvent, cache: MutableStringKeyedMap<Any>): Boolean","description":"dev.kordex.core.commands.application.slash.SlashCommand.runChecks","location":"kord-extensions/dev.kordex.core.commands.application.slash/-slash-command/run-checks.html","searchKeys":["runChecks","open suspend override fun runChecks(event: ChatInputCommandInteractionCreateEvent, cache: MutableStringKeyedMap<Any>): Boolean","dev.kordex.core.commands.application.slash.SlashCommand.runChecks"]},{"name":"open suspend override fun runChecks(event: MessageCommandInteractionCreateEvent, cache: MutableStringKeyedMap<Any>): Boolean","description":"dev.kordex.core.commands.application.message.MessageCommand.runChecks","location":"kord-extensions/dev.kordex.core.commands.application.message/-message-command/run-checks.html","searchKeys":["runChecks","open suspend override fun runChecks(event: MessageCommandInteractionCreateEvent, cache: MutableStringKeyedMap<Any>): Boolean","dev.kordex.core.commands.application.message.MessageCommand.runChecks"]},{"name":"open suspend override fun runChecks(event: MessageCreateEvent, sendMessage: Boolean, cache: MutableStringKeyedMap<Any>): Boolean","description":"dev.kordex.core.commands.chat.ChatGroupCommand.runChecks","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-group-command/run-checks.html","searchKeys":["runChecks","open suspend override fun runChecks(event: MessageCreateEvent, sendMessage: Boolean, cache: MutableStringKeyedMap<Any>): Boolean","dev.kordex.core.commands.chat.ChatGroupCommand.runChecks"]},{"name":"open suspend override fun runChecks(event: MessageCreateEvent, sendMessage: Boolean, cache: MutableStringKeyedMap<Any>): Boolean","description":"dev.kordex.core.commands.chat.ChatSubCommand.runChecks","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-sub-command/run-checks.html","searchKeys":["runChecks","open suspend override fun runChecks(event: MessageCreateEvent, sendMessage: Boolean, cache: MutableStringKeyedMap<Any>): Boolean","dev.kordex.core.commands.chat.ChatSubCommand.runChecks"]},{"name":"open suspend override fun runChecks(event: UserCommandInteractionCreateEvent, cache: MutableStringKeyedMap<Any>): Boolean","description":"dev.kordex.core.commands.application.user.UserCommand.runChecks","location":"kord-extensions/dev.kordex.core.commands.application.user/-user-command/run-checks.html","searchKeys":["runChecks","open suspend override fun runChecks(event: UserCommandInteractionCreateEvent, cache: MutableStringKeyedMap<Any>): Boolean","dev.kordex.core.commands.application.user.UserCommand.runChecks"]},{"name":"open suspend override fun send()","description":"dev.kordex.core.pagination.EphemeralResponsePaginator.send","location":"kord-extensions/dev.kordex.core.pagination/-ephemeral-response-paginator/send.html","searchKeys":["send","open suspend override fun send()","dev.kordex.core.pagination.EphemeralResponsePaginator.send"]},{"name":"open suspend override fun send()","description":"dev.kordex.core.pagination.MessageButtonPaginator.send","location":"kord-extensions/dev.kordex.core.pagination/-message-button-paginator/send.html","searchKeys":["send","open suspend override fun send()","dev.kordex.core.pagination.MessageButtonPaginator.send"]},{"name":"open suspend override fun send()","description":"dev.kordex.core.pagination.PublicFollowUpPaginator.send","location":"kord-extensions/dev.kordex.core.pagination/-public-follow-up-paginator/send.html","searchKeys":["send","open suspend override fun send()","dev.kordex.core.pagination.PublicFollowUpPaginator.send"]},{"name":"open suspend override fun send()","description":"dev.kordex.core.pagination.PublicResponsePaginator.send","location":"kord-extensions/dev.kordex.core.pagination/-public-response-paginator/send.html","searchKeys":["send","open suspend override fun send()","dev.kordex.core.pagination.PublicResponsePaginator.send"]},{"name":"open suspend override fun set(id: K, data: T)","description":"dev.kordex.core.registry.DefaultLocalRegistryStorage.set","location":"kord-extensions/dev.kordex.core.registry/-default-local-registry-storage/set.html","searchKeys":["set","open suspend override fun set(id: K, data: T)","dev.kordex.core.registry.DefaultLocalRegistryStorage.set"]},{"name":"open suspend override fun set(id: Snowflake, data: T)","description":"dev.kordex.core.registry.AbstractDeconstructingApplicationCommandRegistryStorage.set","location":"kord-extensions/dev.kordex.core.registry/-abstract-deconstructing-application-command-registry-storage/set.html","searchKeys":["set","open suspend override fun set(id: Snowflake, data: T)","dev.kordex.core.registry.AbstractDeconstructingApplicationCommandRegistryStorage.set"]},{"name":"open suspend override fun setup()","description":"dev.kordex.core.extensions.impl.AboutExtension.setup","location":"kord-extensions/dev.kordex.core.extensions.impl/-about-extension/setup.html","searchKeys":["setup","open suspend override fun setup()","dev.kordex.core.extensions.impl.AboutExtension.setup"]},{"name":"open suspend override fun setup()","description":"dev.kordex.core.extensions.impl.HelpExtension.setup","location":"kord-extensions/dev.kordex.core.extensions.impl/-help-extension/setup.html","searchKeys":["setup","open suspend override fun setup()","dev.kordex.core.extensions.impl.HelpExtension.setup"]},{"name":"open suspend override fun setup()","description":"dev.kordex.core.extensions.impl.SentryExtension.setup","location":"kord-extensions/dev.kordex.core.extensions.impl/-sentry-extension/setup.html","searchKeys":["setup","open suspend override fun setup()","dev.kordex.core.extensions.impl.SentryExtension.setup"]},{"name":"open suspend override fun setup()","description":"dev.kordex.core.pagination.BaseButtonPaginator.setup","location":"kord-extensions/dev.kordex.core.pagination/-base-button-paginator/setup.html","searchKeys":["setup","open suspend override fun setup()","dev.kordex.core.pagination.BaseButtonPaginator.setup"]},{"name":"open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<*>","description":"dev.kordex.core.commands.converters.CoalescingToDefaultingConverter.toSlashOption","location":"kord-extensions/dev.kordex.core.commands.converters/-coalescing-to-defaulting-converter/to-slash-option.html","searchKeys":["toSlashOption","open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<*>","dev.kordex.core.commands.converters.CoalescingToDefaultingConverter.toSlashOption"]},{"name":"open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<*>","description":"dev.kordex.core.commands.converters.CoalescingToOptionalConverter.toSlashOption","location":"kord-extensions/dev.kordex.core.commands.converters/-coalescing-to-optional-converter/to-slash-option.html","searchKeys":["toSlashOption","open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<*>","dev.kordex.core.commands.converters.CoalescingToOptionalConverter.toSlashOption"]},{"name":"open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<*>","description":"dev.kordex.core.commands.converters.SingleToDefaultingConverter.toSlashOption","location":"kord-extensions/dev.kordex.core.commands.converters/-single-to-defaulting-converter/to-slash-option.html","searchKeys":["toSlashOption","open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<*>","dev.kordex.core.commands.converters.SingleToDefaultingConverter.toSlashOption"]},{"name":"open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<*>","description":"dev.kordex.core.commands.converters.SingleToListConverter.toSlashOption","location":"kord-extensions/dev.kordex.core.commands.converters/-single-to-list-converter/to-slash-option.html","searchKeys":["toSlashOption","open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<*>","dev.kordex.core.commands.converters.SingleToListConverter.toSlashOption"]},{"name":"open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<*>","description":"dev.kordex.core.commands.converters.SingleToOptionalConverter.toSlashOption","location":"kord-extensions/dev.kordex.core.commands.converters/-single-to-optional-converter/to-slash-option.html","searchKeys":["toSlashOption","open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<*>","dev.kordex.core.commands.converters.SingleToOptionalConverter.toSlashOption"]},{"name":"open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<AttachmentBuilder>","description":"dev.kordex.core.commands.converters.impl.AttachmentConverter.toSlashOption","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-attachment-converter/to-slash-option.html","searchKeys":["toSlashOption","open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<AttachmentBuilder>","dev.kordex.core.commands.converters.impl.AttachmentConverter.toSlashOption"]},{"name":"open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<BooleanBuilder>","description":"dev.kordex.core.commands.converters.impl.BooleanConverter.toSlashOption","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-boolean-converter/to-slash-option.html","searchKeys":["toSlashOption","open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<BooleanBuilder>","dev.kordex.core.commands.converters.impl.BooleanConverter.toSlashOption"]},{"name":"open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<ChannelBuilder>","description":"dev.kordex.core.commands.converters.impl.ChannelConverter.toSlashOption","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-channel-converter/to-slash-option.html","searchKeys":["toSlashOption","open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<ChannelBuilder>","dev.kordex.core.commands.converters.impl.ChannelConverter.toSlashOption"]},{"name":"open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<IntegerOptionBuilder>","description":"dev.kordex.core.commands.application.slash.converters.impl.NumberChoiceConverter.toSlashOption","location":"kord-extensions/dev.kordex.core.commands.application.slash.converters.impl/-number-choice-converter/to-slash-option.html","searchKeys":["toSlashOption","open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<IntegerOptionBuilder>","dev.kordex.core.commands.application.slash.converters.impl.NumberChoiceConverter.toSlashOption"]},{"name":"open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<IntegerOptionBuilder>","description":"dev.kordex.core.commands.converters.impl.IntConverter.toSlashOption","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-int-converter/to-slash-option.html","searchKeys":["toSlashOption","open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<IntegerOptionBuilder>","dev.kordex.core.commands.converters.impl.IntConverter.toSlashOption"]},{"name":"open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<IntegerOptionBuilder>","description":"dev.kordex.core.commands.converters.impl.LongConverter.toSlashOption","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-long-converter/to-slash-option.html","searchKeys":["toSlashOption","open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<IntegerOptionBuilder>","dev.kordex.core.commands.converters.impl.LongConverter.toSlashOption"]},{"name":"open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<NumberOptionBuilder>","description":"dev.kordex.core.commands.converters.impl.DecimalConverter.toSlashOption","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-decimal-converter/to-slash-option.html","searchKeys":["toSlashOption","open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<NumberOptionBuilder>","dev.kordex.core.commands.converters.impl.DecimalConverter.toSlashOption"]},{"name":"open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<RoleBuilder>","description":"dev.kordex.core.commands.converters.impl.RoleConverter.toSlashOption","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-role-converter/to-slash-option.html","searchKeys":["toSlashOption","open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<RoleBuilder>","dev.kordex.core.commands.converters.impl.RoleConverter.toSlashOption"]},{"name":"open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<StringChoiceBuilder>","description":"dev.kordex.core.commands.application.slash.converters.impl.EnumChoiceConverter.toSlashOption","location":"kord-extensions/dev.kordex.core.commands.application.slash.converters.impl/-enum-choice-converter/to-slash-option.html","searchKeys":["toSlashOption","open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<StringChoiceBuilder>","dev.kordex.core.commands.application.slash.converters.impl.EnumChoiceConverter.toSlashOption"]},{"name":"open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<StringChoiceBuilder>","description":"dev.kordex.core.commands.application.slash.converters.impl.StringChoiceConverter.toSlashOption","location":"kord-extensions/dev.kordex.core.commands.application.slash.converters.impl/-string-choice-converter/to-slash-option.html","searchKeys":["toSlashOption","open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<StringChoiceBuilder>","dev.kordex.core.commands.application.slash.converters.impl.StringChoiceConverter.toSlashOption"]},{"name":"open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<StringChoiceBuilder>","description":"dev.kordex.core.commands.converters.impl.ColorConverter.toSlashOption","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-color-converter/to-slash-option.html","searchKeys":["toSlashOption","open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<StringChoiceBuilder>","dev.kordex.core.commands.converters.impl.ColorConverter.toSlashOption"]},{"name":"open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<StringChoiceBuilder>","description":"dev.kordex.core.commands.converters.impl.DurationCoalescingConverter.toSlashOption","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-duration-coalescing-converter/to-slash-option.html","searchKeys":["toSlashOption","open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<StringChoiceBuilder>","dev.kordex.core.commands.converters.impl.DurationCoalescingConverter.toSlashOption"]},{"name":"open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<StringChoiceBuilder>","description":"dev.kordex.core.commands.converters.impl.DurationConverter.toSlashOption","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-duration-converter/to-slash-option.html","searchKeys":["toSlashOption","open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<StringChoiceBuilder>","dev.kordex.core.commands.converters.impl.DurationConverter.toSlashOption"]},{"name":"open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<StringChoiceBuilder>","description":"dev.kordex.core.commands.converters.impl.EmailConverter.toSlashOption","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-email-converter/to-slash-option.html","searchKeys":["toSlashOption","open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<StringChoiceBuilder>","dev.kordex.core.commands.converters.impl.EmailConverter.toSlashOption"]},{"name":"open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<StringChoiceBuilder>","description":"dev.kordex.core.commands.converters.impl.EmojiConverter.toSlashOption","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-emoji-converter/to-slash-option.html","searchKeys":["toSlashOption","open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<StringChoiceBuilder>","dev.kordex.core.commands.converters.impl.EmojiConverter.toSlashOption"]},{"name":"open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<StringChoiceBuilder>","description":"dev.kordex.core.commands.converters.impl.EnumConverter.toSlashOption","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-enum-converter/to-slash-option.html","searchKeys":["toSlashOption","open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<StringChoiceBuilder>","dev.kordex.core.commands.converters.impl.EnumConverter.toSlashOption"]},{"name":"open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<StringChoiceBuilder>","description":"dev.kordex.core.commands.converters.impl.GuildConverter.toSlashOption","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-guild-converter/to-slash-option.html","searchKeys":["toSlashOption","open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<StringChoiceBuilder>","dev.kordex.core.commands.converters.impl.GuildConverter.toSlashOption"]},{"name":"open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<StringChoiceBuilder>","description":"dev.kordex.core.commands.converters.impl.MessageConverter.toSlashOption","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-message-converter/to-slash-option.html","searchKeys":["toSlashOption","open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<StringChoiceBuilder>","dev.kordex.core.commands.converters.impl.MessageConverter.toSlashOption"]},{"name":"open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<StringChoiceBuilder>","description":"dev.kordex.core.commands.converters.impl.RegexCoalescingConverter.toSlashOption","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-regex-coalescing-converter/to-slash-option.html","searchKeys":["toSlashOption","open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<StringChoiceBuilder>","dev.kordex.core.commands.converters.impl.RegexCoalescingConverter.toSlashOption"]},{"name":"open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<StringChoiceBuilder>","description":"dev.kordex.core.commands.converters.impl.RegexConverter.toSlashOption","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-regex-converter/to-slash-option.html","searchKeys":["toSlashOption","open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<StringChoiceBuilder>","dev.kordex.core.commands.converters.impl.RegexConverter.toSlashOption"]},{"name":"open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<StringChoiceBuilder>","description":"dev.kordex.core.commands.converters.impl.SnowflakeConverter.toSlashOption","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-snowflake-converter/to-slash-option.html","searchKeys":["toSlashOption","open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<StringChoiceBuilder>","dev.kordex.core.commands.converters.impl.SnowflakeConverter.toSlashOption"]},{"name":"open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<StringChoiceBuilder>","description":"dev.kordex.core.commands.converters.impl.StringCoalescingConverter.toSlashOption","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-string-coalescing-converter/to-slash-option.html","searchKeys":["toSlashOption","open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<StringChoiceBuilder>","dev.kordex.core.commands.converters.impl.StringCoalescingConverter.toSlashOption"]},{"name":"open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<StringChoiceBuilder>","description":"dev.kordex.core.commands.converters.impl.StringConverter.toSlashOption","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-string-converter/to-slash-option.html","searchKeys":["toSlashOption","open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<StringChoiceBuilder>","dev.kordex.core.commands.converters.impl.StringConverter.toSlashOption"]},{"name":"open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<StringChoiceBuilder>","description":"dev.kordex.core.commands.converters.impl.SupportedLocaleConverter.toSlashOption","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-supported-locale-converter/to-slash-option.html","searchKeys":["toSlashOption","open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<StringChoiceBuilder>","dev.kordex.core.commands.converters.impl.SupportedLocaleConverter.toSlashOption"]},{"name":"open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<StringChoiceBuilder>","description":"dev.kordex.core.commands.converters.impl.TagConverter.toSlashOption","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-tag-converter/to-slash-option.html","searchKeys":["toSlashOption","open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<StringChoiceBuilder>","dev.kordex.core.commands.converters.impl.TagConverter.toSlashOption"]},{"name":"open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<StringChoiceBuilder>","description":"dev.kordex.core.commands.converters.impl.TimestampConverter.toSlashOption","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-timestamp-converter/to-slash-option.html","searchKeys":["toSlashOption","open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<StringChoiceBuilder>","dev.kordex.core.commands.converters.impl.TimestampConverter.toSlashOption"]},{"name":"open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<StringChoiceBuilder>","description":"dev.kordex.core.sentry.SentryIdConverter.toSlashOption","location":"kord-extensions/dev.kordex.core.sentry/-sentry-id-converter/to-slash-option.html","searchKeys":["toSlashOption","open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<StringChoiceBuilder>","dev.kordex.core.sentry.SentryIdConverter.toSlashOption"]},{"name":"open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<UserBuilder>","description":"dev.kordex.core.commands.converters.impl.MemberConverter.toSlashOption","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-member-converter/to-slash-option.html","searchKeys":["toSlashOption","open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<UserBuilder>","dev.kordex.core.commands.converters.impl.MemberConverter.toSlashOption"]},{"name":"open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<UserBuilder>","description":"dev.kordex.core.commands.converters.impl.UserConverter.toSlashOption","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-user-converter/to-slash-option.html","searchKeys":["toSlashOption","open suspend override fun toSlashOption(arg: Argument<*>): OptionWrapper<UserBuilder>","dev.kordex.core.commands.converters.impl.UserConverter.toSlashOption"]},{"name":"open suspend override fun unregister(command: MessageCommand<*, *>, delete: Boolean): MessageCommand<*, *>?","description":"dev.kordex.core.commands.application.DefaultApplicationCommandRegistry.unregister","location":"kord-extensions/dev.kordex.core.commands.application/-default-application-command-registry/unregister.html","searchKeys":["unregister","open suspend override fun unregister(command: MessageCommand<*, *>, delete: Boolean): MessageCommand<*, *>?","dev.kordex.core.commands.application.DefaultApplicationCommandRegistry.unregister"]},{"name":"open suspend override fun unregister(command: MessageCommand<*, *>, delete: Boolean): MessageCommand<*, *>?","description":"dev.kordex.core.commands.application.StorageAwareApplicationCommandRegistry.unregister","location":"kord-extensions/dev.kordex.core.commands.application/-storage-aware-application-command-registry/unregister.html","searchKeys":["unregister","open suspend override fun unregister(command: MessageCommand<*, *>, delete: Boolean): MessageCommand<*, *>?","dev.kordex.core.commands.application.StorageAwareApplicationCommandRegistry.unregister"]},{"name":"open suspend override fun unregister(command: SlashCommand<*, *, *>, delete: Boolean): SlashCommand<*, *, *>?","description":"dev.kordex.core.commands.application.DefaultApplicationCommandRegistry.unregister","location":"kord-extensions/dev.kordex.core.commands.application/-default-application-command-registry/unregister.html","searchKeys":["unregister","open suspend override fun unregister(command: SlashCommand<*, *, *>, delete: Boolean): SlashCommand<*, *, *>?","dev.kordex.core.commands.application.DefaultApplicationCommandRegistry.unregister"]},{"name":"open suspend override fun unregister(command: SlashCommand<*, *, *>, delete: Boolean): SlashCommand<*, *, *>?","description":"dev.kordex.core.commands.application.StorageAwareApplicationCommandRegistry.unregister","location":"kord-extensions/dev.kordex.core.commands.application/-storage-aware-application-command-registry/unregister.html","searchKeys":["unregister","open suspend override fun unregister(command: SlashCommand<*, *, *>, delete: Boolean): SlashCommand<*, *, *>?","dev.kordex.core.commands.application.StorageAwareApplicationCommandRegistry.unregister"]},{"name":"open suspend override fun unregister(command: UserCommand<*, *>, delete: Boolean): UserCommand<*, *>?","description":"dev.kordex.core.commands.application.DefaultApplicationCommandRegistry.unregister","location":"kord-extensions/dev.kordex.core.commands.application/-default-application-command-registry/unregister.html","searchKeys":["unregister","open suspend override fun unregister(command: UserCommand<*, *>, delete: Boolean): UserCommand<*, *>?","dev.kordex.core.commands.application.DefaultApplicationCommandRegistry.unregister"]},{"name":"open suspend override fun unregister(command: UserCommand<*, *>, delete: Boolean): UserCommand<*, *>?","description":"dev.kordex.core.commands.application.StorageAwareApplicationCommandRegistry.unregister","location":"kord-extensions/dev.kordex.core.commands.application/-storage-aware-application-command-registry/unregister.html","searchKeys":["unregister","open suspend override fun unregister(command: UserCommand<*, *>, delete: Boolean): UserCommand<*, *>?","dev.kordex.core.commands.application.StorageAwareApplicationCommandRegistry.unregister"]},{"name":"open val aliasTranslationCache: MutableMap<Locale, Set<String>>","description":"dev.kordex.core.commands.chat.ChatCommand.aliasTranslationCache","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-command/alias-translation-cache.html","searchKeys":["aliasTranslationCache","open val aliasTranslationCache: MutableMap<Locale, Set<String>>","dev.kordex.core.commands.chat.ChatCommand.aliasTranslationCache"]},{"name":"open val allowApplicationCommandInDMs: Boolean = true","description":"dev.kordex.core.extensions.Extension.allowApplicationCommandInDMs","location":"kord-extensions/dev.kordex.core.extensions/-extension/allow-application-command-in-d-ms.html","searchKeys":["allowApplicationCommandInDMs","open val allowApplicationCommandInDMs: Boolean = true","dev.kordex.core.extensions.Extension.allowApplicationCommandInDMs"]},{"name":"open val applicationCommandRegistry: ApplicationCommandRegistry","description":"dev.kordex.core.extensions.Extension.applicationCommandRegistry","location":"kord-extensions/dev.kordex.core.extensions/-extension/application-command-registry.html","searchKeys":["applicationCommandRegistry","open val applicationCommandRegistry: ApplicationCommandRegistry","dev.kordex.core.extensions.Extension.applicationCommandRegistry"]},{"name":"open val arguments: () -> A? = null","description":"dev.kordex.core.commands.application.slash.SlashCommand.arguments","location":"kord-extensions/dev.kordex.core.commands.application.slash/-slash-command/arguments.html","searchKeys":["arguments","open val arguments: () -> A? = null","dev.kordex.core.commands.application.slash.SlashCommand.arguments"]},{"name":"open val arguments: () -> T? = null","description":"dev.kordex.core.commands.chat.ChatCommand.arguments","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-command/arguments.html","searchKeys":["arguments","open val arguments: () -> T? = null","dev.kordex.core.commands.chat.ChatCommand.arguments"]},{"name":"open val bot: ExtensibleBot","description":"dev.kordex.core.commands.application.ApplicationCommandRegistry.bot","location":"kord-extensions/dev.kordex.core.commands.application/-application-command-registry/bot.html","searchKeys":["bot","open val bot: ExtensibleBot","dev.kordex.core.commands.application.ApplicationCommandRegistry.bot"]},{"name":"open val bot: ExtensibleBot","description":"dev.kordex.core.commands.chat.ChatCommandParser.bot","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-command-parser/bot.html","searchKeys":["bot","open val bot: ExtensibleBot","dev.kordex.core.commands.chat.ChatCommandParser.bot"]},{"name":"open val bot: ExtensibleBot","description":"dev.kordex.core.commands.converters.Converter.bot","location":"kord-extensions/dev.kordex.core.commands.converters/-converter/bot.html","searchKeys":["bot","open val bot: ExtensibleBot","dev.kordex.core.commands.converters.Converter.bot"]},{"name":"open val bot: ExtensibleBot","description":"dev.kordex.core.extensions.Extension.bot","location":"kord-extensions/dev.kordex.core.extensions/-extension/bot.html","searchKeys":["bot","open val bot: ExtensibleBot","dev.kordex.core.extensions.Extension.bot"]},{"name":"open val bot: ExtensibleBot","description":"dev.kordex.core.pagination.pages.Page.bot","location":"kord-extensions/dev.kordex.core.pagination.pages/-page/bot.html","searchKeys":["bot","open val bot: ExtensibleBot","dev.kordex.core.pagination.pages.Page.bot"]},{"name":"open val builder: suspend EmbedBuilder.() -> Unit","description":"dev.kordex.core.pagination.pages.Page.builder","location":"kord-extensions/dev.kordex.core.pagination.pages/-page/builder.html","searchKeys":["builder","open val builder: suspend EmbedBuilder.() -> Unit","dev.kordex.core.pagination.pages.Page.builder"]},{"name":"open val cache: MutableStringKeyedMap<Any>","description":"dev.kordex.core.commands.CommandContext.cache","location":"kord-extensions/dev.kordex.core.commands/-command-context/cache.html","searchKeys":["cache","open val cache: MutableStringKeyedMap<Any>","dev.kordex.core.commands.CommandContext.cache"]},{"name":"open val cache: MutableStringKeyedMap<Any>","description":"dev.kordex.core.components.ComponentContext.cache","location":"kord-extensions/dev.kordex.core.components/-component-context/cache.html","searchKeys":["cache","open val cache: MutableStringKeyedMap<Any>","dev.kordex.core.components.ComponentContext.cache"]},{"name":"open val cache: MutableStringKeyedMap<Any>","description":"dev.kordex.core.events.EventContext.cache","location":"kord-extensions/dev.kordex.core.events/-event-context/cache.html","searchKeys":["cache","open val cache: MutableStringKeyedMap<Any>","dev.kordex.core.events.EventContext.cache"]},{"name":"open val callback: suspend () -> Unit","description":"dev.kordex.core.utils.scheduling.Task.callback","location":"kord-extensions/dev.kordex.core.utils.scheduling/-task/callback.html","searchKeys":["callback","open val callback: suspend () -> Unit","dev.kordex.core.utils.scheduling.Task.callback"]},{"name":"open val changes: Set<String>","description":"dev.kordex.core.utils.deltas.MessageDelta.changes","location":"kord-extensions/dev.kordex.core.utils.deltas/-message-delta/changes.html","searchKeys":["changes","open val changes: Set<String>","dev.kordex.core.utils.deltas.MessageDelta.changes"]},{"name":"open val changes: Set<String>","description":"dev.kordex.core.utils.deltas.UserDelta.changes","location":"kord-extensions/dev.kordex.core.utils.deltas/-user-delta/changes.html","searchKeys":["changes","open val changes: Set<String>","dev.kordex.core.utils.deltas.UserDelta.changes"]},{"name":"open val chatCommandChecks: MutableList<ChatCommandCheck>","description":"dev.kordex.core.extensions.Extension.chatCommandChecks","location":"kord-extensions/dev.kordex.core.extensions/-extension/chat-command-checks.html","searchKeys":["chatCommandChecks","open val chatCommandChecks: MutableList<ChatCommandCheck>","dev.kordex.core.extensions.Extension.chatCommandChecks"]},{"name":"open val chatCommandRegistry: ChatCommandRegistry","description":"dev.kordex.core.extensions.Extension.chatCommandRegistry","location":"kord-extensions/dev.kordex.core.extensions/-extension/chat-command-registry.html","searchKeys":["chatCommandRegistry","open val chatCommandRegistry: ChatCommandRegistry","dev.kordex.core.extensions.Extension.chatCommandRegistry"]},{"name":"open val chatCommands: MutableList<ChatCommand<out Arguments>>","description":"dev.kordex.core.extensions.Extension.chatCommands","location":"kord-extensions/dev.kordex.core.extensions/-extension/chat-commands.html","searchKeys":["chatCommands","open val chatCommands: MutableList<ChatCommand<out Arguments>>","dev.kordex.core.extensions.Extension.chatCommands"]},{"name":"open val choices: Map<Key, T>","description":"dev.kordex.core.commands.application.slash.converters.ChoiceConverter.choices","location":"kord-extensions/dev.kordex.core.commands.application.slash.converters/-choice-converter/choices.html","searchKeys":["choices","open val choices: Map<Key, T>","dev.kordex.core.commands.application.slash.converters.ChoiceConverter.choices"]},{"name":"open val chunkedPages: Int = 1","description":"dev.kordex.core.pagination.BasePaginator.chunkedPages","location":"kord-extensions/dev.kordex.core.pagination/-base-paginator/chunked-pages.html","searchKeys":["chunkedPages","open val chunkedPages: Int = 1","dev.kordex.core.pagination.BasePaginator.chunkedPages"]},{"name":"open val command: Command","description":"dev.kordex.core.commands.CommandContext.command","location":"kord-extensions/dev.kordex.core.commands/-command-context/command.html","searchKeys":["command","open val command: Command","dev.kordex.core.commands.CommandContext.command"]},{"name":"open val commandName: Key","description":"dev.kordex.core.commands.CommandContext.commandName","location":"kord-extensions/dev.kordex.core.commands/-command-context/command-name.html","searchKeys":["commandName","open val commandName: Key","dev.kordex.core.commands.CommandContext.commandName"]},{"name":"open val commands: MutableList<ChatCommand<out Arguments>>","description":"dev.kordex.core.commands.chat.ChatCommandRegistry.commands","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-command-registry/commands.html","searchKeys":["commands","open val commands: MutableList<ChatCommand<out Arguments>>","dev.kordex.core.commands.chat.ChatCommandRegistry.commands"]},{"name":"open val component: Component","description":"dev.kordex.core.components.ComponentContext.component","location":"kord-extensions/dev.kordex.core.components/-component-context/component.html","searchKeys":["component","open val component: Component","dev.kordex.core.components.ComponentContext.component"]},{"name":"open val coroutineScope: CoroutineScope","description":"dev.kordex.core.utils.scheduling.Task.coroutineScope","location":"kord-extensions/dev.kordex.core.utils.scheduling/-task/coroutine-scope.html","searchKeys":["coroutineScope","open val coroutineScope: CoroutineScope","dev.kordex.core.utils.scheduling.Task.coroutineScope"]},{"name":"open val defaultLocale: Locale","description":"dev.kordex.core.i18n.TranslationsProvider.defaultLocale","location":"kord-extensions/dev.kordex.core.i18n/-translations-provider/default-locale.html","searchKeys":["defaultLocale","open val defaultLocale: Locale","dev.kordex.core.i18n.TranslationsProvider.defaultLocale"]},{"name":"open val defaultLocaleBuilder: () -> Locale","description":"dev.kordex.core.i18n.TranslationsProvider.defaultLocaleBuilder","location":"kord-extensions/dev.kordex.core.i18n/-translations-provider/default-locale-builder.html","searchKeys":["defaultLocaleBuilder","open val defaultLocaleBuilder: () -> Locale","dev.kordex.core.i18n.TranslationsProvider.defaultLocaleBuilder"]},{"name":"open val enabled: Boolean","description":"dev.kordex.core.commands.chat.ChatCommandRegistry.enabled","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-command-registry/enabled.html","searchKeys":["enabled","open val enabled: Boolean","dev.kordex.core.commands.chat.ChatCommandRegistry.enabled"]},{"name":"open val errorType: Key? = null","description":"dev.kordex.core.commands.converters.Converter.errorType","location":"kord-extensions/dev.kordex.core.commands.converters/-converter/error-type.html","searchKeys":["errorType","open val errorType: Key? = null","dev.kordex.core.commands.converters.Converter.errorType"]},{"name":"open val event: ChatInputCommandInteractionCreateEvent","description":"dev.kordex.core.commands.application.slash.SlashCommandContext.event","location":"kord-extensions/dev.kordex.core.commands.application.slash/-slash-command-context/event.html","searchKeys":["event","open val event: ChatInputCommandInteractionCreateEvent","dev.kordex.core.commands.application.slash.SlashCommandContext.event"]},{"name":"open val event: E","description":"dev.kordex.core.components.ComponentContext.event","location":"kord-extensions/dev.kordex.core.components/-component-context/event.html","searchKeys":["event","open val event: E","dev.kordex.core.components.ComponentContext.event"]},{"name":"open val event: MessageCommandInteractionCreateEvent","description":"dev.kordex.core.commands.application.message.MessageCommandContext.event","location":"kord-extensions/dev.kordex.core.commands.application.message/-message-command-context/event.html","searchKeys":["event","open val event: MessageCommandInteractionCreateEvent","dev.kordex.core.commands.application.message.MessageCommandContext.event"]},{"name":"open val event: T","description":"dev.kordex.core.events.EventContext.event","location":"kord-extensions/dev.kordex.core.events/-event-context/event.html","searchKeys":["event","open val event: T","dev.kordex.core.events.EventContext.event"]},{"name":"open val event: UserCommandInteractionCreateEvent","description":"dev.kordex.core.commands.application.user.UserCommandContext.event","location":"kord-extensions/dev.kordex.core.commands.application.user/-user-command-context/event.html","searchKeys":["event","open val event: UserCommandInteractionCreateEvent","dev.kordex.core.commands.application.user.UserCommandContext.event"]},{"name":"open val eventHandler: EventHandler<T>","description":"dev.kordex.core.events.EventContext.eventHandler","location":"kord-extensions/dev.kordex.core.events/-event-context/event-handler.html","searchKeys":["eventHandler","open val eventHandler: EventHandler<T>","dev.kordex.core.events.EventContext.eventHandler"]},{"name":"open val eventHandlers: MutableList<EventHandler<out Event>>","description":"dev.kordex.core.ExtensibleBot.eventHandlers","location":"kord-extensions/dev.kordex.core/-extensible-bot/event-handlers.html","searchKeys":["eventHandlers","open val eventHandlers: MutableList<EventHandler<out Event>>","dev.kordex.core.ExtensibleBot.eventHandlers"]},{"name":"open val eventHandlers: MutableList<EventHandler<out Event>>","description":"dev.kordex.core.extensions.Extension.eventHandlers","location":"kord-extensions/dev.kordex.core.extensions/-extension/event-handlers.html","searchKeys":["eventHandlers","open val eventHandlers: MutableList<EventHandler<out Event>>","dev.kordex.core.extensions.Extension.eventHandlers"]},{"name":"open val eventObj: Event","description":"dev.kordex.core.commands.CommandContext.eventObj","location":"kord-extensions/dev.kordex.core.commands/-command-context/event-obj.html","searchKeys":["eventObj","open val eventObj: Event","dev.kordex.core.commands.CommandContext.eventObj"]},{"name":"open val events: SharedFlow<Any>","description":"dev.kordex.core.ExtensibleBot.events","location":"kord-extensions/dev.kordex.core/-extensible-bot/events.html","searchKeys":["events","open val events: SharedFlow<Any>","dev.kordex.core.ExtensibleBot.events"]},{"name":"open val extensions: MutableStringKeyedMap<Extension>","description":"dev.kordex.core.ExtensibleBot.extensions","location":"kord-extensions/dev.kordex.core/-extensible-bot/extensions.html","searchKeys":["extensions","open val extensions: MutableStringKeyedMap<Extension>","dev.kordex.core.ExtensibleBot.extensions"]},{"name":"open val grid: WidgetGrid","description":"dev.kordex.core.components.forms.Form.grid","location":"kord-extensions/dev.kordex.core.components.forms/-form/grid.html","searchKeys":["grid","open val grid: WidgetGrid","dev.kordex.core.components.forms.Form.grid"]},{"name":"open val groupButtons: MutableMap<Key, PublicInteractionButton<*>>","description":"dev.kordex.core.pagination.BaseButtonPaginator.groupButtons","location":"kord-extensions/dev.kordex.core.pagination/-base-button-paginator/group-buttons.html","searchKeys":["groupButtons","open val groupButtons: MutableMap<Key, PublicInteractionButton<*>>","dev.kordex.core.pagination.BaseButtonPaginator.groupButtons"]},{"name":"open val groups: LinkedHashMap<Key, MutableList<Page>>","description":"dev.kordex.core.pagination.pages.Pages.groups","location":"kord-extensions/dev.kordex.core.pagination.pages/-pages/groups.html","searchKeys":["groups","open val groups: LinkedHashMap<Key, MutableList<Page>>","dev.kordex.core.pagination.pages.Pages.groups"]},{"name":"open val groups: MutableStringKeyedMap<SlashGroup>","description":"dev.kordex.core.commands.application.slash.SlashCommand.groups","location":"kord-extensions/dev.kordex.core.commands.application.slash/-slash-command/groups.html","searchKeys":["groups","open val groups: MutableStringKeyedMap<SlashGroup>","dev.kordex.core.commands.application.slash.SlashCommand.groups"]},{"name":"open val hasBody: Boolean","description":"dev.kordex.core.commands.application.slash.SlashCommand.hasBody","location":"kord-extensions/dev.kordex.core.commands.application.slash/-slash-command/has-body.html","searchKeys":["hasBody","open val hasBody: Boolean","dev.kordex.core.commands.application.slash.SlashCommand.hasBody"]},{"name":"open val hints: MutableStringKeyedMap<Any>","description":"dev.kordex.core.sentry.captures.SentryScopeCapture.hints","location":"kord-extensions/dev.kordex.core.sentry.captures/-sentry-scope-capture/hints.html","searchKeys":["hints","open val hints: MutableStringKeyedMap<Any>","dev.kordex.core.sentry.captures.SentryScopeCapture.hints"]},{"name":"open val identifier: String","description":"dev.kordex.core.storage.StorageUnit.identifier","location":"kord-extensions/dev.kordex.core.storage/-storage-unit/identifier.html","searchKeys":["identifier","open val identifier: String","dev.kordex.core.storage.StorageUnit.identifier"]},{"name":"open val intents: MutableSet<Intent>","description":"dev.kordex.core.extensions.Extension.intents","location":"kord-extensions/dev.kordex.core.extensions/-extension/intents.html","searchKeys":["intents","open val intents: MutableSet<Intent>","dev.kordex.core.extensions.Extension.intents"]},{"name":"open val keepEmbed: Boolean = true","description":"dev.kordex.core.pagination.BasePaginator.keepEmbed","location":"kord-extensions/dev.kordex.core.pagination/-base-paginator/keep-embed.html","searchKeys":["keepEmbed","open val keepEmbed: Boolean = true","dev.kordex.core.pagination.BasePaginator.keepEmbed"]},{"name":"open val kord: Kord","description":"dev.kordex.core.commands.application.ApplicationCommandRegistry.kord","location":"kord-extensions/dev.kordex.core.commands.application/-application-command-registry/kord.html","searchKeys":["kord","open val kord: Kord","dev.kordex.core.commands.application.ApplicationCommandRegistry.kord"]},{"name":"open val kord: Kord","description":"dev.kordex.core.events.EventHandler.kord","location":"kord-extensions/dev.kordex.core.events/-event-handler/kord.html","searchKeys":["kord","open val kord: Kord","dev.kordex.core.events.EventHandler.kord"]},{"name":"open val kord: Kord","description":"dev.kordex.core.extensions.Extension.kord","location":"kord-extensions/dev.kordex.core.extensions/-extension/kord.html","searchKeys":["kord","open val kord: Kord","dev.kordex.core.extensions.Extension.kord"]},{"name":"open val loaded: Boolean","description":"dev.kordex.core.extensions.Extension.loaded","location":"kord-extensions/dev.kordex.core.extensions/-extension/loaded.html","searchKeys":["loaded","open val loaded: Boolean","dev.kordex.core.extensions.Extension.loaded"]},{"name":"open val localeObj: Locale","description":"dev.kordex.core.pagination.BasePaginator.localeObj","location":"kord-extensions/dev.kordex.core.pagination/-base-paginator/locale-obj.html","searchKeys":["localeObj","open val localeObj: Locale","dev.kordex.core.pagination.BasePaginator.localeObj"]},{"name":"open val messageCommands: MutableList<MessageCommand<*, *>>","description":"dev.kordex.core.extensions.Extension.messageCommands","location":"kord-extensions/dev.kordex.core.extensions/-extension/message-commands.html","searchKeys":["messageCommands","open val messageCommands: MutableList<MessageCommand<*, *>>","dev.kordex.core.extensions.Extension.messageCommands"]},{"name":"open val messageCommands: MutableMap<Snowflake, MessageCommand<*, *>>","description":"dev.kordex.core.commands.application.DefaultApplicationCommandRegistry.messageCommands","location":"kord-extensions/dev.kordex.core.commands.application/-default-application-command-registry/message-commands.html","searchKeys":["messageCommands","open val messageCommands: MutableMap<Snowflake, MessageCommand<*, *>>","dev.kordex.core.commands.application.DefaultApplicationCommandRegistry.messageCommands"]},{"name":"open val modal: () -> M? = null","description":"dev.kordex.core.commands.application.message.MessageCommand.modal","location":"kord-extensions/dev.kordex.core.commands.application.message/-message-command/modal.html","searchKeys":["modal","open val modal: () -> M? = null","dev.kordex.core.commands.application.message.MessageCommand.modal"]},{"name":"open val modal: () -> M? = null","description":"dev.kordex.core.commands.application.slash.SlashCommand.modal","location":"kord-extensions/dev.kordex.core.commands.application.slash/-slash-command/modal.html","searchKeys":["modal","open val modal: () -> M? = null","dev.kordex.core.commands.application.slash.SlashCommand.modal"]},{"name":"open val modal: () -> M? = null","description":"dev.kordex.core.commands.application.user.UserCommand.modal","location":"kord-extensions/dev.kordex.core.commands.application.user/-user-command/modal.html","searchKeys":["modal","open val modal: () -> M? = null","dev.kordex.core.commands.application.user.UserCommand.modal"]},{"name":"open val modal: () -> M? = null","description":"dev.kordex.core.components.ComponentWithAction.modal","location":"kord-extensions/dev.kordex.core.components/-component-with-action/modal.html","searchKeys":["modal","open val modal: () -> M? = null","dev.kordex.core.components.ComponentWithAction.modal"]},{"name":"open val modalStorage: RegistryStorage<String, ModalForm>","description":"dev.kordex.core.components.ComponentRegistry.modalStorage","location":"kord-extensions/dev.kordex.core.components/-component-registry/modal-storage.html","searchKeys":["modalStorage","open val modalStorage: RegistryStorage<String, ModalForm>","dev.kordex.core.components.ComponentRegistry.modalStorage"]},{"name":"open val mutator: PageTransitionCallback? = null","description":"dev.kordex.core.pagination.BasePaginator.mutator","location":"kord-extensions/dev.kordex.core.pagination/-base-paginator/mutator.html","searchKeys":["mutator","open val mutator: PageTransitionCallback? = null","dev.kordex.core.pagination.BasePaginator.mutator"]},{"name":"open val nameTranslationCache: MutableMap<Locale, String>","description":"dev.kordex.core.commands.Command.nameTranslationCache","location":"kord-extensions/dev.kordex.core.commands/-command/name-translation-cache.html","searchKeys":["nameTranslationCache","open val nameTranslationCache: MutableMap<Locale, String>","dev.kordex.core.commands.Command.nameTranslationCache"]},{"name":"open val namespace: String","description":"dev.kordex.core.storage.StorageUnit.namespace","location":"kord-extensions/dev.kordex.core.storage/-storage-unit/namespace.html","searchKeys":["namespace","open val namespace: String","dev.kordex.core.storage.StorageUnit.namespace"]},{"name":"open val owner: UserBehavior? = null","description":"dev.kordex.core.pagination.BasePaginator.owner","location":"kord-extensions/dev.kordex.core.pagination/-base-paginator/owner.html","searchKeys":["owner","open val owner: UserBehavior? = null","dev.kordex.core.pagination.BasePaginator.owner"]},{"name":"open val pages: Pages","description":"dev.kordex.core.pagination.BasePaginator.pages","location":"kord-extensions/dev.kordex.core.pagination/-base-paginator/pages.html","searchKeys":["pages","open val pages: Pages","dev.kordex.core.pagination.BasePaginator.pages"]},{"name":"open val parent: ChatGroupCommand<out Arguments>","description":"dev.kordex.core.commands.chat.ChatSubCommand.parent","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-sub-command/parent.html","searchKeys":["parent","open val parent: ChatGroupCommand<out Arguments>","dev.kordex.core.commands.chat.ChatSubCommand.parent"]},{"name":"open val parent: ChatGroupCommand<out Arguments>? = null","description":"dev.kordex.core.commands.chat.ChatGroupCommand.parent","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-group-command/parent.html","searchKeys":["parent","open val parent: ChatGroupCommand<out Arguments>? = null","dev.kordex.core.commands.chat.ChatGroupCommand.parent"]},{"name":"open val parent: Scheduler? = null","description":"dev.kordex.core.utils.scheduling.Task.parent","location":"kord-extensions/dev.kordex.core.utils.scheduling/-task/parent.html","searchKeys":["parent","open val parent: Scheduler? = null","dev.kordex.core.utils.scheduling.Task.parent"]},{"name":"open val parentCommand: SlashCommand<*, *, *>? = null","description":"dev.kordex.core.commands.application.slash.SlashCommand.parentCommand","location":"kord-extensions/dev.kordex.core.commands.application.slash/-slash-command/parent-command.html","searchKeys":["parentCommand","open val parentCommand: SlashCommand<*, *, *>? = null","dev.kordex.core.commands.application.slash.SlashCommand.parentCommand"]},{"name":"open val parentGroup: SlashGroup? = null","description":"dev.kordex.core.commands.application.slash.SlashCommand.parentGroup","location":"kord-extensions/dev.kordex.core.commands.application.slash/-slash-command/parent-group.html","searchKeys":["parentGroup","open val parentGroup: SlashGroup? = null","dev.kordex.core.commands.application.slash.SlashCommand.parentGroup"]},{"name":"open val parseForAutocomplete: Boolean = false","description":"dev.kordex.core.commands.Arguments.parseForAutocomplete","location":"kord-extensions/dev.kordex.core.commands/-arguments/parse-for-autocomplete.html","searchKeys":["parseForAutocomplete","open val parseForAutocomplete: Boolean = false","dev.kordex.core.commands.Arguments.parseForAutocomplete"]},{"name":"open val parser: ChatCommandParser","description":"dev.kordex.core.commands.chat.ChatCommandRegistry.parser","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-command-registry/parser.html","searchKeys":["parser","open val parser: ChatCommandParser","dev.kordex.core.commands.chat.ChatCommandRegistry.parser"]},{"name":"open val parser: StringParser","description":"dev.kordex.core.commands.chat.ChatCommandContext.parser","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-command-context/parser.html","searchKeys":["parser","open val parser: StringParser","dev.kordex.core.commands.chat.ChatCommandContext.parser"]},{"name":"open val reason: Key","description":"dev.kordex.core.DiscordRelayedException.reason","location":"kord-extensions/dev.kordex.core/-discord-relayed-exception/reason.html","searchKeys":["reason","open val reason: Key","dev.kordex.core.DiscordRelayedException.reason"]},{"name":"open val required: Boolean = true","description":"dev.kordex.core.commands.converters.Converter.required","location":"kord-extensions/dev.kordex.core.commands.converters/-converter/required.html","searchKeys":["required","open val required: Boolean = true","dev.kordex.core.commands.converters.Converter.required"]},{"name":"open val requiredPerms: MutableSet<Permission>","description":"dev.kordex.core.commands.Command.requiredPerms","location":"kord-extensions/dev.kordex.core.commands/-command/required-perms.html","searchKeys":["requiredPerms","open val requiredPerms: MutableSet<Permission>","dev.kordex.core.commands.Command.requiredPerms"]},{"name":"open val requiredPerms: MutableSet<Permission>","description":"dev.kordex.core.components.ComponentWithAction.requiredPerms","location":"kord-extensions/dev.kordex.core.components/-component-with-action/required-perms.html","searchKeys":["requiredPerms","open val requiredPerms: MutableSet<Permission>","dev.kordex.core.components.ComponentWithAction.requiredPerms"]},{"name":"open val rows: Array<MutableList<Component>>","description":"dev.kordex.core.components.ComponentContainer.rows","location":"kord-extensions/dev.kordex.core.components/-component-container/rows.html","searchKeys":["rows","open val rows: Array<MutableList<Component>>","dev.kordex.core.components.ComponentContainer.rows"]},{"name":"open val scheduler: Scheduler","description":"dev.kordex.core.components.ComponentRegistry.scheduler","location":"kord-extensions/dev.kordex.core.components/-component-registry/scheduler.html","searchKeys":["scheduler","open val scheduler: Scheduler","dev.kordex.core.components.ComponentRegistry.scheduler"]},{"name":"open val shouldThrow: Boolean = false","description":"dev.kordex.core.commands.converters.CoalescingConverter.shouldThrow","location":"kord-extensions/dev.kordex.core.commands.converters/-coalescing-converter/should-throw.html","searchKeys":["shouldThrow","open val shouldThrow: Boolean = false","dev.kordex.core.commands.converters.CoalescingConverter.shouldThrow"]},{"name":"open val showTypeInSignature: Boolean = true","description":"dev.kordex.core.commands.converters.Converter.showTypeInSignature","location":"kord-extensions/dev.kordex.core.commands.converters/-converter/show-type-in-signature.html","searchKeys":["showTypeInSignature","open val showTypeInSignature: Boolean = true","dev.kordex.core.commands.converters.Converter.showTypeInSignature"]},{"name":"open val slashCommands: MutableList<SlashCommand<*, *, *>>","description":"dev.kordex.core.extensions.Extension.slashCommands","location":"kord-extensions/dev.kordex.core.extensions/-extension/slash-commands.html","searchKeys":["slashCommands","open val slashCommands: MutableList<SlashCommand<*, *, *>>","dev.kordex.core.extensions.Extension.slashCommands"]},{"name":"open val slashCommands: MutableMap<Snowflake, SlashCommand<*, *, *>>","description":"dev.kordex.core.commands.application.DefaultApplicationCommandRegistry.slashCommands","location":"kord-extensions/dev.kordex.core.commands.application/-default-application-command-registry/slash-commands.html","searchKeys":["slashCommands","open val slashCommands: MutableMap<Snowflake, SlashCommand<*, *, *>>","dev.kordex.core.commands.application.DefaultApplicationCommandRegistry.slashCommands"]},{"name":"open val storage: RegistryStorage<String, Component>","description":"dev.kordex.core.components.ComponentRegistry.storage","location":"kord-extensions/dev.kordex.core.components/-component-registry/storage.html","searchKeys":["storage","open val storage: RegistryStorage<String, Component>","dev.kordex.core.components.ComponentRegistry.storage"]},{"name":"open val storageType: StorageType","description":"dev.kordex.core.storage.StorageUnit.storageType","location":"kord-extensions/dev.kordex.core.storage/-storage-unit/storage-type.html","searchKeys":["storageType","open val storageType: StorageType","dev.kordex.core.storage.StorageUnit.storageType"]},{"name":"open val subCommands: MutableList<SlashCommand<*, *, *>>","description":"dev.kordex.core.commands.application.slash.SlashCommand.subCommands","location":"kord-extensions/dev.kordex.core.commands.application.slash/-slash-command/sub-commands.html","searchKeys":["subCommands","open val subCommands: MutableList<SlashCommand<*, *, *>>","dev.kordex.core.commands.application.slash.SlashCommand.subCommands"]},{"name":"open val switchEmoji: ReactionEmoji","description":"dev.kordex.core.pagination.BasePaginator.switchEmoji","location":"kord-extensions/dev.kordex.core.pagination/-base-paginator/switch-emoji.html","searchKeys":["switchEmoji","open val switchEmoji: ReactionEmoji","dev.kordex.core.pagination.BasePaginator.switchEmoji"]},{"name":"open val tags: MutableStringKeyedMap<String>","description":"dev.kordex.core.sentry.captures.SentryScopeCapture.tags","location":"kord-extensions/dev.kordex.core.sentry.captures/-sentry-scope-capture/tags.html","searchKeys":["tags","open val tags: MutableStringKeyedMap<String>","dev.kordex.core.sentry.captures.SentryScopeCapture.tags"]},{"name":"open val timeout: Duration","description":"dev.kordex.core.components.forms.Form.timeout","location":"kord-extensions/dev.kordex.core.components.forms/-form/timeout.html","searchKeys":["timeout","open val timeout: Duration","dev.kordex.core.components.forms.Form.timeout"]},{"name":"open val timeoutSeconds: Long? = null","description":"dev.kordex.core.pagination.BasePaginator.timeoutSeconds","location":"kord-extensions/dev.kordex.core.pagination/-base-paginator/timeout-seconds.html","searchKeys":["timeoutSeconds","open val timeoutSeconds: Long? = null","dev.kordex.core.pagination.BasePaginator.timeoutSeconds"]},{"name":"open val timeoutTask: Task?","description":"dev.kordex.core.components.ComponentContainer.timeoutTask","location":"kord-extensions/dev.kordex.core.components/-component-container/timeout-task.html","searchKeys":["timeoutTask","open val timeoutTask: Task?","dev.kordex.core.components.ComponentContainer.timeoutTask"]},{"name":"open val timeoutTask: Task?","description":"dev.kordex.core.components.ComponentWithAction.timeoutTask","location":"kord-extensions/dev.kordex.core.components/-component-with-action/timeout-task.html","searchKeys":["timeoutTask","open val timeoutTask: Task?","dev.kordex.core.components.ComponentWithAction.timeoutTask"]},{"name":"open val unitWidth: Int = 1","description":"dev.kordex.core.components.Component.unitWidth","location":"kord-extensions/dev.kordex.core.components/-component/unit-width.html","searchKeys":["unitWidth","open val unitWidth: Int = 1","dev.kordex.core.components.Component.unitWidth"]},{"name":"open val unsortedComponents: MutableList<Component>","description":"dev.kordex.core.components.ComponentContainer.unsortedComponents","location":"kord-extensions/dev.kordex.core.components/-component-container/unsorted-components.html","searchKeys":["unsortedComponents","open val unsortedComponents: MutableList<Component>","dev.kordex.core.components.ComponentContainer.unsortedComponents"]},{"name":"open val userCommands: MutableList<UserCommand<*, *>>","description":"dev.kordex.core.extensions.Extension.userCommands","location":"kord-extensions/dev.kordex.core.extensions/-extension/user-commands.html","searchKeys":["userCommands","open val userCommands: MutableList<UserCommand<*, *>>","dev.kordex.core.extensions.Extension.userCommands"]},{"name":"open val userCommands: MutableMap<Snowflake, UserCommand<*, *>>","description":"dev.kordex.core.commands.application.DefaultApplicationCommandRegistry.userCommands","location":"kord-extensions/dev.kordex.core.commands.application/-default-application-command-registry/user-commands.html","searchKeys":["userCommands","open val userCommands: MutableMap<Snowflake, UserCommand<*, *>>","dev.kordex.core.commands.application.DefaultApplicationCommandRegistry.userCommands"]},{"name":"open var active: Boolean","description":"dev.kordex.core.pagination.BasePaginator.active","location":"kord-extensions/dev.kordex.core.pagination/-base-paginator/active.html","searchKeys":["active","open var active: Boolean","dev.kordex.core.pagination.BasePaginator.active"]},{"name":"open var aliasKey: Key?","description":"dev.kordex.core.commands.chat.ChatCommand.aliasKey","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-command/alias-key.html","searchKeys":["aliasKey","open var aliasKey: Key?","dev.kordex.core.commands.chat.ChatCommand.aliasKey"]},{"name":"open var allGroups: List<Key>","description":"dev.kordex.core.pagination.BasePaginator.allGroups","location":"kord-extensions/dev.kordex.core.pagination/-base-paginator/all-groups.html","searchKeys":["allGroups","open var allGroups: List<Key>","dev.kordex.core.pagination.BasePaginator.allGroups"]},{"name":"open var allowByDefault: Boolean","description":"dev.kordex.core.commands.application.ApplicationCommand.allowByDefault","location":"kord-extensions/dev.kordex.core.commands.application/-application-command/allow-by-default.html","searchKeys":["allowByDefault","open var allowByDefault: Boolean","dev.kordex.core.commands.application.ApplicationCommand.allowByDefault"]},{"name":"open var allowInDms: Boolean","description":"dev.kordex.core.commands.application.ApplicationCommand.allowInDms","location":"kord-extensions/dev.kordex.core.commands.application/-application-command/allow-in-dms.html","searchKeys":["allowInDms","open var allowInDms: Boolean","dev.kordex.core.commands.application.ApplicationCommand.allowInDms"]},{"name":"open var allowKeywordArguments: Boolean","description":"dev.kordex.core.commands.chat.ChatCommand.allowKeywordArguments","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-command/allow-keyword-arguments.html","searchKeys":["allowKeywordArguments","open var allowKeywordArguments: Boolean","dev.kordex.core.commands.chat.ChatCommand.allowKeywordArguments"]},{"name":"open var autoCompleteCallback: AutoCompleteCallback","description":"dev.kordex.core.commands.converters.builders.ConverterBuilder.autoCompleteCallback","location":"kord-extensions/dev.kordex.core.commands.converters.builders/-converter-builder/auto-complete-callback.html","searchKeys":["autoCompleteCallback","open var autoCompleteCallback: AutoCompleteCallback","dev.kordex.core.commands.converters.builders.ConverterBuilder.autoCompleteCallback"]},{"name":"open var backButton: PublicInteractionButton<*>?","description":"dev.kordex.core.pagination.BaseButtonPaginator.backButton","location":"kord-extensions/dev.kordex.core.pagination/-base-button-paginator/back-button.html","searchKeys":["backButton","open var backButton: PublicInteractionButton<*>?","dev.kordex.core.pagination.BaseButtonPaginator.backButton"]},{"name":"open var builder: () -> SentryAdapter","description":"dev.kordex.core.builders.extensions.SentryExtensionBuilder.builder","location":"kord-extensions/dev.kordex.core.builders.extensions/-sentry-extension-builder/builder.html","searchKeys":["builder","open var builder: () -> SentryAdapter","dev.kordex.core.builders.extensions.SentryExtensionBuilder.builder"]},{"name":"open var channel: Channel?","description":"dev.kordex.core.sentry.captures.SentryCapture.channel","location":"kord-extensions/dev.kordex.core.sentry.captures/-sentry-capture/channel.html","searchKeys":["channel","open var channel: Channel?","dev.kordex.core.sentry.captures.SentryCapture.channel"]},{"name":"open var channel: Snowflake?","description":"dev.kordex.core.storage.StorageUnit.channel","location":"kord-extensions/dev.kordex.core.storage/-storage-unit/channel.html","searchKeys":["channel","open var channel: Snowflake?","dev.kordex.core.storage.StorageUnit.channel"]},{"name":"open var components: ComponentContainer","description":"dev.kordex.core.pagination.BaseButtonPaginator.components","location":"kord-extensions/dev.kordex.core.pagination/-base-button-paginator/components.html","searchKeys":["components","open var components: ComponentContainer","dev.kordex.core.pagination.BaseButtonPaginator.components"]},{"name":"open var currentPages: List<Page>","description":"dev.kordex.core.pagination.BasePaginator.currentPages","location":"kord-extensions/dev.kordex.core.pagination/-base-paginator/current-pages.html","searchKeys":["currentPages","open var currentPages: List<Page>","dev.kordex.core.pagination.BasePaginator.currentPages"]},{"name":"open var debug: Boolean","description":"dev.kordex.core.builders.extensions.SentryExtensionBuilder.debug","location":"kord-extensions/dev.kordex.core.builders.extensions/-sentry-extension-builder/debug.html","searchKeys":["debug","open var debug: Boolean","dev.kordex.core.builders.extensions.SentryExtensionBuilder.debug"]},{"name":"open var defaultGroup: Key","description":"dev.kordex.core.pagination.pages.Pages.defaultGroup","location":"kord-extensions/dev.kordex.core.pagination.pages/-pages/default-group.html","searchKeys":["defaultGroup","open var defaultGroup: Key","dev.kordex.core.pagination.pages.Pages.defaultGroup"]},{"name":"open var defaultMemberPermissions: Permissions?","description":"dev.kordex.core.commands.application.ApplicationCommand.defaultMemberPermissions","location":"kord-extensions/dev.kordex.core.commands.application/-application-command/default-member-permissions.html","searchKeys":["defaultMemberPermissions","open var defaultMemberPermissions: Permissions?","dev.kordex.core.commands.application.ApplicationCommand.defaultMemberPermissions"]},{"name":"open var deferredAck: Boolean","description":"dev.kordex.core.components.ComponentWithAction.deferredAck","location":"kord-extensions/dev.kordex.core.components/-component-with-action/deferred-ack.html","searchKeys":["deferredAck","open var deferredAck: Boolean","dev.kordex.core.components.ComponentWithAction.deferredAck"]},{"name":"open var description: Key","description":"dev.kordex.core.commands.chat.ChatCommand.description","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-command/description.html","searchKeys":["description","open var description: Key","dev.kordex.core.commands.chat.ChatCommand.description"]},{"name":"open var disabled: Boolean","description":"dev.kordex.core.components.buttons.InteractionButtonWithAction.disabled","location":"kord-extensions/dev.kordex.core.components.buttons/-interaction-button-with-action/disabled.html","searchKeys":["disabled","open var disabled: Boolean","dev.kordex.core.components.buttons.InteractionButtonWithAction.disabled"]},{"name":"open var disabled: Boolean?","description":"dev.kordex.core.components.menus.SelectMenu.disabled","location":"kord-extensions/dev.kordex.core.components.menus/-select-menu/disabled.html","searchKeys":["disabled","open var disabled: Boolean?","dev.kordex.core.components.menus.SelectMenu.disabled"]},{"name":"open var distribution: String?","description":"dev.kordex.core.builders.extensions.SentryExtensionBuilder.distribution","location":"kord-extensions/dev.kordex.core.builders.extensions/-sentry-extension-builder/distribution.html","searchKeys":["distribution","open var distribution: String?","dev.kordex.core.builders.extensions.SentryExtensionBuilder.distribution"]},{"name":"open var dsn: String?","description":"dev.kordex.core.builders.extensions.SentryExtensionBuilder.dsn","location":"kord-extensions/dev.kordex.core.builders.extensions/-sentry-extension-builder/dsn.html","searchKeys":["dsn","open var dsn: String?","dev.kordex.core.builders.extensions.SentryExtensionBuilder.dsn"]},{"name":"open var duration: Duration","description":"dev.kordex.core.utils.scheduling.Task.duration","location":"kord-extensions/dev.kordex.core.utils.scheduling/-task/duration.html","searchKeys":["duration","open var duration: Duration","dev.kordex.core.utils.scheduling.Task.duration"]},{"name":"open var enable: Boolean","description":"dev.kordex.core.builders.extensions.SentryExtensionBuilder.enable","location":"kord-extensions/dev.kordex.core.builders.extensions/-sentry-extension-builder/enable.html","searchKeys":["enable","open var enable: Boolean","dev.kordex.core.builders.extensions.SentryExtensionBuilder.enable"]},{"name":"open var enabled: Boolean","description":"dev.kordex.core.commands.chat.ChatCommand.enabled","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-command/enabled.html","searchKeys":["enabled","open var enabled: Boolean","dev.kordex.core.commands.chat.ChatCommand.enabled"]},{"name":"open var environment: String?","description":"dev.kordex.core.builders.extensions.SentryExtensionBuilder.environment","location":"kord-extensions/dev.kordex.core.builders.extensions/-sentry-extension-builder/environment.html","searchKeys":["environment","open var environment: String?","dev.kordex.core.builders.extensions.SentryExtensionBuilder.environment"]},{"name":"open var error: Key","description":"dev.kordex.core.parsers.DurationParserException.error","location":"kord-extensions/dev.kordex.core.parsers/-duration-parser-exception/error.html","searchKeys":["error","open var error: Key","dev.kordex.core.parsers.DurationParserException.error"]},{"name":"open var feedbackExtension: Boolean","description":"dev.kordex.core.builders.extensions.SentryExtensionBuilder.feedbackExtension","location":"kord-extensions/dev.kordex.core.builders.extensions/-sentry-extension-builder/feedback-extension.html","searchKeys":["feedbackExtension","open var feedbackExtension: Boolean","dev.kordex.core.builders.extensions.SentryExtensionBuilder.feedbackExtension"]},{"name":"open var firstPageButton: PublicInteractionButton<*>?","description":"dev.kordex.core.pagination.BaseButtonPaginator.firstPageButton","location":"kord-extensions/dev.kordex.core.pagination/-base-button-paginator/first-page-button.html","searchKeys":["firstPageButton","open var firstPageButton: PublicInteractionButton<*>?","dev.kordex.core.pagination.BaseButtonPaginator.firstPageButton"]},{"name":"open var guild: Guild?","description":"dev.kordex.core.sentry.captures.SentryCapture.guild","location":"kord-extensions/dev.kordex.core.sentry.captures/-sentry-capture/guild.html","searchKeys":["guild","open var guild: Guild?","dev.kordex.core.sentry.captures.SentryCapture.guild"]},{"name":"open var guild: GuildBehavior?","description":"dev.kordex.core.commands.application.ApplicationCommandContext.guild","location":"kord-extensions/dev.kordex.core.commands.application/-application-command-context/guild.html","searchKeys":["guild","open var guild: GuildBehavior?","dev.kordex.core.commands.application.ApplicationCommandContext.guild"]},{"name":"open var guild: GuildBehavior?","description":"dev.kordex.core.commands.chat.ChatCommandContext.guild","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-command-context/guild.html","searchKeys":["guild","open var guild: GuildBehavior?","dev.kordex.core.commands.chat.ChatCommandContext.guild"]},{"name":"open var guild: GuildBehavior?","description":"dev.kordex.core.components.ComponentContext.guild","location":"kord-extensions/dev.kordex.core.components/-component-context/guild.html","searchKeys":["guild","open var guild: GuildBehavior?","dev.kordex.core.components.ComponentContext.guild"]},{"name":"open var guild: Snowflake?","description":"dev.kordex.core.storage.StorageUnit.guild","location":"kord-extensions/dev.kordex.core.storage/-storage-unit/guild.html","searchKeys":["guild","open var guild: Snowflake?","dev.kordex.core.storage.StorageUnit.guild"]},{"name":"open var hidden: Boolean","description":"dev.kordex.core.commands.chat.ChatCommand.hidden","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-command/hidden.html","searchKeys":["hidden","open var hidden: Boolean","dev.kordex.core.commands.chat.ChatCommand.hidden"]},{"name":"open var id: String","description":"dev.kordex.core.components.ComponentWithID.id","location":"kord-extensions/dev.kordex.core.components/-component-with-i-d/id.html","searchKeys":["id","open var id: String","dev.kordex.core.components.ComponentWithID.id"]},{"name":"open var ignoreErrors: Boolean","description":"dev.kordex.core.commands.converters.builders.CoalescingConverterBuilder.ignoreErrors","location":"kord-extensions/dev.kordex.core.commands.converters.builders/-coalescing-converter-builder/ignore-errors.html","searchKeys":["ignoreErrors","open var ignoreErrors: Boolean","dev.kordex.core.commands.converters.builders.CoalescingConverterBuilder.ignoreErrors"]},{"name":"open var initialResponseBuilder: InitialEphemeralSelectMenuResponseBuilder","description":"dev.kordex.core.components.menus.EphemeralSelectMenu.initialResponseBuilder","location":"kord-extensions/dev.kordex.core.components.menus/-ephemeral-select-menu/initial-response-builder.html","searchKeys":["initialResponseBuilder","open var initialResponseBuilder: InitialEphemeralSelectMenuResponseBuilder","dev.kordex.core.components.menus.EphemeralSelectMenu.initialResponseBuilder"]},{"name":"open var initialResponseBuilder: InitialEphemeralSelectMenuResponseBuilder","description":"dev.kordex.core.components.menus.PublicSelectMenu.initialResponseBuilder","location":"kord-extensions/dev.kordex.core.components.menus/-public-select-menu/initial-response-builder.html","searchKeys":["initialResponseBuilder","open var initialResponseBuilder: InitialEphemeralSelectMenuResponseBuilder","dev.kordex.core.components.menus.PublicSelectMenu.initialResponseBuilder"]},{"name":"open var lastPageButton: PublicInteractionButton<*>?","description":"dev.kordex.core.pagination.BaseButtonPaginator.lastPageButton","location":"kord-extensions/dev.kordex.core.pagination/-base-button-paginator/last-page-button.html","searchKeys":["lastPageButton","open var lastPageButton: PublicInteractionButton<*>?","dev.kordex.core.pagination.BaseButtonPaginator.lastPageButton"]},{"name":"open var level: SentryLevel?","description":"dev.kordex.core.sentry.captures.SentryScopeCapture.level","location":"kord-extensions/dev.kordex.core.sentry.captures/-sentry-scope-capture/level.html","searchKeys":["level","open var level: SentryLevel?","dev.kordex.core.sentry.captures.SentryScopeCapture.level"]},{"name":"open var localeFallback: Boolean","description":"dev.kordex.core.commands.chat.ChatCommand.localeFallback","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-command/locale-fallback.html","searchKeys":["localeFallback","open var localeFallback: Boolean","dev.kordex.core.commands.chat.ChatCommand.localeFallback"]},{"name":"open var member: MemberBehavior?","description":"dev.kordex.core.commands.application.ApplicationCommandContext.member","location":"kord-extensions/dev.kordex.core.commands.application/-application-command-context/member.html","searchKeys":["member","open var member: MemberBehavior?","dev.kordex.core.commands.application.ApplicationCommandContext.member"]},{"name":"open var member: MemberBehavior?","description":"dev.kordex.core.commands.chat.ChatCommandContext.member","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-command-context/member.html","searchKeys":["member","open var member: MemberBehavior?","dev.kordex.core.commands.chat.ChatCommandContext.member"]},{"name":"open var member: MemberBehavior?","description":"dev.kordex.core.components.ComponentContext.member","location":"kord-extensions/dev.kordex.core.components/-component-context/member.html","searchKeys":["member","open var member: MemberBehavior?","dev.kordex.core.components.ComponentContext.member"]},{"name":"open var message: Snowflake?","description":"dev.kordex.core.storage.StorageUnit.message","location":"kord-extensions/dev.kordex.core.storage/-storage-unit/message.html","searchKeys":["message","open var message: Snowflake?","dev.kordex.core.storage.StorageUnit.message"]},{"name":"open var mutator: Mutator<T>","description":"dev.kordex.core.commands.converters.builders.ConverterBuilder.mutator","location":"kord-extensions/dev.kordex.core.commands.converters.builders/-converter-builder/mutator.html","searchKeys":["mutator","open var mutator: Mutator<T>","dev.kordex.core.commands.converters.builders.ConverterBuilder.mutator"]},{"name":"open var nextButton: PublicInteractionButton<*>?","description":"dev.kordex.core.pagination.BaseButtonPaginator.nextButton","location":"kord-extensions/dev.kordex.core.pagination/-base-button-paginator/next-button.html","searchKeys":["nextButton","open var nextButton: PublicInteractionButton<*>?","dev.kordex.core.pagination.BaseButtonPaginator.nextButton"]},{"name":"open var pollingSeconds: Long","description":"dev.kordex.core.utils.scheduling.Task.pollingSeconds","location":"kord-extensions/dev.kordex.core.utils.scheduling/-task/polling-seconds.html","searchKeys":["pollingSeconds","open var pollingSeconds: Long","dev.kordex.core.utils.scheduling.Task.pollingSeconds"]},{"name":"open var release: String?","description":"dev.kordex.core.builders.extensions.SentryExtensionBuilder.release","location":"kord-extensions/dev.kordex.core.builders.extensions/-sentry-extension-builder/release.html","searchKeys":["release","open var release: String?","dev.kordex.core.builders.extensions.SentryExtensionBuilder.release"]},{"name":"open var role: Role?","description":"dev.kordex.core.sentry.captures.SentryCapture.role","location":"kord-extensions/dev.kordex.core.sentry.captures/-sentry-capture/role.html","searchKeys":["role","open var role: Role?","dev.kordex.core.sentry.captures.SentryCapture.role"]},{"name":"open var serverName: String?","description":"dev.kordex.core.builders.extensions.SentryExtensionBuilder.serverName","location":"kord-extensions/dev.kordex.core.builders.extensions/-sentry-extension-builder/server-name.html","searchKeys":["serverName","open var serverName: String?","dev.kordex.core.builders.extensions.SentryExtensionBuilder.serverName"]},{"name":"open var setupCallback: SentryAdapter.() -> Unit","description":"dev.kordex.core.builders.extensions.SentryExtensionBuilder.setupCallback","location":"kord-extensions/dev.kordex.core.builders.extensions/-sentry-extension-builder/setup-callback.html","searchKeys":["setupCallback","open var setupCallback: SentryAdapter.() -> Unit","dev.kordex.core.builders.extensions.SentryExtensionBuilder.setupCallback"]},{"name":"open var signature: Key?","description":"dev.kordex.core.commands.chat.ChatCommand.signature","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-command/signature.html","searchKeys":["signature","open var signature: Key?","dev.kordex.core.commands.chat.ChatCommand.signature"]},{"name":"open var signatureCache: MutableMap<Locale, String>","description":"dev.kordex.core.commands.chat.ChatCommand.signatureCache","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-command/signature-cache.html","searchKeys":["signatureCache","open var signatureCache: MutableMap<Locale, String>","dev.kordex.core.commands.chat.ChatCommand.signatureCache"]},{"name":"open var state: ExtensionState","description":"dev.kordex.core.extensions.Extension.state","location":"kord-extensions/dev.kordex.core.extensions/-extension/state.html","searchKeys":["state","open var state: ExtensionState","dev.kordex.core.extensions.Extension.state"]},{"name":"open var style: ButtonStyle","description":"dev.kordex.core.components.buttons.DisabledInteractionButton.style","location":"kord-extensions/dev.kordex.core.components.buttons/-disabled-interaction-button/style.html","searchKeys":["style","open var style: ButtonStyle","dev.kordex.core.components.buttons.DisabledInteractionButton.style"]},{"name":"open var style: ButtonStyle","description":"dev.kordex.core.components.buttons.EphemeralInteractionButton.style","location":"kord-extensions/dev.kordex.core.components.buttons/-ephemeral-interaction-button/style.html","searchKeys":["style","open var style: ButtonStyle","dev.kordex.core.components.buttons.EphemeralInteractionButton.style"]},{"name":"open var style: ButtonStyle","description":"dev.kordex.core.components.buttons.PublicInteractionButton.style","location":"kord-extensions/dev.kordex.core.components.buttons/-public-interaction-button/style.html","searchKeys":["style","open var style: ButtonStyle","dev.kordex.core.components.buttons.PublicInteractionButton.style"]},{"name":"open var switchButton: PublicInteractionButton<*>?","description":"dev.kordex.core.pagination.BaseButtonPaginator.switchButton","location":"kord-extensions/dev.kordex.core.pagination/-base-button-paginator/switch-button.html","searchKeys":["switchButton","open var switchButton: PublicInteractionButton<*>?","dev.kordex.core.pagination.BaseButtonPaginator.switchButton"]},{"name":"open var timeoutCallback: suspend ComponentContainer.() -> Unit?","description":"dev.kordex.core.components.ComponentContainer.timeoutCallback","location":"kord-extensions/dev.kordex.core.components/-component-container/timeout-callback.html","searchKeys":["timeoutCallback","open var timeoutCallback: suspend ComponentContainer.() -> Unit?","dev.kordex.core.components.ComponentContainer.timeoutCallback"]},{"name":"open var transaction: ITransaction?","description":"dev.kordex.core.sentry.captures.SentryScopeCapture.transaction","location":"kord-extensions/dev.kordex.core.sentry.captures/-sentry-scope-capture/transaction.html","searchKeys":["transaction","open var transaction: ITransaction?","dev.kordex.core.sentry.captures.SentryScopeCapture.transaction"]},{"name":"open var user: Snowflake?","description":"dev.kordex.core.storage.StorageUnit.user","location":"kord-extensions/dev.kordex.core.storage/-storage-unit/user.html","searchKeys":["user","open var user: Snowflake?","dev.kordex.core.storage.StorageUnit.user"]},{"name":"open var user: User?","description":"dev.kordex.core.sentry.captures.SentryCapture.user","location":"kord-extensions/dev.kordex.core.sentry.captures/-sentry-capture/user.html","searchKeys":["user","open var user: User?","dev.kordex.core.sentry.captures.SentryCapture.user"]},{"name":"open var user: UserBehavior?","description":"dev.kordex.core.commands.chat.ChatCommandContext.user","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-command-context/user.html","searchKeys":["user","open var user: UserBehavior?","dev.kordex.core.commands.chat.ChatCommandContext.user"]},{"name":"open var validator: Validator<OutputType>","description":"dev.kordex.core.commands.converters.Converter.validator","location":"kord-extensions/dev.kordex.core.commands.converters/-converter/validator.html","searchKeys":["validator","open var validator: Validator<OutputType>","dev.kordex.core.commands.converters.Converter.validator"]},{"name":"operator fun <T> get(key: KProperty<T>): ChangeSet.Change<T>","description":"dev.kordex.core.utils.deltas.ChangeSet.get","location":"kord-extensions/dev.kordex.core.utils.deltas/-change-set/get.html","searchKeys":["get","operator fun <T> get(key: KProperty<T>): ChangeSet.Change<T>","dev.kordex.core.utils.deltas.ChangeSet.get"]},{"name":"operator fun <T> set(key: KProperty<T>, value: ChangeSet.Change<T>)","description":"dev.kordex.core.utils.deltas.ChangeSet.set","location":"kord-extensions/dev.kordex.core.utils.deltas/-change-set/set.html","searchKeys":["set","operator fun <T> set(key: KProperty<T>, value: ChangeSet.Change<T>)","dev.kordex.core.utils.deltas.ChangeSet.set"]},{"name":"operator fun CoordinatePair.minus(other: CoordinatePair): Pair<Int, Int>","description":"dev.kordex.core.components.forms.minus","location":"kord-extensions/dev.kordex.core.components.forms/minus.html","searchKeys":["minus","operator fun CoordinatePair.minus(other: CoordinatePair): Pair<Int, Int>","dev.kordex.core.components.forms.minus"]},{"name":"operator fun CoordinatePair.plus(other: CoordinatePair): Pair<Int, Int>","description":"dev.kordex.core.components.forms.plus","location":"kord-extensions/dev.kordex.core.components.forms/plus.html","searchKeys":["plus","operator fun CoordinatePair.plus(other: CoordinatePair): Pair<Int, Int>","dev.kordex.core.components.forms.plus"]},{"name":"operator fun NsfwLevel.compareTo(other: NsfwLevel): Int","description":"dev.kordex.core.utils.compareTo","location":"kord-extensions/dev.kordex.core.utils/compare-to.html","searchKeys":["compareTo","operator fun NsfwLevel.compareTo(other: NsfwLevel): Int","dev.kordex.core.utils.compareTo"]},{"name":"operator fun getValue(thisRef: Arguments, property: KProperty<*>): OutputType","description":"dev.kordex.core.commands.converters.Converter.getValue","location":"kord-extensions/dev.kordex.core.commands.converters/-converter/get-value.html","searchKeys":["getValue","operator fun getValue(thisRef: Arguments, property: KProperty<*>): OutputType","dev.kordex.core.commands.converters.Converter.getValue"]},{"name":"sealed class BaseCheckFailure<E : DiscordRelayedException> : FailureReason<E> ","description":"dev.kordex.core.types.FailureReason.BaseCheckFailure","location":"kord-extensions/dev.kordex.core.types/-failure-reason/-base-check-failure/index.html","searchKeys":["BaseCheckFailure","sealed class BaseCheckFailure<E : DiscordRelayedException> : FailureReason<E> ","dev.kordex.core.types.FailureReason.BaseCheckFailure"]},{"name":"sealed class BreadcrumbType","description":"dev.kordex.core.sentry.BreadcrumbType","location":"kord-extensions/dev.kordex.core.sentry/-breadcrumb-type/index.html","searchKeys":["BreadcrumbType","sealed class BreadcrumbType","dev.kordex.core.sentry.BreadcrumbType"]},{"name":"sealed class ChoiceOptionWrapper<B : BaseChoiceBuilder<*, *>, T> : OptionWrapper<B> ","description":"dev.kordex.core.commands.ChoiceOptionWrapper","location":"kord-extensions/dev.kordex.core.commands/-choice-option-wrapper/index.html","searchKeys":["ChoiceOptionWrapper","sealed class ChoiceOptionWrapper<B : BaseChoiceBuilder<*, *>, T> : OptionWrapper<B> ","dev.kordex.core.commands.ChoiceOptionWrapper"]},{"name":"sealed class CopyrightType","description":"dev.kordex.core.builders.about.CopyrightType","location":"kord-extensions/dev.kordex.core.builders.about/-copyright-type/index.html","searchKeys":["CopyrightType","sealed class CopyrightType","dev.kordex.core.builders.about.CopyrightType"]},{"name":"sealed class FailureReason<E : Throwable>","description":"dev.kordex.core.types.FailureReason","location":"kord-extensions/dev.kordex.core.types/-failure-reason/index.html","searchKeys":["FailureReason","sealed class FailureReason<E : Throwable>","dev.kordex.core.types.FailureReason"]},{"name":"sealed class GuildJoinRequestResponse","description":"dev.kordex.core.events.extra.models.GuildJoinRequestResponse","location":"kord-extensions/dev.kordex.core.events.extra.models/-guild-join-request-response/index.html","searchKeys":["GuildJoinRequestResponse","sealed class GuildJoinRequestResponse","dev.kordex.core.events.extra.models.GuildJoinRequestResponse"]},{"name":"sealed class TimestampType","description":"dev.kordex.core.time.TimestampType","location":"kord-extensions/dev.kordex.core.time/-timestamp-type/index.html","searchKeys":["TimestampType","sealed class TimestampType","dev.kordex.core.time.TimestampType"]},{"name":"sealed interface CommandEvent<C : Command, E : Event> : KordExEvent","description":"dev.kordex.core.commands.events.CommandEvent","location":"kord-extensions/dev.kordex.core.commands.events/-command-event/index.html","searchKeys":["CommandEvent","sealed interface CommandEvent<C : Command, E : Event> : KordExEvent","dev.kordex.core.commands.events.CommandEvent"]},{"name":"sealed interface CommandFailedChecksEvent<C : Command, E : Event> : CommandFailedEvent<C, E> ","description":"dev.kordex.core.commands.events.CommandFailedChecksEvent","location":"kord-extensions/dev.kordex.core.commands.events/-command-failed-checks-event/index.html","searchKeys":["CommandFailedChecksEvent","sealed interface CommandFailedChecksEvent<C : Command, E : Event> : CommandFailedEvent<C, E> ","dev.kordex.core.commands.events.CommandFailedChecksEvent"]},{"name":"sealed interface CommandFailedEvent<C : Command, E : Event> : CommandEvent<C, E> ","description":"dev.kordex.core.commands.events.CommandFailedEvent","location":"kord-extensions/dev.kordex.core.commands.events/-command-failed-event/index.html","searchKeys":["CommandFailedEvent","sealed interface CommandFailedEvent<C : Command, E : Event> : CommandEvent<C, E> ","dev.kordex.core.commands.events.CommandFailedEvent"]},{"name":"sealed interface CommandFailedParsingEvent<C : Command, E : Event> : CommandFailedEvent<C, E> ","description":"dev.kordex.core.commands.events.CommandFailedParsingEvent","location":"kord-extensions/dev.kordex.core.commands.events/-command-failed-parsing-event/index.html","searchKeys":["CommandFailedParsingEvent","sealed interface CommandFailedParsingEvent<C : Command, E : Event> : CommandFailedEvent<C, E> ","dev.kordex.core.commands.events.CommandFailedParsingEvent"]},{"name":"sealed interface CommandFailedWithExceptionEvent<C : Command, E : Event> : CommandFailedEvent<C, E> ","description":"dev.kordex.core.commands.events.CommandFailedWithExceptionEvent","location":"kord-extensions/dev.kordex.core.commands.events/-command-failed-with-exception-event/index.html","searchKeys":["CommandFailedWithExceptionEvent","sealed interface CommandFailedWithExceptionEvent<C : Command, E : Event> : CommandFailedEvent<C, E> ","dev.kordex.core.commands.events.CommandFailedWithExceptionEvent"]},{"name":"sealed interface CommandInvocationEvent<C : Command, E : Event> : CommandEvent<C, E> ","description":"dev.kordex.core.commands.events.CommandInvocationEvent","location":"kord-extensions/dev.kordex.core.commands.events/-command-invocation-event/index.html","searchKeys":["CommandInvocationEvent","sealed interface CommandInvocationEvent<C : Command, E : Event> : CommandEvent<C, E> ","dev.kordex.core.commands.events.CommandInvocationEvent"]},{"name":"sealed interface CommandSucceededEvent<C : Command, E : Event> : CommandEvent<C, E> ","description":"dev.kordex.core.commands.events.CommandSucceededEvent","location":"kord-extensions/dev.kordex.core.commands.events/-command-succeeded-event/index.html","searchKeys":["CommandSucceededEvent","sealed interface CommandSucceededEvent<C : Command, E : Event> : CommandEvent<C, E> ","dev.kordex.core.commands.events.CommandSucceededEvent"]},{"name":"sealed interface MessageCommandFailedEvent<C : MessageCommand<*, *>> : CommandFailedEvent<C, MessageCommandInteractionCreateEvent> ","description":"dev.kordex.core.commands.events.MessageCommandFailedEvent","location":"kord-extensions/dev.kordex.core.commands.events/-message-command-failed-event/index.html","searchKeys":["MessageCommandFailedEvent","sealed interface MessageCommandFailedEvent<C : MessageCommand<*, *>> : CommandFailedEvent<C, MessageCommandInteractionCreateEvent> ","dev.kordex.core.commands.events.MessageCommandFailedEvent"]},{"name":"sealed interface SlashCommandFailedEvent<C : SlashCommand<*, *, *>> : CommandFailedEvent<C, ChatInputCommandInteractionCreateEvent> ","description":"dev.kordex.core.commands.events.SlashCommandFailedEvent","location":"kord-extensions/dev.kordex.core.commands.events/-slash-command-failed-event/index.html","searchKeys":["SlashCommandFailedEvent","sealed interface SlashCommandFailedEvent<C : SlashCommand<*, *, *>> : CommandFailedEvent<C, ChatInputCommandInteractionCreateEvent> ","dev.kordex.core.commands.events.SlashCommandFailedEvent"]},{"name":"sealed interface State","description":"dev.kordex.core.utils.deltas.ChangeSet.State","location":"kord-extensions/dev.kordex.core.utils.deltas/-change-set/-state/index.html","searchKeys":["State","sealed interface State","dev.kordex.core.utils.deltas.ChangeSet.State"]},{"name":"sealed interface UserCommandFailedEvent<C : UserCommand<*, *>> : CommandFailedEvent<C, UserCommandInteractionCreateEvent> ","description":"dev.kordex.core.commands.events.UserCommandFailedEvent","location":"kord-extensions/dev.kordex.core.commands.events/-user-command-failed-event/index.html","searchKeys":["UserCommandFailedEvent","sealed interface UserCommandFailedEvent<C : UserCommand<*, *>> : CommandFailedEvent<C, UserCommandInteractionCreateEvent> ","dev.kordex.core.commands.events.UserCommandFailedEvent"]},{"name":"suspend fun <A : Arguments, M : ModalForm> Extension.ephemeralSlashCommand(arguments: () -> A, modal: () -> M, body: suspend EphemeralSlashCommand<A, M>.() -> Unit): EphemeralSlashCommand<A, M>","description":"dev.kordex.core.extensions.ephemeralSlashCommand","location":"kord-extensions/dev.kordex.core.extensions/ephemeral-slash-command.html","searchKeys":["ephemeralSlashCommand","suspend fun <A : Arguments, M : ModalForm> Extension.ephemeralSlashCommand(arguments: () -> A, modal: () -> M, body: suspend EphemeralSlashCommand<A, M>.() -> Unit): EphemeralSlashCommand<A, M>","dev.kordex.core.extensions.ephemeralSlashCommand"]},{"name":"suspend fun <A : Arguments, M : ModalForm> Extension.publicSlashCommand(arguments: () -> A, modal: () -> M, body: suspend PublicSlashCommand<A, M>.() -> Unit): PublicSlashCommand<A, M>","description":"dev.kordex.core.extensions.publicSlashCommand","location":"kord-extensions/dev.kordex.core.extensions/public-slash-command.html","searchKeys":["publicSlashCommand","suspend fun <A : Arguments, M : ModalForm> Extension.publicSlashCommand(arguments: () -> A, modal: () -> M, body: suspend PublicSlashCommand<A, M>.() -> Unit): PublicSlashCommand<A, M>","dev.kordex.core.extensions.publicSlashCommand"]},{"name":"suspend fun <A : Arguments, M : ModalForm> SlashCommand<*, *, *>.ephemeralSubCommand(arguments: () -> A, modal: () -> M, body: suspend EphemeralSlashCommand<A, M>.() -> Unit): EphemeralSlashCommand<A, M>","description":"dev.kordex.core.commands.application.slash.ephemeralSubCommand","location":"kord-extensions/dev.kordex.core.commands.application.slash/ephemeral-sub-command.html","searchKeys":["ephemeralSubCommand","suspend fun <A : Arguments, M : ModalForm> SlashCommand<*, *, *>.ephemeralSubCommand(arguments: () -> A, modal: () -> M, body: suspend EphemeralSlashCommand<A, M>.() -> Unit): EphemeralSlashCommand<A, M>","dev.kordex.core.commands.application.slash.ephemeralSubCommand"]},{"name":"suspend fun <A : Arguments, M : ModalForm> SlashCommand<*, *, *>.publicSubCommand(arguments: () -> A, modal: () -> M, body: suspend PublicSlashCommand<A, M>.() -> Unit): PublicSlashCommand<A, M>","description":"dev.kordex.core.commands.application.slash.publicSubCommand","location":"kord-extensions/dev.kordex.core.commands.application.slash/public-sub-command.html","searchKeys":["publicSubCommand","suspend fun <A : Arguments, M : ModalForm> SlashCommand<*, *, *>.publicSubCommand(arguments: () -> A, modal: () -> M, body: suspend PublicSlashCommand<A, M>.() -> Unit): PublicSlashCommand<A, M>","dev.kordex.core.commands.application.slash.publicSubCommand"]},{"name":"suspend fun <E : InteractionCreateEvent> sendAndDeferEphemeral(context: EventContext<E>): EphemeralMessageInteractionResponseBehavior?","description":"dev.kordex.core.components.forms.ModalForm.sendAndDeferEphemeral","location":"kord-extensions/dev.kordex.core.components.forms/-modal-form/send-and-defer-ephemeral.html","searchKeys":["sendAndDeferEphemeral","suspend fun <E : InteractionCreateEvent> sendAndDeferEphemeral(context: EventContext<E>): EphemeralMessageInteractionResponseBehavior?","dev.kordex.core.components.forms.ModalForm.sendAndDeferEphemeral"]},{"name":"suspend fun <E : InteractionCreateEvent> sendAndDeferPublic(context: EventContext<E>): PublicMessageInteractionResponseBehavior?","description":"dev.kordex.core.components.forms.ModalForm.sendAndDeferPublic","location":"kord-extensions/dev.kordex.core.components.forms/-modal-form/send-and-defer-public.html","searchKeys":["sendAndDeferPublic","suspend fun <E : InteractionCreateEvent> sendAndDeferPublic(context: EventContext<E>): PublicMessageInteractionResponseBehavior?","dev.kordex.core.components.forms.ModalForm.sendAndDeferPublic"]},{"name":"suspend fun <M : ModalForm> ComponentContainer.ephemeralButton(modal: () -> M?, row: Int? = null, builder: suspend EphemeralInteractionButton<M>.() -> Unit): EphemeralInteractionButton<M>","description":"dev.kordex.core.components.ephemeralButton","location":"kord-extensions/dev.kordex.core.components/ephemeral-button.html","searchKeys":["ephemeralButton","suspend fun <M : ModalForm> ComponentContainer.ephemeralButton(modal: () -> M?, row: Int? = null, builder: suspend EphemeralInteractionButton<M>.() -> Unit): EphemeralInteractionButton<M>","dev.kordex.core.components.ephemeralButton"]},{"name":"suspend fun <M : ModalForm> ComponentContainer.ephemeralChannelSelectMenu(modal: () -> M?, row: Int? = null, builder: suspend EphemeralChannelSelectMenu<M>.() -> Unit): EphemeralChannelSelectMenu<M>","description":"dev.kordex.core.components.ephemeralChannelSelectMenu","location":"kord-extensions/dev.kordex.core.components/ephemeral-channel-select-menu.html","searchKeys":["ephemeralChannelSelectMenu","suspend fun <M : ModalForm> ComponentContainer.ephemeralChannelSelectMenu(modal: () -> M?, row: Int? = null, builder: suspend EphemeralChannelSelectMenu<M>.() -> Unit): EphemeralChannelSelectMenu<M>","dev.kordex.core.components.ephemeralChannelSelectMenu"]},{"name":"suspend fun <M : ModalForm> ComponentContainer.ephemeralMentionableSelectMenu(modal: () -> M?, row: Int? = null, builder: suspend EphemeralMentionableSelectMenu<M>.() -> Unit): EphemeralMentionableSelectMenu<M>","description":"dev.kordex.core.components.ephemeralMentionableSelectMenu","location":"kord-extensions/dev.kordex.core.components/ephemeral-mentionable-select-menu.html","searchKeys":["ephemeralMentionableSelectMenu","suspend fun <M : ModalForm> ComponentContainer.ephemeralMentionableSelectMenu(modal: () -> M?, row: Int? = null, builder: suspend EphemeralMentionableSelectMenu<M>.() -> Unit): EphemeralMentionableSelectMenu<M>","dev.kordex.core.components.ephemeralMentionableSelectMenu"]},{"name":"suspend fun <M : ModalForm> ComponentContainer.ephemeralRoleSelectMenu(modal: () -> M?, row: Int? = null, builder: suspend EphemeralRoleSelectMenu<M>.() -> Unit): EphemeralRoleSelectMenu<M>","description":"dev.kordex.core.components.ephemeralRoleSelectMenu","location":"kord-extensions/dev.kordex.core.components/ephemeral-role-select-menu.html","searchKeys":["ephemeralRoleSelectMenu","suspend fun <M : ModalForm> ComponentContainer.ephemeralRoleSelectMenu(modal: () -> M?, row: Int? = null, builder: suspend EphemeralRoleSelectMenu<M>.() -> Unit): EphemeralRoleSelectMenu<M>","dev.kordex.core.components.ephemeralRoleSelectMenu"]},{"name":"suspend fun <M : ModalForm> ComponentContainer.ephemeralStringSelectMenu(modal: () -> M?, row: Int? = null, builder: suspend EphemeralStringSelectMenu<M>.() -> Unit): EphemeralStringSelectMenu<M>","description":"dev.kordex.core.components.ephemeralStringSelectMenu","location":"kord-extensions/dev.kordex.core.components/ephemeral-string-select-menu.html","searchKeys":["ephemeralStringSelectMenu","suspend fun <M : ModalForm> ComponentContainer.ephemeralStringSelectMenu(modal: () -> M?, row: Int? = null, builder: suspend EphemeralStringSelectMenu<M>.() -> Unit): EphemeralStringSelectMenu<M>","dev.kordex.core.components.ephemeralStringSelectMenu"]},{"name":"suspend fun <M : ModalForm> ComponentContainer.ephemeralUserSelectMenu(modal: () -> M?, row: Int? = null, builder: suspend EphemeralUserSelectMenu<M>.() -> Unit): EphemeralUserSelectMenu<M>","description":"dev.kordex.core.components.ephemeralUserSelectMenu","location":"kord-extensions/dev.kordex.core.components/ephemeral-user-select-menu.html","searchKeys":["ephemeralUserSelectMenu","suspend fun <M : ModalForm> ComponentContainer.ephemeralUserSelectMenu(modal: () -> M?, row: Int? = null, builder: suspend EphemeralUserSelectMenu<M>.() -> Unit): EphemeralUserSelectMenu<M>","dev.kordex.core.components.ephemeralUserSelectMenu"]},{"name":"suspend fun <M : ModalForm> ComponentContainer.publicButton(modal: () -> M?, row: Int? = null, builder: suspend PublicInteractionButton<M>.() -> Unit): PublicInteractionButton<M>","description":"dev.kordex.core.components.publicButton","location":"kord-extensions/dev.kordex.core.components/public-button.html","searchKeys":["publicButton","suspend fun <M : ModalForm> ComponentContainer.publicButton(modal: () -> M?, row: Int? = null, builder: suspend PublicInteractionButton<M>.() -> Unit): PublicInteractionButton<M>","dev.kordex.core.components.publicButton"]},{"name":"suspend fun <M : ModalForm> ComponentContainer.publicChannelSelectMenu(modal: () -> M?, row: Int? = null, builder: suspend PublicChannelSelectMenu<M>.() -> Unit): PublicChannelSelectMenu<M>","description":"dev.kordex.core.components.publicChannelSelectMenu","location":"kord-extensions/dev.kordex.core.components/public-channel-select-menu.html","searchKeys":["publicChannelSelectMenu","suspend fun <M : ModalForm> ComponentContainer.publicChannelSelectMenu(modal: () -> M?, row: Int? = null, builder: suspend PublicChannelSelectMenu<M>.() -> Unit): PublicChannelSelectMenu<M>","dev.kordex.core.components.publicChannelSelectMenu"]},{"name":"suspend fun <M : ModalForm> ComponentContainer.publicMentionableSelectMenu(modal: () -> M?, row: Int? = null, builder: suspend PublicMentionableSelectMenu<M>.() -> Unit): PublicMentionableSelectMenu<M>","description":"dev.kordex.core.components.publicMentionableSelectMenu","location":"kord-extensions/dev.kordex.core.components/public-mentionable-select-menu.html","searchKeys":["publicMentionableSelectMenu","suspend fun <M : ModalForm> ComponentContainer.publicMentionableSelectMenu(modal: () -> M?, row: Int? = null, builder: suspend PublicMentionableSelectMenu<M>.() -> Unit): PublicMentionableSelectMenu<M>","dev.kordex.core.components.publicMentionableSelectMenu"]},{"name":"suspend fun <M : ModalForm> ComponentContainer.publicRoleSelectMenu(modal: () -> M?, row: Int? = null, builder: suspend PublicRoleSelectMenu<M>.() -> Unit): PublicRoleSelectMenu<M>","description":"dev.kordex.core.components.publicRoleSelectMenu","location":"kord-extensions/dev.kordex.core.components/public-role-select-menu.html","searchKeys":["publicRoleSelectMenu","suspend fun <M : ModalForm> ComponentContainer.publicRoleSelectMenu(modal: () -> M?, row: Int? = null, builder: suspend PublicRoleSelectMenu<M>.() -> Unit): PublicRoleSelectMenu<M>","dev.kordex.core.components.publicRoleSelectMenu"]},{"name":"suspend fun <M : ModalForm> ComponentContainer.publicStringSelectMenu(modal: () -> M?, row: Int? = null, builder: suspend PublicStringSelectMenu<M>.() -> Unit): PublicStringSelectMenu<M>","description":"dev.kordex.core.components.publicStringSelectMenu","location":"kord-extensions/dev.kordex.core.components/public-string-select-menu.html","searchKeys":["publicStringSelectMenu","suspend fun <M : ModalForm> ComponentContainer.publicStringSelectMenu(modal: () -> M?, row: Int? = null, builder: suspend PublicStringSelectMenu<M>.() -> Unit): PublicStringSelectMenu<M>","dev.kordex.core.components.publicStringSelectMenu"]},{"name":"suspend fun <M : ModalForm> ComponentContainer.publicUserSelectMenu(modal: () -> M?, row: Int? = null, builder: suspend PublicUserSelectMenu<M>.() -> Unit): PublicUserSelectMenu<M>","description":"dev.kordex.core.components.publicUserSelectMenu","location":"kord-extensions/dev.kordex.core.components/public-user-select-menu.html","searchKeys":["publicUserSelectMenu","suspend fun <M : ModalForm> ComponentContainer.publicUserSelectMenu(modal: () -> M?, row: Int? = null, builder: suspend PublicUserSelectMenu<M>.() -> Unit): PublicUserSelectMenu<M>","dev.kordex.core.components.publicUserSelectMenu"]},{"name":"suspend fun <M : ModalForm> Extension.ephemeralMessageCommand(commandObj: EphemeralMessageCommand<M>): EphemeralMessageCommand<M>","description":"dev.kordex.core.extensions.ephemeralMessageCommand","location":"kord-extensions/dev.kordex.core.extensions/ephemeral-message-command.html","searchKeys":["ephemeralMessageCommand","suspend fun <M : ModalForm> Extension.ephemeralMessageCommand(commandObj: EphemeralMessageCommand<M>): EphemeralMessageCommand<M>","dev.kordex.core.extensions.ephemeralMessageCommand"]},{"name":"suspend fun <M : ModalForm> Extension.ephemeralMessageCommand(modal: () -> M, body: suspend EphemeralMessageCommand<M>.() -> Unit): EphemeralMessageCommand<M>","description":"dev.kordex.core.extensions.ephemeralMessageCommand","location":"kord-extensions/dev.kordex.core.extensions/ephemeral-message-command.html","searchKeys":["ephemeralMessageCommand","suspend fun <M : ModalForm> Extension.ephemeralMessageCommand(modal: () -> M, body: suspend EphemeralMessageCommand<M>.() -> Unit): EphemeralMessageCommand<M>","dev.kordex.core.extensions.ephemeralMessageCommand"]},{"name":"suspend fun <M : ModalForm> Extension.ephemeralSlashCommand(modal: () -> M, body: suspend EphemeralSlashCommand<Arguments, M>.() -> Unit): EphemeralSlashCommand<Arguments, M>","description":"dev.kordex.core.extensions.ephemeralSlashCommand","location":"kord-extensions/dev.kordex.core.extensions/ephemeral-slash-command.html","searchKeys":["ephemeralSlashCommand","suspend fun <M : ModalForm> Extension.ephemeralSlashCommand(modal: () -> M, body: suspend EphemeralSlashCommand<Arguments, M>.() -> Unit): EphemeralSlashCommand<Arguments, M>","dev.kordex.core.extensions.ephemeralSlashCommand"]},{"name":"suspend fun <M : ModalForm> Extension.ephemeralUserCommand(commandObj: EphemeralUserCommand<M>): EphemeralUserCommand<M>","description":"dev.kordex.core.extensions.ephemeralUserCommand","location":"kord-extensions/dev.kordex.core.extensions/ephemeral-user-command.html","searchKeys":["ephemeralUserCommand","suspend fun <M : ModalForm> Extension.ephemeralUserCommand(commandObj: EphemeralUserCommand<M>): EphemeralUserCommand<M>","dev.kordex.core.extensions.ephemeralUserCommand"]},{"name":"suspend fun <M : ModalForm> Extension.ephemeralUserCommand(modal: () -> M, body: suspend EphemeralUserCommand<M>.() -> Unit): EphemeralUserCommand<M>","description":"dev.kordex.core.extensions.ephemeralUserCommand","location":"kord-extensions/dev.kordex.core.extensions/ephemeral-user-command.html","searchKeys":["ephemeralUserCommand","suspend fun <M : ModalForm> Extension.ephemeralUserCommand(modal: () -> M, body: suspend EphemeralUserCommand<M>.() -> Unit): EphemeralUserCommand<M>","dev.kordex.core.extensions.ephemeralUserCommand"]},{"name":"suspend fun <M : ModalForm> Extension.publicMessageCommand(commandObj: PublicMessageCommand<M>): PublicMessageCommand<M>","description":"dev.kordex.core.extensions.publicMessageCommand","location":"kord-extensions/dev.kordex.core.extensions/public-message-command.html","searchKeys":["publicMessageCommand","suspend fun <M : ModalForm> Extension.publicMessageCommand(commandObj: PublicMessageCommand<M>): PublicMessageCommand<M>","dev.kordex.core.extensions.publicMessageCommand"]},{"name":"suspend fun <M : ModalForm> Extension.publicMessageCommand(modal: () -> M, body: suspend PublicMessageCommand<M>.() -> Unit): PublicMessageCommand<M>","description":"dev.kordex.core.extensions.publicMessageCommand","location":"kord-extensions/dev.kordex.core.extensions/public-message-command.html","searchKeys":["publicMessageCommand","suspend fun <M : ModalForm> Extension.publicMessageCommand(modal: () -> M, body: suspend PublicMessageCommand<M>.() -> Unit): PublicMessageCommand<M>","dev.kordex.core.extensions.publicMessageCommand"]},{"name":"suspend fun <M : ModalForm> Extension.publicSlashCommand(modal: () -> M, body: suspend PublicSlashCommand<Arguments, M>.() -> Unit): PublicSlashCommand<Arguments, M>","description":"dev.kordex.core.extensions.publicSlashCommand","location":"kord-extensions/dev.kordex.core.extensions/public-slash-command.html","searchKeys":["publicSlashCommand","suspend fun <M : ModalForm> Extension.publicSlashCommand(modal: () -> M, body: suspend PublicSlashCommand<Arguments, M>.() -> Unit): PublicSlashCommand<Arguments, M>","dev.kordex.core.extensions.publicSlashCommand"]},{"name":"suspend fun <M : ModalForm> Extension.publicUserCommand(commandObj: PublicUserCommand<M>): PublicUserCommand<M>","description":"dev.kordex.core.extensions.publicUserCommand","location":"kord-extensions/dev.kordex.core.extensions/public-user-command.html","searchKeys":["publicUserCommand","suspend fun <M : ModalForm> Extension.publicUserCommand(commandObj: PublicUserCommand<M>): PublicUserCommand<M>","dev.kordex.core.extensions.publicUserCommand"]},{"name":"suspend fun <M : ModalForm> Extension.publicUserCommand(modal: () -> M, body: suspend PublicUserCommand<M>.() -> Unit): PublicUserCommand<M>","description":"dev.kordex.core.extensions.publicUserCommand","location":"kord-extensions/dev.kordex.core.extensions/public-user-command.html","searchKeys":["publicUserCommand","suspend fun <M : ModalForm> Extension.publicUserCommand(modal: () -> M, body: suspend PublicUserCommand<M>.() -> Unit): PublicUserCommand<M>","dev.kordex.core.extensions.publicUserCommand"]},{"name":"suspend fun <M : ModalForm> SlashCommand<*, *, *>.ephemeralSubCommand(modal: () -> M, body: suspend EphemeralSlashCommand<Arguments, M>.() -> Unit): EphemeralSlashCommand<Arguments, M>","description":"dev.kordex.core.commands.application.slash.ephemeralSubCommand","location":"kord-extensions/dev.kordex.core.commands.application.slash/ephemeral-sub-command.html","searchKeys":["ephemeralSubCommand","suspend fun <M : ModalForm> SlashCommand<*, *, *>.ephemeralSubCommand(modal: () -> M, body: suspend EphemeralSlashCommand<Arguments, M>.() -> Unit): EphemeralSlashCommand<Arguments, M>","dev.kordex.core.commands.application.slash.ephemeralSubCommand"]},{"name":"suspend fun <M : ModalForm> SlashCommand<*, *, *>.publicSubCommand(modal: () -> M, body: suspend PublicSlashCommand<Arguments, M>.() -> Unit): PublicSlashCommand<Arguments, M>","description":"dev.kordex.core.commands.application.slash.publicSubCommand","location":"kord-extensions/dev.kordex.core.commands.application.slash/public-sub-command.html","searchKeys":["publicSubCommand","suspend fun <M : ModalForm> SlashCommand<*, *, *>.publicSubCommand(modal: () -> M, body: suspend PublicSlashCommand<Arguments, M>.() -> Unit): PublicSlashCommand<Arguments, M>","dev.kordex.core.commands.application.slash.publicSubCommand"]},{"name":"suspend fun <M : ModalForm> SlashGroup.ephemeralSubCommand(modal: () -> M, body: suspend EphemeralSlashCommand<Arguments, M>.() -> Unit): EphemeralSlashCommand<Arguments, M>","description":"dev.kordex.core.commands.application.slash.ephemeralSubCommand","location":"kord-extensions/dev.kordex.core.commands.application.slash/ephemeral-sub-command.html","searchKeys":["ephemeralSubCommand","suspend fun <M : ModalForm> SlashGroup.ephemeralSubCommand(modal: () -> M, body: suspend EphemeralSlashCommand<Arguments, M>.() -> Unit): EphemeralSlashCommand<Arguments, M>","dev.kordex.core.commands.application.slash.ephemeralSubCommand"]},{"name":"suspend fun <M : ModalForm> SlashGroup.publicSubCommand(modal: () -> M, body: suspend PublicSlashCommand<Arguments, M>.() -> Unit): PublicSlashCommand<Arguments, M>","description":"dev.kordex.core.commands.application.slash.publicSubCommand","location":"kord-extensions/dev.kordex.core.commands.application.slash/public-sub-command.html","searchKeys":["publicSubCommand","suspend fun <M : ModalForm> SlashGroup.publicSubCommand(modal: () -> M, body: suspend PublicSlashCommand<Arguments, M>.() -> Unit): PublicSlashCommand<Arguments, M>","dev.kordex.core.commands.application.slash.publicSubCommand"]},{"name":"suspend fun <T : Arguments, M : ModalForm> Extension.ephemeralSlashCommand(commandObj: EphemeralSlashCommand<T, M>): EphemeralSlashCommand<T, M>","description":"dev.kordex.core.extensions.ephemeralSlashCommand","location":"kord-extensions/dev.kordex.core.extensions/ephemeral-slash-command.html","searchKeys":["ephemeralSlashCommand","suspend fun <T : Arguments, M : ModalForm> Extension.ephemeralSlashCommand(commandObj: EphemeralSlashCommand<T, M>): EphemeralSlashCommand<T, M>","dev.kordex.core.extensions.ephemeralSlashCommand"]},{"name":"suspend fun <T : Arguments, M : ModalForm> Extension.publicSlashCommand(commandObj: PublicSlashCommand<T, M>): PublicSlashCommand<T, M>","description":"dev.kordex.core.extensions.publicSlashCommand","location":"kord-extensions/dev.kordex.core.extensions/public-slash-command.html","searchKeys":["publicSlashCommand","suspend fun <T : Arguments, M : ModalForm> Extension.publicSlashCommand(commandObj: PublicSlashCommand<T, M>): PublicSlashCommand<T, M>","dev.kordex.core.extensions.publicSlashCommand"]},{"name":"suspend fun <T : Arguments, M : ModalForm> SlashGroup.ephemeralSubCommand(arguments: () -> T, modal: () -> M, body: suspend EphemeralSlashCommand<T, M>.() -> Unit): EphemeralSlashCommand<T, M>","description":"dev.kordex.core.commands.application.slash.ephemeralSubCommand","location":"kord-extensions/dev.kordex.core.commands.application.slash/ephemeral-sub-command.html","searchKeys":["ephemeralSubCommand","suspend fun <T : Arguments, M : ModalForm> SlashGroup.ephemeralSubCommand(arguments: () -> T, modal: () -> M, body: suspend EphemeralSlashCommand<T, M>.() -> Unit): EphemeralSlashCommand<T, M>","dev.kordex.core.commands.application.slash.ephemeralSubCommand"]},{"name":"suspend fun <T : Arguments, M : ModalForm> SlashGroup.publicSubCommand(arguments: () -> T, modal: () -> M, body: suspend PublicSlashCommand<T, M>.() -> Unit): PublicSlashCommand<T, M>","description":"dev.kordex.core.commands.application.slash.publicSubCommand","location":"kord-extensions/dev.kordex.core.commands.application.slash/public-sub-command.html","searchKeys":["publicSubCommand","suspend fun <T : Arguments, M : ModalForm> SlashGroup.publicSubCommand(arguments: () -> T, modal: () -> M, body: suspend PublicSlashCommand<T, M>.() -> Unit): PublicSlashCommand<T, M>","dev.kordex.core.commands.application.slash.publicSubCommand"]},{"name":"suspend fun <T : Arguments> Extension.chatCommand(arguments: () -> T, body: suspend ChatCommand<T>.() -> Unit): ChatCommand<T>","description":"dev.kordex.core.extensions.chatCommand","location":"kord-extensions/dev.kordex.core.extensions/chat-command.html","searchKeys":["chatCommand","suspend fun <T : Arguments> Extension.chatCommand(arguments: () -> T, body: suspend ChatCommand<T>.() -> Unit): ChatCommand<T>","dev.kordex.core.extensions.chatCommand"]},{"name":"suspend fun <T : Arguments> Extension.chatGroupCommand(arguments: () -> T, body: suspend ChatGroupCommand<T>.() -> Unit): ChatGroupCommand<T>","description":"dev.kordex.core.extensions.chatGroupCommand","location":"kord-extensions/dev.kordex.core.extensions/chat-group-command.html","searchKeys":["chatGroupCommand","suspend fun <T : Arguments> Extension.chatGroupCommand(arguments: () -> T, body: suspend ChatGroupCommand<T>.() -> Unit): ChatGroupCommand<T>","dev.kordex.core.extensions.chatGroupCommand"]},{"name":"suspend fun <T : Arguments> Extension.ephemeralSlashCommand(arguments: () -> T, body: suspend EphemeralSlashCommand<T, ModalForm>.() -> Unit): EphemeralSlashCommand<T, ModalForm>","description":"dev.kordex.core.extensions.ephemeralSlashCommand","location":"kord-extensions/dev.kordex.core.extensions/ephemeral-slash-command.html","searchKeys":["ephemeralSlashCommand","suspend fun <T : Arguments> Extension.ephemeralSlashCommand(arguments: () -> T, body: suspend EphemeralSlashCommand<T, ModalForm>.() -> Unit): EphemeralSlashCommand<T, ModalForm>","dev.kordex.core.extensions.ephemeralSlashCommand"]},{"name":"suspend fun <T : Arguments> Extension.publicSlashCommand(arguments: () -> T, body: suspend PublicSlashCommand<T, ModalForm>.() -> Unit): PublicSlashCommand<T, ModalForm>","description":"dev.kordex.core.extensions.publicSlashCommand","location":"kord-extensions/dev.kordex.core.extensions/public-slash-command.html","searchKeys":["publicSlashCommand","suspend fun <T : Arguments> Extension.publicSlashCommand(arguments: () -> T, body: suspend PublicSlashCommand<T, ModalForm>.() -> Unit): PublicSlashCommand<T, ModalForm>","dev.kordex.core.extensions.publicSlashCommand"]},{"name":"suspend fun <T : Arguments> SlashCommand<*, *, *>.ephemeralSubCommand(arguments: () -> T, body: suspend EphemeralSlashCommand<T, ModalForm>.() -> Unit): EphemeralSlashCommand<T, ModalForm>","description":"dev.kordex.core.commands.application.slash.ephemeralSubCommand","location":"kord-extensions/dev.kordex.core.commands.application.slash/ephemeral-sub-command.html","searchKeys":["ephemeralSubCommand","suspend fun <T : Arguments> SlashCommand<*, *, *>.ephemeralSubCommand(arguments: () -> T, body: suspend EphemeralSlashCommand<T, ModalForm>.() -> Unit): EphemeralSlashCommand<T, ModalForm>","dev.kordex.core.commands.application.slash.ephemeralSubCommand"]},{"name":"suspend fun <T : Arguments> SlashCommand<*, *, *>.publicSubCommand(arguments: () -> T, body: suspend PublicSlashCommand<T, ModalForm>.() -> Unit): PublicSlashCommand<T, ModalForm>","description":"dev.kordex.core.commands.application.slash.publicSubCommand","location":"kord-extensions/dev.kordex.core.commands.application.slash/public-sub-command.html","searchKeys":["publicSubCommand","suspend fun <T : Arguments> SlashCommand<*, *, *>.publicSubCommand(arguments: () -> T, body: suspend PublicSlashCommand<T, ModalForm>.() -> Unit): PublicSlashCommand<T, ModalForm>","dev.kordex.core.commands.application.slash.publicSubCommand"]},{"name":"suspend fun <T : Arguments> SlashGroup.ephemeralSubCommand(arguments: () -> T, body: suspend EphemeralSlashCommand<T, ModalForm>.() -> Unit): EphemeralSlashCommand<T, ModalForm>","description":"dev.kordex.core.commands.application.slash.ephemeralSubCommand","location":"kord-extensions/dev.kordex.core.commands.application.slash/ephemeral-sub-command.html","searchKeys":["ephemeralSubCommand","suspend fun <T : Arguments> SlashGroup.ephemeralSubCommand(arguments: () -> T, body: suspend EphemeralSlashCommand<T, ModalForm>.() -> Unit): EphemeralSlashCommand<T, ModalForm>","dev.kordex.core.commands.application.slash.ephemeralSubCommand"]},{"name":"suspend fun <T : Arguments> SlashGroup.publicSubCommand(arguments: () -> T, body: suspend PublicSlashCommand<T, ModalForm>.() -> Unit): PublicSlashCommand<T, ModalForm>","description":"dev.kordex.core.commands.application.slash.publicSubCommand","location":"kord-extensions/dev.kordex.core.commands.application.slash/public-sub-command.html","searchKeys":["publicSubCommand","suspend fun <T : Arguments> SlashGroup.publicSubCommand(arguments: () -> T, body: suspend PublicSlashCommand<T, ModalForm>.() -> Unit): PublicSlashCommand<T, ModalForm>","dev.kordex.core.commands.application.slash.publicSubCommand"]},{"name":"suspend fun <T : Arguments> parse(builder: () -> T, context: SlashCommandContext<*, *, *>): T","description":"dev.kordex.core.commands.application.slash.SlashCommandParser.parse","location":"kord-extensions/dev.kordex.core.commands.application.slash/-slash-command-parser/parse.html","searchKeys":["parse","suspend fun <T : Arguments> parse(builder: () -> T, context: SlashCommandContext<*, *, *>): T","dev.kordex.core.commands.application.slash.SlashCommandParser.parse"]},{"name":"suspend fun <T : Event> CheckContext<T>.channelAbove(builder: suspend (T) -> GuildChannelBehavior)","description":"dev.kordex.core.checks.channelAbove","location":"kord-extensions/dev.kordex.core.checks/channel-above.html","searchKeys":["channelAbove","suspend fun <T : Event> CheckContext<T>.channelAbove(builder: suspend (T) -> GuildChannelBehavior)","dev.kordex.core.checks.channelAbove"]},{"name":"suspend fun <T : Event> CheckContext<T>.channelBelow(builder: suspend (T) -> GuildChannelBehavior)","description":"dev.kordex.core.checks.channelBelow","location":"kord-extensions/dev.kordex.core.checks/channel-below.html","searchKeys":["channelBelow","suspend fun <T : Event> CheckContext<T>.channelBelow(builder: suspend (T) -> GuildChannelBehavior)","dev.kordex.core.checks.channelBelow"]},{"name":"suspend fun <T : Event> CheckContext<T>.channelHigherThan(id: Snowflake)","description":"dev.kordex.core.checks.channelHigherThan","location":"kord-extensions/dev.kordex.core.checks/channel-higher-than.html","searchKeys":["channelHigherThan","suspend fun <T : Event> CheckContext<T>.channelHigherThan(id: Snowflake)","dev.kordex.core.checks.channelHigherThan"]},{"name":"suspend fun <T : Event> CheckContext<T>.channelLowerThan(id: Snowflake)","description":"dev.kordex.core.checks.channelLowerThan","location":"kord-extensions/dev.kordex.core.checks/channel-lower-than.html","searchKeys":["channelLowerThan","suspend fun <T : Event> CheckContext<T>.channelLowerThan(id: Snowflake)","dev.kordex.core.checks.channelLowerThan"]},{"name":"suspend fun <T : Event> CheckContext<T>.hasRole(builder: suspend (T) -> RoleBehavior)","description":"dev.kordex.core.checks.hasRole","location":"kord-extensions/dev.kordex.core.checks/has-role.html","searchKeys":["hasRole","suspend fun <T : Event> CheckContext<T>.hasRole(builder: suspend (T) -> RoleBehavior)","dev.kordex.core.checks.hasRole"]},{"name":"suspend fun <T : Event> CheckContext<T>.hasRole(id: Snowflake)","description":"dev.kordex.core.checks.hasRole","location":"kord-extensions/dev.kordex.core.checks/has-role.html","searchKeys":["hasRole","suspend fun <T : Event> CheckContext<T>.hasRole(id: Snowflake)","dev.kordex.core.checks.hasRole"]},{"name":"suspend fun <T : Event> CheckContext<T>.inCategory(builder: suspend (T) -> CategoryBehavior)","description":"dev.kordex.core.checks.inCategory","location":"kord-extensions/dev.kordex.core.checks/in-category.html","searchKeys":["inCategory","suspend fun <T : Event> CheckContext<T>.inCategory(builder: suspend (T) -> CategoryBehavior)","dev.kordex.core.checks.inCategory"]},{"name":"suspend fun <T : Event> CheckContext<T>.inCategory(id: Snowflake)","description":"dev.kordex.core.checks.inCategory","location":"kord-extensions/dev.kordex.core.checks/in-category.html","searchKeys":["inCategory","suspend fun <T : Event> CheckContext<T>.inCategory(id: Snowflake)","dev.kordex.core.checks.inCategory"]},{"name":"suspend fun <T : Event> CheckContext<T>.inChannel(builder: suspend (T) -> ChannelBehavior)","description":"dev.kordex.core.checks.inChannel","location":"kord-extensions/dev.kordex.core.checks/in-channel.html","searchKeys":["inChannel","suspend fun <T : Event> CheckContext<T>.inChannel(builder: suspend (T) -> ChannelBehavior)","dev.kordex.core.checks.inChannel"]},{"name":"suspend fun <T : Event> CheckContext<T>.inChannel(id: Snowflake)","description":"dev.kordex.core.checks.inChannel","location":"kord-extensions/dev.kordex.core.checks/in-channel.html","searchKeys":["inChannel","suspend fun <T : Event> CheckContext<T>.inChannel(id: Snowflake)","dev.kordex.core.checks.inChannel"]},{"name":"suspend fun <T : Event> CheckContext<T>.inGuild(builder: suspend (T) -> GuildBehavior)","description":"dev.kordex.core.checks.inGuild","location":"kord-extensions/dev.kordex.core.checks/in-guild.html","searchKeys":["inGuild","suspend fun <T : Event> CheckContext<T>.inGuild(builder: suspend (T) -> GuildBehavior)","dev.kordex.core.checks.inGuild"]},{"name":"suspend fun <T : Event> CheckContext<T>.inGuild(id: Snowflake)","description":"dev.kordex.core.checks.inGuild","location":"kord-extensions/dev.kordex.core.checks/in-guild.html","searchKeys":["inGuild","suspend fun <T : Event> CheckContext<T>.inGuild(id: Snowflake)","dev.kordex.core.checks.inGuild"]},{"name":"suspend fun <T : Event> CheckContext<T>.inTopChannel(builder: suspend (T) -> ChannelBehavior)","description":"dev.kordex.core.checks.inTopChannel","location":"kord-extensions/dev.kordex.core.checks/in-top-channel.html","searchKeys":["inTopChannel","suspend fun <T : Event> CheckContext<T>.inTopChannel(builder: suspend (T) -> ChannelBehavior)","dev.kordex.core.checks.inTopChannel"]},{"name":"suspend fun <T : Event> CheckContext<T>.inTopChannel(id: Snowflake)","description":"dev.kordex.core.checks.inTopChannel","location":"kord-extensions/dev.kordex.core.checks/in-top-channel.html","searchKeys":["inTopChannel","suspend fun <T : Event> CheckContext<T>.inTopChannel(id: Snowflake)","dev.kordex.core.checks.inTopChannel"]},{"name":"suspend fun <T : Event> CheckContext<T>.notHasRole(builder: suspend (T) -> RoleBehavior)","description":"dev.kordex.core.checks.notHasRole","location":"kord-extensions/dev.kordex.core.checks/not-has-role.html","searchKeys":["notHasRole","suspend fun <T : Event> CheckContext<T>.notHasRole(builder: suspend (T) -> RoleBehavior)","dev.kordex.core.checks.notHasRole"]},{"name":"suspend fun <T : Event> CheckContext<T>.notHasRole(id: Snowflake)","description":"dev.kordex.core.checks.notHasRole","location":"kord-extensions/dev.kordex.core.checks/not-has-role.html","searchKeys":["notHasRole","suspend fun <T : Event> CheckContext<T>.notHasRole(id: Snowflake)","dev.kordex.core.checks.notHasRole"]},{"name":"suspend fun <T : Event> CheckContext<T>.notInCategory(builder: suspend (T) -> CategoryBehavior)","description":"dev.kordex.core.checks.notInCategory","location":"kord-extensions/dev.kordex.core.checks/not-in-category.html","searchKeys":["notInCategory","suspend fun <T : Event> CheckContext<T>.notInCategory(builder: suspend (T) -> CategoryBehavior)","dev.kordex.core.checks.notInCategory"]},{"name":"suspend fun <T : Event> CheckContext<T>.notInCategory(id: Snowflake)","description":"dev.kordex.core.checks.notInCategory","location":"kord-extensions/dev.kordex.core.checks/not-in-category.html","searchKeys":["notInCategory","suspend fun <T : Event> CheckContext<T>.notInCategory(id: Snowflake)","dev.kordex.core.checks.notInCategory"]},{"name":"suspend fun <T : Event> CheckContext<T>.notInChannel(builder: suspend (T) -> ChannelBehavior)","description":"dev.kordex.core.checks.notInChannel","location":"kord-extensions/dev.kordex.core.checks/not-in-channel.html","searchKeys":["notInChannel","suspend fun <T : Event> CheckContext<T>.notInChannel(builder: suspend (T) -> ChannelBehavior)","dev.kordex.core.checks.notInChannel"]},{"name":"suspend fun <T : Event> CheckContext<T>.notInChannel(id: Snowflake)","description":"dev.kordex.core.checks.notInChannel","location":"kord-extensions/dev.kordex.core.checks/not-in-channel.html","searchKeys":["notInChannel","suspend fun <T : Event> CheckContext<T>.notInChannel(id: Snowflake)","dev.kordex.core.checks.notInChannel"]},{"name":"suspend fun <T : Event> CheckContext<T>.notInGuild(builder: suspend (T) -> GuildBehavior)","description":"dev.kordex.core.checks.notInGuild","location":"kord-extensions/dev.kordex.core.checks/not-in-guild.html","searchKeys":["notInGuild","suspend fun <T : Event> CheckContext<T>.notInGuild(builder: suspend (T) -> GuildBehavior)","dev.kordex.core.checks.notInGuild"]},{"name":"suspend fun <T : Event> CheckContext<T>.notInGuild(id: Snowflake)","description":"dev.kordex.core.checks.notInGuild","location":"kord-extensions/dev.kordex.core.checks/not-in-guild.html","searchKeys":["notInGuild","suspend fun <T : Event> CheckContext<T>.notInGuild(id: Snowflake)","dev.kordex.core.checks.notInGuild"]},{"name":"suspend fun <T : Event> CheckContext<T>.notInTopChannel(builder: suspend (T) -> ChannelBehavior)","description":"dev.kordex.core.checks.notInTopChannel","location":"kord-extensions/dev.kordex.core.checks/not-in-top-channel.html","searchKeys":["notInTopChannel","suspend fun <T : Event> CheckContext<T>.notInTopChannel(builder: suspend (T) -> ChannelBehavior)","dev.kordex.core.checks.notInTopChannel"]},{"name":"suspend fun <T : Event> CheckContext<T>.notInTopChannel(id: Snowflake)","description":"dev.kordex.core.checks.notInTopChannel","location":"kord-extensions/dev.kordex.core.checks/not-in-top-channel.html","searchKeys":["notInTopChannel","suspend fun <T : Event> CheckContext<T>.notInTopChannel(id: Snowflake)","dev.kordex.core.checks.notInTopChannel"]},{"name":"suspend fun <T : Event> CheckContext<T>.or(body: Check<T>)","description":"dev.kordex.core.checks.or","location":"kord-extensions/dev.kordex.core.checks/or.html","searchKeys":["or","suspend fun <T : Event> CheckContext<T>.or(body: Check<T>)","dev.kordex.core.checks.or"]},{"name":"suspend fun <T : Event> CheckContext<T>.topRoleEqual(builder: suspend (T) -> RoleBehavior)","description":"dev.kordex.core.checks.topRoleEqual","location":"kord-extensions/dev.kordex.core.checks/top-role-equal.html","searchKeys":["topRoleEqual","suspend fun <T : Event> CheckContext<T>.topRoleEqual(builder: suspend (T) -> RoleBehavior)","dev.kordex.core.checks.topRoleEqual"]},{"name":"suspend fun <T : Event> CheckContext<T>.topRoleEqual(id: Snowflake)","description":"dev.kordex.core.checks.topRoleEqual","location":"kord-extensions/dev.kordex.core.checks/top-role-equal.html","searchKeys":["topRoleEqual","suspend fun <T : Event> CheckContext<T>.topRoleEqual(id: Snowflake)","dev.kordex.core.checks.topRoleEqual"]},{"name":"suspend fun <T : Event> CheckContext<T>.topRoleHigher(builder: suspend (T) -> RoleBehavior)","description":"dev.kordex.core.checks.topRoleHigher","location":"kord-extensions/dev.kordex.core.checks/top-role-higher.html","searchKeys":["topRoleHigher","suspend fun <T : Event> CheckContext<T>.topRoleHigher(builder: suspend (T) -> RoleBehavior)","dev.kordex.core.checks.topRoleHigher"]},{"name":"suspend fun <T : Event> CheckContext<T>.topRoleHigher(id: Snowflake)","description":"dev.kordex.core.checks.topRoleHigher","location":"kord-extensions/dev.kordex.core.checks/top-role-higher.html","searchKeys":["topRoleHigher","suspend fun <T : Event> CheckContext<T>.topRoleHigher(id: Snowflake)","dev.kordex.core.checks.topRoleHigher"]},{"name":"suspend fun <T : Event> CheckContext<T>.topRoleHigherOrEqual(builder: suspend (T) -> RoleBehavior)","description":"dev.kordex.core.checks.topRoleHigherOrEqual","location":"kord-extensions/dev.kordex.core.checks/top-role-higher-or-equal.html","searchKeys":["topRoleHigherOrEqual","suspend fun <T : Event> CheckContext<T>.topRoleHigherOrEqual(builder: suspend (T) -> RoleBehavior)","dev.kordex.core.checks.topRoleHigherOrEqual"]},{"name":"suspend fun <T : Event> CheckContext<T>.topRoleHigherOrEqual(id: Snowflake)","description":"dev.kordex.core.checks.topRoleHigherOrEqual","location":"kord-extensions/dev.kordex.core.checks/top-role-higher-or-equal.html","searchKeys":["topRoleHigherOrEqual","suspend fun <T : Event> CheckContext<T>.topRoleHigherOrEqual(id: Snowflake)","dev.kordex.core.checks.topRoleHigherOrEqual"]},{"name":"suspend fun <T : Event> CheckContext<T>.topRoleLower(builder: suspend (T) -> RoleBehavior)","description":"dev.kordex.core.checks.topRoleLower","location":"kord-extensions/dev.kordex.core.checks/top-role-lower.html","searchKeys":["topRoleLower","suspend fun <T : Event> CheckContext<T>.topRoleLower(builder: suspend (T) -> RoleBehavior)","dev.kordex.core.checks.topRoleLower"]},{"name":"suspend fun <T : Event> CheckContext<T>.topRoleLower(id: Snowflake)","description":"dev.kordex.core.checks.topRoleLower","location":"kord-extensions/dev.kordex.core.checks/top-role-lower.html","searchKeys":["topRoleLower","suspend fun <T : Event> CheckContext<T>.topRoleLower(id: Snowflake)","dev.kordex.core.checks.topRoleLower"]},{"name":"suspend fun <T : Event> CheckContext<T>.topRoleLowerOrEqual(builder: suspend (T) -> RoleBehavior)","description":"dev.kordex.core.checks.topRoleLowerOrEqual","location":"kord-extensions/dev.kordex.core.checks/top-role-lower-or-equal.html","searchKeys":["topRoleLowerOrEqual","suspend fun <T : Event> CheckContext<T>.topRoleLowerOrEqual(builder: suspend (T) -> RoleBehavior)","dev.kordex.core.checks.topRoleLowerOrEqual"]},{"name":"suspend fun <T : Event> CheckContext<T>.topRoleLowerOrEqual(id: Snowflake)","description":"dev.kordex.core.checks.topRoleLowerOrEqual","location":"kord-extensions/dev.kordex.core.checks/top-role-lower-or-equal.html","searchKeys":["topRoleLowerOrEqual","suspend fun <T : Event> CheckContext<T>.topRoleLowerOrEqual(id: Snowflake)","dev.kordex.core.checks.topRoleLowerOrEqual"]},{"name":"suspend fun <T : Event> CheckContext<T>.topRoleNotEqual(builder: suspend (T) -> RoleBehavior)","description":"dev.kordex.core.checks.topRoleNotEqual","location":"kord-extensions/dev.kordex.core.checks/top-role-not-equal.html","searchKeys":["topRoleNotEqual","suspend fun <T : Event> CheckContext<T>.topRoleNotEqual(builder: suspend (T) -> RoleBehavior)","dev.kordex.core.checks.topRoleNotEqual"]},{"name":"suspend fun <T : Event> CheckContext<T>.topRoleNotEqual(id: Snowflake)","description":"dev.kordex.core.checks.topRoleNotEqual","location":"kord-extensions/dev.kordex.core.checks/top-role-not-equal.html","searchKeys":["topRoleNotEqual","suspend fun <T : Event> CheckContext<T>.topRoleNotEqual(id: Snowflake)","dev.kordex.core.checks.topRoleNotEqual"]},{"name":"suspend fun <T, E : InteractionCreateEvent> sendAndAwait(context: EventContext<E>, callback: suspend (ModalSubmitInteraction?) -> T): T","description":"dev.kordex.core.components.forms.ModalForm.sendAndAwait","location":"kord-extensions/dev.kordex.core.components.forms/-modal-form/send-and-await.html","searchKeys":["sendAndAwait","suspend fun <T, E : InteractionCreateEvent> sendAndAwait(context: EventContext<E>, callback: suspend (ModalSubmitInteraction?) -> T): T","dev.kordex.core.components.forms.ModalForm.sendAndAwait"]},{"name":"suspend fun <T> awaitCompletion(callback: suspend (ModalSubmitInteraction?) -> T): T","description":"dev.kordex.core.components.forms.ModalForm.awaitCompletion","location":"kord-extensions/dev.kordex.core.components.forms/-modal-form/await-completion.html","searchKeys":["awaitCompletion","suspend fun <T> awaitCompletion(callback: suspend (ModalSubmitInteraction?) -> T): T","dev.kordex.core.components.forms.ModalForm.awaitCompletion"]},{"name":"suspend fun <T> runSuspended(dispatcher: CoroutineDispatcher = Dispatchers.IO, body: suspend CoroutineScope.() -> T): T","description":"dev.kordex.core.utils.runSuspended","location":"kord-extensions/dev.kordex.core.utils/run-suspended.html","searchKeys":["runSuspended","suspend fun <T> runSuspended(dispatcher: CoroutineDispatcher = Dispatchers.IO, body: suspend CoroutineScope.() -> T): T","dev.kordex.core.utils.runSuspended"]},{"name":"suspend fun <T> sendAndAwait(context: ApplicationCommandContext, callback: suspend (ModalSubmitInteraction?) -> T): T","description":"dev.kordex.core.components.forms.ModalForm.sendAndAwait","location":"kord-extensions/dev.kordex.core.components.forms/-modal-form/send-and-await.html","searchKeys":["sendAndAwait","suspend fun <T> sendAndAwait(context: ApplicationCommandContext, callback: suspend (ModalSubmitInteraction?) -> T): T","dev.kordex.core.components.forms.ModalForm.sendAndAwait"]},{"name":"suspend fun <T> sendAndAwait(context: ComponentContext<*>, callback: suspend (ModalSubmitInteraction?) -> T): T","description":"dev.kordex.core.components.forms.ModalForm.sendAndAwait","location":"kord-extensions/dev.kordex.core.components.forms/-modal-form/send-and-await.html","searchKeys":["sendAndAwait","suspend fun <T> sendAndAwait(context: ComponentContext<*>, callback: suspend (ModalSubmitInteraction?) -> T): T","dev.kordex.core.components.forms.ModalForm.sendAndAwait"]},{"name":"suspend fun <T> sendAndAwait(locale: Locale, interaction: ModalParentInteractionBehavior, callback: suspend (ModalSubmitInteraction?) -> T): T","description":"dev.kordex.core.components.forms.ModalForm.sendAndAwait","location":"kord-extensions/dev.kordex.core.components.forms/-modal-form/send-and-await.html","searchKeys":["sendAndAwait","suspend fun <T> sendAndAwait(locale: Locale, interaction: ModalParentInteractionBehavior, callback: suspend (ModalSubmitInteraction?) -> T): T","dev.kordex.core.components.forms.ModalForm.sendAndAwait"]},{"name":"suspend fun Attachment.download(): ByteArray","description":"dev.kordex.core.utils.download","location":"kord-extensions/dev.kordex.core.utils/download.html","searchKeys":["download","suspend fun Attachment.download(): ByteArray","dev.kordex.core.utils.download"]},{"name":"suspend fun Attachment.downloadToFile(file: File): Path","description":"dev.kordex.core.utils.downloadToFile","location":"kord-extensions/dev.kordex.core.utils/download-to-file.html","searchKeys":["downloadToFile","suspend fun Attachment.downloadToFile(file: File): Path","dev.kordex.core.utils.downloadToFile"]},{"name":"suspend fun Attachment.downloadToFile(path: Path): Path","description":"dev.kordex.core.utils.downloadToFile","location":"kord-extensions/dev.kordex.core.utils/download-to-file.html","searchKeys":["downloadToFile","suspend fun Attachment.downloadToFile(path: Path): Path","dev.kordex.core.utils.downloadToFile"]},{"name":"suspend fun Attachment.downloadToFile(path: String): Path","description":"dev.kordex.core.utils.downloadToFile","location":"kord-extensions/dev.kordex.core.utils/download-to-file.html","searchKeys":["downloadToFile","suspend fun Attachment.downloadToFile(path: String): Path","dev.kordex.core.utils.downloadToFile"]},{"name":"suspend fun Attachment.downloadToFolder(file: File): Path","description":"dev.kordex.core.utils.downloadToFolder","location":"kord-extensions/dev.kordex.core.utils/download-to-folder.html","searchKeys":["downloadToFolder","suspend fun Attachment.downloadToFolder(file: File): Path","dev.kordex.core.utils.downloadToFolder"]},{"name":"suspend fun Attachment.downloadToFolder(path: Path): Path","description":"dev.kordex.core.utils.downloadToFolder","location":"kord-extensions/dev.kordex.core.utils/download-to-folder.html","searchKeys":["downloadToFolder","suspend fun Attachment.downloadToFolder(path: Path): Path","dev.kordex.core.utils.downloadToFolder"]},{"name":"suspend fun Attachment.downloadToFolder(path: String): Path","description":"dev.kordex.core.utils.downloadToFolder","location":"kord-extensions/dev.kordex.core.utils/download-to-folder.html","searchKeys":["downloadToFolder","suspend fun Attachment.downloadToFolder(path: String): Path","dev.kordex.core.utils.downloadToFolder"]},{"name":"suspend fun ChannelType.translate(context: CommandContext): String","description":"dev.kordex.core.utils.translate","location":"kord-extensions/dev.kordex.core.utils/translate.html","searchKeys":["translate","suspend fun ChannelType.translate(context: CommandContext): String","dev.kordex.core.utils.translate"]},{"name":"suspend fun CheckContext<*>.anyGuild()","description":"dev.kordex.core.checks.anyGuild","location":"kord-extensions/dev.kordex.core.checks/any-guild.html","searchKeys":["anyGuild","suspend fun CheckContext<*>.anyGuild()","dev.kordex.core.checks.anyGuild"]},{"name":"suspend fun CheckContext<*>.channelIsNsfw()","description":"dev.kordex.core.checks.channelIsNsfw","location":"kord-extensions/dev.kordex.core.checks/channel-is-nsfw.html","searchKeys":["channelIsNsfw","suspend fun CheckContext<*>.channelIsNsfw()","dev.kordex.core.checks.channelIsNsfw"]},{"name":"suspend fun CheckContext<*>.channelOrGuildIsNsfw()","description":"dev.kordex.core.checks.channelOrGuildIsNsfw","location":"kord-extensions/dev.kordex.core.checks/channel-or-guild-is-nsfw.html","searchKeys":["channelOrGuildIsNsfw","suspend fun CheckContext<*>.channelOrGuildIsNsfw()","dev.kordex.core.checks.channelOrGuildIsNsfw"]},{"name":"suspend fun CheckContext<*>.channelType(vararg channelTypes: ChannelType)","description":"dev.kordex.core.checks.channelType","location":"kord-extensions/dev.kordex.core.checks/channel-type.html","searchKeys":["channelType","suspend fun CheckContext<*>.channelType(vararg channelTypes: ChannelType)","dev.kordex.core.checks.channelType"]},{"name":"suspend fun CheckContext<*>.guildNsfwLevelHigher(level: NsfwLevel)","description":"dev.kordex.core.checks.guildNsfwLevelHigher","location":"kord-extensions/dev.kordex.core.checks/guild-nsfw-level-higher.html","searchKeys":["guildNsfwLevelHigher","suspend fun CheckContext<*>.guildNsfwLevelHigher(level: NsfwLevel)","dev.kordex.core.checks.guildNsfwLevelHigher"]},{"name":"suspend fun CheckContext<*>.guildNsfwLevelHigherOrEqual(level: NsfwLevel)","description":"dev.kordex.core.checks.guildNsfwLevelHigherOrEqual","location":"kord-extensions/dev.kordex.core.checks/guild-nsfw-level-higher-or-equal.html","searchKeys":["guildNsfwLevelHigherOrEqual","suspend fun CheckContext<*>.guildNsfwLevelHigherOrEqual(level: NsfwLevel)","dev.kordex.core.checks.guildNsfwLevelHigherOrEqual"]},{"name":"suspend fun CheckContext<*>.guildNsfwLevelLower(level: NsfwLevel)","description":"dev.kordex.core.checks.guildNsfwLevelLower","location":"kord-extensions/dev.kordex.core.checks/guild-nsfw-level-lower.html","searchKeys":["guildNsfwLevelLower","suspend fun CheckContext<*>.guildNsfwLevelLower(level: NsfwLevel)","dev.kordex.core.checks.guildNsfwLevelLower"]},{"name":"suspend fun CheckContext<*>.guildNsfwLevelLowerOrEqual(level: NsfwLevel)","description":"dev.kordex.core.checks.guildNsfwLevelLowerOrEqual","location":"kord-extensions/dev.kordex.core.checks/guild-nsfw-level-lower-or-equal.html","searchKeys":["guildNsfwLevelLowerOrEqual","suspend fun CheckContext<*>.guildNsfwLevelLowerOrEqual(level: NsfwLevel)","dev.kordex.core.checks.guildNsfwLevelLowerOrEqual"]},{"name":"suspend fun CheckContext<*>.hasGuildNsfwLevel(level: NsfwLevel)","description":"dev.kordex.core.checks.hasGuildNsfwLevel","location":"kord-extensions/dev.kordex.core.checks/has-guild-nsfw-level.html","searchKeys":["hasGuildNsfwLevel","suspend fun CheckContext<*>.hasGuildNsfwLevel(level: NsfwLevel)","dev.kordex.core.checks.hasGuildNsfwLevel"]},{"name":"suspend fun CheckContext<*>.hasPermission(perm: Permission)","description":"dev.kordex.core.checks.hasPermission","location":"kord-extensions/dev.kordex.core.checks/has-permission.html","searchKeys":["hasPermission","suspend fun CheckContext<*>.hasPermission(perm: Permission)","dev.kordex.core.checks.hasPermission"]},{"name":"suspend fun CheckContext<*>.hasPermissions(perms: Permissions)","description":"dev.kordex.core.checks.hasPermissions","location":"kord-extensions/dev.kordex.core.checks/has-permissions.html","searchKeys":["hasPermissions","suspend fun CheckContext<*>.hasPermissions(perms: Permissions)","dev.kordex.core.checks.hasPermissions"]},{"name":"suspend fun CheckContext<*>.isBot()","description":"dev.kordex.core.checks.isBot","location":"kord-extensions/dev.kordex.core.checks/is-bot.html","searchKeys":["isBot","suspend fun CheckContext<*>.isBot()","dev.kordex.core.checks.isBot"]},{"name":"suspend fun CheckContext<*>.isBotAdmin()","description":"dev.kordex.core.checks.isBotAdmin","location":"kord-extensions/dev.kordex.core.checks/is-bot-admin.html","searchKeys":["isBotAdmin","suspend fun CheckContext<*>.isBotAdmin()","dev.kordex.core.checks.isBotAdmin"]},{"name":"suspend fun CheckContext<*>.isBotOwner()","description":"dev.kordex.core.checks.isBotOwner","location":"kord-extensions/dev.kordex.core.checks/is-bot-owner.html","searchKeys":["isBotOwner","suspend fun CheckContext<*>.isBotOwner()","dev.kordex.core.checks.isBotOwner"]},{"name":"suspend fun CheckContext<*>.isInThread()","description":"dev.kordex.core.checks.isInThread","location":"kord-extensions/dev.kordex.core.checks/is-in-thread.html","searchKeys":["isInThread","suspend fun CheckContext<*>.isInThread()","dev.kordex.core.checks.isInThread"]},{"name":"suspend fun CheckContext<*>.isNotBot()","description":"dev.kordex.core.checks.isNotBot","location":"kord-extensions/dev.kordex.core.checks/is-not-bot.html","searchKeys":["isNotBot","suspend fun CheckContext<*>.isNotBot()","dev.kordex.core.checks.isNotBot"]},{"name":"suspend fun CheckContext<*>.isNotBotAdmin()","description":"dev.kordex.core.checks.isNotBotAdmin","location":"kord-extensions/dev.kordex.core.checks/is-not-bot-admin.html","searchKeys":["isNotBotAdmin","suspend fun CheckContext<*>.isNotBotAdmin()","dev.kordex.core.checks.isNotBotAdmin"]},{"name":"suspend fun CheckContext<*>.isNotBotOwner()","description":"dev.kordex.core.checks.isNotBotOwner","location":"kord-extensions/dev.kordex.core.checks/is-not-bot-owner.html","searchKeys":["isNotBotOwner","suspend fun CheckContext<*>.isNotBotOwner()","dev.kordex.core.checks.isNotBotOwner"]},{"name":"suspend fun CheckContext<*>.isNotInThread()","description":"dev.kordex.core.checks.isNotInThread","location":"kord-extensions/dev.kordex.core.checks/is-not-in-thread.html","searchKeys":["isNotInThread","suspend fun CheckContext<*>.isNotInThread()","dev.kordex.core.checks.isNotInThread"]},{"name":"suspend fun CheckContext<*>.noGuild()","description":"dev.kordex.core.checks.noGuild","location":"kord-extensions/dev.kordex.core.checks/no-guild.html","searchKeys":["noGuild","suspend fun CheckContext<*>.noGuild()","dev.kordex.core.checks.noGuild"]},{"name":"suspend fun CheckContext<*>.notChannelIsNsfw()","description":"dev.kordex.core.checks.notChannelIsNsfw","location":"kord-extensions/dev.kordex.core.checks/not-channel-is-nsfw.html","searchKeys":["notChannelIsNsfw","suspend fun CheckContext<*>.notChannelIsNsfw()","dev.kordex.core.checks.notChannelIsNsfw"]},{"name":"suspend fun CheckContext<*>.notChannelOrGuildIsNsfw()","description":"dev.kordex.core.checks.notChannelOrGuildIsNsfw","location":"kord-extensions/dev.kordex.core.checks/not-channel-or-guild-is-nsfw.html","searchKeys":["notChannelOrGuildIsNsfw","suspend fun CheckContext<*>.notChannelOrGuildIsNsfw()","dev.kordex.core.checks.notChannelOrGuildIsNsfw"]},{"name":"suspend fun CheckContext<*>.notChannelType(vararg channelTypes: ChannelType)","description":"dev.kordex.core.checks.notChannelType","location":"kord-extensions/dev.kordex.core.checks/not-channel-type.html","searchKeys":["notChannelType","suspend fun CheckContext<*>.notChannelType(vararg channelTypes: ChannelType)","dev.kordex.core.checks.notChannelType"]},{"name":"suspend fun CheckContext<*>.notHasGuildNsfwLevel(level: NsfwLevel)","description":"dev.kordex.core.checks.notHasGuildNsfwLevel","location":"kord-extensions/dev.kordex.core.checks/not-has-guild-nsfw-level.html","searchKeys":["notHasGuildNsfwLevel","suspend fun CheckContext<*>.notHasGuildNsfwLevel(level: NsfwLevel)","dev.kordex.core.checks.notHasGuildNsfwLevel"]},{"name":"suspend fun CheckContext<*>.notHasPermission(perm: Permission)","description":"dev.kordex.core.checks.notHasPermission","location":"kord-extensions/dev.kordex.core.checks/not-has-permission.html","searchKeys":["notHasPermission","suspend fun CheckContext<*>.notHasPermission(perm: Permission)","dev.kordex.core.checks.notHasPermission"]},{"name":"suspend fun CheckContext<*>.notHasPermissions(perms: Permissions)","description":"dev.kordex.core.checks.notHasPermissions","location":"kord-extensions/dev.kordex.core.checks/not-has-permissions.html","searchKeys":["notHasPermissions","suspend fun CheckContext<*>.notHasPermissions(perms: Permissions)","dev.kordex.core.checks.notHasPermissions"]},{"name":"suspend fun CommandContext.waitForResponse(timeout: Long, filter: suspend MessageCreateEvent.() -> Boolean = { true }): Message?","description":"dev.kordex.core.utils.waitForResponse","location":"kord-extensions/dev.kordex.core.utils/wait-for-response.html","searchKeys":["waitForResponse","suspend fun CommandContext.waitForResponse(timeout: Long, filter: suspend MessageCreateEvent.() -> Boolean = { true }): Message?","dev.kordex.core.utils.waitForResponse"]},{"name":"suspend fun ComponentContainer(timeout: Duration? = null, startTimeoutNow: Boolean = false, builder: suspend ComponentContainer.() -> Unit): ComponentContainer","description":"dev.kordex.core.components.ComponentContainer","location":"kord-extensions/dev.kordex.core.components/-component-container.html","searchKeys":["ComponentContainer","suspend fun ComponentContainer(timeout: Duration? = null, startTimeoutNow: Boolean = false, builder: suspend ComponentContainer.() -> Unit): ComponentContainer","dev.kordex.core.components.ComponentContainer"]},{"name":"suspend fun ComponentContainer.disabledButton(row: Int? = null, builder: suspend DisabledInteractionButton.() -> Unit): DisabledInteractionButton","description":"dev.kordex.core.components.disabledButton","location":"kord-extensions/dev.kordex.core.components/disabled-button.html","searchKeys":["disabledButton","suspend fun ComponentContainer.disabledButton(row: Int? = null, builder: suspend DisabledInteractionButton.() -> Unit): DisabledInteractionButton","dev.kordex.core.components.disabledButton"]},{"name":"suspend fun ComponentContainer.ephemeralButton(row: Int? = null, builder: suspend EphemeralInteractionButton<ModalForm>.() -> Unit): EphemeralInteractionButton<ModalForm>","description":"dev.kordex.core.components.ephemeralButton","location":"kord-extensions/dev.kordex.core.components/ephemeral-button.html","searchKeys":["ephemeralButton","suspend fun ComponentContainer.ephemeralButton(row: Int? = null, builder: suspend EphemeralInteractionButton<ModalForm>.() -> Unit): EphemeralInteractionButton<ModalForm>","dev.kordex.core.components.ephemeralButton"]},{"name":"suspend fun ComponentContainer.ephemeralChannelSelectMenu(row: Int? = null, builder: suspend EphemeralChannelSelectMenu<ModalForm>.() -> Unit): EphemeralChannelSelectMenu<ModalForm>","description":"dev.kordex.core.components.ephemeralChannelSelectMenu","location":"kord-extensions/dev.kordex.core.components/ephemeral-channel-select-menu.html","searchKeys":["ephemeralChannelSelectMenu","suspend fun ComponentContainer.ephemeralChannelSelectMenu(row: Int? = null, builder: suspend EphemeralChannelSelectMenu<ModalForm>.() -> Unit): EphemeralChannelSelectMenu<ModalForm>","dev.kordex.core.components.ephemeralChannelSelectMenu"]},{"name":"suspend fun ComponentContainer.ephemeralMentionableSelectMenu(row: Int? = null, builder: suspend EphemeralMentionableSelectMenu<ModalForm>.() -> Unit): EphemeralMentionableSelectMenu<ModalForm>","description":"dev.kordex.core.components.ephemeralMentionableSelectMenu","location":"kord-extensions/dev.kordex.core.components/ephemeral-mentionable-select-menu.html","searchKeys":["ephemeralMentionableSelectMenu","suspend fun ComponentContainer.ephemeralMentionableSelectMenu(row: Int? = null, builder: suspend EphemeralMentionableSelectMenu<ModalForm>.() -> Unit): EphemeralMentionableSelectMenu<ModalForm>","dev.kordex.core.components.ephemeralMentionableSelectMenu"]},{"name":"suspend fun ComponentContainer.ephemeralRoleSelectMenu(row: Int? = null, builder: suspend EphemeralRoleSelectMenu<ModalForm>.() -> Unit): EphemeralRoleSelectMenu<ModalForm>","description":"dev.kordex.core.components.ephemeralRoleSelectMenu","location":"kord-extensions/dev.kordex.core.components/ephemeral-role-select-menu.html","searchKeys":["ephemeralRoleSelectMenu","suspend fun ComponentContainer.ephemeralRoleSelectMenu(row: Int? = null, builder: suspend EphemeralRoleSelectMenu<ModalForm>.() -> Unit): EphemeralRoleSelectMenu<ModalForm>","dev.kordex.core.components.ephemeralRoleSelectMenu"]},{"name":"suspend fun ComponentContainer.ephemeralStringSelectMenu(row: Int? = null, builder: suspend EphemeralStringSelectMenu<ModalForm>.() -> Unit): EphemeralStringSelectMenu<ModalForm>","description":"dev.kordex.core.components.ephemeralStringSelectMenu","location":"kord-extensions/dev.kordex.core.components/ephemeral-string-select-menu.html","searchKeys":["ephemeralStringSelectMenu","suspend fun ComponentContainer.ephemeralStringSelectMenu(row: Int? = null, builder: suspend EphemeralStringSelectMenu<ModalForm>.() -> Unit): EphemeralStringSelectMenu<ModalForm>","dev.kordex.core.components.ephemeralStringSelectMenu"]},{"name":"suspend fun ComponentContainer.ephemeralUserSelectMenu(row: Int? = null, builder: suspend EphemeralUserSelectMenu<ModalForm>.() -> Unit): EphemeralUserSelectMenu<ModalForm>","description":"dev.kordex.core.components.ephemeralUserSelectMenu","location":"kord-extensions/dev.kordex.core.components/ephemeral-user-select-menu.html","searchKeys":["ephemeralUserSelectMenu","suspend fun ComponentContainer.ephemeralUserSelectMenu(row: Int? = null, builder: suspend EphemeralUserSelectMenu<ModalForm>.() -> Unit): EphemeralUserSelectMenu<ModalForm>","dev.kordex.core.components.ephemeralUserSelectMenu"]},{"name":"suspend fun ComponentContainer.linkButton(row: Int? = null, builder: suspend LinkInteractionButton.() -> Unit): LinkInteractionButton","description":"dev.kordex.core.components.linkButton","location":"kord-extensions/dev.kordex.core.components/link-button.html","searchKeys":["linkButton","suspend fun ComponentContainer.linkButton(row: Int? = null, builder: suspend LinkInteractionButton.() -> Unit): LinkInteractionButton","dev.kordex.core.components.linkButton"]},{"name":"suspend fun ComponentContainer.publicButton(row: Int? = null, builder: suspend PublicInteractionButton<ModalForm>.() -> Unit): PublicInteractionButton<ModalForm>","description":"dev.kordex.core.components.publicButton","location":"kord-extensions/dev.kordex.core.components/public-button.html","searchKeys":["publicButton","suspend fun ComponentContainer.publicButton(row: Int? = null, builder: suspend PublicInteractionButton<ModalForm>.() -> Unit): PublicInteractionButton<ModalForm>","dev.kordex.core.components.publicButton"]},{"name":"suspend fun ComponentContainer.publicChannelSelectMenu(row: Int? = null, builder: suspend PublicChannelSelectMenu<ModalForm>.() -> Unit): PublicChannelSelectMenu<ModalForm>","description":"dev.kordex.core.components.publicChannelSelectMenu","location":"kord-extensions/dev.kordex.core.components/public-channel-select-menu.html","searchKeys":["publicChannelSelectMenu","suspend fun ComponentContainer.publicChannelSelectMenu(row: Int? = null, builder: suspend PublicChannelSelectMenu<ModalForm>.() -> Unit): PublicChannelSelectMenu<ModalForm>","dev.kordex.core.components.publicChannelSelectMenu"]},{"name":"suspend fun ComponentContainer.publicMentionableSelectMenu(row: Int? = null, builder: suspend PublicMentionableSelectMenu<ModalForm>.() -> Unit): PublicMentionableSelectMenu<ModalForm>","description":"dev.kordex.core.components.publicMentionableSelectMenu","location":"kord-extensions/dev.kordex.core.components/public-mentionable-select-menu.html","searchKeys":["publicMentionableSelectMenu","suspend fun ComponentContainer.publicMentionableSelectMenu(row: Int? = null, builder: suspend PublicMentionableSelectMenu<ModalForm>.() -> Unit): PublicMentionableSelectMenu<ModalForm>","dev.kordex.core.components.publicMentionableSelectMenu"]},{"name":"suspend fun ComponentContainer.publicRoleSelectMenu(row: Int? = null, builder: suspend PublicRoleSelectMenu<ModalForm>.() -> Unit): PublicRoleSelectMenu<ModalForm>","description":"dev.kordex.core.components.publicRoleSelectMenu","location":"kord-extensions/dev.kordex.core.components/public-role-select-menu.html","searchKeys":["publicRoleSelectMenu","suspend fun ComponentContainer.publicRoleSelectMenu(row: Int? = null, builder: suspend PublicRoleSelectMenu<ModalForm>.() -> Unit): PublicRoleSelectMenu<ModalForm>","dev.kordex.core.components.publicRoleSelectMenu"]},{"name":"suspend fun ComponentContainer.publicStringSelectMenu(row: Int? = null, builder: suspend PublicStringSelectMenu<ModalForm>.() -> Unit): PublicStringSelectMenu<ModalForm>","description":"dev.kordex.core.components.publicStringSelectMenu","location":"kord-extensions/dev.kordex.core.components/public-string-select-menu.html","searchKeys":["publicStringSelectMenu","suspend fun ComponentContainer.publicStringSelectMenu(row: Int? = null, builder: suspend PublicStringSelectMenu<ModalForm>.() -> Unit): PublicStringSelectMenu<ModalForm>","dev.kordex.core.components.publicStringSelectMenu"]},{"name":"suspend fun ComponentContainer.publicUserSelectMenu(row: Int? = null, builder: suspend PublicUserSelectMenu<ModalForm>.() -> Unit): PublicUserSelectMenu<ModalForm>","description":"dev.kordex.core.components.publicUserSelectMenu","location":"kord-extensions/dev.kordex.core.components/public-user-select-menu.html","searchKeys":["publicUserSelectMenu","suspend fun ComponentContainer.publicUserSelectMenu(row: Int? = null, builder: suspend PublicUserSelectMenu<ModalForm>.() -> Unit): PublicUserSelectMenu<ModalForm>","dev.kordex.core.components.publicUserSelectMenu"]},{"name":"suspend fun ComponentInteractionBehavior.ackEphemeral(deferred: Boolean = false): EphemeralMessageInteractionResponseBehavior","description":"dev.kordex.core.utils.ackEphemeral","location":"kord-extensions/dev.kordex.core.utils/ack-ephemeral.html","searchKeys":["ackEphemeral","suspend fun ComponentInteractionBehavior.ackEphemeral(deferred: Boolean = false): EphemeralMessageInteractionResponseBehavior","dev.kordex.core.utils.ackEphemeral"]},{"name":"suspend fun ComponentInteractionBehavior.ackPublic(deferred: Boolean = false): PublicMessageInteractionResponseBehavior","description":"dev.kordex.core.utils.ackPublic","location":"kord-extensions/dev.kordex.core.utils/ack-public.html","searchKeys":["ackPublic","suspend fun ComponentInteractionBehavior.ackPublic(deferred: Boolean = false): PublicMessageInteractionResponseBehavior","dev.kordex.core.utils.ackPublic"]},{"name":"suspend fun Event.getLocale(): Locale","description":"dev.kordex.core.events.EventHandler.getLocale","location":"kord-extensions/dev.kordex.core.events/-event-handler/get-locale.html","searchKeys":["getLocale","suspend fun Event.getLocale(): Locale","dev.kordex.core.events.EventHandler.getLocale"]},{"name":"suspend fun Event.translate(key: Key, replacements: Array<Any?> = arrayOf()): String","description":"dev.kordex.core.events.EventHandler.translate","location":"kord-extensions/dev.kordex.core.events/-event-handler/translate.html","searchKeys":["translate","suspend fun Event.translate(key: Key, replacements: Array<Any?> = arrayOf()): String","dev.kordex.core.events.EventHandler.translate"]},{"name":"suspend fun Event.translate(key: Key, replacements: Map<String, Any?>): String","description":"dev.kordex.core.events.EventHandler.translate","location":"kord-extensions/dev.kordex.core.events/-event-handler/translate.html","searchKeys":["translate","suspend fun Event.translate(key: Key, replacements: Map<String, Any?>): String","dev.kordex.core.events.EventHandler.translate"]},{"name":"suspend fun ExtensibleBot(token: String, builder: suspend ExtensibleBotBuilder.() -> Unit): ExtensibleBot","description":"dev.kordex.core.ExtensibleBot","location":"kord-extensions/dev.kordex.core/-extensible-bot.html","searchKeys":["ExtensibleBot","suspend fun ExtensibleBot(token: String, builder: suspend ExtensibleBotBuilder.() -> Unit): ExtensibleBot","dev.kordex.core.ExtensibleBot"]},{"name":"suspend fun Extension.chatCommand(body: suspend ChatCommand<Arguments>.() -> Unit): ChatCommand<Arguments>","description":"dev.kordex.core.extensions.chatCommand","location":"kord-extensions/dev.kordex.core.extensions/chat-command.html","searchKeys":["chatCommand","suspend fun Extension.chatCommand(body: suspend ChatCommand<Arguments>.() -> Unit): ChatCommand<Arguments>","dev.kordex.core.extensions.chatCommand"]},{"name":"suspend fun Extension.chatGroupCommand(body: suspend ChatGroupCommand<Arguments>.() -> Unit): ChatGroupCommand<Arguments>","description":"dev.kordex.core.extensions.chatGroupCommand","location":"kord-extensions/dev.kordex.core.extensions/chat-group-command.html","searchKeys":["chatGroupCommand","suspend fun Extension.chatGroupCommand(body: suspend ChatGroupCommand<Arguments>.() -> Unit): ChatGroupCommand<Arguments>","dev.kordex.core.extensions.chatGroupCommand"]},{"name":"suspend fun Extension.ephemeralMessageCommand(body: suspend EphemeralMessageCommand<ModalForm>.() -> Unit): EphemeralMessageCommand<ModalForm>","description":"dev.kordex.core.extensions.ephemeralMessageCommand","location":"kord-extensions/dev.kordex.core.extensions/ephemeral-message-command.html","searchKeys":["ephemeralMessageCommand","suspend fun Extension.ephemeralMessageCommand(body: suspend EphemeralMessageCommand<ModalForm>.() -> Unit): EphemeralMessageCommand<ModalForm>","dev.kordex.core.extensions.ephemeralMessageCommand"]},{"name":"suspend fun Extension.ephemeralSlashCommand(body: suspend EphemeralSlashCommand<Arguments, ModalForm>.() -> Unit): EphemeralSlashCommand<Arguments, ModalForm>","description":"dev.kordex.core.extensions.ephemeralSlashCommand","location":"kord-extensions/dev.kordex.core.extensions/ephemeral-slash-command.html","searchKeys":["ephemeralSlashCommand","suspend fun Extension.ephemeralSlashCommand(body: suspend EphemeralSlashCommand<Arguments, ModalForm>.() -> Unit): EphemeralSlashCommand<Arguments, ModalForm>","dev.kordex.core.extensions.ephemeralSlashCommand"]},{"name":"suspend fun Extension.ephemeralUserCommand(body: suspend EphemeralUserCommand<ModalForm>.() -> Unit): EphemeralUserCommand<ModalForm>","description":"dev.kordex.core.extensions.ephemeralUserCommand","location":"kord-extensions/dev.kordex.core.extensions/ephemeral-user-command.html","searchKeys":["ephemeralUserCommand","suspend fun Extension.ephemeralUserCommand(body: suspend EphemeralUserCommand<ModalForm>.() -> Unit): EphemeralUserCommand<ModalForm>","dev.kordex.core.extensions.ephemeralUserCommand"]},{"name":"suspend fun Extension.publicMessageCommand(body: suspend PublicMessageCommand<ModalForm>.() -> Unit): PublicMessageCommand<ModalForm>","description":"dev.kordex.core.extensions.publicMessageCommand","location":"kord-extensions/dev.kordex.core.extensions/public-message-command.html","searchKeys":["publicMessageCommand","suspend fun Extension.publicMessageCommand(body: suspend PublicMessageCommand<ModalForm>.() -> Unit): PublicMessageCommand<ModalForm>","dev.kordex.core.extensions.publicMessageCommand"]},{"name":"suspend fun Extension.publicSlashCommand(body: suspend PublicSlashCommand<Arguments, ModalForm>.() -> Unit): PublicSlashCommand<Arguments, ModalForm>","description":"dev.kordex.core.extensions.publicSlashCommand","location":"kord-extensions/dev.kordex.core.extensions/public-slash-command.html","searchKeys":["publicSlashCommand","suspend fun Extension.publicSlashCommand(body: suspend PublicSlashCommand<Arguments, ModalForm>.() -> Unit): PublicSlashCommand<Arguments, ModalForm>","dev.kordex.core.extensions.publicSlashCommand"]},{"name":"suspend fun Extension.publicUserCommand(body: suspend PublicUserCommand<ModalForm>.() -> Unit): PublicUserCommand<ModalForm>","description":"dev.kordex.core.extensions.publicUserCommand","location":"kord-extensions/dev.kordex.core.extensions/public-user-command.html","searchKeys":["publicUserCommand","suspend fun Extension.publicUserCommand(body: suspend PublicUserCommand<ModalForm>.() -> Unit): PublicUserCommand<ModalForm>","dev.kordex.core.extensions.publicUserCommand"]},{"name":"suspend fun GuildBehavior.botHasPermissions(vararg requiredPermissions: Permission): Boolean","description":"dev.kordex.core.utils.botHasPermissions","location":"kord-extensions/dev.kordex.core.utils/bot-has-permissions.html","searchKeys":["botHasPermissions","suspend fun GuildBehavior.botHasPermissions(vararg requiredPermissions: Permission): Boolean","dev.kordex.core.utils.botHasPermissions"]},{"name":"suspend fun GuildBehavior.selfMember(): Member","description":"dev.kordex.core.utils.selfMember","location":"kord-extensions/dev.kordex.core.utils/self-member.html","searchKeys":["selfMember","suspend fun GuildBehavior.selfMember(): Member","dev.kordex.core.utils.selfMember"]},{"name":"suspend fun GuildChannel.botHasPermissions(vararg requiredPermissions: Permission): Boolean","description":"dev.kordex.core.utils.botHasPermissions","location":"kord-extensions/dev.kordex.core.utils/bot-has-permissions.html","searchKeys":["botHasPermissions","suspend fun GuildChannel.botHasPermissions(vararg requiredPermissions: Permission): Boolean","dev.kordex.core.utils.botHasPermissions"]},{"name":"suspend fun GuildChannel.permissionsForMember(memberId: Snowflake): Permissions","description":"dev.kordex.core.utils.permissionsForMember","location":"kord-extensions/dev.kordex.core.utils/permissions-for-member.html","searchKeys":["permissionsForMember","suspend fun GuildChannel.permissionsForMember(memberId: Snowflake): Permissions","dev.kordex.core.utils.permissionsForMember"]},{"name":"suspend fun GuildChannel.permissionsForMember(user: UserBehavior): Permissions","description":"dev.kordex.core.utils.permissionsForMember","location":"kord-extensions/dev.kordex.core.utils/permissions-for-member.html","searchKeys":["permissionsForMember","suspend fun GuildChannel.permissionsForMember(user: UserBehavior): Permissions","dev.kordex.core.utils.permissionsForMember"]},{"name":"suspend fun GuildChannelBehavior.isAbove(other: GuildChannelBehavior): Boolean","description":"dev.kordex.core.utils.isAbove","location":"kord-extensions/dev.kordex.core.utils/is-above.html","searchKeys":["isAbove","suspend fun GuildChannelBehavior.isAbove(other: GuildChannelBehavior): Boolean","dev.kordex.core.utils.isAbove"]},{"name":"suspend fun GuildChannelBehavior.isBelow(other: GuildChannelBehavior): Boolean","description":"dev.kordex.core.utils.isBelow","location":"kord-extensions/dev.kordex.core.utils/is-below.html","searchKeys":["isBelow","suspend fun GuildChannelBehavior.isBelow(other: GuildChannelBehavior): Boolean","dev.kordex.core.utils.isBelow"]},{"name":"suspend fun InteractionCreateEvent.getLocale(): Locale","description":"dev.kordex.core.utils.getLocale","location":"kord-extensions/dev.kordex.core.utils/get-locale.html","searchKeys":["getLocale","suspend fun InteractionCreateEvent.getLocale(): Locale","dev.kordex.core.utils.getLocale"]},{"name":"suspend fun Key.withContext(context: TranslatableContext): Key","description":"dev.kordex.core.i18n.withContext","location":"kord-extensions/dev.kordex.core.i18n/with-context.html","searchKeys":["withContext","suspend fun Key.withContext(context: TranslatableContext): Key","dev.kordex.core.i18n.withContext"]},{"name":"suspend fun Kord.kordExUserAgent(): String","description":"dev.kordex.core.utils.kordExUserAgent","location":"kord-extensions/dev.kordex.core.utils/kord-ex-user-agent.html","searchKeys":["kordExUserAgent","suspend fun Kord.kordExUserAgent(): String","dev.kordex.core.utils.kordExUserAgent"]},{"name":"suspend fun Member.canInteract(member: Member): Boolean","description":"dev.kordex.core.utils.canInteract","location":"kord-extensions/dev.kordex.core.utils/can-interact.html","searchKeys":["canInteract","suspend fun Member.canInteract(member: Member): Boolean","dev.kordex.core.utils.canInteract"]},{"name":"suspend fun Member.canInteract(role: Role): Boolean","description":"dev.kordex.core.utils.canInteract","location":"kord-extensions/dev.kordex.core.utils/can-interact.html","searchKeys":["canInteract","suspend fun Member.canInteract(role: Role): Boolean","dev.kordex.core.utils.canInteract"]},{"name":"suspend fun Member.deafen(reason: String? = null): Member","description":"dev.kordex.core.utils.deafen","location":"kord-extensions/dev.kordex.core.utils/deafen.html","searchKeys":["deafen","suspend fun Member.deafen(reason: String? = null): Member","dev.kordex.core.utils.deafen"]},{"name":"suspend fun Member.getTopRole(): Role?","description":"dev.kordex.core.utils.getTopRole","location":"kord-extensions/dev.kordex.core.utils/get-top-role.html","searchKeys":["getTopRole","suspend fun Member.getTopRole(): Role?","dev.kordex.core.utils.getTopRole"]},{"name":"suspend fun Member.hasPermission(perm: Permission): Boolean","description":"dev.kordex.core.utils.hasPermission","location":"kord-extensions/dev.kordex.core.utils/has-permission.html","searchKeys":["hasPermission","suspend fun Member.hasPermission(perm: Permission): Boolean","dev.kordex.core.utils.hasPermission"]},{"name":"suspend fun Member.hasPermissions(perms: Collection<Permission>): Boolean","description":"dev.kordex.core.utils.hasPermissions","location":"kord-extensions/dev.kordex.core.utils/has-permissions.html","searchKeys":["hasPermissions","suspend fun Member.hasPermissions(perms: Collection<Permission>): Boolean","dev.kordex.core.utils.hasPermissions"]},{"name":"suspend fun Member.mute(reason: String? = null): Member","description":"dev.kordex.core.utils.mute","location":"kord-extensions/dev.kordex.core.utils/mute.html","searchKeys":["mute","suspend fun Member.mute(reason: String? = null): Member","dev.kordex.core.utils.mute"]},{"name":"suspend fun Member.removeNickname(reason: String? = null): Member","description":"dev.kordex.core.utils.removeNickname","location":"kord-extensions/dev.kordex.core.utils/remove-nickname.html","searchKeys":["removeNickname","suspend fun Member.removeNickname(reason: String? = null): Member","dev.kordex.core.utils.removeNickname"]},{"name":"suspend fun Member.removeTimeout(reason: String? = null): Member","description":"dev.kordex.core.utils.removeTimeout","location":"kord-extensions/dev.kordex.core.utils/remove-timeout.html","searchKeys":["removeTimeout","suspend fun Member.removeTimeout(reason: String? = null): Member","dev.kordex.core.utils.removeTimeout"]},{"name":"suspend fun Member.setNickname(nickname: String?, reason: String? = null): Member","description":"dev.kordex.core.utils.setNickname","location":"kord-extensions/dev.kordex.core.utils/set-nickname.html","searchKeys":["setNickname","suspend fun Member.setNickname(nickname: String?, reason: String? = null): Member","dev.kordex.core.utils.setNickname"]},{"name":"suspend fun Member.timeout(until: DateTimePeriod, timezone: TimeZone = TimeZone.UTC, reason: String? = null): Member","description":"dev.kordex.core.utils.timeout","location":"kord-extensions/dev.kordex.core.utils/timeout.html","searchKeys":["timeout","suspend fun Member.timeout(until: DateTimePeriod, timezone: TimeZone = TimeZone.UTC, reason: String? = null): Member","dev.kordex.core.utils.timeout"]},{"name":"suspend fun Member.timeout(until: Duration, reason: String? = null): Member","description":"dev.kordex.core.utils.timeout","location":"kord-extensions/dev.kordex.core.utils/timeout.html","searchKeys":["timeout","suspend fun Member.timeout(until: Duration, reason: String? = null): Member","dev.kordex.core.utils.timeout"]},{"name":"suspend fun Member.unDeafen(reason: String? = null): Member","description":"dev.kordex.core.utils.unDeafen","location":"kord-extensions/dev.kordex.core.utils/un-deafen.html","searchKeys":["unDeafen","suspend fun Member.unDeafen(reason: String? = null): Member","dev.kordex.core.utils.unDeafen"]},{"name":"suspend fun Member.unMute(reason: String? = null): Member","description":"dev.kordex.core.utils.unMute","location":"kord-extensions/dev.kordex.core.utils/un-mute.html","searchKeys":["unMute","suspend fun Member.unMute(reason: String? = null): Member","dev.kordex.core.utils.unMute"]},{"name":"suspend fun Message.requireChannel(context: CommandContext, channel: GuildMessageChannel, role: Role? = null, delay: Long = DELETE_DELAY, allowDm: Boolean = true, deleteOriginal: Boolean = true, deleteResponse: Boolean = true): Boolean","description":"dev.kordex.core.utils.requireChannel","location":"kord-extensions/dev.kordex.core.utils/require-channel.html","searchKeys":["requireChannel","suspend fun Message.requireChannel(context: CommandContext, channel: GuildMessageChannel, role: Role? = null, delay: Long = DELETE_DELAY, allowDm: Boolean = true, deleteOriginal: Boolean = true, deleteResponse: Boolean = true): Boolean","dev.kordex.core.utils.requireChannel"]},{"name":"suspend fun Message.requireGuildChannel(context: CommandContext, role: Role? = null): Boolean","description":"dev.kordex.core.utils.requireGuildChannel","location":"kord-extensions/dev.kordex.core.utils/require-guild-channel.html","searchKeys":["requireGuildChannel","suspend fun Message.requireGuildChannel(context: CommandContext, role: Role? = null): Boolean","dev.kordex.core.utils.requireGuildChannel"]},{"name":"suspend fun Message.requireGuildChannel(context: CommandContext, role: Role? = null, guild: Guild? = null): Boolean","description":"dev.kordex.core.utils.requireGuildChannel","location":"kord-extensions/dev.kordex.core.utils/require-guild-channel.html","searchKeys":["requireGuildChannel","suspend fun Message.requireGuildChannel(context: CommandContext, role: Role? = null, guild: Guild? = null): Boolean","dev.kordex.core.utils.requireGuildChannel"]},{"name":"suspend fun Message.respond(content: String, useReply: Boolean = true, pingInReply: Boolean = true): Message","description":"dev.kordex.core.utils.respond","location":"kord-extensions/dev.kordex.core.utils/respond.html","searchKeys":["respond","suspend fun Message.respond(content: String, useReply: Boolean = true, pingInReply: Boolean = true): Message","dev.kordex.core.utils.respond"]},{"name":"suspend fun Message.respond(useReply: Boolean = true, pingInReply: Boolean = true, builder: suspend MessageCreateBuilder.() -> Unit): Message","description":"dev.kordex.core.utils.respond","location":"kord-extensions/dev.kordex.core.utils/respond.html","searchKeys":["respond","suspend fun Message.respond(useReply: Boolean = true, pingInReply: Boolean = true, builder: suspend MessageCreateBuilder.() -> Unit): Message","dev.kordex.core.utils.respond"]},{"name":"suspend fun Message.respondTranslated(key: Key, placeholders: Array<Any?> = arrayOf(), useReply: Boolean = true): Message","description":"dev.kordex.core.commands.chat.ChatCommandContext.respondTranslated","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-command-context/respond-translated.html","searchKeys":["respondTranslated","suspend fun Message.respondTranslated(key: Key, placeholders: Array<Any?> = arrayOf(), useReply: Boolean = true): Message","dev.kordex.core.commands.chat.ChatCommandContext.respondTranslated"]},{"name":"suspend fun Message.respondTranslated(key: Key, placeholders: Map<String, Any?>, useReply: Boolean = true): Message","description":"dev.kordex.core.commands.chat.ChatCommandContext.respondTranslated","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-command-context/respond-translated.html","searchKeys":["respondTranslated","suspend fun Message.respondTranslated(key: Key, placeholders: Map<String, Any?>, useReply: Boolean = true): Message","dev.kordex.core.commands.chat.ChatCommandContext.respondTranslated"]},{"name":"suspend fun MessageBehavior.deleteIgnoringNotFound()","description":"dev.kordex.core.utils.deleteIgnoringNotFound","location":"kord-extensions/dev.kordex.core.utils/delete-ignoring-not-found.html","searchKeys":["deleteIgnoringNotFound","suspend fun MessageBehavior.deleteIgnoringNotFound()","dev.kordex.core.utils.deleteIgnoringNotFound"]},{"name":"suspend fun MessageBehavior.waitForReply(timeout: Long, filter: suspend MessageCreateEvent.() -> Boolean = { true }): Message?","description":"dev.kordex.core.utils.waitForReply","location":"kord-extensions/dev.kordex.core.utils/wait-for-reply.html","searchKeys":["waitForReply","suspend fun MessageBehavior.waitForReply(timeout: Long, filter: suspend MessageCreateEvent.() -> Boolean = { true }): Message?","dev.kordex.core.utils.waitForReply"]},{"name":"suspend fun MessageBuilder.applyComponents(components: ComponentContainer)","description":"dev.kordex.core.components.applyComponents","location":"kord-extensions/dev.kordex.core.components/apply-components.html","searchKeys":["applyComponents","suspend fun MessageBuilder.applyComponents(components: ComponentContainer)","dev.kordex.core.components.applyComponents"]},{"name":"suspend fun MessageBuilder.components(timeout: Duration? = null, builder: suspend ComponentContainer.() -> Unit): ComponentContainer","description":"dev.kordex.core.components.components","location":"kord-extensions/dev.kordex.core.components/components.html","searchKeys":["components","suspend fun MessageBuilder.components(timeout: Duration? = null, builder: suspend ComponentContainer.() -> Unit): ComponentContainer","dev.kordex.core.components.components"]},{"name":"suspend fun MessageChannelBehavior.waitForMessage(timeout: Long, filter: suspend MessageCreateEvent.() -> Boolean = { true }): Message?","description":"dev.kordex.core.utils.waitForMessage","location":"kord-extensions/dev.kordex.core.utils/wait-for-message.html","searchKeys":["waitForMessage","suspend fun MessageChannelBehavior.waitForMessage(timeout: Long, filter: suspend MessageCreateEvent.() -> Boolean = { true }): Message?","dev.kordex.core.utils.waitForMessage"]},{"name":"suspend fun MessageCreateEvent.getLocale(): Locale","description":"dev.kordex.core.utils.getLocale","location":"kord-extensions/dev.kordex.core.utils/get-locale.html","searchKeys":["getLocale","suspend fun MessageCreateEvent.getLocale(): Locale","dev.kordex.core.utils.getLocale"]},{"name":"suspend fun NsfwLevel.translate(context: CommandContext): String","description":"dev.kordex.core.utils.translate","location":"kord-extensions/dev.kordex.core.utils/translate.html","searchKeys":["translate","suspend fun NsfwLevel.translate(context: CommandContext): String","dev.kordex.core.utils.translate"]},{"name":"suspend fun Permission.translate(context: CommandContext): String","description":"dev.kordex.core.utils.translate","location":"kord-extensions/dev.kordex.core.utils/translate.html","searchKeys":["translate","suspend fun Permission.translate(context: CommandContext): String","dev.kordex.core.utils.translate"]},{"name":"suspend fun PublicFollowupMessageBehavior.deleteIgnoringNotFound()","description":"dev.kordex.core.utils.deleteIgnoringNotFound","location":"kord-extensions/dev.kordex.core.utils/delete-ignoring-not-found.html","searchKeys":["deleteIgnoringNotFound","suspend fun PublicFollowupMessageBehavior.deleteIgnoringNotFound()","dev.kordex.core.utils.deleteIgnoringNotFound"]},{"name":"suspend fun SlashCommand<*, *, *>.ephemeralSubCommand(body: suspend EphemeralSlashCommand<Arguments, ModalForm>.() -> Unit): EphemeralSlashCommand<Arguments, ModalForm>","description":"dev.kordex.core.commands.application.slash.ephemeralSubCommand","location":"kord-extensions/dev.kordex.core.commands.application.slash/ephemeral-sub-command.html","searchKeys":["ephemeralSubCommand","suspend fun SlashCommand<*, *, *>.ephemeralSubCommand(body: suspend EphemeralSlashCommand<Arguments, ModalForm>.() -> Unit): EphemeralSlashCommand<Arguments, ModalForm>","dev.kordex.core.commands.application.slash.ephemeralSubCommand"]},{"name":"suspend fun SlashCommand<*, *, *>.group(name: Key, body: suspend SlashGroup.() -> Unit): SlashGroup","description":"dev.kordex.core.commands.application.slash.group","location":"kord-extensions/dev.kordex.core.commands.application.slash/group.html","searchKeys":["group","suspend fun SlashCommand<*, *, *>.group(name: Key, body: suspend SlashGroup.() -> Unit): SlashGroup","dev.kordex.core.commands.application.slash.group"]},{"name":"suspend fun SlashCommand<*, *, *>.publicSubCommand(body: suspend PublicSlashCommand<Arguments, ModalForm>.() -> Unit): PublicSlashCommand<Arguments, ModalForm>","description":"dev.kordex.core.commands.application.slash.publicSubCommand","location":"kord-extensions/dev.kordex.core.commands.application.slash/public-sub-command.html","searchKeys":["publicSubCommand","suspend fun SlashCommand<*, *, *>.publicSubCommand(body: suspend PublicSlashCommand<Arguments, ModalForm>.() -> Unit): PublicSlashCommand<Arguments, ModalForm>","dev.kordex.core.commands.application.slash.publicSubCommand"]},{"name":"suspend fun SlashGroup.ephemeralSubCommand(body: suspend EphemeralSlashCommand<Arguments, ModalForm>.() -> Unit): EphemeralSlashCommand<Arguments, ModalForm>","description":"dev.kordex.core.commands.application.slash.ephemeralSubCommand","location":"kord-extensions/dev.kordex.core.commands.application.slash/ephemeral-sub-command.html","searchKeys":["ephemeralSubCommand","suspend fun SlashGroup.ephemeralSubCommand(body: suspend EphemeralSlashCommand<Arguments, ModalForm>.() -> Unit): EphemeralSlashCommand<Arguments, ModalForm>","dev.kordex.core.commands.application.slash.ephemeralSubCommand"]},{"name":"suspend fun SlashGroup.publicSubCommand(body: suspend PublicSlashCommand<Arguments, ModalForm>.() -> Unit): PublicSlashCommand<Arguments, ModalForm>","description":"dev.kordex.core.commands.application.slash.publicSubCommand","location":"kord-extensions/dev.kordex.core.commands.application.slash/public-sub-command.html","searchKeys":["publicSubCommand","suspend fun SlashGroup.publicSubCommand(body: suspend PublicSlashCommand<Arguments, ModalForm>.() -> Unit): PublicSlashCommand<Arguments, ModalForm>","dev.kordex.core.commands.application.slash.publicSubCommand"]},{"name":"suspend fun String.parseBoolean(context: CommandContext): Boolean?","description":"dev.kordex.core.utils.parseBoolean","location":"kord-extensions/dev.kordex.core.utils/parse-boolean.html","searchKeys":["parseBoolean","suspend fun String.parseBoolean(context: CommandContext): Boolean?","dev.kordex.core.utils.parseBoolean"]},{"name":"suspend fun ThreadChannel.getParentMessage(): Message?","description":"dev.kordex.core.utils.getParentMessage","location":"kord-extensions/dev.kordex.core.utils/get-parent-message.html","searchKeys":["getParentMessage","suspend fun ThreadChannel.getParentMessage(): Message?","dev.kordex.core.utils.getParentMessage"]},{"name":"suspend fun User.dm(content: String): Message?","description":"dev.kordex.core.utils.dm","location":"kord-extensions/dev.kordex.core.utils/dm.html","searchKeys":["dm","suspend fun User.dm(content: String): Message?","dev.kordex.core.utils.dm"]},{"name":"suspend fun UserBehavior.waitForMessage(timeout: Long, filter: suspend MessageCreateEvent.() -> Boolean = { true }): Message?","description":"dev.kordex.core.utils.waitForMessage","location":"kord-extensions/dev.kordex.core.utils/wait-for-message.html","searchKeys":["waitForMessage","suspend fun UserBehavior.waitForMessage(timeout: Long, filter: suspend MessageCreateEvent.() -> Boolean = { true }): Message?","dev.kordex.core.utils.waitForMessage"]},{"name":"suspend fun about(builder: suspend AboutBuilder.() -> Unit)","description":"dev.kordex.core.builders.ExtensibleBotBuilder.about","location":"kord-extensions/dev.kordex.core.builders/-extensible-bot-builder/about.html","searchKeys":["about","suspend fun about(builder: suspend AboutBuilder.() -> Unit)","dev.kordex.core.builders.ExtensibleBotBuilder.about"]},{"name":"suspend fun addContextDataToBreadcrumb(capture: SentryBreadcrumbCapture)","description":"dev.kordex.core.components.ComponentContext.addContextDataToBreadcrumb","location":"kord-extensions/dev.kordex.core.components/-component-context/add-context-data-to-breadcrumb.html","searchKeys":["addContextDataToBreadcrumb","suspend fun addContextDataToBreadcrumb(capture: SentryBreadcrumbCapture)","dev.kordex.core.components.ComponentContext.addContextDataToBreadcrumb"]},{"name":"suspend fun applicationCommands(builder: suspend ApplicationCommandsBuilder.() -> Unit)","description":"dev.kordex.core.builders.ExtensibleBotBuilder.applicationCommands","location":"kord-extensions/dev.kordex.core.builders/-extensible-bot-builder/application-commands.html","searchKeys":["applicationCommands","suspend fun applicationCommands(builder: suspend ApplicationCommandsBuilder.() -> Unit)","dev.kordex.core.builders.ExtensibleBotBuilder.applicationCommands"]},{"name":"suspend fun apply(builder: T): T","description":"dev.kordex.core.commands.OptionWrapper.apply","location":"kord-extensions/dev.kordex.core.commands/-option-wrapper/apply.html","searchKeys":["apply","suspend fun apply(builder: T): T","dev.kordex.core.commands.OptionWrapper.apply"]},{"name":"suspend fun applyToBuilder(builder: ModalBuilder, locale: Locale)","description":"dev.kordex.core.components.forms.ModalForm.applyToBuilder","location":"kord-extensions/dev.kordex.core.components.forms/-modal-form/apply-to-builder.html","searchKeys":["applyToBuilder","suspend fun applyToBuilder(builder: ModalBuilder, locale: Locale)","dev.kordex.core.components.forms.ModalForm.applyToBuilder"]},{"name":"suspend fun breadcrumb(type: BreadcrumbType = BreadcrumbType.Default, body: suspend SentryBreadcrumbCapture.() -> Unit)","description":"dev.kordex.core.sentry.SentryContext.breadcrumb","location":"kord-extensions/dev.kordex.core.sentry/-sentry-context/breadcrumb.html","searchKeys":["breadcrumb","suspend fun breadcrumb(type: BreadcrumbType = BreadcrumbType.Default, body: suspend SentryBreadcrumbCapture.() -> Unit)","dev.kordex.core.sentry.SentryContext.breadcrumb"]},{"name":"suspend fun cache(builder: suspend CacheBuilder.() -> Unit)","description":"dev.kordex.core.builders.ExtensibleBotBuilder.cache","location":"kord-extensions/dev.kordex.core.builders/-extensible-bot-builder/cache.html","searchKeys":["cache","suspend fun cache(builder: suspend CacheBuilder.() -> Unit)","dev.kordex.core.builders.ExtensibleBotBuilder.cache"]},{"name":"suspend fun call(event: T)","description":"dev.kordex.core.events.EventHandler.call","location":"kord-extensions/dev.kordex.core.events/-event-handler/call.html","searchKeys":["call","suspend fun call(event: T)","dev.kordex.core.events.EventHandler.call"]},{"name":"suspend fun callAllNow()","description":"dev.kordex.core.utils.scheduling.Scheduler.callAllNow","location":"kord-extensions/dev.kordex.core.utils.scheduling/-scheduler/call-all-now.html","searchKeys":["callAllNow","suspend fun callAllNow()","dev.kordex.core.utils.scheduling.Scheduler.callAllNow"]},{"name":"suspend fun callNow()","description":"dev.kordex.core.utils.scheduling.Task.callNow","location":"kord-extensions/dev.kordex.core.utils.scheduling/-task/call-now.html","searchKeys":["callNow","suspend fun callNow()","dev.kordex.core.utils.scheduling.Task.callNow"]},{"name":"suspend fun cancelAndJoin()","description":"dev.kordex.core.utils.scheduling.Task.cancelAndJoin","location":"kord-extensions/dev.kordex.core.utils.scheduling/-task/cancel-and-join.html","searchKeys":["cancelAndJoin","suspend fun cancelAndJoin()","dev.kordex.core.utils.scheduling.Task.cancelAndJoin"]},{"name":"suspend fun captureEvent(event: SentryEvent, body: suspend SentryScopeCapture.() -> Unit = {}): SentryId?","description":"dev.kordex.core.sentry.SentryContext.captureEvent","location":"kord-extensions/dev.kordex.core.sentry/-sentry-context/capture-event.html","searchKeys":["captureEvent","suspend fun captureEvent(event: SentryEvent, body: suspend SentryScopeCapture.() -> Unit = {}): SentryId?","dev.kordex.core.sentry.SentryContext.captureEvent"]},{"name":"suspend fun captureFeedback(feedback: UserFeedback, body: suspend SentryScopeCapture.() -> Unit = {})","description":"dev.kordex.core.sentry.SentryContext.captureFeedback","location":"kord-extensions/dev.kordex.core.sentry/-sentry-context/capture-feedback.html","searchKeys":["captureFeedback","suspend fun captureFeedback(feedback: UserFeedback, body: suspend SentryScopeCapture.() -> Unit = {})","dev.kordex.core.sentry.SentryContext.captureFeedback"]},{"name":"suspend fun captureMessage(message: String, body: suspend SentryScopeCapture.() -> Unit = {}): SentryId?","description":"dev.kordex.core.sentry.SentryContext.captureMessage","location":"kord-extensions/dev.kordex.core.sentry/-sentry-context/capture-message.html","searchKeys":["captureMessage","suspend fun captureMessage(message: String, body: suspend SentryScopeCapture.() -> Unit = {}): SentryId?","dev.kordex.core.sentry.SentryContext.captureMessage"]},{"name":"suspend fun captureThrowable(t: Throwable, body: suspend SentryExceptionCapture.() -> Unit = {}): SentryId?","description":"dev.kordex.core.sentry.SentryContext.captureThrowable","location":"kord-extensions/dev.kordex.core.sentry/-sentry-context/capture-throwable.html","searchKeys":["captureThrowable","suspend fun captureThrowable(t: Throwable, body: suspend SentryExceptionCapture.() -> Unit = {}): SentryId?","dev.kordex.core.sentry.SentryContext.captureThrowable"]},{"name":"suspend fun channelFor(event: Event): ChannelBehavior?","description":"dev.kordex.core.checks.channelFor","location":"kord-extensions/dev.kordex.core.checks/channel-for.html","searchKeys":["channelFor","suspend fun channelFor(event: Event): ChannelBehavior?","dev.kordex.core.checks.channelFor"]},{"name":"suspend fun chatCommands(builder: suspend ChatCommandsBuilder.() -> Unit)","description":"dev.kordex.core.builders.ExtensibleBotBuilder.chatCommands","location":"kord-extensions/dev.kordex.core.builders/-extensible-bot-builder/chat-commands.html","searchKeys":["chatCommands","suspend fun chatCommands(builder: suspend ChatCommandsBuilder.() -> Unit)","dev.kordex.core.builders.ExtensibleBotBuilder.chatCommands"]},{"name":"suspend fun checkCapturePredicates(capture: SentryCapture): Boolean","description":"dev.kordex.core.sentry.SentryAdapter.checkCapturePredicates","location":"kord-extensions/dev.kordex.core.sentry/-sentry-adapter/check-capture-predicates.html","searchKeys":["checkCapturePredicates","suspend fun checkCapturePredicates(capture: SentryCapture): Boolean","dev.kordex.core.sentry.SentryAdapter.checkCapturePredicates"]},{"name":"suspend fun components(builder: suspend ComponentsBuilder.() -> Unit)","description":"dev.kordex.core.builders.ExtensibleBotBuilder.components","location":"kord-extensions/dev.kordex.core.builders/-extensible-bot-builder/components.html","searchKeys":["components","suspend fun components(builder: suspend ComponentsBuilder.() -> Unit)","dev.kordex.core.builders.ExtensibleBotBuilder.components"]},{"name":"suspend fun delete(): Boolean","description":"dev.kordex.core.storage.StorageUnit.delete","location":"kord-extensions/dev.kordex.core.storage/-storage-unit/delete.html","searchKeys":["delete","suspend fun delete(): Boolean","dev.kordex.core.storage.StorageUnit.delete"]},{"name":"suspend fun delete(uuid: UUID): Boolean","description":"dev.kordex.core.datacollection.DataAPIClient.delete","location":"kord-extensions/dev.kordex.core.datacollection/-data-a-p-i-client/delete.html","searchKeys":["delete","suspend fun delete(uuid: UUID): Boolean","dev.kordex.core.datacollection.DataAPIClient.delete"]},{"name":"suspend fun ensureWebhook(channelObj: TopGuildMessageChannel, name: String, logoFormat: Image.Format = Image.Format.PNG, logo: suspend () -> ByteArray? = null): Webhook","description":"dev.kordex.core.utils.ensureWebhook","location":"kord-extensions/dev.kordex.core.utils/ensure-webhook.html","searchKeys":["ensureWebhook","suspend fun ensureWebhook(channelObj: TopGuildMessageChannel, name: String, logoFormat: Image.Format = Image.Format.PNG, logo: suspend () -> ByteArray? = null): Webhook","dev.kordex.core.utils.ensureWebhook"]},{"name":"suspend fun fail(message: Key? = null)","description":"dev.kordex.core.commands.converters.builders.ValidationContext.fail","location":"kord-extensions/dev.kordex.core.commands.converters.builders/-validation-context/fail.html","searchKeys":["fail","suspend fun fail(message: Key? = null)","dev.kordex.core.commands.converters.builders.ValidationContext.fail"]},{"name":"suspend fun failIf(message: Key? = null, callback: suspend () -> Boolean): Boolean","description":"dev.kordex.core.checks.types.CheckContext.failIf","location":"kord-extensions/dev.kordex.core.checks.types/-check-context/fail-if.html","searchKeys":["failIf","suspend fun failIf(message: Key? = null, callback: suspend () -> Boolean): Boolean","dev.kordex.core.checks.types.CheckContext.failIf"]},{"name":"suspend fun failIf(message: Key? = null, callback: suspend () -> Boolean): Boolean","description":"dev.kordex.core.commands.converters.builders.ValidationContext.failIf","location":"kord-extensions/dev.kordex.core.commands.converters.builders/-validation-context/fail-if.html","searchKeys":["failIf","suspend fun failIf(message: Key? = null, callback: suspend () -> Boolean): Boolean","dev.kordex.core.commands.converters.builders.ValidationContext.failIf"]},{"name":"suspend fun failIf(message: String, callback: suspend () -> Boolean): Boolean","description":"dev.kordex.core.checks.types.CheckContext.failIf","location":"kord-extensions/dev.kordex.core.checks.types/-check-context/fail-if.html","searchKeys":["failIf","suspend fun failIf(message: String, callback: suspend () -> Boolean): Boolean","dev.kordex.core.checks.types.CheckContext.failIf"]},{"name":"suspend fun failIf(message: String, callback: suspend () -> Boolean): Boolean","description":"dev.kordex.core.commands.converters.builders.ValidationContext.failIf","location":"kord-extensions/dev.kordex.core.commands.converters.builders/-validation-context/fail-if.html","searchKeys":["failIf","suspend fun failIf(message: String, callback: suspend () -> Boolean): Boolean","dev.kordex.core.commands.converters.builders.ValidationContext.failIf"]},{"name":"suspend fun failIf(value: Boolean, message: Key? = null): Boolean","description":"dev.kordex.core.commands.converters.builders.ValidationContext.failIf","location":"kord-extensions/dev.kordex.core.commands.converters.builders/-validation-context/fail-if.html","searchKeys":["failIf","suspend fun failIf(value: Boolean, message: Key? = null): Boolean","dev.kordex.core.commands.converters.builders.ValidationContext.failIf"]},{"name":"suspend fun failIfNot(message: Key? = null, callback: suspend () -> Boolean): Boolean","description":"dev.kordex.core.checks.types.CheckContext.failIfNot","location":"kord-extensions/dev.kordex.core.checks.types/-check-context/fail-if-not.html","searchKeys":["failIfNot","suspend fun failIfNot(message: Key? = null, callback: suspend () -> Boolean): Boolean","dev.kordex.core.checks.types.CheckContext.failIfNot"]},{"name":"suspend fun failIfNot(message: Key? = null, callback: suspend () -> Boolean): Boolean","description":"dev.kordex.core.commands.converters.builders.ValidationContext.failIfNot","location":"kord-extensions/dev.kordex.core.commands.converters.builders/-validation-context/fail-if-not.html","searchKeys":["failIfNot","suspend fun failIfNot(message: Key? = null, callback: suspend () -> Boolean): Boolean","dev.kordex.core.commands.converters.builders.ValidationContext.failIfNot"]},{"name":"suspend fun failIfNot(message: String, callback: suspend () -> Boolean): Boolean","description":"dev.kordex.core.checks.types.CheckContext.failIfNot","location":"kord-extensions/dev.kordex.core.checks.types/-check-context/fail-if-not.html","searchKeys":["failIfNot","suspend fun failIfNot(message: String, callback: suspend () -> Boolean): Boolean","dev.kordex.core.checks.types.CheckContext.failIfNot"]},{"name":"suspend fun failIfNot(message: String, callback: suspend () -> Boolean): Boolean","description":"dev.kordex.core.commands.converters.builders.ValidationContext.failIfNot","location":"kord-extensions/dev.kordex.core.commands.converters.builders/-validation-context/fail-if-not.html","searchKeys":["failIfNot","suspend fun failIfNot(message: String, callback: suspend () -> Boolean): Boolean","dev.kordex.core.commands.converters.builders.ValidationContext.failIfNot"]},{"name":"suspend fun failIfNot(value: Boolean, message: Key? = null): Boolean","description":"dev.kordex.core.commands.converters.builders.ValidationContext.failIfNot","location":"kord-extensions/dev.kordex.core.commands.converters.builders/-validation-context/fail-if-not.html","searchKeys":["failIfNot","suspend fun failIfNot(value: Boolean, message: Key? = null): Boolean","dev.kordex.core.commands.converters.builders.ValidationContext.failIfNot"]},{"name":"suspend fun from(old: Member?, new: Member): MemberDelta?","description":"dev.kordex.core.utils.deltas.MemberDelta.Companion.from","location":"kord-extensions/dev.kordex.core.utils.deltas/-member-delta/-companion/from.html","searchKeys":["from","suspend fun from(old: Member?, new: Member): MemberDelta?","dev.kordex.core.utils.deltas.MemberDelta.Companion.from"]},{"name":"suspend fun from(old: Member?, new: Member): RoleDelta?","description":"dev.kordex.core.utils.deltas.RoleDelta.Companion.from","location":"kord-extensions/dev.kordex.core.utils.deltas/-role-delta/-companion/from.html","searchKeys":["from","suspend fun from(old: Member?, new: Member): RoleDelta?","dev.kordex.core.utils.deltas.RoleDelta.Companion.from"]},{"name":"suspend fun general(builder: suspend Section.() -> Unit)","description":"dev.kordex.core.builders.AboutBuilder.general","location":"kord-extensions/dev.kordex.core.builders/-about-builder/general.html","searchKeys":["general","suspend fun general(builder: suspend Section.() -> Unit)","dev.kordex.core.builders.AboutBuilder.general"]},{"name":"suspend fun get(): T?","description":"dev.kordex.core.storage.StorageUnit.get","location":"kord-extensions/dev.kordex.core.storage/-storage-unit/get.html","searchKeys":["get","suspend fun get(): T?","dev.kordex.core.storage.StorageUnit.get"]},{"name":"suspend fun get(uuid: UUID): DataEntity?","description":"dev.kordex.core.datacollection.DataAPIClient.get","location":"kord-extensions/dev.kordex.core.datacollection/-data-a-p-i-client/get.html","searchKeys":["get","suspend fun get(uuid: UUID): DataEntity?","dev.kordex.core.datacollection.DataAPIClient.get"]},{"name":"suspend fun getMessageKey(): Key?","description":"dev.kordex.core.commands.converters.builders.ValidationContext.getMessageKey","location":"kord-extensions/dev.kordex.core.commands.converters.builders/-validation-context/get-message-key.html","searchKeys":["getMessageKey","suspend fun getMessageKey(): Key?","dev.kordex.core.commands.converters.builders.ValidationContext.getMessageKey"]},{"name":"suspend fun getTags(context: CommandContext, getter: suspend () -> ForumChannel?? = null): List<ForumTag>","description":"dev.kordex.core.commands.converters.impl.TagConverter.Companion.getTags","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-tag-converter/-companion/get-tags.html","searchKeys":["getTags","suspend fun getTags(context: CommandContext, getter: suspend () -> ForumChannel?? = null): List<ForumTag>","dev.kordex.core.commands.converters.impl.TagConverter.Companion.getTags"]},{"name":"suspend fun getTags(event: AutoCompleteInteractionCreateEvent, getter: suspend () -> ForumChannel?? = null): List<ForumTag>","description":"dev.kordex.core.commands.converters.impl.TagConverter.Companion.getTags","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-tag-converter/-companion/get-tags.html","searchKeys":["getTags","suspend fun getTags(event: AutoCompleteInteractionCreateEvent, getter: suspend () -> ForumChannel?? = null): List<ForumTag>","dev.kordex.core.commands.converters.impl.TagConverter.Companion.getTags"]},{"name":"suspend fun getTranslatedMessage(): String?","description":"dev.kordex.core.commands.converters.builders.ValidationContext.getTranslatedMessage","location":"kord-extensions/dev.kordex.core.commands.converters.builders/-validation-context/get-translated-message.html","searchKeys":["getTranslatedMessage","suspend fun getTranslatedMessage(): String?","dev.kordex.core.commands.converters.builders.ValidationContext.getTranslatedMessage"]},{"name":"suspend fun getUUID(): UUID?","description":"dev.kordex.core.datacollection.DataCollector.getUUID","location":"kord-extensions/dev.kordex.core.datacollection/-data-collector/get-u-u-i-d.html","searchKeys":["getUUID","suspend fun getUUID(): UUID?","dev.kordex.core.datacollection.DataCollector.getUUID"]},{"name":"suspend fun guildFor(event: Event): GuildBehavior?","description":"dev.kordex.core.checks.guildFor","location":"kord-extensions/dev.kordex.core.checks/guild-for.html","searchKeys":["guildFor","suspend fun guildFor(event: Event): GuildBehavior?","dev.kordex.core.checks.guildFor"]},{"name":"suspend fun handle(event: ButtonInteractionCreateEvent)","description":"dev.kordex.core.components.ComponentRegistry.handle","location":"kord-extensions/dev.kordex.core.components/-component-registry/handle.html","searchKeys":["handle","suspend fun handle(event: ButtonInteractionCreateEvent)","dev.kordex.core.components.ComponentRegistry.handle"]},{"name":"suspend fun handle(event: ModalSubmitInteractionCreateEvent)","description":"dev.kordex.core.components.ComponentRegistry.handle","location":"kord-extensions/dev.kordex.core.components/-component-registry/handle.html","searchKeys":["handle","suspend fun handle(event: ModalSubmitInteractionCreateEvent)","dev.kordex.core.components.ComponentRegistry.handle"]},{"name":"suspend fun handle(event: SelectMenuInteractionCreateEvent)","description":"dev.kordex.core.components.ComponentRegistry.handle","location":"kord-extensions/dev.kordex.core.components/-component-registry/handle.html","searchKeys":["handle","suspend fun handle(event: SelectMenuInteractionCreateEvent)","dev.kordex.core.components.ComponentRegistry.handle"]},{"name":"suspend fun hooks(builder: suspend HooksBuilder.() -> Unit)","description":"dev.kordex.core.builders.ExtensibleBotBuilder.hooks","location":"kord-extensions/dev.kordex.core.builders/-extensible-bot-builder/hooks.html","searchKeys":["hooks","suspend fun hooks(builder: suspend HooksBuilder.() -> Unit)","dev.kordex.core.builders.ExtensibleBotBuilder.hooks"]},{"name":"suspend fun i18n(builder: suspend I18nBuilder.() -> Unit)","description":"dev.kordex.core.builders.ExtensibleBotBuilder.i18n","location":"kord-extensions/dev.kordex.core.builders/-extensible-bot-builder/i18n.html","searchKeys":["i18n","suspend fun i18n(builder: suspend I18nBuilder.() -> Unit)","dev.kordex.core.builders.ExtensibleBotBuilder.i18n"]},{"name":"suspend fun initialRegistration()","description":"dev.kordex.core.commands.application.ApplicationCommandRegistry.initialRegistration","location":"kord-extensions/dev.kordex.core.commands.application/-application-command-registry/initial-registration.html","searchKeys":["initialRegistration","suspend fun initialRegistration()","dev.kordex.core.commands.application.ApplicationCommandRegistry.initialRegistration"]},{"name":"suspend fun join()","description":"dev.kordex.core.utils.scheduling.Task.join","location":"kord-extensions/dev.kordex.core.utils.scheduling/-task/join.html","searchKeys":["join","suspend fun join()","dev.kordex.core.utils.scheduling.Task.join"]},{"name":"suspend fun memberFor(event: Event): MemberBehavior?","description":"dev.kordex.core.checks.memberFor","location":"kord-extensions/dev.kordex.core.checks/member-for.html","searchKeys":["memberFor","suspend fun memberFor(event: Event): MemberBehavior?","dev.kordex.core.checks.memberFor"]},{"name":"suspend fun members(builder: suspend MembersBuilder.() -> Unit)","description":"dev.kordex.core.builders.ExtensibleBotBuilder.members","location":"kord-extensions/dev.kordex.core.builders/-extensible-bot-builder/members.html","searchKeys":["members","suspend fun members(builder: suspend MembersBuilder.() -> Unit)","dev.kordex.core.builders.ExtensibleBotBuilder.members"]},{"name":"suspend fun messageFor(event: Event): MessageBehavior?","description":"dev.kordex.core.checks.messageFor","location":"kord-extensions/dev.kordex.core.checks/message-for.html","searchKeys":["messageFor","suspend fun messageFor(event: Event): MessageBehavior?","dev.kordex.core.checks.messageFor"]},{"name":"suspend fun mutate(body: suspend PageTransitionCallback.() -> Unit)","description":"dev.kordex.core.pagination.builders.PaginatorBuilder.mutate","location":"kord-extensions/dev.kordex.core.pagination.builders/-paginator-builder/mutate.html","searchKeys":["mutate","suspend fun mutate(body: suspend PageTransitionCallback.() -> Unit)","dev.kordex.core.pagination.builders.PaginatorBuilder.mutate"]},{"name":"suspend fun paginator(defaultGroup: Key = EMPTY_KEY, pingInReply: Boolean = true, targetChannel: MessageChannelBehavior? = null, targetMessage: Message? = null, body: suspend PaginatorBuilder.() -> Unit): MessageButtonPaginator","description":"dev.kordex.core.commands.chat.ChatCommandContext.paginator","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-command-context/paginator.html","searchKeys":["paginator","suspend fun paginator(defaultGroup: Key = EMPTY_KEY, pingInReply: Boolean = true, targetChannel: MessageChannelBehavior? = null, targetMessage: Message? = null, body: suspend PaginatorBuilder.() -> Unit): MessageButtonPaginator","dev.kordex.core.commands.chat.ChatCommandContext.paginator"]},{"name":"suspend fun passIf(callback: suspend () -> Boolean): Boolean","description":"dev.kordex.core.checks.types.CheckContext.passIf","location":"kord-extensions/dev.kordex.core.checks.types/-check-context/pass-if.html","searchKeys":["passIf","suspend fun passIf(callback: suspend () -> Boolean): Boolean","dev.kordex.core.checks.types.CheckContext.passIf"]},{"name":"suspend fun passIf(callback: suspend () -> Boolean): Boolean","description":"dev.kordex.core.commands.converters.builders.ValidationContext.passIf","location":"kord-extensions/dev.kordex.core.commands.converters.builders/-validation-context/pass-if.html","searchKeys":["passIf","suspend fun passIf(callback: suspend () -> Boolean): Boolean","dev.kordex.core.commands.converters.builders.ValidationContext.passIf"]},{"name":"suspend fun passIfNot(callback: suspend () -> Boolean): Boolean","description":"dev.kordex.core.checks.types.CheckContext.passIfNot","location":"kord-extensions/dev.kordex.core.checks.types/-check-context/pass-if-not.html","searchKeys":["passIfNot","suspend fun passIfNot(callback: suspend () -> Boolean): Boolean","dev.kordex.core.checks.types.CheckContext.passIfNot"]},{"name":"suspend fun passIfNot(callback: suspend () -> Boolean): Boolean","description":"dev.kordex.core.commands.converters.builders.ValidationContext.passIfNot","location":"kord-extensions/dev.kordex.core.commands.converters.builders/-validation-context/pass-if-not.html","searchKeys":["passIfNot","suspend fun passIfNot(callback: suspend () -> Boolean): Boolean","dev.kordex.core.commands.converters.builders.ValidationContext.passIfNot"]},{"name":"suspend fun plugins(builder: suspend PluginBuilder.() -> Unit)","description":"dev.kordex.core.builders.ExtensibleBotBuilder.plugins","location":"kord-extensions/dev.kordex.core.builders/-extensible-bot-builder/plugins.html","searchKeys":["plugins","suspend fun plugins(builder: suspend PluginBuilder.() -> Unit)","dev.kordex.core.builders.ExtensibleBotBuilder.plugins"]},{"name":"suspend fun reload(): T?","description":"dev.kordex.core.storage.StorageUnit.reload","location":"kord-extensions/dev.kordex.core.storage/-storage-unit/reload.html","searchKeys":["reload","suspend fun reload(): T?","dev.kordex.core.storage.StorageUnit.reload"]},{"name":"suspend fun restart()","description":"dev.kordex.core.utils.scheduling.Task.restart","location":"kord-extensions/dev.kordex.core.utils.scheduling/-task/restart.html","searchKeys":["restart","suspend fun restart()","dev.kordex.core.utils.scheduling.Task.restart"]},{"name":"suspend fun restartJoining()","description":"dev.kordex.core.utils.scheduling.Task.restartJoining","location":"kord-extensions/dev.kordex.core.utils.scheduling/-task/restart-joining.html","searchKeys":["restartJoining","suspend fun restartJoining()","dev.kordex.core.utils.scheduling.Task.restartJoining"]},{"name":"suspend fun save(): T?","description":"dev.kordex.core.storage.StorageUnit.save","location":"kord-extensions/dev.kordex.core.storage/-storage-unit/save.html","searchKeys":["save","suspend fun save(): T?","dev.kordex.core.storage.StorageUnit.save"]},{"name":"suspend fun save(data: T): T","description":"dev.kordex.core.storage.StorageUnit.save","location":"kord-extensions/dev.kordex.core.storage/-storage-unit/save.html","searchKeys":["save","suspend fun save(data: T): T","dev.kordex.core.storage.StorageUnit.save"]},{"name":"suspend fun schedule(delay: Duration, startNow: Boolean = true, name: String? = null, pollingSeconds: Long = 1, repeat: Boolean = false, callback: suspend () -> Unit): Task","description":"dev.kordex.core.utils.scheduling.Scheduler.schedule","location":"kord-extensions/dev.kordex.core.utils.scheduling/-scheduler/schedule.html","searchKeys":["schedule","suspend fun schedule(delay: Duration, startNow: Boolean = true, name: String? = null, pollingSeconds: Long = 1, repeat: Boolean = false, callback: suspend () -> Unit): Task","dev.kordex.core.utils.scheduling.Scheduler.schedule"]},{"name":"suspend fun schedule(seconds: Long, startNow: Boolean = true, name: String? = null, pollingSeconds: Long = 1, repeat: Boolean = false, callback: suspend () -> Unit): Task","description":"dev.kordex.core.utils.scheduling.Scheduler.schedule","location":"kord-extensions/dev.kordex.core.utils.scheduling/-scheduler/schedule.html","searchKeys":["schedule","suspend fun schedule(seconds: Long, startNow: Boolean = true, name: String? = null, pollingSeconds: Long = 1, repeat: Boolean = false, callback: suspend () -> Unit): Task","dev.kordex.core.utils.scheduling.Scheduler.schedule"]},{"name":"suspend fun section(name: Key, description: Key, builder: suspend Section.() -> Unit)","description":"dev.kordex.core.builders.AboutBuilder.section","location":"kord-extensions/dev.kordex.core.builders/-about-builder/section.html","searchKeys":["section","suspend fun section(name: Key, description: Key, builder: suspend Section.() -> Unit)","dev.kordex.core.builders.AboutBuilder.section"]},{"name":"suspend fun section(name: String, description: String, builder: suspend Section.() -> Unit)","description":"dev.kordex.core.builders.AboutBuilder.section","location":"kord-extensions/dev.kordex.core.builders/-about-builder/section.html","searchKeys":["section","suspend fun section(name: String, description: String, builder: suspend Section.() -> Unit)","dev.kordex.core.builders.AboutBuilder.section"]},{"name":"suspend fun sendAndDeferEphemeral(context: ApplicationCommandContext): EphemeralMessageInteractionResponseBehavior?","description":"dev.kordex.core.components.forms.ModalForm.sendAndDeferEphemeral","location":"kord-extensions/dev.kordex.core.components.forms/-modal-form/send-and-defer-ephemeral.html","searchKeys":["sendAndDeferEphemeral","suspend fun sendAndDeferEphemeral(context: ApplicationCommandContext): EphemeralMessageInteractionResponseBehavior?","dev.kordex.core.components.forms.ModalForm.sendAndDeferEphemeral"]},{"name":"suspend fun sendAndDeferEphemeral(context: ComponentContext<*>): EphemeralMessageInteractionResponseBehavior?","description":"dev.kordex.core.components.forms.ModalForm.sendAndDeferEphemeral","location":"kord-extensions/dev.kordex.core.components.forms/-modal-form/send-and-defer-ephemeral.html","searchKeys":["sendAndDeferEphemeral","suspend fun sendAndDeferEphemeral(context: ComponentContext<*>): EphemeralMessageInteractionResponseBehavior?","dev.kordex.core.components.forms.ModalForm.sendAndDeferEphemeral"]},{"name":"suspend fun sendAndDeferPublic(context: ApplicationCommandContext): PublicMessageInteractionResponseBehavior?","description":"dev.kordex.core.components.forms.ModalForm.sendAndDeferPublic","location":"kord-extensions/dev.kordex.core.components.forms/-modal-form/send-and-defer-public.html","searchKeys":["sendAndDeferPublic","suspend fun sendAndDeferPublic(context: ApplicationCommandContext): PublicMessageInteractionResponseBehavior?","dev.kordex.core.components.forms.ModalForm.sendAndDeferPublic"]},{"name":"suspend fun sendAndDeferPublic(context: ComponentContext<*>): PublicMessageInteractionResponseBehavior?","description":"dev.kordex.core.components.forms.ModalForm.sendAndDeferPublic","location":"kord-extensions/dev.kordex.core.components.forms/-modal-form/send-and-defer-public.html","searchKeys":["sendAndDeferPublic","suspend fun sendAndDeferPublic(context: ComponentContext<*>): PublicMessageInteractionResponseBehavior?","dev.kordex.core.components.forms.ModalForm.sendAndDeferPublic"]},{"name":"suspend fun sendFeedback(id: SentryId, comments: String? = null, name: String? = null, removeId: Boolean = true)","description":"dev.kordex.core.sentry.SentryAdapter.sendFeedback","location":"kord-extensions/dev.kordex.core.sentry/-sentry-adapter/send-feedback.html","searchKeys":["sendFeedback","suspend fun sendFeedback(id: SentryId, comments: String? = null, name: String? = null, removeId: Boolean = true)","dev.kordex.core.sentry.SentryAdapter.sendFeedback"]},{"name":"suspend fun sendHelp(): Boolean","description":"dev.kordex.core.commands.chat.ChatCommandContext.sendHelp","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-command-context/send-help.html","searchKeys":["sendHelp","suspend fun sendHelp(): Boolean","dev.kordex.core.commands.chat.ChatCommandContext.sendHelp"]},{"name":"suspend fun setCaptureTypes(capture: SentryCapture)","description":"dev.kordex.core.sentry.SentryAdapter.setCaptureTypes","location":"kord-extensions/dev.kordex.core.sentry/-sentry-adapter/set-capture-types.html","searchKeys":["setCaptureTypes","suspend fun setCaptureTypes(capture: SentryCapture)","dev.kordex.core.sentry.SentryAdapter.setCaptureTypes"]},{"name":"suspend fun start()","description":"dev.kordex.core.utils.scheduling.Task.start","location":"kord-extensions/dev.kordex.core.utils.scheduling/-task/start.html","searchKeys":["start","suspend fun start()","dev.kordex.core.utils.scheduling.Task.start"]},{"name":"suspend fun submit(data: Entity): UUID","description":"dev.kordex.core.datacollection.DataAPIClient.submit","location":"kord-extensions/dev.kordex.core.datacollection/-data-a-p-i-client/submit.html","searchKeys":["submit","suspend fun submit(data: Entity): UUID","dev.kordex.core.datacollection.DataAPIClient.submit"]},{"name":"suspend fun switchGroup(group: Key)","description":"dev.kordex.core.pagination.BaseButtonPaginator.switchGroup","location":"kord-extensions/dev.kordex.core.pagination/-base-button-paginator/switch-group.html","searchKeys":["switchGroup","suspend fun switchGroup(group: Key)","dev.kordex.core.pagination.BaseButtonPaginator.switchGroup"]},{"name":"suspend fun threadFor(event: Event): ThreadChannelBehavior?","description":"dev.kordex.core.checks.threadFor","location":"kord-extensions/dev.kordex.core.checks/thread-for.html","searchKeys":["threadFor","suspend fun threadFor(event: Event): ThreadChannelBehavior?","dev.kordex.core.checks.threadFor"]},{"name":"suspend fun throwIfFailed()","description":"dev.kordex.core.commands.converters.builders.ValidationContext.throwIfFailed","location":"kord-extensions/dev.kordex.core.commands.converters.builders/-validation-context/throw-if-failed.html","searchKeys":["throwIfFailed","suspend fun throwIfFailed()","dev.kordex.core.commands.converters.builders.ValidationContext.throwIfFailed"]},{"name":"suspend fun throwInvalidValue(arguments: Arguments, argument: Argument<*>, parser: StringParser, context: ChatCommandContext<*>): Nothing","description":"dev.kordex.core.commands.chat.ChatCommandParser.throwInvalidValue","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-command-parser/throw-invalid-value.html","searchKeys":["throwInvalidValue","suspend fun throwInvalidValue(arguments: Arguments, argument: Argument<*>, parser: StringParser, context: ChatCommandContext<*>): Nothing","dev.kordex.core.commands.chat.ChatCommandParser.throwInvalidValue"]},{"name":"suspend fun throwNotAllValid(arguments: Arguments, argument: Argument<*>, parser: StringParser, context: ChatCommandContext<*>, numArgs: Int, numParsed: Int): Nothing","description":"dev.kordex.core.commands.chat.ChatCommandParser.throwNotAllValid","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-command-parser/throw-not-all-valid.html","searchKeys":["throwNotAllValid","suspend fun throwNotAllValid(arguments: Arguments, argument: Argument<*>, parser: StringParser, context: ChatCommandContext<*>, numArgs: Int, numParsed: Int): Nothing","dev.kordex.core.commands.chat.ChatCommandParser.throwNotAllValid"]},{"name":"suspend fun toKord(): OptionsBuilder","description":"dev.kordex.core.commands.OptionWrapper.toKord","location":"kord-extensions/dev.kordex.core.commands/-option-wrapper/to-kord.html","searchKeys":["toKord","suspend fun toKord(): OptionsBuilder","dev.kordex.core.commands.OptionWrapper.toKord"]},{"name":"suspend fun topChannelFor(event: Event): ChannelBehavior?","description":"dev.kordex.core.checks.topChannelFor","location":"kord-extensions/dev.kordex.core.checks/top-channel-for.html","searchKeys":["topChannelFor","suspend fun topChannelFor(event: Event): ChannelBehavior?","dev.kordex.core.checks.topChannelFor"]},{"name":"suspend fun userFor(event: Event): UserBehavior?","description":"dev.kordex.core.checks.userFor","location":"kord-extensions/dev.kordex.core.checks/user-for.html","searchKeys":["userFor","suspend fun userFor(event: Event): UserBehavior?","dev.kordex.core.checks.userFor"]},{"name":"suspend fun waitForMessage(timeout: Long, filter: suspend MessageCreateEvent.() -> Boolean = { true }): Message?","description":"dev.kordex.core.utils.waitForMessage","location":"kord-extensions/dev.kordex.core.utils/wait-for-message.html","searchKeys":["waitForMessage","suspend fun waitForMessage(timeout: Long, filter: suspend MessageCreateEvent.() -> Boolean = { true }): Message?","dev.kordex.core.utils.waitForMessage"]},{"name":"suspend fun withChannel(channelObj: ChannelBehavior): StorageUnit<T>","description":"dev.kordex.core.storage.StorageUnit.withChannel","location":"kord-extensions/dev.kordex.core.storage/-storage-unit/with-channel.html","searchKeys":["withChannel","suspend fun withChannel(channelObj: ChannelBehavior): StorageUnit<T>","dev.kordex.core.storage.StorageUnit.withChannel"]},{"name":"suspend fun withChannelFrom(event: Event): StorageUnit<T>","description":"dev.kordex.core.storage.StorageUnit.withChannelFrom","location":"kord-extensions/dev.kordex.core.storage/-storage-unit/with-channel-from.html","searchKeys":["withChannelFrom","suspend fun withChannelFrom(event: Event): StorageUnit<T>","dev.kordex.core.storage.StorageUnit.withChannelFrom"]},{"name":"suspend fun withGuildFrom(event: Event): StorageUnit<T>","description":"dev.kordex.core.storage.StorageUnit.withGuildFrom","location":"kord-extensions/dev.kordex.core.storage/-storage-unit/with-guild-from.html","searchKeys":["withGuildFrom","suspend fun withGuildFrom(event: Event): StorageUnit<T>","dev.kordex.core.storage.StorageUnit.withGuildFrom"]},{"name":"suspend fun withMessageFrom(event: Event): StorageUnit<T>","description":"dev.kordex.core.storage.StorageUnit.withMessageFrom","location":"kord-extensions/dev.kordex.core.storage/-storage-unit/with-message-from.html","searchKeys":["withMessageFrom","suspend fun withMessageFrom(event: Event): StorageUnit<T>","dev.kordex.core.storage.StorageUnit.withMessageFrom"]},{"name":"suspend fun withUserFrom(event: Event): StorageUnit<T>","description":"dev.kordex.core.storage.StorageUnit.withUserFrom","location":"kord-extensions/dev.kordex.core.storage/-storage-unit/with-user-from.html","searchKeys":["withUserFrom","suspend fun withUserFrom(event: Event): StorageUnit<T>","dev.kordex.core.storage.StorageUnit.withUserFrom"]},{"name":"suspend fun wrapIntegerOption(displayName: Key, description: Key, body: suspend IntegerOptionBuilder.() -> Unit): ChoiceOptionWrapper.Integer","description":"dev.kordex.core.commands.wrapIntegerOption","location":"kord-extensions/dev.kordex.core.commands/wrap-integer-option.html","searchKeys":["wrapIntegerOption","suspend fun wrapIntegerOption(displayName: Key, description: Key, body: suspend IntegerOptionBuilder.() -> Unit): ChoiceOptionWrapper.Integer","dev.kordex.core.commands.wrapIntegerOption"]},{"name":"suspend fun wrapNumberOption(displayName: Key, description: Key, body: suspend NumberOptionBuilder.() -> Unit): ChoiceOptionWrapper.Number","description":"dev.kordex.core.commands.wrapNumberOption","location":"kord-extensions/dev.kordex.core.commands/wrap-number-option.html","searchKeys":["wrapNumberOption","suspend fun wrapNumberOption(displayName: Key, description: Key, body: suspend NumberOptionBuilder.() -> Unit): ChoiceOptionWrapper.Number","dev.kordex.core.commands.wrapNumberOption"]},{"name":"suspend fun wrapStringOption(displayName: Key, description: Key, body: suspend StringChoiceBuilder.() -> Unit): ChoiceOptionWrapper.String","description":"dev.kordex.core.commands.wrapStringOption","location":"kord-extensions/dev.kordex.core.commands/wrap-string-option.html","searchKeys":["wrapStringOption","suspend fun wrapStringOption(displayName: Key, description: Key, body: suspend StringChoiceBuilder.() -> Unit): ChoiceOptionWrapper.String","dev.kordex.core.commands.wrapStringOption"]},{"name":"typealias AutoCompleteCallback = suspend AutoCompleteInteraction.(event: AutoCompleteInteractionCreateEvent) -> Unit?","description":"dev.kordex.core.commands.converters.AutoCompleteCallback","location":"kord-extensions/dev.kordex.core.commands.converters/-auto-complete-callback/index.html","searchKeys":["AutoCompleteCallback","typealias AutoCompleteCallback = suspend AutoCompleteInteraction.(event: AutoCompleteInteractionCreateEvent) -> Unit?","dev.kordex.core.commands.converters.AutoCompleteCallback"]},{"name":"typealias ChatCommandCheck = CheckWithCache<MessageCreateEvent>","description":"dev.kordex.core.checks.types.ChatCommandCheck","location":"kord-extensions/dev.kordex.core.checks.types/-chat-command-check/index.html","searchKeys":["ChatCommandCheck","typealias ChatCommandCheck = CheckWithCache<MessageCreateEvent>","dev.kordex.core.checks.types.ChatCommandCheck"]},{"name":"typealias Check<T> = suspend CheckContext<T>.() -> Unit","description":"dev.kordex.core.checks.types.Check","location":"kord-extensions/dev.kordex.core.checks.types/-check/index.html","searchKeys":["Check","typealias Check<T> = suspend CheckContext<T>.() -> Unit","dev.kordex.core.checks.types.Check"]},{"name":"typealias CheckWithCache<T> = suspend CheckContextWithCache<T>.() -> Unit","description":"dev.kordex.core.checks.types.CheckWithCache","location":"kord-extensions/dev.kordex.core.checks.types/-check-with-cache/index.html","searchKeys":["CheckWithCache","typealias CheckWithCache<T> = suspend CheckContextWithCache<T>.() -> Unit","dev.kordex.core.checks.types.CheckWithCache"]},{"name":"typealias CoordinatePair = Pair<Int, Int>","description":"dev.kordex.core.components.forms.CoordinatePair","location":"kord-extensions/dev.kordex.core.components.forms/-coordinate-pair/index.html","searchKeys":["CoordinatePair","typealias CoordinatePair = Pair<Int, Int>","dev.kordex.core.components.forms.CoordinatePair"]},{"name":"typealias ExtensionBuilder = () -> Extension","description":"dev.kordex.core.plugins.ExtensionBuilder","location":"kord-extensions/dev.kordex.core.plugins/-extension-builder/index.html","searchKeys":["ExtensionBuilder","typealias ExtensionBuilder = () -> Extension","dev.kordex.core.plugins.ExtensionBuilder"]},{"name":"typealias GenericInteractionContext = InteractionContext<*, *, *, *>","description":"dev.kordex.core.types.GenericInteractionContext","location":"kord-extensions/dev.kordex.core.types/-generic-interaction-context/index.html","searchKeys":["GenericInteractionContext","typealias GenericInteractionContext = InteractionContext<*, *, *, *>","dev.kordex.core.types.GenericInteractionContext"]},{"name":"typealias InitialEphemeralButtonResponseBuilder = suspend InteractionResponseCreateBuilder.(ButtonInteractionCreateEvent) -> Unit?","description":"dev.kordex.core.components.buttons.InitialEphemeralButtonResponseBuilder","location":"kord-extensions/dev.kordex.core.components.buttons/-initial-ephemeral-button-response-builder/index.html","searchKeys":["InitialEphemeralButtonResponseBuilder","typealias InitialEphemeralButtonResponseBuilder = suspend InteractionResponseCreateBuilder.(ButtonInteractionCreateEvent) -> Unit?","dev.kordex.core.components.buttons.InitialEphemeralButtonResponseBuilder"]},{"name":"typealias InitialEphemeralMessageResponseBuilder = suspend InteractionResponseCreateBuilder.(MessageCommandInteractionCreateEvent) -> Unit?","description":"dev.kordex.core.commands.application.message.InitialEphemeralMessageResponseBuilder","location":"kord-extensions/dev.kordex.core.commands.application.message/-initial-ephemeral-message-response-builder/index.html","searchKeys":["InitialEphemeralMessageResponseBuilder","typealias InitialEphemeralMessageResponseBuilder = suspend InteractionResponseCreateBuilder.(MessageCommandInteractionCreateEvent) -> Unit?","dev.kordex.core.commands.application.message.InitialEphemeralMessageResponseBuilder"]},{"name":"typealias InitialEphemeralSelectMenuResponseBuilder = suspend InteractionResponseCreateBuilder.(SelectMenuInteractionCreateEvent) -> Unit?","description":"dev.kordex.core.components.menus.InitialEphemeralSelectMenuResponseBuilder","location":"kord-extensions/dev.kordex.core.components.menus/-initial-ephemeral-select-menu-response-builder/index.html","searchKeys":["InitialEphemeralSelectMenuResponseBuilder","typealias InitialEphemeralSelectMenuResponseBuilder = suspend InteractionResponseCreateBuilder.(SelectMenuInteractionCreateEvent) -> Unit?","dev.kordex.core.components.menus.InitialEphemeralSelectMenuResponseBuilder"]},{"name":"typealias InitialEphemeralSlashResponseBuilder = suspend InteractionResponseCreateBuilder.(ChatInputCommandInteractionCreateEvent) -> Unit?","description":"dev.kordex.core.commands.application.slash.InitialEphemeralSlashResponseBuilder","location":"kord-extensions/dev.kordex.core.commands.application.slash/-initial-ephemeral-slash-response-builder/index.html","searchKeys":["InitialEphemeralSlashResponseBuilder","typealias InitialEphemeralSlashResponseBuilder = suspend InteractionResponseCreateBuilder.(ChatInputCommandInteractionCreateEvent) -> Unit?","dev.kordex.core.commands.application.slash.InitialEphemeralSlashResponseBuilder"]},{"name":"typealias InitialEphemeralUserResponseBuilder = suspend InteractionResponseCreateBuilder.(UserCommandInteractionCreateEvent) -> Unit?","description":"dev.kordex.core.commands.application.user.InitialEphemeralUserResponseBuilder","location":"kord-extensions/dev.kordex.core.commands.application.user/-initial-ephemeral-user-response-builder/index.html","searchKeys":["InitialEphemeralUserResponseBuilder","typealias InitialEphemeralUserResponseBuilder = suspend InteractionResponseCreateBuilder.(UserCommandInteractionCreateEvent) -> Unit?","dev.kordex.core.commands.application.user.InitialEphemeralUserResponseBuilder"]},{"name":"typealias InitialPublicButtonResponseBuilder = suspend InteractionResponseCreateBuilder.(ButtonInteractionCreateEvent) -> Unit?","description":"dev.kordex.core.components.buttons.InitialPublicButtonResponseBuilder","location":"kord-extensions/dev.kordex.core.components.buttons/-initial-public-button-response-builder/index.html","searchKeys":["InitialPublicButtonResponseBuilder","typealias InitialPublicButtonResponseBuilder = suspend InteractionResponseCreateBuilder.(ButtonInteractionCreateEvent) -> Unit?","dev.kordex.core.components.buttons.InitialPublicButtonResponseBuilder"]},{"name":"typealias InitialPublicMessageResponseBuilder = suspend InteractionResponseCreateBuilder.(MessageCommandInteractionCreateEvent) -> Unit?","description":"dev.kordex.core.commands.application.message.InitialPublicMessageResponseBuilder","location":"kord-extensions/dev.kordex.core.commands.application.message/-initial-public-message-response-builder/index.html","searchKeys":["InitialPublicMessageResponseBuilder","typealias InitialPublicMessageResponseBuilder = suspend InteractionResponseCreateBuilder.(MessageCommandInteractionCreateEvent) -> Unit?","dev.kordex.core.commands.application.message.InitialPublicMessageResponseBuilder"]},{"name":"typealias InitialPublicSelectMenuResponseBuilder = suspend InteractionResponseCreateBuilder.(SelectMenuInteractionCreateEvent) -> Unit?","description":"dev.kordex.core.components.menus.InitialPublicSelectMenuResponseBuilder","location":"kord-extensions/dev.kordex.core.components.menus/-initial-public-select-menu-response-builder/index.html","searchKeys":["InitialPublicSelectMenuResponseBuilder","typealias InitialPublicSelectMenuResponseBuilder = suspend InteractionResponseCreateBuilder.(SelectMenuInteractionCreateEvent) -> Unit?","dev.kordex.core.components.menus.InitialPublicSelectMenuResponseBuilder"]},{"name":"typealias InitialPublicSlashResponseBehavior = suspend InteractionResponseCreateBuilder.(ChatInputCommandInteractionCreateEvent) -> Unit?","description":"dev.kordex.core.commands.application.slash.InitialPublicSlashResponseBehavior","location":"kord-extensions/dev.kordex.core.commands.application.slash/-initial-public-slash-response-behavior/index.html","searchKeys":["InitialPublicSlashResponseBehavior","typealias InitialPublicSlashResponseBehavior = suspend InteractionResponseCreateBuilder.(ChatInputCommandInteractionCreateEvent) -> Unit?","dev.kordex.core.commands.application.slash.InitialPublicSlashResponseBehavior"]},{"name":"typealias InitialPublicUserResponseBuilder = suspend InteractionResponseCreateBuilder.(UserCommandInteractionCreateEvent) -> Unit?","description":"dev.kordex.core.commands.application.user.InitialPublicUserResponseBuilder","location":"kord-extensions/dev.kordex.core.commands.application.user/-initial-public-user-response-builder/index.html","searchKeys":["InitialPublicUserResponseBuilder","typealias InitialPublicUserResponseBuilder = suspend InteractionResponseCreateBuilder.(UserCommandInteractionCreateEvent) -> Unit?","dev.kordex.core.commands.application.user.InitialPublicUserResponseBuilder"]},{"name":"typealias MessageCommandCheck = CheckWithCache<MessageCommandInteractionCreateEvent>","description":"dev.kordex.core.checks.types.MessageCommandCheck","location":"kord-extensions/dev.kordex.core.checks.types/-message-command-check/index.html","searchKeys":["MessageCommandCheck","typealias MessageCommandCheck = CheckWithCache<MessageCommandInteractionCreateEvent>","dev.kordex.core.checks.types.MessageCommandCheck"]},{"name":"typealias MutableStringKeyedMap<T> = MutableMap<String, T & Any>","description":"dev.kordex.core.utils.MutableStringKeyedMap","location":"kord-extensions/dev.kordex.core.utils/-mutable-string-keyed-map/index.html","searchKeys":["MutableStringKeyedMap","typealias MutableStringKeyedMap<T> = MutableMap<String, T & Any>","dev.kordex.core.utils.MutableStringKeyedMap"]},{"name":"typealias MutableStringMap = MutableStringKeyedMap<String>","description":"dev.kordex.core.utils.MutableStringMap","location":"kord-extensions/dev.kordex.core.utils/-mutable-string-map/index.html","searchKeys":["MutableStringMap","typealias MutableStringMap = MutableStringKeyedMap<String>","dev.kordex.core.utils.MutableStringMap"]},{"name":"typealias Mutator<T> = (value: T) -> T?","description":"dev.kordex.core.commands.converters.Mutator","location":"kord-extensions/dev.kordex.core.commands.converters/-mutator/index.html","searchKeys":["Mutator","typealias Mutator<T> = (value: T) -> T?","dev.kordex.core.commands.converters.Mutator"]},{"name":"typealias PageMutator = suspend EmbedBuilder.(page: Page) -> Unit","description":"dev.kordex.core.pagination.builders.PageMutator","location":"kord-extensions/dev.kordex.core.pagination.builders/-page-mutator/index.html","searchKeys":["PageMutator","typealias PageMutator = suspend EmbedBuilder.(page: Page) -> Unit","dev.kordex.core.pagination.builders.PageMutator"]},{"name":"typealias PaginatorMutator = suspend BasePaginator.() -> Unit","description":"dev.kordex.core.pagination.builders.PaginatorMutator","location":"kord-extensions/dev.kordex.core.pagination.builders/-paginator-mutator/index.html","searchKeys":["PaginatorMutator","typealias PaginatorMutator = suspend BasePaginator.() -> Unit","dev.kordex.core.pagination.builders.PaginatorMutator"]},{"name":"typealias PostProcessor = Key.(translation: String) -> String","description":"dev.kordex.core.i18n.types.PostProcessor","location":"kord-extensions/dev.kordex.core.i18n.types/-post-processor/index.html","searchKeys":["PostProcessor","typealias PostProcessor = Key.(translation: String) -> String","dev.kordex.core.i18n.types.PostProcessor"]},{"name":"typealias SettingsCallback = suspend ExtensibleBotBuilder.() -> Unit","description":"dev.kordex.core.plugins.SettingsCallback","location":"kord-extensions/dev.kordex.core.plugins/-settings-callback/index.html","searchKeys":["SettingsCallback","typealias SettingsCallback = suspend ExtensibleBotBuilder.() -> Unit","dev.kordex.core.plugins.SettingsCallback"]},{"name":"typealias SlashCommandCheck = CheckWithCache<ChatInputCommandInteractionCreateEvent>","description":"dev.kordex.core.checks.types.SlashCommandCheck","location":"kord-extensions/dev.kordex.core.checks.types/-slash-command-check/index.html","searchKeys":["SlashCommandCheck","typealias SlashCommandCheck = CheckWithCache<ChatInputCommandInteractionCreateEvent>","dev.kordex.core.checks.types.SlashCommandCheck"]},{"name":"typealias StringKeyedMap<T> = Map<String, T & Any>","description":"dev.kordex.core.utils.StringKeyedMap","location":"kord-extensions/dev.kordex.core.utils/-string-keyed-map/index.html","searchKeys":["StringKeyedMap","typealias StringKeyedMap<T> = Map<String, T & Any>","dev.kordex.core.utils.StringKeyedMap"]},{"name":"typealias StringMap = StringKeyedMap<String>","description":"dev.kordex.core.utils.StringMap","location":"kord-extensions/dev.kordex.core.utils/-string-map/index.html","searchKeys":["StringMap","typealias StringMap = StringKeyedMap<String>","dev.kordex.core.utils.StringMap"]},{"name":"typealias UserCommandCheck = CheckWithCache<UserCommandInteractionCreateEvent>","description":"dev.kordex.core.checks.types.UserCommandCheck","location":"kord-extensions/dev.kordex.core.checks.types/-user-command-check/index.html","searchKeys":["UserCommandCheck","typealias UserCommandCheck = CheckWithCache<UserCommandInteractionCreateEvent>","dev.kordex.core.checks.types.UserCommandCheck"]},{"name":"typealias Validator<T> = suspend ValidationContext<T>.() -> Unit?","description":"dev.kordex.core.commands.converters.Validator","location":"kord-extensions/dev.kordex.core.commands.converters/-validator/index.html","searchKeys":["Validator","typealias Validator<T> = suspend ValidationContext<T>.() -> Unit?","dev.kordex.core.commands.converters.Validator"]},{"name":"typealias WidgetGrid = Array<MutableList<Widget<*>?>>","description":"dev.kordex.core.components.forms.WidgetGrid","location":"kord-extensions/dev.kordex.core.components.forms/-widget-grid/index.html","searchKeys":["WidgetGrid","typealias WidgetGrid = Array<MutableList<Widget<*>?>>","dev.kordex.core.components.forms.WidgetGrid"]},{"name":"val ALL_LOCALES: Map<String, Locale>","description":"dev.kordex.core.i18n.SupportedLocales.ALL_LOCALES","location":"kord-extensions/dev.kordex.core.i18n/-supported-locales/-a-l-l_-l-o-c-a-l-e-s.html","searchKeys":["ALL_LOCALES","val ALL_LOCALES: Map<String, Locale>","dev.kordex.core.i18n.SupportedLocales.ALL_LOCALES"]},{"name":"val ALL_LOCALES_SET: Set<Locale>","description":"dev.kordex.core.i18n.SupportedLocales.ALL_LOCALES_SET","location":"kord-extensions/dev.kordex.core.i18n/-supported-locales/-a-l-l_-l-o-c-a-l-e-s_-s-e-t.html","searchKeys":["ALL_LOCALES_SET","val ALL_LOCALES_SET: Set<Locale>","dev.kordex.core.i18n.SupportedLocales.ALL_LOCALES_SET"]},{"name":"val ApplicationCommandType.name: String","description":"dev.kordex.core.commands.application.ApplicationCommandRegistry.name","location":"kord-extensions/dev.kordex.core.commands.application/-application-command-registry/name.html","searchKeys":["name","val ApplicationCommandType.name: String","dev.kordex.core.commands.application.ApplicationCommandRegistry.name"]},{"name":"val AutoCompleteInteractionCreateEvent.focusedOption: OptionValue<*>","description":"dev.kordex.core.utils.focusedOption","location":"kord-extensions/dev.kordex.core.utils/focused-option.html","searchKeys":["focusedOption","val AutoCompleteInteractionCreateEvent.focusedOption: OptionValue<*>","dev.kordex.core.utils.focusedOption"]},{"name":"val CHINESE_SIMPLIFIED: Locale","description":"dev.kordex.core.i18n.SupportedLocales.CHINESE_SIMPLIFIED","location":"kord-extensions/dev.kordex.core.i18n/-supported-locales/-c-h-i-n-e-s-e_-s-i-m-p-l-i-f-i-e-d.html","searchKeys":["CHINESE_SIMPLIFIED","val CHINESE_SIMPLIFIED: Locale","dev.kordex.core.i18n.SupportedLocales.CHINESE_SIMPLIFIED"]},{"name":"val COLLECTION_STATE_LOCATION: String","description":"dev.kordex.core.COLLECTION_STATE_LOCATION","location":"kord-extensions/dev.kordex.core/-c-o-l-l-e-c-t-i-o-n_-s-t-a-t-e_-l-o-c-a-t-i-o-n.html","searchKeys":["COLLECTION_STATE_LOCATION","val COLLECTION_STATE_LOCATION: String","dev.kordex.core.COLLECTION_STATE_LOCATION"]},{"name":"val Channel.sentryName: String","description":"dev.kordex.core.sentry.sentryName","location":"kord-extensions/dev.kordex.core.sentry/sentry-name.html","searchKeys":["sentryName","val Channel.sentryName: String","dev.kordex.core.sentry.sentryName"]},{"name":"val DATA_COLLECTION: DataCollection","description":"dev.kordex.core.DATA_COLLECTION","location":"kord-extensions/dev.kordex.core/-d-a-t-a_-c-o-l-l-e-c-t-i-o-n.html","searchKeys":["DATA_COLLECTION","val DATA_COLLECTION: DataCollection","dev.kordex.core.DATA_COLLECTION"]},{"name":"val DATA_COLLECTION_UUID: UUID?","description":"dev.kordex.core.DATA_COLLECTION_UUID","location":"kord-extensions/dev.kordex.core/-d-a-t-a_-c-o-l-l-e-c-t-i-o-n_-u-u-i-d.html","searchKeys":["DATA_COLLECTION_UUID","val DATA_COLLECTION_UUID: UUID?","dev.kordex.core.DATA_COLLECTION_UUID"]},{"name":"val DELETE_EMOJI: ReactionEmoji.Unicode","description":"dev.kordex.core.pagination.DELETE_EMOJI","location":"kord-extensions/dev.kordex.core.pagination/-d-e-l-e-t-e_-e-m-o-j-i.html","searchKeys":["DELETE_EMOJI","val DELETE_EMOJI: ReactionEmoji.Unicode","dev.kordex.core.pagination.DELETE_EMOJI"]},{"name":"val DEV_MODE: Boolean","description":"dev.kordex.core.DEV_MODE","location":"kord-extensions/dev.kordex.core/-d-e-v_-m-o-d-e.html","searchKeys":["DEV_MODE","val DEV_MODE: Boolean","dev.kordex.core.DEV_MODE"]},{"name":"val DISCORD_BLACK: Color","description":"dev.kordex.core.DISCORD_BLACK","location":"kord-extensions/dev.kordex.core/-d-i-s-c-o-r-d_-b-l-a-c-k.html","searchKeys":["DISCORD_BLACK","val DISCORD_BLACK: Color","dev.kordex.core.DISCORD_BLACK"]},{"name":"val DISCORD_BLURPLE: Color","description":"dev.kordex.core.DISCORD_BLURPLE","location":"kord-extensions/dev.kordex.core/-d-i-s-c-o-r-d_-b-l-u-r-p-l-e.html","searchKeys":["DISCORD_BLURPLE","val DISCORD_BLURPLE: Color","dev.kordex.core.DISCORD_BLURPLE"]},{"name":"val DISCORD_FUCHSIA: Color","description":"dev.kordex.core.DISCORD_FUCHSIA","location":"kord-extensions/dev.kordex.core/-d-i-s-c-o-r-d_-f-u-c-h-s-i-a.html","searchKeys":["DISCORD_FUCHSIA","val DISCORD_FUCHSIA: Color","dev.kordex.core.DISCORD_FUCHSIA"]},{"name":"val DISCORD_GREEN: Color","description":"dev.kordex.core.DISCORD_GREEN","location":"kord-extensions/dev.kordex.core/-d-i-s-c-o-r-d_-g-r-e-e-n.html","searchKeys":["DISCORD_GREEN","val DISCORD_GREEN: Color","dev.kordex.core.DISCORD_GREEN"]},{"name":"val DISCORD_RED: Color","description":"dev.kordex.core.DISCORD_RED","location":"kord-extensions/dev.kordex.core/-d-i-s-c-o-r-d_-r-e-d.html","searchKeys":["DISCORD_RED","val DISCORD_RED: Color","dev.kordex.core.DISCORD_RED"]},{"name":"val DISCORD_WHITE: Color","description":"dev.kordex.core.DISCORD_WHITE","location":"kord-extensions/dev.kordex.core/-d-i-s-c-o-r-d_-w-h-i-t-e.html","searchKeys":["DISCORD_WHITE","val DISCORD_WHITE: Color","dev.kordex.core.DISCORD_WHITE"]},{"name":"val DISCORD_YELLOW: Color","description":"dev.kordex.core.DISCORD_YELLOW","location":"kord-extensions/dev.kordex.core/-d-i-s-c-o-r-d_-y-e-l-l-o-w.html","searchKeys":["DISCORD_YELLOW","val DISCORD_YELLOW: Color","dev.kordex.core.DISCORD_YELLOW"]},{"name":"val DateTimeUnit.name: String","description":"dev.kordex.core.time.name","location":"kord-extensions/dev.kordex.core.time/name.html","searchKeys":["name","val DateTimeUnit.name: String","dev.kordex.core.time.name"]},{"name":"val EMPTY_KEY: Key","description":"dev.kordex.core.i18n.EMPTY_KEY","location":"kord-extensions/dev.kordex.core.i18n/-e-m-p-t-y_-k-e-y.html","searchKeys":["EMPTY_KEY","val EMPTY_KEY: Key","dev.kordex.core.i18n.EMPTY_KEY"]},{"name":"val ENGLISH: Locale","description":"dev.kordex.core.i18n.SupportedLocales.ENGLISH","location":"kord-extensions/dev.kordex.core.i18n/-supported-locales/-e-n-g-l-i-s-h.html","searchKeys":["ENGLISH","val ENGLISH: Locale","dev.kordex.core.i18n.SupportedLocales.ENGLISH"]},{"name":"val EXPAND_EMOJI: ReactionEmoji.Unicode","description":"dev.kordex.core.pagination.EXPAND_EMOJI","location":"kord-extensions/dev.kordex.core.pagination/-e-x-p-a-n-d_-e-m-o-j-i.html","searchKeys":["EXPAND_EMOJI","val EXPAND_EMOJI: ReactionEmoji.Unicode","dev.kordex.core.pagination.EXPAND_EMOJI"]},{"name":"val Event.extraData: MutableStringKeyedMap<Any>","description":"dev.kordex.core.utils.extraData","location":"kord-extensions/dev.kordex.core.utils/extra-data.html","searchKeys":["extraData","val Event.extraData: MutableStringKeyedMap<Any>","dev.kordex.core.utils.extraData"]},{"name":"val FINISH_EMOJI: ReactionEmoji.Unicode","description":"dev.kordex.core.pagination.FINISH_EMOJI","location":"kord-extensions/dev.kordex.core.pagination/-f-i-n-i-s-h_-e-m-o-j-i.html","searchKeys":["FINISH_EMOJI","val FINISH_EMOJI: ReactionEmoji.Unicode","dev.kordex.core.pagination.FINISH_EMOJI"]},{"name":"val FINNISH: Locale","description":"dev.kordex.core.i18n.SupportedLocales.FINNISH","location":"kord-extensions/dev.kordex.core.i18n/-supported-locales/-f-i-n-n-i-s-h.html","searchKeys":["FINNISH","val FINNISH: Locale","dev.kordex.core.i18n.SupportedLocales.FINNISH"]},{"name":"val FIRST_PAGE_EMOJI: ReactionEmoji.Unicode","description":"dev.kordex.core.pagination.FIRST_PAGE_EMOJI","location":"kord-extensions/dev.kordex.core.pagination/-f-i-r-s-t_-p-a-g-e_-e-m-o-j-i.html","searchKeys":["FIRST_PAGE_EMOJI","val FIRST_PAGE_EMOJI: ReactionEmoji.Unicode","dev.kordex.core.pagination.FIRST_PAGE_EMOJI"]},{"name":"val FRENCH: Locale","description":"dev.kordex.core.i18n.SupportedLocales.FRENCH","location":"kord-extensions/dev.kordex.core.i18n/-supported-locales/-f-r-e-n-c-h.html","searchKeys":["FRENCH","val FRENCH: Locale","dev.kordex.core.i18n.SupportedLocales.FRENCH"]},{"name":"val GERMAN: Locale","description":"dev.kordex.core.i18n.SupportedLocales.GERMAN","location":"kord-extensions/dev.kordex.core.i18n/-supported-locales/-g-e-r-m-a-n.html","searchKeys":["GERMAN","val GERMAN: Locale","dev.kordex.core.i18n.SupportedLocales.GERMAN"]},{"name":"val KEY_TYPES: Array<String>","description":"dev.kordex.core.sentry.captures.SentryCapture.Companion.KEY_TYPES","location":"kord-extensions/dev.kordex.core.sentry.captures/-sentry-capture/-companion/-k-e-y_-t-y-p-e-s.html","searchKeys":["KEY_TYPES","val KEY_TYPES: Array<String>","dev.kordex.core.sentry.captures.SentryCapture.Companion.KEY_TYPES"]},{"name":"val KORDEX_BUNDLE: Bundle","description":"dev.kordex.core.i18n.KORDEX_BUNDLE","location":"kord-extensions/dev.kordex.core.i18n/-k-o-r-d-e-x_-b-u-n-d-l-e.html","searchKeys":["KORDEX_BUNDLE","val KORDEX_BUNDLE: Bundle","dev.kordex.core.i18n.KORDEX_BUNDLE"]},{"name":"val KORDEX_GIT_BRANCH: String?","description":"dev.kordex.core.KORDEX_GIT_BRANCH","location":"kord-extensions/dev.kordex.core/-k-o-r-d-e-x_-g-i-t_-b-r-a-n-c-h.html","searchKeys":["KORDEX_GIT_BRANCH","val KORDEX_GIT_BRANCH: String?","dev.kordex.core.KORDEX_GIT_BRANCH"]},{"name":"val KORDEX_GIT_HASH: String?","description":"dev.kordex.core.KORDEX_GIT_HASH","location":"kord-extensions/dev.kordex.core/-k-o-r-d-e-x_-g-i-t_-h-a-s-h.html","searchKeys":["KORDEX_GIT_HASH","val KORDEX_GIT_HASH: String?","dev.kordex.core.KORDEX_GIT_HASH"]},{"name":"val KORDEX_MODULES: List<String>","description":"dev.kordex.core.KORDEX_MODULES","location":"kord-extensions/dev.kordex.core/-k-o-r-d-e-x_-m-o-d-u-l-e-s.html","searchKeys":["KORDEX_MODULES","val KORDEX_MODULES: List<String>","dev.kordex.core.KORDEX_MODULES"]},{"name":"val KORDEX_VERSION: String?","description":"dev.kordex.core.KORDEX_VERSION","location":"kord-extensions/dev.kordex.core/-k-o-r-d-e-x_-v-e-r-s-i-o-n.html","searchKeys":["KORDEX_VERSION","val KORDEX_VERSION: String?","dev.kordex.core.KORDEX_VERSION"]},{"name":"val KORD_VERSION: String?","description":"dev.kordex.core.KORD_VERSION","location":"kord-extensions/dev.kordex.core/-k-o-r-d_-v-e-r-s-i-o-n.html","searchKeys":["KORD_VERSION","val KORD_VERSION: String?","dev.kordex.core.KORD_VERSION"]},{"name":"val KOREAN: Locale","description":"dev.kordex.core.i18n.SupportedLocales.KOREAN","location":"kord-extensions/dev.kordex.core.i18n/-supported-locales/-k-o-r-e-a-n.html","searchKeys":["KOREAN","val KOREAN: Locale","dev.kordex.core.i18n.SupportedLocales.KOREAN"]},{"name":"val Kord.users: Flow<User>","description":"dev.kordex.core.utils.users","location":"kord-extensions/dev.kordex.core.utils/users.html","searchKeys":["users","val Kord.users: Flow<User>","dev.kordex.core.utils.users"]},{"name":"val LAST_PAGE_EMOJI: ReactionEmoji.Unicode","description":"dev.kordex.core.pagination.LAST_PAGE_EMOJI","location":"kord-extensions/dev.kordex.core.pagination/-l-a-s-t_-p-a-g-e_-e-m-o-j-i.html","searchKeys":["LAST_PAGE_EMOJI","val LAST_PAGE_EMOJI: ReactionEmoji.Unicode","dev.kordex.core.pagination.LAST_PAGE_EMOJI"]},{"name":"val LEFT_EMOJI: ReactionEmoji.Unicode","description":"dev.kordex.core.pagination.LEFT_EMOJI","location":"kord-extensions/dev.kordex.core.pagination/-l-e-f-t_-e-m-o-j-i.html","searchKeys":["LEFT_EMOJI","val LEFT_EMOJI: ReactionEmoji.Unicode","dev.kordex.core.pagination.LEFT_EMOJI"]},{"name":"val Member.timeoutUntil: Instant?","description":"dev.kordex.core.utils.timeoutUntil","location":"kord-extensions/dev.kordex.core.utils/timeout-until.html","searchKeys":["timeoutUntil","val Member.timeoutUntil: Instant?","dev.kordex.core.utils.timeoutUntil"]},{"name":"val Message.isCrossPost: Boolean","description":"dev.kordex.core.utils.isCrossPost","location":"kord-extensions/dev.kordex.core.utils/is-cross-post.html","searchKeys":["isCrossPost","val Message.isCrossPost: Boolean","dev.kordex.core.utils.isCrossPost"]},{"name":"val Message.isEphemeral: Boolean","description":"dev.kordex.core.utils.isEphemeral","location":"kord-extensions/dev.kordex.core.utils/is-ephemeral.html","searchKeys":["isEphemeral","val Message.isEphemeral: Boolean","dev.kordex.core.utils.isEphemeral"]},{"name":"val Message.isPublished: Boolean","description":"dev.kordex.core.utils.isPublished","location":"kord-extensions/dev.kordex.core.utils/is-published.html","searchKeys":["isPublished","val Message.isPublished: Boolean","dev.kordex.core.utils.isPublished"]},{"name":"val Message.isUrgent: Boolean","description":"dev.kordex.core.utils.isUrgent","location":"kord-extensions/dev.kordex.core.utils/is-urgent.html","searchKeys":["isUrgent","val Message.isUrgent: Boolean","dev.kordex.core.utils.isUrgent"]},{"name":"val Message.originalMessageDeleted: Boolean","description":"dev.kordex.core.utils.originalMessageDeleted","location":"kord-extensions/dev.kordex.core.utils/original-message-deleted.html","searchKeys":["originalMessageDeleted","val Message.originalMessageDeleted: Boolean","dev.kordex.core.utils.originalMessageDeleted"]},{"name":"val Message.suppressEmbeds: Boolean","description":"dev.kordex.core.utils.suppressEmbeds","location":"kord-extensions/dev.kordex.core.utils/suppress-embeds.html","searchKeys":["suppressEmbeds","val Message.suppressEmbeds: Boolean","dev.kordex.core.utils.suppressEmbeds"]},{"name":"val MessageData.authorId: Snowflake","description":"dev.kordex.core.utils.authorId","location":"kord-extensions/dev.kordex.core.utils/author-id.html","searchKeys":["authorId","val MessageData.authorId: Snowflake","dev.kordex.core.utils.authorId"]},{"name":"val MessageData.authorIsBot: Boolean","description":"dev.kordex.core.utils.authorIsBot","location":"kord-extensions/dev.kordex.core.utils/author-is-bot.html","searchKeys":["authorIsBot","val MessageData.authorIsBot: Boolean","dev.kordex.core.utils.authorIsBot"]},{"name":"val NsfwLevel.ordinal: Int","description":"dev.kordex.core.utils.ordinal","location":"kord-extensions/dev.kordex.core.utils/ordinal.html","searchKeys":["ordinal","val NsfwLevel.ordinal: Int","dev.kordex.core.utils.ordinal"]},{"name":"val POLISH: Locale","description":"dev.kordex.core.i18n.SupportedLocales.POLISH","location":"kord-extensions/dev.kordex.core.i18n/-supported-locales/-p-o-l-i-s-h.html","searchKeys":["POLISH","val POLISH: Locale","dev.kordex.core.i18n.SupportedLocales.POLISH"]},{"name":"val PORTUGUESE: Locale","description":"dev.kordex.core.i18n.SupportedLocales.PORTUGUESE","location":"kord-extensions/dev.kordex.core.i18n/-supported-locales/-p-o-r-t-u-g-u-e-s-e.html","searchKeys":["PORTUGUESE","val PORTUGUESE: Locale","dev.kordex.core.i18n.SupportedLocales.PORTUGUESE"]},{"name":"val Permission.Companion.TimeoutMembers: Permission.ModerateMembers","description":"dev.kordex.core.utils.TimeoutMembers","location":"kord-extensions/dev.kordex.core.utils/-timeout-members.html","searchKeys":["TimeoutMembers","val Permission.Companion.TimeoutMembers: Permission.ModerateMembers","dev.kordex.core.utils.TimeoutMembers"]},{"name":"val Permission.Companion.Video: Permission.Stream","description":"dev.kordex.core.utils.Video","location":"kord-extensions/dev.kordex.core.utils/-video.html","searchKeys":["Video","val Permission.Companion.Video: Permission.Stream","dev.kordex.core.utils.Video"]},{"name":"val RIGHT_EMOJI: ReactionEmoji.Unicode","description":"dev.kordex.core.pagination.RIGHT_EMOJI","location":"kord-extensions/dev.kordex.core.pagination/-r-i-g-h-t_-e-m-o-j-i.html","searchKeys":["RIGHT_EMOJI","val RIGHT_EMOJI: ReactionEmoji.Unicode","dev.kordex.core.pagination.RIGHT_EMOJI"]},{"name":"val RUSSIAN: Locale","description":"dev.kordex.core.i18n.SupportedLocales.RUSSIAN","location":"kord-extensions/dev.kordex.core.i18n/-supported-locales/-r-u-s-s-i-a-n.html","searchKeys":["RUSSIAN","val RUSSIAN: Locale","dev.kordex.core.i18n.SupportedLocales.RUSSIAN"]},{"name":"val SPANISH: Locale","description":"dev.kordex.core.i18n.SupportedLocales.SPANISH","location":"kord-extensions/dev.kordex.core.i18n/-supported-locales/-s-p-a-n-i-s-h.html","searchKeys":["SPANISH","val SPANISH: Locale","dev.kordex.core.i18n.SupportedLocales.SPANISH"]},{"name":"val SWITCH_EMOJI: ReactionEmoji.Unicode","description":"dev.kordex.core.pagination.SWITCH_EMOJI","location":"kord-extensions/dev.kordex.core.pagination/-s-w-i-t-c-h_-e-m-o-j-i.html","searchKeys":["SWITCH_EMOJI","val SWITCH_EMOJI: ReactionEmoji.Unicode","dev.kordex.core.pagination.SWITCH_EMOJI"]},{"name":"val TOKI_PONA: Locale","description":"dev.kordex.core.i18n.SupportedLocales.TOKI_PONA","location":"kord-extensions/dev.kordex.core.i18n/-supported-locales/-t-o-k-i_-p-o-n-a.html","searchKeys":["TOKI_PONA","val TOKI_PONA: Locale","dev.kordex.core.i18n.SupportedLocales.TOKI_PONA"]},{"name":"val TURKISH: Locale","description":"dev.kordex.core.i18n.SupportedLocales.TURKISH","location":"kord-extensions/dev.kordex.core.i18n/-supported-locales/-t-u-r-k-i-s-h.html","searchKeys":["TURKISH","val TURKISH: Locale","dev.kordex.core.i18n.SupportedLocales.TURKISH"]},{"name":"val User.createdAt: Instant","description":"dev.kordex.core.utils.createdAt","location":"kord-extensions/dev.kordex.core.utils/created-at.html","searchKeys":["createdAt","val User.createdAt: Instant","dev.kordex.core.utils.createdAt"]},{"name":"val User.profileLink: String","description":"dev.kordex.core.utils.profileLink","location":"kord-extensions/dev.kordex.core.utils/profile-link.html","searchKeys":["profileLink","val User.profileLink: String","dev.kordex.core.utils.profileLink"]},{"name":"val actionedAt: Instant?","description":"dev.kordex.core.events.extra.models.GuildJoinRequest.actionedAt","location":"kord-extensions/dev.kordex.core.events.extra.models/-guild-join-request/actioned-at.html","searchKeys":["actionedAt","val actionedAt: Instant?","dev.kordex.core.events.extra.models.GuildJoinRequest.actionedAt"]},{"name":"val actionedAtSnowflake: Snowflake? = null","description":"dev.kordex.core.events.extra.models.GuildJoinRequest.actionedAtSnowflake","location":"kord-extensions/dev.kordex.core.events.extra.models/-guild-join-request/actioned-at-snowflake.html","searchKeys":["actionedAtSnowflake","val actionedAtSnowflake: Snowflake? = null","dev.kordex.core.events.extra.models.GuildJoinRequest.actionedAtSnowflake"]},{"name":"val actionedByUser: DiscordUser? = null","description":"dev.kordex.core.events.extra.models.GuildJoinRequest.actionedByUser","location":"kord-extensions/dev.kordex.core.events.extra.models/-guild-join-request/actioned-by-user.html","searchKeys":["actionedByUser","val actionedByUser: DiscordUser? = null","dev.kordex.core.events.extra.models.GuildJoinRequest.actionedByUser"]},{"name":"val adapter: SentryAdapter","description":"dev.kordex.core.sentry.SentryContext.adapter","location":"kord-extensions/dev.kordex.core.sentry/-sentry-context/adapter.html","searchKeys":["adapter","val adapter: SentryAdapter","dev.kordex.core.sentry.SentryContext.adapter"]},{"name":"val added: Set<Role>","description":"dev.kordex.core.utils.deltas.RoleDelta.added","location":"kord-extensions/dev.kordex.core.utils.deltas/-role-delta/added.html","searchKeys":["added","val added: Set<Role>","dev.kordex.core.utils.deltas.RoleDelta.added"]},{"name":"val appPermissions: Permissions?","description":"dev.kordex.core.commands.application.ApplicationCommandContext.appPermissions","location":"kord-extensions/dev.kordex.core.commands.application/-application-command-context/app-permissions.html","searchKeys":["appPermissions","val appPermissions: Permissions?","dev.kordex.core.commands.application.ApplicationCommandContext.appPermissions"]},{"name":"val argString: String","description":"dev.kordex.core.commands.chat.ChatCommandContext.argString","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-command-context/arg-string.html","searchKeys":["argString","val argString: String","dev.kordex.core.commands.chat.ChatCommandContext.argString"]},{"name":"val args: MutableList<Argument<*>>","description":"dev.kordex.core.commands.Arguments.args","location":"kord-extensions/dev.kordex.core.commands/-arguments/args.html","searchKeys":["args","val args: MutableList<Argument<*>>","dev.kordex.core.commands.Arguments.args"]},{"name":"val argument: Argument<*>?","description":"dev.kordex.core.ArgumentParsingException.argument","location":"kord-extensions/dev.kordex.core/-argument-parsing-exception/argument.html","searchKeys":["argument","val argument: Argument<*>?","dev.kordex.core.ArgumentParsingException.argument"]},{"name":"val argumentParser: SlashCommandParser","description":"dev.kordex.core.commands.application.ApplicationCommandRegistry.argumentParser","location":"kord-extensions/dev.kordex.core.commands.application/-application-command-registry/argument-parser.html","searchKeys":["argumentParser","val argumentParser: SlashCommandParser","dev.kordex.core.commands.application.ApplicationCommandRegistry.argumentParser"]},{"name":"val arguments: Arguments","description":"dev.kordex.core.ArgumentParsingException.arguments","location":"kord-extensions/dev.kordex.core/-argument-parsing-exception/arguments.html","searchKeys":["arguments","val arguments: Arguments","dev.kordex.core.ArgumentParsingException.arguments"]},{"name":"val attachments: Optional<Set<Attachment>>","description":"dev.kordex.core.utils.deltas.MessageDelta.attachments","location":"kord-extensions/dev.kordex.core.utils.deltas/-message-delta/attachments.html","searchKeys":["attachments","val attachments: Optional<Set<Attachment>>","dev.kordex.core.utils.deltas.MessageDelta.attachments"]},{"name":"val avatar: Optional<Asset?>","description":"dev.kordex.core.utils.deltas.UserDelta.avatar","location":"kord-extensions/dev.kordex.core.utils.deltas/-user-delta/avatar.html","searchKeys":["avatar","val avatar: Optional<Asset?>","dev.kordex.core.utils.deltas.UserDelta.avatar"]},{"name":"val avatar: String","description":"dev.kordex.core.events.extra.models.GuildJoinRequestUser.avatar","location":"kord-extensions/dev.kordex.core.events.extra.models/-guild-join-request-user/avatar.html","searchKeys":["avatar","val avatar: String","dev.kordex.core.events.extra.models.GuildJoinRequestUser.avatar"]},{"name":"val body: suspend T.() -> Unit","description":"dev.kordex.core.commands.OptionWrapper.body","location":"kord-extensions/dev.kordex.core.commands/-option-wrapper/body.html","searchKeys":["body","val body: suspend T.() -> Unit","dev.kordex.core.commands.OptionWrapper.body"]},{"name":"val boosting: Optional<Instant?>","description":"dev.kordex.core.utils.deltas.MemberDelta.boosting","location":"kord-extensions/dev.kordex.core.utils.deltas/-member-delta/boosting.html","searchKeys":["boosting","val boosting: Optional<Instant?>","dev.kordex.core.utils.deltas.MemberDelta.boosting"]},{"name":"val bot: ExtensibleBot","description":"dev.kordex.core.commands.chat.ChatCommandRegistry.bot","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-command-registry/bot.html","searchKeys":["bot","val bot: ExtensibleBot","dev.kordex.core.commands.chat.ChatCommandRegistry.bot"]},{"name":"val bot: ExtensibleBot","description":"dev.kordex.core.components.Component.bot","location":"kord-extensions/dev.kordex.core.components/-component/bot.html","searchKeys":["bot","val bot: ExtensibleBot","dev.kordex.core.components.Component.bot"]},{"name":"val bot: ExtensibleBot","description":"dev.kordex.core.pagination.BasePaginator.bot","location":"kord-extensions/dev.kordex.core.pagination/-base-paginator/bot.html","searchKeys":["bot","val bot: ExtensibleBot","dev.kordex.core.pagination.BasePaginator.bot"]},{"name":"val bot: ExtensibleBot","description":"dev.kordex.core.plugins.KordExPlugin.bot","location":"kord-extensions/dev.kordex.core.plugins/-kord-ex-plugin/bot.html","searchKeys":["bot","val bot: ExtensibleBot","dev.kordex.core.plugins.KordExPlugin.bot"]},{"name":"val botSettings: ExtensibleBotBuilder","description":"dev.kordex.core.commands.application.ApplicationCommandContext.botSettings","location":"kord-extensions/dev.kordex.core.commands.application/-application-command-context/bot-settings.html","searchKeys":["botSettings","val botSettings: ExtensibleBotBuilder","dev.kordex.core.commands.application.ApplicationCommandContext.botSettings"]},{"name":"val botSettings: ExtensibleBotBuilder","description":"dev.kordex.core.extensions.impl.HelpExtension.botSettings","location":"kord-extensions/dev.kordex.core.extensions.impl/-help-extension/bot-settings.html","searchKeys":["botSettings","val botSettings: ExtensibleBotBuilder","dev.kordex.core.extensions.impl.HelpExtension.botSettings"]},{"name":"val botSettings: ExtensibleBotBuilder","description":"dev.kordex.core.extensions.impl.SentryExtension.botSettings","location":"kord-extensions/dev.kordex.core.extensions.impl/-sentry-extension/bot-settings.html","searchKeys":["botSettings","val botSettings: ExtensibleBotBuilder","dev.kordex.core.extensions.impl.SentryExtension.botSettings"]},{"name":"val builder: ConverterBuilder<*>","description":"dev.kordex.core.InvalidArgumentException.builder","location":"kord-extensions/dev.kordex.core/-invalid-argument-exception/builder.html","searchKeys":["builder","val builder: ConverterBuilder<*>","dev.kordex.core.InvalidArgumentException.builder"]},{"name":"val bundle: Bundle? = null","description":"dev.kordex.core.i18n.types.Key.bundle","location":"kord-extensions/dev.kordex.core.i18n.types/-key/bundle.html","searchKeys":["bundle","val bundle: Bundle? = null","dev.kordex.core.i18n.types.Key.bundle"]},{"name":"val cache: MutableStringKeyedMap<Any>","description":"dev.kordex.core.checks.types.CheckContextWithCache.cache","location":"kord-extensions/dev.kordex.core.checks.types/-check-context-with-cache/cache.html","searchKeys":["cache","val cache: MutableStringKeyedMap<Any>","dev.kordex.core.checks.types.CheckContextWithCache.cache"]},{"name":"val cache: MutableStringKeyedMap<Any>","description":"dev.kordex.core.utils.scheduling.Task.cache","location":"kord-extensions/dev.kordex.core.utils.scheduling/-task/cache.html","searchKeys":["cache","val cache: MutableStringKeyedMap<Any>","dev.kordex.core.utils.scheduling.Task.cache"]},{"name":"val canUseSwitchingButtons: Boolean","description":"dev.kordex.core.pagination.BaseButtonPaginator.canUseSwitchingButtons","location":"kord-extensions/dev.kordex.core.pagination/-base-button-paginator/can-use-switching-buttons.html","searchKeys":["canUseSwitchingButtons","val canUseSwitchingButtons: Boolean","dev.kordex.core.pagination.BaseButtonPaginator.canUseSwitchingButtons"]},{"name":"val channel: MessageChannelBehavior","description":"dev.kordex.core.pagination.MessageButtonPaginator.channel","location":"kord-extensions/dev.kordex.core.pagination/-message-button-paginator/channel.html","searchKeys":["channel","val channel: MessageChannelBehavior","dev.kordex.core.pagination.MessageButtonPaginator.channel"]},{"name":"val chatCommand: ChatCommand<out T>","description":"dev.kordex.core.commands.chat.ChatCommandContext.chatCommand","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-command-context/chat-command.html","searchKeys":["chatCommand","val chatCommand: ChatCommand<out T>","dev.kordex.core.commands.chat.ChatCommandContext.chatCommand"]},{"name":"val checkList: MutableList<ChatCommandCheck>","description":"dev.kordex.core.builders.ChatCommandsBuilder.checkList","location":"kord-extensions/dev.kordex.core.builders/-chat-commands-builder/check-list.html","searchKeys":["checkList","val checkList: MutableList<ChatCommandCheck>","dev.kordex.core.builders.ChatCommandsBuilder.checkList"]},{"name":"val checkList: MutableList<ChatCommandCheck>","description":"dev.kordex.core.builders.extensions.HelpExtensionBuilder.checkList","location":"kord-extensions/dev.kordex.core.builders.extensions/-help-extension-builder/check-list.html","searchKeys":["checkList","val checkList: MutableList<ChatCommandCheck>","dev.kordex.core.builders.extensions.HelpExtensionBuilder.checkList"]},{"name":"val choices: List<String>","description":"dev.kordex.core.events.extra.models.GuildJoinRequestResponse.MultipleChoiceResponse.choices","location":"kord-extensions/dev.kordex.core.events.extra.models/-guild-join-request-response/-multiple-choice-response/choices.html","searchKeys":["choices","val choices: List<String>","dev.kordex.core.events.extra.models.GuildJoinRequestResponse.MultipleChoiceResponse.choices"]},{"name":"val choices: MutableList<ChoiceOptionWrapper.ChoiceWrapper<B, T>>","description":"dev.kordex.core.commands.ChoiceOptionWrapper.choices","location":"kord-extensions/dev.kordex.core.commands/-choice-option-wrapper/choices.html","searchKeys":["choices","val choices: MutableList<ChoiceOptionWrapper.ChoiceWrapper<B, T>>","dev.kordex.core.commands.ChoiceOptionWrapper.choices"]},{"name":"val clazz: KClass<*>","description":"dev.kordex.core.utils.deltas.ChangeSet.clazz","location":"kord-extensions/dev.kordex.core.utils.deltas/-change-set/clazz.html","searchKeys":["clazz","val clazz: KClass<*>","dev.kordex.core.utils.deltas.ChangeSet.clazz"]},{"name":"val clazz: KClass<out Extension>","description":"dev.kordex.core.InvalidExtensionException.clazz","location":"kord-extensions/dev.kordex.core/-invalid-extension-exception/clazz.html","searchKeys":["clazz","val clazz: KClass<out Extension>","dev.kordex.core.InvalidExtensionException.clazz"]},{"name":"val coalescingConverter: CoalescingConverter<T>","description":"dev.kordex.core.commands.converters.CoalescingToDefaultingConverter.coalescingConverter","location":"kord-extensions/dev.kordex.core.commands.converters/-coalescing-to-defaulting-converter/coalescing-converter.html","searchKeys":["coalescingConverter","val coalescingConverter: CoalescingConverter<T>","dev.kordex.core.commands.converters.CoalescingToDefaultingConverter.coalescingConverter"]},{"name":"val coalescingConverter: CoalescingConverter<T>","description":"dev.kordex.core.commands.converters.CoalescingToOptionalConverter.coalescingConverter","location":"kord-extensions/dev.kordex.core.commands.converters/-coalescing-to-optional-converter/coalescing-converter.html","searchKeys":["coalescingConverter","val coalescingConverter: CoalescingConverter<T>","dev.kordex.core.commands.converters.CoalescingToOptionalConverter.coalescingConverter"]},{"name":"val command: List<String>","description":"dev.kordex.core.extensions.impl.HelpExtension.HelpArguments.command","location":"kord-extensions/dev.kordex.core.extensions.impl/-help-extension/-help-arguments/command.html","searchKeys":["command","val command: List<String>","dev.kordex.core.extensions.impl.HelpExtension.HelpArguments.command"]},{"name":"val content: Optional<String>","description":"dev.kordex.core.utils.deltas.MessageDelta.content","location":"kord-extensions/dev.kordex.core.utils.deltas/-message-delta/content.html","searchKeys":["content","val content: Optional<String>","dev.kordex.core.utils.deltas.MessageDelta.content"]},{"name":"val context: CommandContext","description":"dev.kordex.core.commands.converters.builders.ValidationContext.context","location":"kord-extensions/dev.kordex.core.commands.converters.builders/-validation-context/context.html","searchKeys":["context","val context: CommandContext","dev.kordex.core.commands.converters.builders.ValidationContext.context"]},{"name":"val converter: Converter<T, *, *, *>","description":"dev.kordex.core.commands.Argument.converter","location":"kord-extensions/dev.kordex.core.commands/-argument/converter.html","searchKeys":["converter","val converter: Converter<T, *, *, *>","dev.kordex.core.commands.Argument.converter"]},{"name":"val createdAt: Instant","description":"dev.kordex.core.events.extra.models.GuildJoinRequest.createdAt","location":"kord-extensions/dev.kordex.core.events.extra.models/-guild-join-request/created-at.html","searchKeys":["createdAt","val createdAt: Instant","dev.kordex.core.events.extra.models.GuildJoinRequest.createdAt"]},{"name":"val data: GuildJoinRequestDelete","description":"dev.kordex.core.events.extra.GuildJoinRequestDeleteEvent.data","location":"kord-extensions/dev.kordex.core.events.extra/-guild-join-request-delete-event/data.html","searchKeys":["data","val data: GuildJoinRequestDelete","dev.kordex.core.events.extra.GuildJoinRequestDeleteEvent.data"]},{"name":"val data: GuildJoinRequestUpdate","description":"dev.kordex.core.events.extra.GuildJoinRequestUpdateEvent.data","location":"kord-extensions/dev.kordex.core.events.extra/-guild-join-request-update-event/data.html","searchKeys":["data","val data: GuildJoinRequestUpdate","dev.kordex.core.events.extra.GuildJoinRequestUpdateEvent.data"]},{"name":"val data: MutableStringKeyedMap<Any>","description":"dev.kordex.core.sentry.captures.SentryBreadcrumbCapture.data","location":"kord-extensions/dev.kordex.core.sentry.captures/-sentry-breadcrumb-capture/data.html","searchKeys":["data","val data: MutableStringKeyedMap<Any>","dev.kordex.core.sentry.captures.SentryBreadcrumbCapture.data"]},{"name":"val dataType: KClass<T>","description":"dev.kordex.core.storage.StorageUnit.dataType","location":"kord-extensions/dev.kordex.core.storage/-storage-unit/data-type.html","searchKeys":["dataType","val dataType: KClass<T>","dev.kordex.core.storage.StorageUnit.dataType"]},{"name":"val default: T","description":"dev.kordex.core.commands.application.Localized.default","location":"kord-extensions/dev.kordex.core.commands.application/-localized/default.html","searchKeys":["default","val default: T","dev.kordex.core.commands.application.Localized.default"]},{"name":"val defaultCheck: CheckWithCache<ComponentInteractionCreateEvent>","description":"dev.kordex.core.pagination.BaseButtonPaginator.defaultCheck","location":"kord-extensions/dev.kordex.core.pagination/-base-button-paginator/default-check.html","searchKeys":["defaultCheck","val defaultCheck: CheckWithCache<ComponentInteractionCreateEvent>","dev.kordex.core.pagination.BaseButtonPaginator.defaultCheck"]},{"name":"val defaultGroup: Key","description":"dev.kordex.core.pagination.builders.PaginatorBuilder.defaultGroup","location":"kord-extensions/dev.kordex.core.pagination.builders/-paginator-builder/default-group.html","searchKeys":["defaultGroup","val defaultGroup: Key","dev.kordex.core.pagination.builders.PaginatorBuilder.defaultGroup"]},{"name":"val description: Key","description":"dev.kordex.core.builders.about.Section.description","location":"kord-extensions/dev.kordex.core.builders.about/-section/description.html","searchKeys":["description","val description: Key","dev.kordex.core.builders.about.Section.description"]},{"name":"val description: Key","description":"dev.kordex.core.commands.Argument.description","location":"kord-extensions/dev.kordex.core.commands/-argument/description.html","searchKeys":["description","val description: Key","dev.kordex.core.commands.Argument.description"]},{"name":"val descriptionTranslationCache: MutableMap<Locale, String>","description":"dev.kordex.core.commands.application.slash.SlashGroup.descriptionTranslationCache","location":"kord-extensions/dev.kordex.core.commands.application.slash/-slash-group/description-translation-cache.html","searchKeys":["descriptionTranslationCache","val descriptionTranslationCache: MutableMap<Locale, String>","dev.kordex.core.commands.application.slash.SlashGroup.descriptionTranslationCache"]},{"name":"val disabledPlugins: MutableList<String>","description":"dev.kordex.core.builders.PluginBuilder.disabledPlugins","location":"kord-extensions/dev.kordex.core.builders/-plugin-builder/disabled-plugins.html","searchKeys":["disabledPlugins","val disabledPlugins: MutableList<String>","dev.kordex.core.builders.PluginBuilder.disabledPlugins"]},{"name":"val discriminator: Int","description":"dev.kordex.core.events.extra.models.GuildJoinRequestUser.discriminator","location":"kord-extensions/dev.kordex.core.events.extra.models/-guild-join-request-user/discriminator.html","searchKeys":["discriminator","val discriminator: Int","dev.kordex.core.events.extra.models.GuildJoinRequestUser.discriminator"]},{"name":"val discriminator: Optional<String>","description":"dev.kordex.core.utils.deltas.UserDelta.discriminator","location":"kord-extensions/dev.kordex.core.utils.deltas/-user-delta/discriminator.html","searchKeys":["discriminator","val discriminator: Optional<String>","dev.kordex.core.utils.deltas.UserDelta.discriminator"]},{"name":"val displayName: Key","description":"dev.kordex.core.commands.Argument.displayName","location":"kord-extensions/dev.kordex.core.commands/-argument/display-name.html","searchKeys":["displayName","val displayName: Key","dev.kordex.core.commands.Argument.displayName"]},{"name":"val displayName: String?","description":"dev.kordex.core.events.extra.models.GuildJoinRequestUser.displayName","location":"kord-extensions/dev.kordex.core.events.extra.models/-guild-join-request-user/display-name.html","searchKeys":["displayName","val displayName: String?","dev.kordex.core.events.extra.models.GuildJoinRequestUser.displayName"]},{"name":"val editedTimestamp: Optional<Instant?>","description":"dev.kordex.core.utils.deltas.MessageDelta.editedTimestamp","location":"kord-extensions/dev.kordex.core.utils.deltas/-message-delta/edited-timestamp.html","searchKeys":["editedTimestamp","val editedTimestamp: Optional<Instant?>","dev.kordex.core.utils.deltas.MessageDelta.editedTimestamp"]},{"name":"val embeds: Optional<List<Embed>>","description":"dev.kordex.core.utils.deltas.MessageDelta.embeds","location":"kord-extensions/dev.kordex.core.utils.deltas/-message-delta/embeds.html","searchKeys":["embeds","val embeds: Optional<List<Embed>>","dev.kordex.core.utils.deltas.MessageDelta.embeds"]},{"name":"val enabled: Boolean","description":"dev.kordex.core.sentry.SentryAdapter.enabled","location":"kord-extensions/dev.kordex.core.sentry/-sentry-adapter/enabled.html","searchKeys":["enabled","val enabled: Boolean","dev.kordex.core.sentry.SentryAdapter.enabled"]},{"name":"val entries: EnumEntries<ApplicationStatus>","description":"dev.kordex.core.events.extra.models.ApplicationStatus.entries","location":"kord-extensions/dev.kordex.core.events.extra.models/-application-status/entries.html","searchKeys":["entries","val entries: EnumEntries<ApplicationStatus>","dev.kordex.core.events.extra.models.ApplicationStatus.entries"]},{"name":"val entries: EnumEntries<ExtensionState>","description":"dev.kordex.core.extensions.ExtensionState.entries","location":"kord-extensions/dev.kordex.core.extensions/-extension-state/entries.html","searchKeys":["entries","val entries: EnumEntries<ExtensionState>","dev.kordex.core.extensions.ExtensionState.entries"]},{"name":"val entries: EnumEntries<PlaceholderPosition>","description":"dev.kordex.core.i18n.types.PlaceholderPosition.entries","location":"kord-extensions/dev.kordex.core.i18n.types/-placeholder-position/entries.html","searchKeys":["entries","val entries: EnumEntries<PlaceholderPosition>","dev.kordex.core.i18n.types.PlaceholderPosition.entries"]},{"name":"val entries: EnumEntries<StorageType>","description":"dev.kordex.core.storage.StorageType.entries","location":"kord-extensions/dev.kordex.core.storage/-storage-type/entries.html","searchKeys":["entries","val entries: EnumEntries<StorageType>","dev.kordex.core.storage.StorageType.entries"]},{"name":"val error: E","description":"dev.kordex.core.types.FailureReason.error","location":"kord-extensions/dev.kordex.core.types/-failure-reason/error.html","searchKeys":["error","val error: E","dev.kordex.core.types.FailureReason.error"]},{"name":"val event: MessageCreateEvent","description":"dev.kordex.core.commands.chat.ChatCommandContext.event","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-command-context/event.html","searchKeys":["event","val event: MessageCreateEvent","dev.kordex.core.commands.chat.ChatCommandContext.event"]},{"name":"val event: T","description":"dev.kordex.core.checks.types.CheckContext.event","location":"kord-extensions/dev.kordex.core.checks.types/-check-context/event.html","searchKeys":["event","val event: T","dev.kordex.core.checks.types.CheckContext.event"]},{"name":"val extension: Extension","description":"dev.kordex.core.commands.Command.extension","location":"kord-extensions/dev.kordex.core.commands/-command/extension.html","searchKeys":["extension","val extension: Extension","dev.kordex.core.commands.Command.extension"]},{"name":"val extension: Extension","description":"dev.kordex.core.events.EventHandler.extension","location":"kord-extensions/dev.kordex.core.events/-event-handler/extension.html","searchKeys":["extension","val extension: Extension","dev.kordex.core.events.EventHandler.extension"]},{"name":"val extension: Extension","description":"dev.kordex.core.events.ExtensionStateEvent.extension","location":"kord-extensions/dev.kordex.core.events/-extension-state-event/extension.html","searchKeys":["extension","val extension: Extension","dev.kordex.core.events.ExtensionStateEvent.extension"]},{"name":"val extraContext: MutableStringKeyedMap<Any>","description":"dev.kordex.core.sentry.SentryContext.extraContext","location":"kord-extensions/dev.kordex.core.sentry/-sentry-context/extra-context.html","searchKeys":["extraContext","val extraContext: MutableStringKeyedMap<Any>","dev.kordex.core.sentry.SentryContext.extraContext"]},{"name":"val feedback: String","description":"dev.kordex.core.extensions.impl.SentryExtension.FeedbackMessageArgs.feedback","location":"kord-extensions/dev.kordex.core.extensions.impl/-sentry-extension/-feedback-message-args/feedback.html","searchKeys":["feedback","val feedback: String","dev.kordex.core.extensions.impl.SentryExtension.FeedbackMessageArgs.feedback"]},{"name":"val feedback: String","description":"dev.kordex.core.extensions.impl.SentryExtension.FeedbackSlashArgs.feedback","location":"kord-extensions/dev.kordex.core.extensions.impl/-sentry-extension/-feedback-slash-args/feedback.html","searchKeys":["feedback","val feedback: String","dev.kordex.core.extensions.impl.SentryExtension.FeedbackSlashArgs.feedback"]},{"name":"val flags: Optional<UserFlags?>","description":"dev.kordex.core.utils.deltas.UserDelta.flags","location":"kord-extensions/dev.kordex.core.utils.deltas/-user-delta/flags.html","searchKeys":["flags","val flags: Optional<UserFlags?>","dev.kordex.core.utils.deltas.UserDelta.flags"]},{"name":"val flags: UserFlags","description":"dev.kordex.core.events.extra.models.GuildJoinRequestUser.flags","location":"kord-extensions/dev.kordex.core.events.extra.models/-guild-join-request-user/flags.html","searchKeys":["flags","val flags: UserFlags","dev.kordex.core.events.extra.models.GuildJoinRequestUser.flags"]},{"name":"val formResponses: List<GuildJoinRequestResponse>","description":"dev.kordex.core.events.extra.models.GuildJoinRequest.formResponses","location":"kord-extensions/dev.kordex.core.events.extra.models/-guild-join-request/form-responses.html","searchKeys":["formResponses","val formResponses: List<GuildJoinRequestResponse>","dev.kordex.core.events.extra.models.GuildJoinRequest.formResponses"]},{"name":"val format: TimestampType","description":"dev.kordex.core.commands.converters.impl.FormattedTimestamp.format","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-formatted-timestamp/format.html","searchKeys":["format","val format: TimestampType","dev.kordex.core.commands.converters.impl.FormattedTimestamp.format"]},{"name":"val genericCommand: ApplicationCommand<*>","description":"dev.kordex.core.commands.application.ApplicationCommandContext.genericCommand","location":"kord-extensions/dev.kordex.core.commands.application/-application-command-context/generic-command.html","searchKeys":["genericCommand","val genericCommand: ApplicationCommand<*>","dev.kordex.core.commands.application.ApplicationCommandContext.genericCommand"]},{"name":"val genericEvent: ApplicationCommandInteractionCreateEvent","description":"dev.kordex.core.commands.application.ApplicationCommandContext.genericEvent","location":"kord-extensions/dev.kordex.core.commands.application/-application-command-context/generic-event.html","searchKeys":["genericEvent","val genericEvent: ApplicationCommandInteractionCreateEvent","dev.kordex.core.commands.application.ApplicationCommandContext.genericEvent"]},{"name":"val guildId: Snowflake","description":"dev.kordex.core.events.extra.GuildJoinRequestDeleteEvent.guildId","location":"kord-extensions/dev.kordex.core.events.extra/-guild-join-request-delete-event/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kordex.core.events.extra.GuildJoinRequestDeleteEvent.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kordex.core.events.extra.GuildJoinRequestUpdateEvent.guildId","location":"kord-extensions/dev.kordex.core.events.extra/-guild-join-request-update-event/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kordex.core.events.extra.GuildJoinRequestUpdateEvent.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kordex.core.events.extra.models.GuildJoinRequest.guildId","location":"kord-extensions/dev.kordex.core.events.extra.models/-guild-join-request/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kordex.core.events.extra.models.GuildJoinRequest.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kordex.core.events.extra.models.GuildJoinRequestDelete.guildId","location":"kord-extensions/dev.kordex.core.events.extra.models/-guild-join-request-delete/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kordex.core.events.extra.models.GuildJoinRequestDelete.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kordex.core.events.extra.models.GuildJoinRequestUpdate.guildId","location":"kord-extensions/dev.kordex.core.events.extra.models/-guild-join-request-update/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kordex.core.events.extra.models.GuildJoinRequestUpdate.guildId"]},{"name":"val id: SentryId","description":"dev.kordex.core.extensions.impl.SentryExtension.FeedbackMessageArgs.id","location":"kord-extensions/dev.kordex.core.extensions.impl/-sentry-extension/-feedback-message-args/id.html","searchKeys":["id","val id: SentryId","dev.kordex.core.extensions.impl.SentryExtension.FeedbackMessageArgs.id"]},{"name":"val id: SentryId","description":"dev.kordex.core.extensions.impl.SentryExtension.FeedbackSlashArgs.id","location":"kord-extensions/dev.kordex.core.extensions.impl/-sentry-extension/-feedback-slash-args/id.html","searchKeys":["id","val id: SentryId","dev.kordex.core.extensions.impl.SentryExtension.FeedbackSlashArgs.id"]},{"name":"val id: Snowflake","description":"dev.kordex.core.events.extra.models.GuildJoinRequest.id","location":"kord-extensions/dev.kordex.core.events.extra.models/-guild-join-request/id.html","searchKeys":["id","val id: Snowflake","dev.kordex.core.events.extra.models.GuildJoinRequest.id"]},{"name":"val id: Snowflake","description":"dev.kordex.core.events.extra.models.GuildJoinRequestDelete.id","location":"kord-extensions/dev.kordex.core.events.extra.models/-guild-join-request-delete/id.html","searchKeys":["id","val id: Snowflake","dev.kordex.core.events.extra.models.GuildJoinRequestDelete.id"]},{"name":"val id: Snowflake","description":"dev.kordex.core.events.extra.models.GuildJoinRequestUser.id","location":"kord-extensions/dev.kordex.core.events.extra.models/-guild-join-request-user/id.html","searchKeys":["id","val id: Snowflake","dev.kordex.core.events.extra.models.GuildJoinRequestUser.id"]},{"name":"val id: String","description":"dev.kordex.core.events.ModalInteractionCompleteEvent.id","location":"kord-extensions/dev.kordex.core.events/-modal-interaction-complete-event/id.html","searchKeys":["id","val id: String","dev.kordex.core.events.ModalInteractionCompleteEvent.id"]},{"name":"val instant: Instant","description":"dev.kordex.core.commands.converters.impl.FormattedTimestamp.instant","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-formatted-timestamp/instant.html","searchKeys":["instant","val instant: Instant","dev.kordex.core.commands.converters.impl.FormattedTimestamp.instant"]},{"name":"val interaction: EphemeralMessageInteractionResponseBehavior","description":"dev.kordex.core.pagination.EphemeralResponsePaginator.interaction","location":"kord-extensions/dev.kordex.core.pagination/-ephemeral-response-paginator/interaction.html","searchKeys":["interaction","val interaction: EphemeralMessageInteractionResponseBehavior","dev.kordex.core.pagination.EphemeralResponsePaginator.interaction"]},{"name":"val interaction: FollowupPermittingInteractionResponseBehavior","description":"dev.kordex.core.pagination.PublicFollowUpPaginator.interaction","location":"kord-extensions/dev.kordex.core.pagination/-public-follow-up-paginator/interaction.html","searchKeys":["interaction","val interaction: FollowupPermittingInteractionResponseBehavior","dev.kordex.core.pagination.PublicFollowUpPaginator.interaction"]},{"name":"val interaction: ModalSubmitInteraction","description":"dev.kordex.core.events.ModalInteractionCompleteEvent.interaction","location":"kord-extensions/dev.kordex.core.events/-modal-interaction-complete-event/interaction.html","searchKeys":["interaction","val interaction: ModalSubmitInteraction","dev.kordex.core.events.ModalInteractionCompleteEvent.interaction"]},{"name":"val interaction: PublicMessageInteractionResponseBehavior","description":"dev.kordex.core.pagination.PublicResponsePaginator.interaction","location":"kord-extensions/dev.kordex.core.pagination/-public-response-paginator/interaction.html","searchKeys":["interaction","val interaction: PublicMessageInteractionResponseBehavior","dev.kordex.core.pagination.PublicResponsePaginator.interaction"]},{"name":"val isPinned: Optional<Boolean>","description":"dev.kordex.core.utils.deltas.MessageDelta.isPinned","location":"kord-extensions/dev.kordex.core.utils.deltas/-message-delta/is-pinned.html","searchKeys":["isPinned","val isPinned: Optional<Boolean>","dev.kordex.core.utils.deltas.MessageDelta.isPinned"]},{"name":"val key: K","description":"dev.kordex.core.registry.RegistryStorage.StorageEntry.key","location":"kord-extensions/dev.kordex.core.registry/-registry-storage/-storage-entry/key.html","searchKeys":["key","val key: K","dev.kordex.core.registry.RegistryStorage.StorageEntry.key"]},{"name":"val key: Key","description":"dev.kordex.core.builders.about.CopyrightType.key","location":"kord-extensions/dev.kordex.core.builders.about/-copyright-type/key.html","searchKeys":["key","val key: Key","dev.kordex.core.builders.about.CopyrightType.key"]},{"name":"val key: String","description":"dev.kordex.core.i18n.types.Key.key","location":"kord-extensions/dev.kordex.core.i18n.types/-key/key.html","searchKeys":["key","val key: String","dev.kordex.core.i18n.types.Key.key"]},{"name":"val kord: Kord","description":"dev.kordex.core.commands.Command.kord","location":"kord-extensions/dev.kordex.core.commands/-command/kord.html","searchKeys":["kord","val kord: Kord","dev.kordex.core.commands.Command.kord"]},{"name":"val kord: Kord","description":"dev.kordex.core.commands.chat.ChatCommandRegistry.kord","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-command-registry/kord.html","searchKeys":["kord","val kord: Kord","dev.kordex.core.commands.chat.ChatCommandRegistry.kord"]},{"name":"val kord: Kord","description":"dev.kordex.core.commands.converters.Converter.kord","location":"kord-extensions/dev.kordex.core.commands.converters/-converter/kord.html","searchKeys":["kord","val kord: Kord","dev.kordex.core.commands.converters.Converter.kord"]},{"name":"val kord: Kord","description":"dev.kordex.core.components.Component.kord","location":"kord-extensions/dev.kordex.core.components/-component/kord.html","searchKeys":["kord","val kord: Kord","dev.kordex.core.components.Component.kord"]},{"name":"val kord: Kord","description":"dev.kordex.core.pagination.BasePaginator.kord","location":"kord-extensions/dev.kordex.core.pagination/-base-paginator/kord.html","searchKeys":["kord","val kord: Kord","dev.kordex.core.pagination.BasePaginator.kord"]},{"name":"val kord: Kord","description":"dev.kordex.core.plugins.KordExPlugin.kord","location":"kord-extensions/dev.kordex.core.plugins/-kord-ex-plugin/kord.html","searchKeys":["kord","val kord: Kord","dev.kordex.core.plugins.KordExPlugin.kord"]},{"name":"val kordexBuildProps: Properties","description":"dev.kordex.core.kordexBuildProps","location":"kord-extensions/dev.kordex.core/kordex-build-props.html","searchKeys":["kordexBuildProps","val kordexBuildProps: Properties","dev.kordex.core.kordexBuildProps"]},{"name":"val kordexProps: Properties","description":"dev.kordex.core.kordexProps","location":"kord-extensions/dev.kordex.core/kordex-props.html","searchKeys":["kordexProps","val kordexProps: Properties","dev.kordex.core.kordexProps"]},{"name":"val level: DataCollection","description":"dev.kordex.core.datacollection.DataCollector.level","location":"kord-extensions/dev.kordex.core.datacollection/-data-collector/level.html","searchKeys":["level","val level: DataCollection","dev.kordex.core.datacollection.DataCollector.level"]},{"name":"val license: String","description":"dev.kordex.core.builders.about.Copyright.license","location":"kord-extensions/dev.kordex.core.builders.about/-copyright/license.html","searchKeys":["license","val license: String","dev.kordex.core.builders.about.Copyright.license"]},{"name":"val locale: Locale","description":"dev.kordex.core.checks.types.CheckContext.locale","location":"kord-extensions/dev.kordex.core.checks.types/-check-context/locale.html","searchKeys":["locale","val locale: Locale","dev.kordex.core.checks.types.CheckContext.locale"]},{"name":"val locale: Locale? = null","description":"dev.kordex.core.i18n.types.Key.locale","location":"kord-extensions/dev.kordex.core.i18n.types/-key/locale.html","searchKeys":["locale","val locale: Locale? = null","dev.kordex.core.i18n.types.Key.locale"]},{"name":"val localizedDescription: Localized<String>","description":"dev.kordex.core.commands.application.slash.SlashCommand.localizedDescription","location":"kord-extensions/dev.kordex.core.commands.application.slash/-slash-command/localized-description.html","searchKeys":["localizedDescription","val localizedDescription: Localized<String>","dev.kordex.core.commands.application.slash.SlashCommand.localizedDescription"]},{"name":"val localizedDescription: Localized<String>","description":"dev.kordex.core.commands.application.slash.SlashGroup.localizedDescription","location":"kord-extensions/dev.kordex.core.commands.application.slash/-slash-group/localized-description.html","searchKeys":["localizedDescription","val localizedDescription: Localized<String>","dev.kordex.core.commands.application.slash.SlashGroup.localizedDescription"]},{"name":"val localizedName: Localized<String>","description":"dev.kordex.core.commands.application.ApplicationCommand.localizedName","location":"kord-extensions/dev.kordex.core.commands.application/-application-command/localized-name.html","searchKeys":["localizedName","val localizedName: Localized<String>","dev.kordex.core.commands.application.ApplicationCommand.localizedName"]},{"name":"val localizedName: Localized<String>","description":"dev.kordex.core.commands.application.slash.SlashGroup.localizedName","location":"kord-extensions/dev.kordex.core.commands.application.slash/-slash-group/localized-name.html","searchKeys":["localizedName","val localizedName: Localized<String>","dev.kordex.core.commands.application.slash.SlashGroup.localizedName"]},{"name":"val longHelp: Boolean = true","description":"dev.kordex.core.commands.converters.impl.DurationCoalescingConverter.longHelp","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-duration-coalescing-converter/long-help.html","searchKeys":["longHelp","val longHelp: Boolean = true","dev.kordex.core.commands.converters.impl.DurationCoalescingConverter.longHelp"]},{"name":"val longHelp: Boolean = true","description":"dev.kordex.core.commands.converters.impl.DurationConverter.longHelp","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-duration-converter/long-help.html","searchKeys":["longHelp","val longHelp: Boolean = true","dev.kordex.core.commands.converters.impl.DurationConverter.longHelp"]},{"name":"val maxLength: Int? = null","description":"dev.kordex.core.commands.converters.impl.StringConverter.maxLength","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-string-converter/max-length.html","searchKeys":["maxLength","val maxLength: Int? = null","dev.kordex.core.commands.converters.impl.StringConverter.maxLength"]},{"name":"val maxSize: Int","description":"dev.kordex.core.utils.collections.FixedLengthQueue.maxSize","location":"kord-extensions/dev.kordex.core.utils.collections/-fixed-length-queue/max-size.html","searchKeys":["maxSize","val maxSize: Int","dev.kordex.core.utils.collections.FixedLengthQueue.maxSize"]},{"name":"val maxValue: Double? = null","description":"dev.kordex.core.commands.converters.impl.DecimalConverter.maxValue","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-decimal-converter/max-value.html","searchKeys":["maxValue","val maxValue: Double? = null","dev.kordex.core.commands.converters.impl.DecimalConverter.maxValue"]},{"name":"val maxValue: Int? = null","description":"dev.kordex.core.commands.converters.impl.IntConverter.maxValue","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-int-converter/max-value.html","searchKeys":["maxValue","val maxValue: Int? = null","dev.kordex.core.commands.converters.impl.IntConverter.maxValue"]},{"name":"val maxValue: Long? = null","description":"dev.kordex.core.commands.converters.impl.LongConverter.maxValue","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-long-converter/max-value.html","searchKeys":["maxValue","val maxValue: Long? = null","dev.kordex.core.commands.converters.impl.LongConverter.maxValue"]},{"name":"val mention: String?","description":"dev.kordex.core.commands.application.slash.SlashCommand.mention","location":"kord-extensions/dev.kordex.core.commands.application.slash/-slash-command/mention.html","searchKeys":["mention","val mention: String?","dev.kordex.core.commands.application.slash.SlashCommand.mention"]},{"name":"val mentionedChannelIds: Optional<Set<Snowflake>>","description":"dev.kordex.core.utils.deltas.MessageDelta.mentionedChannelIds","location":"kord-extensions/dev.kordex.core.utils.deltas/-message-delta/mentioned-channel-ids.html","searchKeys":["mentionedChannelIds","val mentionedChannelIds: Optional<Set<Snowflake>>","dev.kordex.core.utils.deltas.MessageDelta.mentionedChannelIds"]},{"name":"val mentionedRoleIds: Optional<Set<Snowflake>>","description":"dev.kordex.core.utils.deltas.MessageDelta.mentionedRoleIds","location":"kord-extensions/dev.kordex.core.utils.deltas/-message-delta/mentioned-role-ids.html","searchKeys":["mentionedRoleIds","val mentionedRoleIds: Optional<Set<Snowflake>>","dev.kordex.core.utils.deltas.MessageDelta.mentionedRoleIds"]},{"name":"val mentionedUserIds: Optional<Set<Snowflake>>","description":"dev.kordex.core.utils.deltas.MessageDelta.mentionedUserIds","location":"kord-extensions/dev.kordex.core.utils.deltas/-message-delta/mentioned-user-ids.html","searchKeys":["mentionedUserIds","val mentionedUserIds: Optional<Set<Snowflake>>","dev.kordex.core.utils.deltas.MessageDelta.mentionedUserIds"]},{"name":"val mentionsEveryone: Optional<Boolean>","description":"dev.kordex.core.utils.deltas.MessageDelta.mentionsEveryone","location":"kord-extensions/dev.kordex.core.utils.deltas/-message-delta/mentions-everyone.html","searchKeys":["mentionsEveryone","val mentionsEveryone: Optional<Boolean>","dev.kordex.core.utils.deltas.MessageDelta.mentionsEveryone"]},{"name":"val messageCommandChecks: MutableList<MessageCommandCheck>","description":"dev.kordex.core.builders.ApplicationCommandsBuilder.messageCommandChecks","location":"kord-extensions/dev.kordex.core.builders/-application-commands-builder/message-command-checks.html","searchKeys":["messageCommandChecks","val messageCommandChecks: MutableList<MessageCommandCheck>","dev.kordex.core.builders.ApplicationCommandsBuilder.messageCommandChecks"]},{"name":"val messageCommandChecks: MutableList<MessageCommandCheck>","description":"dev.kordex.core.extensions.Extension.messageCommandChecks","location":"kord-extensions/dev.kordex.core.extensions/-extension/message-command-checks.html","searchKeys":["messageCommandChecks","val messageCommandChecks: MutableList<MessageCommandCheck>","dev.kordex.core.extensions.Extension.messageCommandChecks"]},{"name":"val messageCommandsRegistry: ChatCommandRegistry","description":"dev.kordex.core.extensions.impl.HelpExtension.messageCommandsRegistry","location":"kord-extensions/dev.kordex.core.extensions.impl/-help-extension/message-commands-registry.html","searchKeys":["messageCommandsRegistry","val messageCommandsRegistry: ChatCommandRegistry","dev.kordex.core.extensions.impl.HelpExtension.messageCommandsRegistry"]},{"name":"val minLength: Int? = null","description":"dev.kordex.core.commands.converters.impl.StringConverter.minLength","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-string-converter/min-length.html","searchKeys":["minLength","val minLength: Int? = null","dev.kordex.core.commands.converters.impl.StringConverter.minLength"]},{"name":"val minValue: Double? = null","description":"dev.kordex.core.commands.converters.impl.DecimalConverter.minValue","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-decimal-converter/min-value.html","searchKeys":["minValue","val minValue: Double? = null","dev.kordex.core.commands.converters.impl.DecimalConverter.minValue"]},{"name":"val minValue: Int? = null","description":"dev.kordex.core.commands.converters.impl.IntConverter.minValue","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-int-converter/min-value.html","searchKeys":["minValue","val minValue: Int? = null","dev.kordex.core.commands.converters.impl.IntConverter.minValue"]},{"name":"val minValue: Long? = null","description":"dev.kordex.core.commands.converters.impl.LongConverter.minValue","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-long-converter/min-value.html","searchKeys":["minValue","val minValue: Long? = null","dev.kordex.core.commands.converters.impl.LongConverter.minValue"]},{"name":"val modifiers: MutableList<suspend T.() -> Unit>","description":"dev.kordex.core.commands.OptionWrapper.modifiers","location":"kord-extensions/dev.kordex.core.commands/-option-wrapper/modifiers.html","searchKeys":["modifiers","val modifiers: MutableList<suspend T.() -> Unit>","dev.kordex.core.commands.OptionWrapper.modifiers"]},{"name":"val name: Key","description":"dev.kordex.core.CommandRegistrationException.name","location":"kord-extensions/dev.kordex.core/-command-registration-exception/name.html","searchKeys":["name","val name: Key","dev.kordex.core.CommandRegistrationException.name"]},{"name":"val name: Key","description":"dev.kordex.core.builders.about.Section.name","location":"kord-extensions/dev.kordex.core.builders.about/-section/name.html","searchKeys":["name","val name: Key","dev.kordex.core.builders.about.Section.name"]},{"name":"val name: Key","description":"dev.kordex.core.commands.ChoiceOptionWrapper.ChoiceWrapper.name","location":"kord-extensions/dev.kordex.core.commands/-choice-option-wrapper/-choice-wrapper/name.html","searchKeys":["name","val name: Key","dev.kordex.core.commands.ChoiceOptionWrapper.ChoiceWrapper.name"]},{"name":"val name: Key","description":"dev.kordex.core.commands.application.slash.SlashGroup.name","location":"kord-extensions/dev.kordex.core.commands.application.slash/-slash-group/name.html","searchKeys":["name","val name: Key","dev.kordex.core.commands.application.slash.SlashGroup.name"]},{"name":"val name: Key?","description":"dev.kordex.core.InvalidCommandException.name","location":"kord-extensions/dev.kordex.core/-invalid-command-exception/name.html","searchKeys":["name","val name: Key?","dev.kordex.core.InvalidCommandException.name"]},{"name":"val name: String","description":"dev.kordex.core.builders.about.Copyright.name","location":"kord-extensions/dev.kordex.core.builders.about/-copyright/name.html","searchKeys":["name","val name: String","dev.kordex.core.builders.about.Copyright.name"]},{"name":"val name: String","description":"dev.kordex.core.i18n.types.Bundle.name","location":"kord-extensions/dev.kordex.core.i18n.types/-bundle/name.html","searchKeys":["name","val name: String","dev.kordex.core.i18n.types.Bundle.name"]},{"name":"val name: String","description":"dev.kordex.core.sentry.BreadcrumbType.name","location":"kord-extensions/dev.kordex.core.sentry/-breadcrumb-type/name.html","searchKeys":["name","val name: String","dev.kordex.core.sentry.BreadcrumbType.name"]},{"name":"val name: String","description":"dev.kordex.core.utils.scheduling.Task.name","location":"kord-extensions/dev.kordex.core.utils.scheduling/-task/name.html","searchKeys":["name","val name: String","dev.kordex.core.utils.scheduling.Task.name"]},{"name":"val namedPlaceholders: Map<String, Any?>","description":"dev.kordex.core.i18n.types.Key.namedPlaceholders","location":"kord-extensions/dev.kordex.core.i18n.types/-key/named-placeholders.html","searchKeys":["namedPlaceholders","val namedPlaceholders: Map<String, Any?>","dev.kordex.core.i18n.types.Key.namedPlaceholders"]},{"name":"val new: T","description":"dev.kordex.core.utils.deltas.ChangeSet.Change.new","location":"kord-extensions/dev.kordex.core.utils.deltas/-change-set/-change/new.html","searchKeys":["new","val new: T","dev.kordex.core.utils.deltas.ChangeSet.Change.new"]},{"name":"val newState: ChangeSet.State","description":"dev.kordex.core.utils.deltas.ChangeSet.Change.newState","location":"kord-extensions/dev.kordex.core.utils.deltas/-change-set/-change/new-state.html","searchKeys":["newState","val newState: ChangeSet.State","dev.kordex.core.utils.deltas.ChangeSet.Change.newState"]},{"name":"val nickname: Optional<String?>","description":"dev.kordex.core.utils.deltas.MemberDelta.nickname","location":"kord-extensions/dev.kordex.core.utils.deltas/-member-delta/nickname.html","searchKeys":["nickname","val nickname: Optional<String?>","dev.kordex.core.utils.deltas.MemberDelta.nickname"]},{"name":"val old: Optional<T>","description":"dev.kordex.core.utils.deltas.ChangeSet.Change.old","location":"kord-extensions/dev.kordex.core.utils.deltas/-change-set/-change/old.html","searchKeys":["old","val old: Optional<T>","dev.kordex.core.utils.deltas.ChangeSet.Change.old"]},{"name":"val oldState: ChangeSet.State","description":"dev.kordex.core.utils.deltas.ChangeSet.Change.oldState","location":"kord-extensions/dev.kordex.core.utils.deltas/-change-set/-change/old-state.html","searchKeys":["oldState","val oldState: ChangeSet.State","dev.kordex.core.utils.deltas.ChangeSet.Change.oldState"]},{"name":"val omittedData: String?","description":"dev.kordex.core.builders.extensions.SentryExtensionBuilder.SentryExtensionDataTypeBuilder.omittedData","location":"kord-extensions/dev.kordex.core.builders.extensions/-sentry-extension-builder/-sentry-extension-data-type-builder/omitted-data.html","searchKeys":["omittedData","val omittedData: String?","dev.kordex.core.builders.extensions.SentryExtensionBuilder.SentryExtensionDataTypeBuilder.omittedData"]},{"name":"val ordinalPlaceholders: List<Any?>","description":"dev.kordex.core.i18n.types.Key.ordinalPlaceholders","location":"kord-extensions/dev.kordex.core.i18n.types/-key/ordinal-placeholders.html","searchKeys":["ordinalPlaceholders","val ordinalPlaceholders: List<Any?>","dev.kordex.core.i18n.types.Key.ordinalPlaceholders"]},{"name":"val outputError: Boolean = false","description":"dev.kordex.core.commands.converters.DefaultingCoalescingConverter.outputError","location":"kord-extensions/dev.kordex.core.commands.converters/-defaulting-coalescing-converter/output-error.html","searchKeys":["outputError","val outputError: Boolean = false","dev.kordex.core.commands.converters.DefaultingCoalescingConverter.outputError"]},{"name":"val outputError: Boolean = false","description":"dev.kordex.core.commands.converters.DefaultingConverter.outputError","location":"kord-extensions/dev.kordex.core.commands.converters/-defaulting-converter/output-error.html","searchKeys":["outputError","val outputError: Boolean = false","dev.kordex.core.commands.converters.DefaultingConverter.outputError"]},{"name":"val outputError: Boolean = false","description":"dev.kordex.core.commands.converters.OptionalCoalescingConverter.outputError","location":"kord-extensions/dev.kordex.core.commands.converters/-optional-coalescing-converter/output-error.html","searchKeys":["outputError","val outputError: Boolean = false","dev.kordex.core.commands.converters.OptionalCoalescingConverter.outputError"]},{"name":"val outputError: Boolean = false","description":"dev.kordex.core.commands.converters.OptionalConverter.outputError","location":"kord-extensions/dev.kordex.core.commands.converters/-optional-converter/output-error.html","searchKeys":["outputError","val outputError: Boolean = false","dev.kordex.core.commands.converters.OptionalConverter.outputError"]},{"name":"val owner: Optional<Boolean>","description":"dev.kordex.core.utils.deltas.MemberDelta.owner","location":"kord-extensions/dev.kordex.core.utils.deltas/-member-delta/owner.html","searchKeys":["owner","val owner: Optional<Boolean>","dev.kordex.core.utils.deltas.MemberDelta.owner"]},{"name":"val pages: Pages","description":"dev.kordex.core.pagination.builders.PaginatorBuilder.pages","location":"kord-extensions/dev.kordex.core.pagination.builders/-paginator-builder/pages.html","searchKeys":["pages","val pages: Pages","dev.kordex.core.pagination.builders.PaginatorBuilder.pages"]},{"name":"val parent: ExtensibleBotBuilder","description":"dev.kordex.core.builders.PluginBuilder.parent","location":"kord-extensions/dev.kordex.core.builders/-plugin-builder/parent.html","searchKeys":["parent","val parent: ExtensibleBotBuilder","dev.kordex.core.builders.PluginBuilder.parent"]},{"name":"val parent: SlashCommand<*, *, *>","description":"dev.kordex.core.commands.application.slash.SlashGroup.parent","location":"kord-extensions/dev.kordex.core.commands.application.slash/-slash-group/parent.html","searchKeys":["parent","val parent: SlashCommand<*, *, *>","dev.kordex.core.commands.application.slash.SlashGroup.parent"]},{"name":"val parser: StringParser?","description":"dev.kordex.core.ArgumentParsingException.parser","location":"kord-extensions/dev.kordex.core/-argument-parsing-exception/parser.html","searchKeys":["parser","val parser: StringParser?","dev.kordex.core.ArgumentParsingException.parser"]},{"name":"val pending: Optional<Boolean>","description":"dev.kordex.core.utils.deltas.MemberDelta.pending","location":"kord-extensions/dev.kordex.core.utils.deltas/-member-delta/pending.html","searchKeys":["pending","val pending: Optional<Boolean>","dev.kordex.core.utils.deltas.MemberDelta.pending"]},{"name":"val pingInReply: Boolean = true","description":"dev.kordex.core.pagination.MessageButtonPaginator.pingInReply","location":"kord-extensions/dev.kordex.core.pagination/-message-button-paginator/ping-in-reply.html","searchKeys":["pingInReply","val pingInReply: Boolean = true","dev.kordex.core.pagination.MessageButtonPaginator.pingInReply"]},{"name":"val placeholder: String?","description":"dev.kordex.core.events.extra.models.GuildJoinRequestResponse.ParagraphResponse.placeholder","location":"kord-extensions/dev.kordex.core.events.extra.models/-guild-join-request-response/-paragraph-response/placeholder.html","searchKeys":["placeholder","val placeholder: String?","dev.kordex.core.events.extra.models.GuildJoinRequestResponse.ParagraphResponse.placeholder"]},{"name":"val pluginPaths: MutableList<Path>","description":"dev.kordex.core.builders.PluginBuilder.pluginPaths","location":"kord-extensions/dev.kordex.core.builders/-plugin-builder/plugin-paths.html","searchKeys":["pluginPaths","val pluginPaths: MutableList<Path>","dev.kordex.core.builders.PluginBuilder.pluginPaths"]},{"name":"val positiveOnly: Boolean = true","description":"dev.kordex.core.commands.converters.impl.DurationCoalescingConverter.positiveOnly","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-duration-coalescing-converter/positive-only.html","searchKeys":["positiveOnly","val positiveOnly: Boolean = true","dev.kordex.core.commands.converters.impl.DurationCoalescingConverter.positiveOnly"]},{"name":"val positiveOnly: Boolean = true","description":"dev.kordex.core.commands.converters.impl.DurationConverter.positiveOnly","location":"kord-extensions/dev.kordex.core.commands.converters.impl/-duration-converter/positive-only.html","searchKeys":["positiveOnly","val positiveOnly: Boolean = true","dev.kordex.core.commands.converters.impl.DurationConverter.positiveOnly"]},{"name":"val postProcessors: List<PostProcessor>","description":"dev.kordex.core.i18n.types.Key.postProcessors","location":"kord-extensions/dev.kordex.core.i18n.types/-key/post-processors.html","searchKeys":["postProcessors","val postProcessors: List<PostProcessor>","dev.kordex.core.i18n.types.Key.postProcessors"]},{"name":"val presetPlaceholderPosition: PlaceholderPosition","description":"dev.kordex.core.i18n.types.Key.presetPlaceholderPosition","location":"kord-extensions/dev.kordex.core.i18n.types/-key/preset-placeholder-position.html","searchKeys":["presetPlaceholderPosition","val presetPlaceholderPosition: PlaceholderPosition","dev.kordex.core.i18n.types.Key.presetPlaceholderPosition"]},{"name":"val reactions: Optional<Set<Reaction>>","description":"dev.kordex.core.utils.deltas.MessageDelta.reactions","location":"kord-extensions/dev.kordex.core.utils.deltas/-message-delta/reactions.html","searchKeys":["reactions","val reactions: Optional<Set<Reaction>>","dev.kordex.core.utils.deltas.MessageDelta.reactions"]},{"name":"val reason: String","description":"dev.kordex.core.CommandRegistrationException.reason","location":"kord-extensions/dev.kordex.core/-command-registration-exception/reason.html","searchKeys":["reason","val reason: String","dev.kordex.core.CommandRegistrationException.reason"]},{"name":"val reason: String","description":"dev.kordex.core.EventHandlerRegistrationException.reason","location":"kord-extensions/dev.kordex.core/-event-handler-registration-exception/reason.html","searchKeys":["reason","val reason: String","dev.kordex.core.EventHandlerRegistrationException.reason"]},{"name":"val reason: String","description":"dev.kordex.core.InvalidArgumentException.reason","location":"kord-extensions/dev.kordex.core/-invalid-argument-exception/reason.html","searchKeys":["reason","val reason: String","dev.kordex.core.InvalidArgumentException.reason"]},{"name":"val reason: String","description":"dev.kordex.core.InvalidCommandException.reason","location":"kord-extensions/dev.kordex.core/-invalid-command-exception/reason.html","searchKeys":["reason","val reason: String","dev.kordex.core.InvalidCommandException.reason"]},{"name":"val reason: String","description":"dev.kordex.core.InvalidEventHandlerException.reason","location":"kord-extensions/dev.kordex.core/-invalid-event-handler-exception/reason.html","searchKeys":["reason","val reason: String","dev.kordex.core.InvalidEventHandlerException.reason"]},{"name":"val reason: String?","description":"dev.kordex.core.InvalidExtensionException.reason","location":"kord-extensions/dev.kordex.core/-invalid-extension-exception/reason.html","searchKeys":["reason","val reason: String?","dev.kordex.core.InvalidExtensionException.reason"]},{"name":"val registry: ApplicationCommandRegistry","description":"dev.kordex.core.commands.application.ApplicationCommand.registry","location":"kord-extensions/dev.kordex.core.commands.application/-application-command/registry.html","searchKeys":["registry","val registry: ApplicationCommandRegistry","dev.kordex.core.commands.application.ApplicationCommand.registry"]},{"name":"val registry: ApplicationCommandRegistry","description":"dev.kordex.core.components.Component.registry","location":"kord-extensions/dev.kordex.core.components/-component/registry.html","searchKeys":["registry","val registry: ApplicationCommandRegistry","dev.kordex.core.components.Component.registry"]},{"name":"val registry: ChatCommandRegistry","description":"dev.kordex.core.commands.chat.ChatCommand.registry","location":"kord-extensions/dev.kordex.core.commands.chat/-chat-command/registry.html","searchKeys":["registry","val registry: ChatCommandRegistry","dev.kordex.core.commands.chat.ChatCommand.registry"]},{"name":"val rejectionReason: String?","description":"dev.kordex.core.events.extra.models.GuildJoinRequest.rejectionReason","location":"kord-extensions/dev.kordex.core.events.extra.models/-guild-join-request/rejection-reason.html","searchKeys":["rejectionReason","val rejectionReason: String?","dev.kordex.core.events.extra.models.GuildJoinRequest.rejectionReason"]},{"name":"val removed: Set<Role>","description":"dev.kordex.core.utils.deltas.RoleDelta.removed","location":"kord-extensions/dev.kordex.core.utils.deltas/-role-delta/removed.html","searchKeys":["removed","val removed: Set<Role>","dev.kordex.core.utils.deltas.RoleDelta.removed"]},{"name":"val repeat: Boolean = false","description":"dev.kordex.core.utils.scheduling.Task.repeat","location":"kord-extensions/dev.kordex.core.utils.scheduling/-task/repeat.html","searchKeys":["repeat","val repeat: Boolean = false","dev.kordex.core.utils.scheduling.Task.repeat"]},{"name":"val request: GuildJoinRequest","description":"dev.kordex.core.events.extra.GuildJoinRequestUpdateEvent.request","location":"kord-extensions/dev.kordex.core.events.extra/-guild-join-request-update-event/request.html","searchKeys":["request","val request: GuildJoinRequest","dev.kordex.core.events.extra.GuildJoinRequestUpdateEvent.request"]},{"name":"val request: GuildJoinRequest","description":"dev.kordex.core.events.extra.models.GuildJoinRequestUpdate.request","location":"kord-extensions/dev.kordex.core.events.extra.models/-guild-join-request-update/request.html","searchKeys":["request","val request: GuildJoinRequest","dev.kordex.core.events.extra.models.GuildJoinRequestUpdate.request"]},{"name":"val requestBypassed: Boolean","description":"dev.kordex.core.events.extra.models.GuildJoinRequest.requestBypassed","location":"kord-extensions/dev.kordex.core.events.extra.models/-guild-join-request/request-bypassed.html","searchKeys":["requestBypassed","val requestBypassed: Boolean","dev.kordex.core.events.extra.models.GuildJoinRequest.requestBypassed"]},{"name":"val requestId: Snowflake","description":"dev.kordex.core.events.extra.GuildJoinRequestDeleteEvent.requestId","location":"kord-extensions/dev.kordex.core.events.extra/-guild-join-request-delete-event/request-id.html","searchKeys":["requestId","val requestId: Snowflake","dev.kordex.core.events.extra.GuildJoinRequestDeleteEvent.requestId"]},{"name":"val requestId: Snowflake","description":"dev.kordex.core.events.extra.GuildJoinRequestUpdateEvent.requestId","location":"kord-extensions/dev.kordex.core.events.extra/-guild-join-request-update-event/request-id.html","searchKeys":["requestId","val requestId: Snowflake","dev.kordex.core.events.extra.GuildJoinRequestUpdateEvent.requestId"]},{"name":"val requiredKeys: Array<out String>","description":"dev.kordex.core.sentry.BreadcrumbType.requiredKeys","location":"kord-extensions/dev.kordex.core.sentry/-breadcrumb-type/required-keys.html","searchKeys":["requiredKeys","val requiredKeys: Array<out String>","dev.kordex.core.sentry.BreadcrumbType.requiredKeys"]},{"name":"val response: Boolean","description":"dev.kordex.core.events.extra.models.GuildJoinRequestResponse.TermsResponse.response","location":"kord-extensions/dev.kordex.core.events.extra.models/-guild-join-request-response/-terms-response/response.html","searchKeys":["response","val response: Boolean","dev.kordex.core.events.extra.models.GuildJoinRequestResponse.TermsResponse.response"]},{"name":"val response: Int","description":"dev.kordex.core.events.extra.models.GuildJoinRequestResponse.MultipleChoiceResponse.response","location":"kord-extensions/dev.kordex.core.events.extra.models/-guild-join-request-response/-multiple-choice-response/response.html","searchKeys":["response","val response: Int","dev.kordex.core.events.extra.models.GuildJoinRequestResponse.MultipleChoiceResponse.response"]},{"name":"val response: String","description":"dev.kordex.core.events.extra.models.GuildJoinRequestResponse.ParagraphResponse.response","location":"kord-extensions/dev.kordex.core.events.extra.models/-guild-join-request-response/-paragraph-response/response.html","searchKeys":["response","val response: String","dev.kordex.core.events.extra.models.GuildJoinRequestResponse.ParagraphResponse.response"]},{"name":"val roles: Optional<RoleDelta>","description":"dev.kordex.core.utils.deltas.MemberDelta.roles","location":"kord-extensions/dev.kordex.core.utils.deltas/-member-delta/roles.html","searchKeys":["roles","val roles: Optional<RoleDelta>","dev.kordex.core.utils.deltas.MemberDelta.roles"]},{"name":"val running: Boolean","description":"dev.kordex.core.utils.scheduling.Task.running","location":"kord-extensions/dev.kordex.core.utils.scheduling/-task/running.html","searchKeys":["running","val running: Boolean","dev.kordex.core.utils.scheduling.Task.running"]},{"name":"val sections: MutableMap<Key, Section>","description":"dev.kordex.core.builders.AboutBuilder.sections","location":"kord-extensions/dev.kordex.core.builders/-about-builder/sections.html","searchKeys":["sections","val sections: MutableMap<Key, Section>","dev.kordex.core.builders.AboutBuilder.sections"]},{"name":"val selected: List<ChannelBehavior>","description":"dev.kordex.core.components.menus.channel.ChannelSelectMenuContext.selected","location":"kord-extensions/dev.kordex.core.components.menus.channel/-channel-select-menu-context/selected.html","searchKeys":["selected","val selected: List<ChannelBehavior>","dev.kordex.core.components.menus.channel.ChannelSelectMenuContext.selected"]},{"name":"val selected: List<RoleBehavior>","description":"dev.kordex.core.components.menus.role.RoleSelectMenuContext.selected","location":"kord-extensions/dev.kordex.core.components.menus.role/-role-select-menu-context/selected.html","searchKeys":["selected","val selected: List<RoleBehavior>","dev.kordex.core.components.menus.role.RoleSelectMenuContext.selected"]},{"name":"val selected: List<Snowflake>","description":"dev.kordex.core.components.menus.mentionable.MentionableSelectMenuContext.selected","location":"kord-extensions/dev.kordex.core.components.menus.mentionable/-mentionable-select-menu-context/selected.html","searchKeys":["selected","val selected: List<Snowflake>","dev.kordex.core.components.menus.mentionable.MentionableSelectMenuContext.selected"]},{"name":"val selected: List<String>","description":"dev.kordex.core.components.menus.string.StringSelectMenuContext.selected","location":"kord-extensions/dev.kordex.core.components.menus.string/-string-select-menu-context/selected.html","searchKeys":["selected","val selected: List<String>","dev.kordex.core.components.menus.string.StringSelectMenuContext.selected"]},{"name":"val selected: List<UserBehavior>","description":"dev.kordex.core.components.menus.user.UserSelectMenuContext.selected","location":"kord-extensions/dev.kordex.core.components.menus.user/-user-select-menu-context/selected.html","searchKeys":["selected","val selected: List<UserBehavior>","dev.kordex.core.components.menus.user.UserSelectMenuContext.selected"]},{"name":"val selectedRoles: List<RoleBehavior>","description":"dev.kordex.core.components.menus.mentionable.MentionableSelectMenuContext.selectedRoles","location":"kord-extensions/dev.kordex.core.components.menus.mentionable/-mentionable-select-menu-context/selected-roles.html","searchKeys":["selectedRoles","val selectedRoles: List<RoleBehavior>","dev.kordex.core.components.menus.mentionable.MentionableSelectMenuContext.selectedRoles"]},{"name":"val selectedUsers: List<UserBehavior>","description":"dev.kordex.core.components.menus.mentionable.MentionableSelectMenuContext.selectedUsers","location":"kord-extensions/dev.kordex.core.components.menus.mentionable/-mentionable-select-menu-context/selected-users.html","searchKeys":["selectedUsers","val selectedUsers: List<UserBehavior>","dev.kordex.core.components.menus.mentionable.MentionableSelectMenuContext.selectedUsers"]},{"name":"val sentry: SentryAdapter","description":"dev.kordex.core.commands.Command.sentry","location":"kord-extensions/dev.kordex.core.commands/-command/sentry.html","searchKeys":["sentry","val sentry: SentryAdapter","dev.kordex.core.commands.Command.sentry"]},{"name":"val sentry: SentryAdapter","description":"dev.kordex.core.components.Component.sentry","location":"kord-extensions/dev.kordex.core.components/-component/sentry.html","searchKeys":["sentry","val sentry: SentryAdapter","dev.kordex.core.components.Component.sentry"]},{"name":"val sentry: SentryAdapter","description":"dev.kordex.core.events.EventHandler.sentry","location":"kord-extensions/dev.kordex.core.events/-event-handler/sentry.html","searchKeys":["sentry","val sentry: SentryAdapter","dev.kordex.core.events.EventHandler.sentry"]},{"name":"val sentry: SentryContext","description":"dev.kordex.core.commands.CommandContext.sentry","location":"kord-extensions/dev.kordex.core.commands/-command-context/sentry.html","searchKeys":["sentry","val sentry: SentryContext","dev.kordex.core.commands.CommandContext.sentry"]},{"name":"val sentry: SentryContext","description":"dev.kordex.core.components.ComponentContext.sentry","location":"kord-extensions/dev.kordex.core.components/-component-context/sentry.html","searchKeys":["sentry","val sentry: SentryContext","dev.kordex.core.components.ComponentContext.sentry"]},{"name":"val sentry: SentryContext","description":"dev.kordex.core.events.EventContext.sentry","location":"kord-extensions/dev.kordex.core.events/-event-context/sentry.html","searchKeys":["sentry","val sentry: SentryContext","dev.kordex.core.events.EventContext.sentry"]},{"name":"val sentryAdapter: SentryAdapter","description":"dev.kordex.core.extensions.impl.SentryExtension.sentryAdapter","location":"kord-extensions/dev.kordex.core.extensions.impl/-sentry-extension/sentry-adapter.html","searchKeys":["sentryAdapter","val sentryAdapter: SentryAdapter","dev.kordex.core.extensions.impl.SentryExtension.sentryAdapter"]},{"name":"val sentrySettings: SentryExtensionBuilder","description":"dev.kordex.core.extensions.impl.SentryExtension.sentrySettings","location":"kord-extensions/dev.kordex.core.extensions.impl/-sentry-extension/sentry-settings.html","searchKeys":["sentrySettings","val sentrySettings: SentryExtensionBuilder","dev.kordex.core.extensions.impl.SentryExtension.sentrySettings"]},{"name":"val serializer: KSerializer<T>","description":"dev.kordex.core.storage.StorageUnit.serializer","location":"kord-extensions/dev.kordex.core.storage/-storage-unit/serializer.html","searchKeys":["serializer","val serializer: KSerializer<T>","dev.kordex.core.storage.StorageUnit.serializer"]},{"name":"val settings: ExtensibleBotBuilder","description":"dev.kordex.core.ExtensibleBot.settings","location":"kord-extensions/dev.kordex.core/-extensible-bot/settings.html","searchKeys":["settings","val settings: ExtensibleBotBuilder","dev.kordex.core.ExtensibleBot.settings"]},{"name":"val settings: ExtensibleBotBuilder","description":"dev.kordex.core.commands.Command.settings","location":"kord-extensions/dev.kordex.core.commands/-command/settings.html","searchKeys":["settings","val settings: ExtensibleBotBuilder","dev.kordex.core.commands.Command.settings"]},{"name":"val settings: ExtensibleBotBuilder","description":"dev.kordex.core.components.Component.settings","location":"kord-extensions/dev.kordex.core.components/-component/settings.html","searchKeys":["settings","val settings: ExtensibleBotBuilder","dev.kordex.core.components.Component.settings"]},{"name":"val settings: ExtensibleBotBuilder","description":"dev.kordex.core.components.ComponentContext.settings","location":"kord-extensions/dev.kordex.core.components/-component-context/settings.html","searchKeys":["settings","val settings: ExtensibleBotBuilder","dev.kordex.core.components.ComponentContext.settings"]},{"name":"val settings: HelpExtensionBuilder","description":"dev.kordex.core.extensions.impl.HelpExtension.settings","location":"kord-extensions/dev.kordex.core.extensions.impl/-help-extension/settings.html","searchKeys":["settings","val settings: HelpExtensionBuilder","dev.kordex.core.extensions.impl.HelpExtension.settings"]},{"name":"val singleConverter: SingleConverter<T>","description":"dev.kordex.core.commands.converters.SingleToDefaultingConverter.singleConverter","location":"kord-extensions/dev.kordex.core.commands.converters/-single-to-defaulting-converter/single-converter.html","searchKeys":["singleConverter","val singleConverter: SingleConverter<T>","dev.kordex.core.commands.converters.SingleToDefaultingConverter.singleConverter"]},{"name":"val singleConverter: SingleConverter<T>","description":"dev.kordex.core.commands.converters.SingleToListConverter.singleConverter","location":"kord-extensions/dev.kordex.core.commands.converters/-single-to-list-converter/single-converter.html","searchKeys":["singleConverter","val singleConverter: SingleConverter<T>","dev.kordex.core.commands.converters.SingleToListConverter.singleConverter"]},{"name":"val singleConverter: SingleConverter<T>","description":"dev.kordex.core.commands.converters.SingleToOptionalConverter.singleConverter","location":"kord-extensions/dev.kordex.core.commands.converters/-single-to-optional-converter/single-converter.html","searchKeys":["singleConverter","val singleConverter: SingleConverter<T>","dev.kordex.core.commands.converters.SingleToOptionalConverter.singleConverter"]},{"name":"val slashCommandChecks: MutableList<SlashCommandCheck>","description":"dev.kordex.core.builders.ApplicationCommandsBuilder.slashCommandChecks","location":"kord-extensions/dev.kordex.core.builders/-application-commands-builder/slash-command-checks.html","searchKeys":["slashCommandChecks","val slashCommandChecks: MutableList<SlashCommandCheck>","dev.kordex.core.builders.ApplicationCommandsBuilder.slashCommandChecks"]},{"name":"val slashCommandChecks: MutableList<SlashCommandCheck>","description":"dev.kordex.core.extensions.Extension.slashCommandChecks","location":"kord-extensions/dev.kordex.core.extensions/-extension/slash-command-checks.html","searchKeys":["slashCommandChecks","val slashCommandChecks: MutableList<SlashCommandCheck>","dev.kordex.core.extensions.Extension.slashCommandChecks"]},{"name":"val state: ExtensionState","description":"dev.kordex.core.events.ExtensionStateEvent.state","location":"kord-extensions/dev.kordex.core.events/-extension-state-event/state.html","searchKeys":["state","val state: ExtensionState","dev.kordex.core.events.ExtensionStateEvent.state"]},{"name":"val status: ApplicationStatus","description":"dev.kordex.core.events.extra.GuildJoinRequestUpdateEvent.status","location":"kord-extensions/dev.kordex.core.events.extra/-guild-join-request-update-event/status.html","searchKeys":["status","val status: ApplicationStatus","dev.kordex.core.events.extra.GuildJoinRequestUpdateEvent.status"]},{"name":"val status: ApplicationStatus","description":"dev.kordex.core.events.extra.models.GuildJoinRequest.status","location":"kord-extensions/dev.kordex.core.events.extra.models/-guild-join-request/status.html","searchKeys":["status","val status: ApplicationStatus","dev.kordex.core.events.extra.models.GuildJoinRequest.status"]},{"name":"val status: ApplicationStatus","description":"dev.kordex.core.events.extra.models.GuildJoinRequestUpdate.status","location":"kord-extensions/dev.kordex.core.events.extra.models/-guild-join-request-update/status.html","searchKeys":["status","val status: ApplicationStatus","dev.kordex.core.events.extra.models.GuildJoinRequestUpdate.status"]},{"name":"val stickers: Optional<List<StickerItem>>","description":"dev.kordex.core.utils.deltas.MessageDelta.stickers","location":"kord-extensions/dev.kordex.core.utils.deltas/-message-delta/stickers.html","searchKeys":["stickers","val stickers: Optional<List<StickerItem>>","dev.kordex.core.utils.deltas.MessageDelta.stickers"]},{"name":"val storageFileRoot: Path","description":"dev.kordex.core.storage.storageFileRoot","location":"kord-extensions/dev.kordex.core.storage/storage-file-root.html","searchKeys":["storageFileRoot","val storageFileRoot: Path","dev.kordex.core.storage.storageFileRoot"]},{"name":"val string: String?","description":"dev.kordex.core.time.TimestampType.string","location":"kord-extensions/dev.kordex.core.time/-timestamp-type/string.html","searchKeys":["string","val string: String?","dev.kordex.core.time.TimestampType.string"]},{"name":"val subCommands: MutableList<SlashCommand<*, *, *>>","description":"dev.kordex.core.commands.application.slash.SlashGroup.subCommands","location":"kord-extensions/dev.kordex.core.commands.application.slash/-slash-group/sub-commands.html","searchKeys":["subCommands","val subCommands: MutableList<SlashCommand<*, *, *>>","dev.kordex.core.commands.application.slash.SlashGroup.subCommands"]},{"name":"val targetChannel: MessageChannelBehavior? = null","description":"dev.kordex.core.pagination.MessageButtonPaginator.targetChannel","location":"kord-extensions/dev.kordex.core.pagination/-message-button-paginator/target-channel.html","searchKeys":["targetChannel","val targetChannel: MessageChannelBehavior? = null","dev.kordex.core.pagination.MessageButtonPaginator.targetChannel"]},{"name":"val targetMessage: Message? = null","description":"dev.kordex.core.pagination.MessageButtonPaginator.targetMessage","location":"kord-extensions/dev.kordex.core.pagination/-message-button-paginator/target-message.html","searchKeys":["targetMessage","val targetMessage: Message? = null","dev.kordex.core.pagination.MessageButtonPaginator.targetMessage"]},{"name":"val targetMessages: Collection<Message>","description":"dev.kordex.core.commands.application.message.MessageCommandContext.targetMessages","location":"kord-extensions/dev.kordex.core.commands.application.message/-message-command-context/target-messages.html","searchKeys":["targetMessages","val targetMessages: Collection<Message>","dev.kordex.core.commands.application.message.MessageCommandContext.targetMessages"]},{"name":"val targetUsers: Collection<User>","description":"dev.kordex.core.commands.application.user.UserCommandContext.targetUsers","location":"kord-extensions/dev.kordex.core.commands.application.user/-user-command-context/target-users.html","searchKeys":["targetUsers","val targetUsers: Collection<User>","dev.kordex.core.commands.application.user.UserCommandContext.targetUsers"]},{"name":"val test: (provided: String, candidate: String) -> Boolean","description":"dev.kordex.core.utils.FilterStrategy.test","location":"kord-extensions/dev.kordex.core.utils/-filter-strategy/test.html","searchKeys":["test","val test: (provided: String, candidate: String) -> Boolean","dev.kordex.core.utils.FilterStrategy.test"]},{"name":"val throwable: Throwable","description":"dev.kordex.core.sentry.captures.SentryExceptionCapture.throwable","location":"kord-extensions/dev.kordex.core.sentry.captures/-sentry-exception-capture/throwable.html","searchKeys":["throwable","val throwable: Throwable","dev.kordex.core.sentry.captures.SentryExceptionCapture.throwable"]},{"name":"val timeout: Duration? = null","description":"dev.kordex.core.components.ComponentContainer.timeout","location":"kord-extensions/dev.kordex.core.components/-component-container/timeout.html","searchKeys":["timeout","val timeout: Duration? = null","dev.kordex.core.components.ComponentContainer.timeout"]},{"name":"val timeoutCallbacks: MutableList<suspend () -> Unit>","description":"dev.kordex.core.pagination.BasePaginator.timeoutCallbacks","location":"kord-extensions/dev.kordex.core.pagination/-base-paginator/timeout-callbacks.html","searchKeys":["timeoutCallbacks","val timeoutCallbacks: MutableList<suspend () -> Unit>","dev.kordex.core.pagination.BasePaginator.timeoutCallbacks"]},{"name":"val translateNestedKeys: Boolean = true","description":"dev.kordex.core.i18n.types.Key.translateNestedKeys","location":"kord-extensions/dev.kordex.core.i18n.types/-key/translate-nested-keys.html","searchKeys":["translateNestedKeys","val translateNestedKeys: Boolean = true","dev.kordex.core.i18n.types.Key.translateNestedKeys"]},{"name":"val translations: MutableMap<Locale, String>","description":"dev.kordex.core.commands.application.Localized.translations","location":"kord-extensions/dev.kordex.core.commands.application/-localized/translations.html","searchKeys":["translations","val translations: MutableMap<Locale, String>","dev.kordex.core.commands.application.Localized.translations"]},{"name":"val translationsProvider: TranslationsProvider","description":"dev.kordex.core.commands.Command.translationsProvider","location":"kord-extensions/dev.kordex.core.commands/-command/translations-provider.html","searchKeys":["translationsProvider","val translationsProvider: TranslationsProvider","dev.kordex.core.commands.Command.translationsProvider"]},{"name":"val type: BreadcrumbType","description":"dev.kordex.core.sentry.captures.SentryBreadcrumbCapture.type","location":"kord-extensions/dev.kordex.core.sentry.captures/-sentry-breadcrumb-capture/type.html","searchKeys":["type","val type: BreadcrumbType","dev.kordex.core.sentry.captures.SentryBreadcrumbCapture.type"]},{"name":"val type: CopyrightType","description":"dev.kordex.core.builders.about.Copyright.type","location":"kord-extensions/dev.kordex.core.builders.about/-copyright/type.html","searchKeys":["type","val type: CopyrightType","dev.kordex.core.builders.about.Copyright.type"]},{"name":"val type: KClass<T>","description":"dev.kordex.core.commands.OptionWrapper.type","location":"kord-extensions/dev.kordex.core.commands/-option-wrapper/type.html","searchKeys":["type","val type: KClass<T>","dev.kordex.core.commands.OptionWrapper.type"]},{"name":"val type: String","description":"dev.kordex.core.storage.StorageType.type","location":"kord-extensions/dev.kordex.core.storage/-storage-type/type.html","searchKeys":["type","val type: String","dev.kordex.core.storage.StorageType.type"]},{"name":"val unit: String","description":"dev.kordex.core.parsers.InvalidTimeUnitException.unit","location":"kord-extensions/dev.kordex.core.parsers/-invalid-time-unit-exception/unit.html","searchKeys":["unit","val unit: String","dev.kordex.core.parsers.InvalidTimeUnitException.unit"]},{"name":"val unitKey: String","description":"dev.kordex.core.storage.StorageUnit.unitKey","location":"kord-extensions/dev.kordex.core.storage/-storage-unit/unit-key.html","searchKeys":["unitKey","val unitKey: String","dev.kordex.core.storage.StorageUnit.unitKey"]},{"name":"val url: String?","description":"dev.kordex.core.builders.about.Copyright.url","location":"kord-extensions/dev.kordex.core.builders.about/-copyright/url.html","searchKeys":["url","val url: String?","dev.kordex.core.builders.about.Copyright.url"]},{"name":"val user: DiscordUser","description":"dev.kordex.core.events.extra.models.GuildJoinRequest.user","location":"kord-extensions/dev.kordex.core.events.extra.models/-guild-join-request/user.html","searchKeys":["user","val user: DiscordUser","dev.kordex.core.events.extra.models.GuildJoinRequest.user"]},{"name":"val userCommandChecks: MutableList<UserCommandCheck>","description":"dev.kordex.core.builders.ApplicationCommandsBuilder.userCommandChecks","location":"kord-extensions/dev.kordex.core.builders/-application-commands-builder/user-command-checks.html","searchKeys":["userCommandChecks","val userCommandChecks: MutableList<UserCommandCheck>","dev.kordex.core.builders.ApplicationCommandsBuilder.userCommandChecks"]},{"name":"val userCommandChecks: MutableList<UserCommandCheck>","description":"dev.kordex.core.extensions.Extension.userCommandChecks","location":"kord-extensions/dev.kordex.core.extensions/-extension/user-command-checks.html","searchKeys":["userCommandChecks","val userCommandChecks: MutableList<UserCommandCheck>","dev.kordex.core.extensions.Extension.userCommandChecks"]},{"name":"val userId: Snowflake","description":"dev.kordex.core.events.extra.GuildJoinRequestDeleteEvent.userId","location":"kord-extensions/dev.kordex.core.events.extra/-guild-join-request-delete-event/user-id.html","searchKeys":["userId","val userId: Snowflake","dev.kordex.core.events.extra.GuildJoinRequestDeleteEvent.userId"]},{"name":"val userId: Snowflake","description":"dev.kordex.core.events.extra.GuildJoinRequestUpdateEvent.userId","location":"kord-extensions/dev.kordex.core.events.extra/-guild-join-request-update-event/user-id.html","searchKeys":["userId","val userId: Snowflake","dev.kordex.core.events.extra.GuildJoinRequestUpdateEvent.userId"]},{"name":"val userId: Snowflake","description":"dev.kordex.core.events.extra.models.GuildJoinRequest.userId","location":"kord-extensions/dev.kordex.core.events.extra.models/-guild-join-request/user-id.html","searchKeys":["userId","val userId: Snowflake","dev.kordex.core.events.extra.models.GuildJoinRequest.userId"]},{"name":"val userId: Snowflake","description":"dev.kordex.core.events.extra.models.GuildJoinRequestDelete.userId","location":"kord-extensions/dev.kordex.core.events.extra.models/-guild-join-request-delete/user-id.html","searchKeys":["userId","val userId: Snowflake","dev.kordex.core.events.extra.models.GuildJoinRequestDelete.userId"]},{"name":"val username: Optional<String>","description":"dev.kordex.core.utils.deltas.UserDelta.username","location":"kord-extensions/dev.kordex.core.utils.deltas/-user-delta/username.html","searchKeys":["username","val username: Optional<String>","dev.kordex.core.utils.deltas.UserDelta.username"]},{"name":"val username: String","description":"dev.kordex.core.events.extra.models.GuildJoinRequestUser.username","location":"kord-extensions/dev.kordex.core.events.extra.models/-guild-join-request-user/username.html","searchKeys":["username","val username: String","dev.kordex.core.events.extra.models.GuildJoinRequestUser.username"]},{"name":"val value: T","description":"dev.kordex.core.commands.ChoiceOptionWrapper.ChoiceWrapper.value","location":"kord-extensions/dev.kordex.core.commands/-choice-option-wrapper/-choice-wrapper/value.html","searchKeys":["value","val value: T","dev.kordex.core.commands.ChoiceOptionWrapper.ChoiceWrapper.value"]},{"name":"val value: T","description":"dev.kordex.core.commands.converters.builders.ValidationContext.value","location":"kord-extensions/dev.kordex.core.commands.converters.builders/-validation-context/value.html","searchKeys":["value","val value: T","dev.kordex.core.commands.converters.builders.ValidationContext.value"]},{"name":"val value: V","description":"dev.kordex.core.registry.RegistryStorage.StorageEntry.value","location":"kord-extensions/dev.kordex.core.registry/-registry-storage/-storage-entry/value.html","searchKeys":["value","val value: V","dev.kordex.core.registry.RegistryStorage.StorageEntry.value"]},{"name":"val values: List<String>","description":"dev.kordex.core.events.extra.models.GuildJoinRequestResponse.TermsResponse.values","location":"kord-extensions/dev.kordex.core.events.extra.models/-guild-join-request-response/-terms-response/values.html","searchKeys":["values","val values: List<String>","dev.kordex.core.events.extra.models.GuildJoinRequestResponse.TermsResponse.values"]},{"name":"var MemberModifyBuilder.timeoutUntil: Instant?","description":"dev.kordex.core.utils.timeoutUntil","location":"kord-extensions/dev.kordex.core.utils/timeout-until.html","searchKeys":["timeoutUntil","var MemberModifyBuilder.timeoutUntil: Instant?","dev.kordex.core.utils.timeoutUntil"]},{"name":"var applicationCommandLocales: MutableList<Locale>","description":"dev.kordex.core.builders.I18nBuilder.applicationCommandLocales","location":"kord-extensions/dev.kordex.core.builders/-i18n-builder/application-command-locales.html","searchKeys":["applicationCommandLocales","var applicationCommandLocales: MutableList<Locale>","dev.kordex.core.builders.I18nBuilder.applicationCommandLocales"]},{"name":"var arguments: Boolean","description":"dev.kordex.core.builders.extensions.SentryExtensionBuilder.SentryExtensionDataTypeBuilder.arguments","location":"kord-extensions/dev.kordex.core.builders.extensions/-sentry-extension-builder/-sentry-extension-data-type-builder/arguments.html","searchKeys":["arguments","var arguments: Boolean","dev.kordex.core.builders.extensions.SentryExtensionBuilder.SentryExtensionDataTypeBuilder.arguments"]},{"name":"var cachedMessages: Int?","description":"dev.kordex.core.builders.CacheBuilder.cachedMessages","location":"kord-extensions/dev.kordex.core.builders/-cache-builder/cached-messages.html","searchKeys":["cachedMessages","var cachedMessages: Int?","dev.kordex.core.builders.CacheBuilder.cachedMessages"]},{"name":"var category: String?","description":"dev.kordex.core.sentry.captures.SentryBreadcrumbCapture.category","location":"kord-extensions/dev.kordex.core.sentry.captures/-sentry-breadcrumb-capture/category.html","searchKeys":["category","var category: String?","dev.kordex.core.sentry.captures.SentryBreadcrumbCapture.category"]},{"name":"var channels: Boolean","description":"dev.kordex.core.builders.extensions.SentryExtensionBuilder.SentryExtensionDataTypeBuilder.channels","location":"kord-extensions/dev.kordex.core.builders.extensions/-sentry-extension-builder/-sentry-extension-data-type-builder/channels.html","searchKeys":["channels","var channels: Boolean","dev.kordex.core.builders.extensions.SentryExtensionBuilder.SentryExtensionDataTypeBuilder.channels"]},{"name":"var chunkedPages: Int","description":"dev.kordex.core.pagination.builders.PaginatorBuilder.chunkedPages","location":"kord-extensions/dev.kordex.core.pagination.builders/-paginator-builder/chunked-pages.html","searchKeys":["chunkedPages","var chunkedPages: Int","dev.kordex.core.pagination.builders.PaginatorBuilder.chunkedPages"]},{"name":"var colourGetter: suspend MessageCreateEvent.() -> Color","description":"dev.kordex.core.builders.extensions.HelpExtensionBuilder.colourGetter","location":"kord-extensions/dev.kordex.core.builders.extensions/-help-extension-builder/colour-getter.html","searchKeys":["colourGetter","var colourGetter: suspend MessageCreateEvent.() -> Color","dev.kordex.core.builders.extensions.HelpExtensionBuilder.colourGetter"]},{"name":"var constructor: (ExtensibleBotBuilder, String) -> ExtensibleBot","description":"dev.kordex.core.builders.ExtensibleBotBuilder.constructor","location":"kord-extensions/dev.kordex.core.builders/-extensible-bot-builder/constructor.html","searchKeys":["constructor","var constructor: (ExtensibleBotBuilder, String) -> ExtensibleBot","dev.kordex.core.builders.ExtensibleBotBuilder.constructor"]},{"name":"var coroutineScope: CoroutineScope","description":"dev.kordex.core.events.EventHandler.coroutineScope","location":"kord-extensions/dev.kordex.core.events/-event-handler/coroutine-scope.html","searchKeys":["coroutineScope","var coroutineScope: CoroutineScope","dev.kordex.core.events.EventHandler.coroutineScope"]},{"name":"var currentGroup: Key","description":"dev.kordex.core.pagination.BasePaginator.currentGroup","location":"kord-extensions/dev.kordex.core.pagination/-base-paginator/current-group.html","searchKeys":["currentGroup","var currentGroup: Key","dev.kordex.core.pagination.BasePaginator.currentGroup"]},{"name":"var currentPageNum: Int","description":"dev.kordex.core.pagination.BasePaginator.currentPageNum","location":"kord-extensions/dev.kordex.core.pagination/-base-paginator/current-page-num.html","searchKeys":["currentPageNum","var currentPageNum: Int","dev.kordex.core.pagination.BasePaginator.currentPageNum"]},{"name":"var dataCollectionMode: DataCollection","description":"dev.kordex.core.builders.ExtensibleBotBuilder.dataCollectionMode","location":"kord-extensions/dev.kordex.core.builders/-extensible-bot-builder/data-collection-mode.html","searchKeys":["dataCollectionMode","var dataCollectionMode: DataCollection","dev.kordex.core.builders.ExtensibleBotBuilder.dataCollectionMode"]},{"name":"var default: Boolean","description":"dev.kordex.core.components.menus.string.StringSelectOption.default","location":"kord-extensions/dev.kordex.core.components.menus.string/-string-select-option/default.html","searchKeys":["default","var default: Boolean","dev.kordex.core.components.menus.string.StringSelectOption.default"]},{"name":"var defaultGuild: Snowflake?","description":"dev.kordex.core.builders.ApplicationCommandsBuilder.defaultGuild","location":"kord-extensions/dev.kordex.core.builders/-application-commands-builder/default-guild.html","searchKeys":["defaultGuild","var defaultGuild: Snowflake?","dev.kordex.core.builders.ApplicationCommandsBuilder.defaultGuild"]},{"name":"var defaultLocale: Locale","description":"dev.kordex.core.builders.I18nBuilder.defaultLocale","location":"kord-extensions/dev.kordex.core.builders/-i18n-builder/default-locale.html","searchKeys":["defaultLocale","var defaultLocale: Locale","dev.kordex.core.builders.I18nBuilder.defaultLocale"]},{"name":"var defaultPrefix: String","description":"dev.kordex.core.builders.ChatCommandsBuilder.defaultPrefix","location":"kord-extensions/dev.kordex.core.builders/-chat-commands-builder/default-prefix.html","searchKeys":["defaultPrefix","var defaultPrefix: String","dev.kordex.core.builders.ChatCommandsBuilder.defaultPrefix"]},{"name":"var defaultStrategy: EntitySupplyStrategy<EntitySupplier>","description":"dev.kordex.core.builders.CacheBuilder.defaultStrategy","location":"kord-extensions/dev.kordex.core.builders/-cache-builder/default-strategy.html","searchKeys":["defaultStrategy","var defaultStrategy: EntitySupplyStrategy<EntitySupplier>","dev.kordex.core.builders.CacheBuilder.defaultStrategy"]},{"name":"var deleteInvocationOnPaginatorTimeout: Boolean","description":"dev.kordex.core.builders.extensions.HelpExtensionBuilder.deleteInvocationOnPaginatorTimeout","location":"kord-extensions/dev.kordex.core.builders.extensions/-help-extension-builder/delete-invocation-on-paginator-timeout.html","searchKeys":["deleteInvocationOnPaginatorTimeout","var deleteInvocationOnPaginatorTimeout: Boolean","dev.kordex.core.builders.extensions.HelpExtensionBuilder.deleteInvocationOnPaginatorTimeout"]},{"name":"var deletePaginatorOnTimeout: Boolean","description":"dev.kordex.core.builders.extensions.HelpExtensionBuilder.deletePaginatorOnTimeout","location":"kord-extensions/dev.kordex.core.builders.extensions/-help-extension-builder/delete-paginator-on-timeout.html","searchKeys":["deletePaginatorOnTimeout","var deletePaginatorOnTimeout: Boolean","dev.kordex.core.builders.extensions.HelpExtensionBuilder.deletePaginatorOnTimeout"]},{"name":"var description: Key","description":"dev.kordex.core.commands.OptionWrapper.description","location":"kord-extensions/dev.kordex.core.commands/-option-wrapper/description.html","searchKeys":["description","var description: Key","dev.kordex.core.commands.OptionWrapper.description"]},{"name":"var description: Key?","description":"dev.kordex.core.components.menus.string.StringSelectOption.description","location":"kord-extensions/dev.kordex.core.components.menus.string/-string-select-option/description.html","searchKeys":["description","var description: Key?","dev.kordex.core.components.menus.string.StringSelectOption.description"]},{"name":"var devMode: Boolean","description":"dev.kordex.core.builders.ExtensibleBotBuilder.devMode","location":"kord-extensions/dev.kordex.core.builders/-extensible-bot-builder/dev-mode.html","searchKeys":["devMode","var devMode: Boolean","dev.kordex.core.builders.ExtensibleBotBuilder.devMode"]},{"name":"var displayName: Key","description":"dev.kordex.core.commands.OptionWrapper.displayName","location":"kord-extensions/dev.kordex.core.commands/-option-wrapper/display-name.html","searchKeys":["displayName","var displayName: Key","dev.kordex.core.commands.OptionWrapper.displayName"]},{"name":"var embedInteraction: PublicFollowupMessage?","description":"dev.kordex.core.pagination.PublicFollowUpPaginator.embedInteraction","location":"kord-extensions/dev.kordex.core.pagination/-public-follow-up-paginator/embed-interaction.html","searchKeys":["embedInteraction","var embedInteraction: PublicFollowupMessage?","dev.kordex.core.pagination.PublicFollowUpPaginator.embedInteraction"]},{"name":"var emoji: DiscordPartialEmoji?","description":"dev.kordex.core.components.menus.string.StringSelectOption.emoji","location":"kord-extensions/dev.kordex.core.components.menus.string/-string-select-option/emoji.html","searchKeys":["emoji","var emoji: DiscordPartialEmoji?","dev.kordex.core.components.menus.string.StringSelectOption.emoji"]},{"name":"var enableBundledExtension: Boolean","description":"dev.kordex.core.builders.extensions.HelpExtensionBuilder.enableBundledExtension","location":"kord-extensions/dev.kordex.core.builders.extensions/-help-extension-builder/enable-bundled-extension.html","searchKeys":["enableBundledExtension","var enableBundledExtension: Boolean","dev.kordex.core.builders.extensions.HelpExtensionBuilder.enableBundledExtension"]},{"name":"var enabled: Boolean","description":"dev.kordex.core.builders.ApplicationCommandsBuilder.enabled","location":"kord-extensions/dev.kordex.core.builders/-application-commands-builder/enabled.html","searchKeys":["enabled","var enabled: Boolean","dev.kordex.core.builders.ApplicationCommandsBuilder.enabled"]},{"name":"var enabled: Boolean","description":"dev.kordex.core.builders.ChatCommandsBuilder.enabled","location":"kord-extensions/dev.kordex.core.builders/-chat-commands-builder/enabled.html","searchKeys":["enabled","var enabled: Boolean","dev.kordex.core.builders.ChatCommandsBuilder.enabled"]},{"name":"var enabled: Boolean","description":"dev.kordex.core.builders.PluginBuilder.enabled","location":"kord-extensions/dev.kordex.core.builders/-plugin-builder/enabled.html","searchKeys":["enabled","var enabled: Boolean","dev.kordex.core.builders.PluginBuilder.enabled"]},{"name":"var enabled: Boolean","description":"dev.kordex.core.plugins.PluginManager.enabled","location":"kord-extensions/dev.kordex.core.plugins/-plugin-manager/enabled.html","searchKeys":["enabled","var enabled: Boolean","dev.kordex.core.plugins.PluginManager.enabled"]},{"name":"var ephemeral: Boolean","description":"dev.kordex.core.builders.AboutBuilder.ephemeral","location":"kord-extensions/dev.kordex.core.builders/-about-builder/ephemeral.html","searchKeys":["ephemeral","var ephemeral: Boolean","dev.kordex.core.builders.AboutBuilder.ephemeral"]},{"name":"var ephemeral: Boolean?","description":"dev.kordex.core.builders.about.Section.ephemeral","location":"kord-extensions/dev.kordex.core.builders.about/-section/ephemeral.html","searchKeys":["ephemeral","var ephemeral: Boolean?","dev.kordex.core.builders.about.Section.ephemeral"]},{"name":"var errorResponseKey: Key","description":"dev.kordex.core.checks.types.CheckContext.errorResponseKey","location":"kord-extensions/dev.kordex.core.checks.types/-check-context/error-response-key.html","searchKeys":["errorResponseKey","var errorResponseKey: Key","dev.kordex.core.checks.types.CheckContext.errorResponseKey"]},{"name":"var errorResponseKey: Key","description":"dev.kordex.core.commands.converters.builders.ValidationContext.errorResponseKey","location":"kord-extensions/dev.kordex.core.commands.converters.builders/-validation-context/error-response-key.html","searchKeys":["errorResponseKey","var errorResponseKey: Key","dev.kordex.core.commands.converters.builders.ValidationContext.errorResponseKey"]},{"name":"var executions: ULong","description":"dev.kordex.core.utils.scheduling.Task.executions","location":"kord-extensions/dev.kordex.core.utils.scheduling/-task/executions.html","searchKeys":["executions","var executions: ULong","dev.kordex.core.utils.scheduling.Task.executions"]},{"name":"var fillPresences: Boolean?","description":"dev.kordex.core.builders.MembersBuilder.fillPresences","location":"kord-extensions/dev.kordex.core.builders/-members-builder/fill-presences.html","searchKeys":["fillPresences","var fillPresences: Boolean?","dev.kordex.core.builders.MembersBuilder.fillPresences"]},{"name":"var guilds: Boolean","description":"dev.kordex.core.builders.extensions.SentryExtensionBuilder.SentryExtensionDataTypeBuilder.guilds","location":"kord-extensions/dev.kordex.core.builders.extensions/-sentry-extension-builder/-sentry-extension-data-type-builder/guilds.html","searchKeys":["guilds","var guilds: Boolean","dev.kordex.core.builders.extensions.SentryExtensionBuilder.SentryExtensionDataTypeBuilder.guilds"]},{"name":"var id: String","description":"dev.kordex.core.components.forms.ModalForm.id","location":"kord-extensions/dev.kordex.core.components.forms/-modal-form/id.html","searchKeys":["id","var id: String","dev.kordex.core.components.forms.ModalForm.id"]},{"name":"var id: String","description":"dev.kordex.core.components.forms.widgets.TextInputWidget.id","location":"kord-extensions/dev.kordex.core.components.forms.widgets/-text-input-widget/id.html","searchKeys":["id","var id: String","dev.kordex.core.components.forms.widgets.TextInputWidget.id"]},{"name":"var ignoreErrors: Boolean","description":"dev.kordex.core.commands.converters.builders.DefaultingConverterBuilder.ignoreErrors","location":"kord-extensions/dev.kordex.core.commands.converters.builders/-defaulting-converter-builder/ignore-errors.html","searchKeys":["ignoreErrors","var ignoreErrors: Boolean","dev.kordex.core.commands.converters.builders.DefaultingConverterBuilder.ignoreErrors"]},{"name":"var ignoreErrors: Boolean","description":"dev.kordex.core.commands.converters.builders.ListConverterBuilder.ignoreErrors","location":"kord-extensions/dev.kordex.core.commands.converters.builders/-list-converter-builder/ignore-errors.html","searchKeys":["ignoreErrors","var ignoreErrors: Boolean","dev.kordex.core.commands.converters.builders.ListConverterBuilder.ignoreErrors"]},{"name":"var ignoreErrors: Boolean","description":"dev.kordex.core.commands.converters.builders.OptionalConverterBuilder.ignoreErrors","location":"kord-extensions/dev.kordex.core.commands.converters.builders/-optional-converter-builder/ignore-errors.html","searchKeys":["ignoreErrors","var ignoreErrors: Boolean","dev.kordex.core.commands.converters.builders.OptionalConverterBuilder.ignoreErrors"]},{"name":"var ignoreSelf: Boolean","description":"dev.kordex.core.builders.ChatCommandsBuilder.ignoreSelf","location":"kord-extensions/dev.kordex.core.builders/-chat-commands-builder/ignore-self.html","searchKeys":["ignoreSelf","var ignoreSelf: Boolean","dev.kordex.core.builders.ChatCommandsBuilder.ignoreSelf"]},{"name":"var initialValue: Key?","description":"dev.kordex.core.components.forms.widgets.TextInputWidget.initialValue","location":"kord-extensions/dev.kordex.core.components.forms.widgets/-text-input-widget/initial-value.html","searchKeys":["initialValue","var initialValue: Key?","dev.kordex.core.components.forms.widgets.TextInputWidget.initialValue"]},{"name":"var initialised: Boolean","description":"dev.kordex.core.commands.application.ApplicationCommandRegistry.initialised","location":"kord-extensions/dev.kordex.core.commands.application/-application-command-registry/initialised.html","searchKeys":["initialised","var initialised: Boolean","dev.kordex.core.commands.application.ApplicationCommandRegistry.initialised"]},{"name":"var invokeOnMention: Boolean","description":"dev.kordex.core.builders.ChatCommandsBuilder.invokeOnMention","location":"kord-extensions/dev.kordex.core.builders/-chat-commands-builder/invoke-on-mention.html","searchKeys":["invokeOnMention","var invokeOnMention: Boolean","dev.kordex.core.builders.ChatCommandsBuilder.invokeOnMention"]},{"name":"var isSetup: Boolean","description":"dev.kordex.core.pagination.EphemeralResponsePaginator.isSetup","location":"kord-extensions/dev.kordex.core.pagination/-ephemeral-response-paginator/is-setup.html","searchKeys":["isSetup","var isSetup: Boolean","dev.kordex.core.pagination.EphemeralResponsePaginator.isSetup"]},{"name":"var isSetup: Boolean","description":"dev.kordex.core.pagination.PublicResponsePaginator.isSetup","location":"kord-extensions/dev.kordex.core.pagination/-public-response-paginator/is-setup.html","searchKeys":["isSetup","var isSetup: Boolean","dev.kordex.core.pagination.PublicResponsePaginator.isSetup"]},{"name":"var keepEmbed: Boolean","description":"dev.kordex.core.pagination.builders.PaginatorBuilder.keepEmbed","location":"kord-extensions/dev.kordex.core.pagination.builders/-paginator-builder/keep-embed.html","searchKeys":["keepEmbed","var keepEmbed: Boolean","dev.kordex.core.pagination.builders.PaginatorBuilder.keepEmbed"]},{"name":"var koinLogLevel: Level","description":"dev.kordex.core.builders.ExtensibleBotBuilder.koinLogLevel","location":"kord-extensions/dev.kordex.core.builders/-extensible-bot-builder/koin-log-level.html","searchKeys":["koinLogLevel","var koinLogLevel: Level","dev.kordex.core.builders.ExtensibleBotBuilder.koinLogLevel"]},{"name":"var kordShutdownHook: Boolean","description":"dev.kordex.core.builders.HooksBuilder.kordShutdownHook","location":"kord-extensions/dev.kordex.core.builders/-hooks-builder/kord-shutdown-hook.html","searchKeys":["kordShutdownHook","var kordShutdownHook: Boolean","dev.kordex.core.builders.HooksBuilder.kordShutdownHook"]},{"name":"var label: Key","description":"dev.kordex.core.components.menus.string.StringSelectOption.label","location":"kord-extensions/dev.kordex.core.components.menus.string/-string-select-option/label.html","searchKeys":["label","var label: Key","dev.kordex.core.components.menus.string.StringSelectOption.label"]},{"name":"var label: Key?","description":"dev.kordex.core.components.buttons.InteractionButton.label","location":"kord-extensions/dev.kordex.core.components.buttons/-interaction-button/label.html","searchKeys":["label","var label: Key?","dev.kordex.core.components.buttons.InteractionButton.label"]},{"name":"var label: Key?","description":"dev.kordex.core.components.buttons.InteractionButtonWithAction.label","location":"kord-extensions/dev.kordex.core.components.buttons/-interaction-button-with-action/label.html","searchKeys":["label","var label: Key?","dev.kordex.core.components.buttons.InteractionButtonWithAction.label"]},{"name":"var label: Key?","description":"dev.kordex.core.components.buttons.InteractionButtonWithID.label","location":"kord-extensions/dev.kordex.core.components.buttons/-interaction-button-with-i-d/label.html","searchKeys":["label","var label: Key?","dev.kordex.core.components.buttons.InteractionButtonWithID.label"]},{"name":"var level: SentryLevel?","description":"dev.kordex.core.sentry.captures.SentryBreadcrumbCapture.level","location":"kord-extensions/dev.kordex.core.sentry.captures/-sentry-breadcrumb-capture/level.html","searchKeys":["level","var level: SentryLevel?","dev.kordex.core.sentry.captures.SentryBreadcrumbCapture.level"]},{"name":"var locale: Locale?","description":"dev.kordex.core.pagination.builders.PaginatorBuilder.locale","location":"kord-extensions/dev.kordex.core.pagination.builders/-paginator-builder/locale.html","searchKeys":["locale","var locale: Locale?","dev.kordex.core.pagination.builders.PaginatorBuilder.locale"]},{"name":"var localeResolvers: MutableList<LocaleResolver>","description":"dev.kordex.core.builders.I18nBuilder.localeResolvers","location":"kord-extensions/dev.kordex.core.builders/-i18n-builder/locale-resolvers.html","searchKeys":["localeResolvers","var localeResolvers: MutableList<LocaleResolver>","dev.kordex.core.builders.I18nBuilder.localeResolvers"]},{"name":"var lockMemberRequests: Boolean","description":"dev.kordex.core.builders.MembersBuilder.lockMemberRequests","location":"kord-extensions/dev.kordex.core.builders/-members-builder/lock-member-requests.html","searchKeys":["lockMemberRequests","var lockMemberRequests: Boolean","dev.kordex.core.builders.MembersBuilder.lockMemberRequests"]},{"name":"var manager: (List<Path>) -> PluginManager","description":"dev.kordex.core.builders.PluginBuilder.manager","location":"kord-extensions/dev.kordex.core.builders/-plugin-builder/manager.html","searchKeys":["manager","var manager: (List<Path>) -> PluginManager","dev.kordex.core.builders.PluginBuilder.manager"]},{"name":"var maxLength: Int","description":"dev.kordex.core.components.forms.widgets.TextInputWidget.maxLength","location":"kord-extensions/dev.kordex.core.components.forms.widgets/-text-input-widget/max-length.html","searchKeys":["maxLength","var maxLength: Int","dev.kordex.core.components.forms.widgets.TextInputWidget.maxLength"]},{"name":"var maximumChoices: Int?","description":"dev.kordex.core.components.menus.SelectMenu.maximumChoices","location":"kord-extensions/dev.kordex.core.components.menus/-select-menu/maximum-choices.html","searchKeys":["maximumChoices","var maximumChoices: Int?","dev.kordex.core.components.menus.SelectMenu.maximumChoices"]},{"name":"var message: Message?","description":"dev.kordex.core.pagination.MessageButtonPaginator.message","location":"kord-extensions/dev.kordex.core.pagination/-message-button-paginator/message.html","searchKeys":["message","var message: Message?","dev.kordex.core.pagination.MessageButtonPaginator.message"]},{"name":"var message: String?","description":"dev.kordex.core.checks.types.CheckContext.message","location":"kord-extensions/dev.kordex.core.checks.types/-check-context/message.html","searchKeys":["message","var message: String?","dev.kordex.core.checks.types.CheckContext.message"]},{"name":"var message: String?","description":"dev.kordex.core.commands.converters.builders.ValidationContext.message","location":"kord-extensions/dev.kordex.core.commands.converters.builders/-validation-context/message.html","searchKeys":["message","var message: String?","dev.kordex.core.commands.converters.builders.ValidationContext.message"]},{"name":"var message: String?","description":"dev.kordex.core.sentry.captures.SentryBreadcrumbCapture.message","location":"kord-extensions/dev.kordex.core.sentry.captures/-sentry-breadcrumb-capture/message.html","searchKeys":["message","var message: String?","dev.kordex.core.sentry.captures.SentryBreadcrumbCapture.message"]},{"name":"var minLength: Int","description":"dev.kordex.core.components.forms.widgets.TextInputWidget.minLength","location":"kord-extensions/dev.kordex.core.components.forms.widgets/-text-input-widget/min-length.html","searchKeys":["minLength","var minLength: Int","dev.kordex.core.components.forms.widgets.TextInputWidget.minLength"]},{"name":"var minimumChoices: Int","description":"dev.kordex.core.components.menus.SelectMenu.minimumChoices","location":"kord-extensions/dev.kordex.core.components.menus/-select-menu/minimum-choices.html","searchKeys":["minimumChoices","var minimumChoices: Int","dev.kordex.core.components.menus.SelectMenu.minimumChoices"]},{"name":"var mutator: PageTransitionCallback?","description":"dev.kordex.core.pagination.builders.PaginatorBuilder.mutator","location":"kord-extensions/dev.kordex.core.pagination.builders/-paginator-builder/mutator.html","searchKeys":["mutator","var mutator: PageTransitionCallback?","dev.kordex.core.pagination.builders.PaginatorBuilder.mutator"]},{"name":"var owner: UserBehavior?","description":"dev.kordex.core.pagination.builders.PaginatorBuilder.owner","location":"kord-extensions/dev.kordex.core.pagination.builders/-paginator-builder/owner.html","searchKeys":["owner","var owner: UserBehavior?","dev.kordex.core.pagination.builders.PaginatorBuilder.owner"]},{"name":"var paginatorTimeout: Long","description":"dev.kordex.core.builders.extensions.HelpExtensionBuilder.paginatorTimeout","location":"kord-extensions/dev.kordex.core.builders.extensions/-help-extension-builder/paginator-timeout.html","searchKeys":["paginatorTimeout","var paginatorTimeout: Long","dev.kordex.core.builders.extensions.HelpExtensionBuilder.paginatorTimeout"]},{"name":"var parseSuccess: Boolean","description":"dev.kordex.core.commands.converters.Converter.parseSuccess","location":"kord-extensions/dev.kordex.core.commands.converters/-converter/parse-success.html","searchKeys":["parseSuccess","var parseSuccess: Boolean","dev.kordex.core.commands.converters.Converter.parseSuccess"]},{"name":"var passed: Boolean","description":"dev.kordex.core.checks.types.CheckContext.passed","location":"kord-extensions/dev.kordex.core.checks.types/-check-context/passed.html","searchKeys":["passed","var passed: Boolean","dev.kordex.core.checks.types.CheckContext.passed"]},{"name":"var passed: Boolean","description":"dev.kordex.core.commands.converters.builders.ValidationContext.passed","location":"kord-extensions/dev.kordex.core.commands.converters.builders/-validation-context/passed.html","searchKeys":["passed","var passed: Boolean","dev.kordex.core.commands.converters.builders.ValidationContext.passed"]},{"name":"var pingInReply: Boolean","description":"dev.kordex.core.builders.extensions.HelpExtensionBuilder.pingInReply","location":"kord-extensions/dev.kordex.core.builders.extensions/-help-extension-builder/ping-in-reply.html","searchKeys":["pingInReply","var pingInReply: Boolean","dev.kordex.core.builders.extensions.HelpExtensionBuilder.pingInReply"]},{"name":"var pingInReply: Boolean","description":"dev.kordex.core.builders.extensions.SentryExtensionBuilder.pingInReply","location":"kord-extensions/dev.kordex.core.builders.extensions/-sentry-extension-builder/ping-in-reply.html","searchKeys":["pingInReply","var pingInReply: Boolean","dev.kordex.core.builders.extensions.SentryExtensionBuilder.pingInReply"]},{"name":"var placeholder: Key?","description":"dev.kordex.core.components.forms.widgets.TextInputWidget.placeholder","location":"kord-extensions/dev.kordex.core.components.forms.widgets/-text-input-widget/placeholder.html","searchKeys":["placeholder","var placeholder: Key?","dev.kordex.core.components.forms.widgets.TextInputWidget.placeholder"]},{"name":"var placeholder: Key?","description":"dev.kordex.core.components.menus.SelectMenu.placeholder","location":"kord-extensions/dev.kordex.core.components.menus/-select-menu/placeholder.html","searchKeys":["placeholder","var placeholder: Key?","dev.kordex.core.components.menus.SelectMenu.placeholder"]},{"name":"var register: Boolean","description":"dev.kordex.core.builders.ApplicationCommandsBuilder.register","location":"kord-extensions/dev.kordex.core.builders/-application-commands-builder/register.html","searchKeys":["register","var register: Boolean","dev.kordex.core.builders.ApplicationCommandsBuilder.register"]},{"name":"var required: Boolean","description":"dev.kordex.core.components.forms.widgets.TextInputWidget.required","location":"kord-extensions/dev.kordex.core.components.forms.widgets/-text-input-widget/required.html","searchKeys":["required","var required: Boolean","dev.kordex.core.components.forms.widgets.TextInputWidget.required"]},{"name":"var resolvedLocale: Locale?","description":"dev.kordex.core.events.EventHandler.resolvedLocale","location":"kord-extensions/dev.kordex.core.events/-event-handler/resolved-locale.html","searchKeys":["resolvedLocale","var resolvedLocale: Locale?","dev.kordex.core.events.EventHandler.resolvedLocale"]},{"name":"var roles: Boolean","description":"dev.kordex.core.builders.extensions.SentryExtensionBuilder.SentryExtensionDataTypeBuilder.roles","location":"kord-extensions/dev.kordex.core.builders.extensions/-sentry-extension-builder/-sentry-extension-data-type-builder/roles.html","searchKeys":["roles","var roles: Boolean","dev.kordex.core.builders.extensions.SentryExtensionBuilder.SentryExtensionDataTypeBuilder.roles"]},{"name":"var sampleRate: Double","description":"dev.kordex.core.builders.extensions.SentryExtensionBuilder.sampleRate","location":"kord-extensions/dev.kordex.core.builders.extensions/-sentry-extension-builder/sample-rate.html","searchKeys":["sampleRate","var sampleRate: Double","dev.kordex.core.builders.extensions.SentryExtensionBuilder.sampleRate"]},{"name":"var scheduler: Scheduler","description":"dev.kordex.core.pagination.BaseButtonPaginator.scheduler","location":"kord-extensions/dev.kordex.core.pagination/-base-button-paginator/scheduler.html","searchKeys":["scheduler","var scheduler: Scheduler","dev.kordex.core.pagination.BaseButtonPaginator.scheduler"]},{"name":"var switchEmoji: ReactionEmoji?","description":"dev.kordex.core.pagination.builders.PaginatorBuilder.switchEmoji","location":"kord-extensions/dev.kordex.core.pagination.builders/-paginator-builder/switch-emoji.html","searchKeys":["switchEmoji","var switchEmoji: ReactionEmoji?","dev.kordex.core.pagination.builders.PaginatorBuilder.switchEmoji"]},{"name":"var task: Task?","description":"dev.kordex.core.pagination.BaseButtonPaginator.task","location":"kord-extensions/dev.kordex.core.pagination/-base-button-paginator/task.html","searchKeys":["task","var task: Task?","dev.kordex.core.pagination.BaseButtonPaginator.task"]},{"name":"var timeoutSeconds: Long?","description":"dev.kordex.core.pagination.builders.PaginatorBuilder.timeoutSeconds","location":"kord-extensions/dev.kordex.core.pagination.builders/-paginator-builder/timeout-seconds.html","searchKeys":["timeoutSeconds","var timeoutSeconds: Long?","dev.kordex.core.pagination.builders.PaginatorBuilder.timeoutSeconds"]},{"name":"var translateInitialValue: Boolean","description":"dev.kordex.core.components.forms.widgets.TextInputWidget.translateInitialValue","location":"kord-extensions/dev.kordex.core.components.forms.widgets/-text-input-widget/translate-initial-value.html","searchKeys":["translateInitialValue","var translateInitialValue: Boolean","dev.kordex.core.components.forms.widgets.TextInputWidget.translateInitialValue"]},{"name":"var users: Boolean","description":"dev.kordex.core.builders.extensions.SentryExtensionBuilder.SentryExtensionDataTypeBuilder.users","location":"kord-extensions/dev.kordex.core.builders.extensions/-sentry-extension-builder/-sentry-extension-data-type-builder/users.html","searchKeys":["users","var users: Boolean","dev.kordex.core.builders.extensions.SentryExtensionBuilder.SentryExtensionDataTypeBuilder.users"]},{"name":"var uuid: UUID?","description":"dev.kordex.core.datacollection.State.uuid","location":"kord-extensions/dev.kordex.core.datacollection/-state/uuid.html","searchKeys":["uuid","var uuid: UUID?","dev.kordex.core.datacollection.State.uuid"]},{"name":"var value: String","description":"dev.kordex.core.components.menus.string.StringSelectOption.value","location":"kord-extensions/dev.kordex.core.components.menus.string/-string-select-option/value.html","searchKeys":["value","var value: String","dev.kordex.core.components.menus.string.StringSelectOption.value"]},{"name":"CHOICE","description":"dev.kordex.core.annotations.converters.ConverterType.CHOICE","location":"annotations/annotations/dev.kordex.core.annotations.converters/-converter-type/-c-h-o-i-c-e/index.html","searchKeys":["CHOICE","CHOICE","dev.kordex.core.annotations.converters.ConverterType.CHOICE"]},{"name":"COALESCING","description":"dev.kordex.core.annotations.converters.ConverterType.COALESCING","location":"annotations/annotations/dev.kordex.core.annotations.converters/-converter-type/-c-o-a-l-e-s-c-i-n-g/index.html","searchKeys":["COALESCING","COALESCING","dev.kordex.core.annotations.converters.ConverterType.COALESCING"]},{"name":"DEFAULTING","description":"dev.kordex.core.annotations.converters.ConverterType.DEFAULTING","location":"annotations/annotations/dev.kordex.core.annotations.converters/-converter-type/-d-e-f-a-u-l-t-i-n-g/index.html","searchKeys":["DEFAULTING","DEFAULTING","dev.kordex.core.annotations.converters.ConverterType.DEFAULTING"]},{"name":"LIST","description":"dev.kordex.core.annotations.converters.ConverterType.LIST","location":"annotations/annotations/dev.kordex.core.annotations.converters/-converter-type/-l-i-s-t/index.html","searchKeys":["LIST","LIST","dev.kordex.core.annotations.converters.ConverterType.LIST"]},{"name":"OPTIONAL","description":"dev.kordex.core.annotations.converters.ConverterType.OPTIONAL","location":"annotations/annotations/dev.kordex.core.annotations.converters/-converter-type/-o-p-t-i-o-n-a-l/index.html","searchKeys":["OPTIONAL","OPTIONAL","dev.kordex.core.annotations.converters.ConverterType.OPTIONAL"]},{"name":"SINGLE","description":"dev.kordex.core.annotations.converters.ConverterType.SINGLE","location":"annotations/annotations/dev.kordex.core.annotations.converters/-converter-type/-s-i-n-g-l-e/index.html","searchKeys":["SINGLE","SINGLE","dev.kordex.core.annotations.converters.ConverterType.SINGLE"]},{"name":"annotation class Converter(val names: String, val types: Array<ConverterType>, val imports: Array<String> = [], val builderConstructorArguments: Array<String> = [], val builderGeneric: String = \"\", val builderFields: Array<String> = [], val builderSuffixedWhere: String = \"\", val builderBuildFunctionPreStatements: Array<String> = [], val builderBuildFunctionStatements: Array<String> = [], val builderInitStatements: Array<String> = [], val builderExtraStatements: Array<String> = [], val functionBuilderArguments: Array<String> = [], val functionGeneric: String = \"\", val functionSuffixedWhere: String = \"\")","description":"dev.kordex.core.annotations.converters.Converter","location":"annotations/annotations/dev.kordex.core.annotations.converters/-converter/index.html","searchKeys":["Converter","annotation class Converter(val names: String, val types: Array<ConverterType>, val imports: Array<String> = [], val builderConstructorArguments: Array<String> = [], val builderGeneric: String = \"\", val builderFields: Array<String> = [], val builderSuffixedWhere: String = \"\", val builderBuildFunctionPreStatements: Array<String> = [], val builderBuildFunctionStatements: Array<String> = [], val builderInitStatements: Array<String> = [], val builderExtraStatements: Array<String> = [], val functionBuilderArguments: Array<String> = [], val functionGeneric: String = \"\", val functionSuffixedWhere: String = \"\")","dev.kordex.core.annotations.converters.Converter"]},{"name":"enum ConverterType : Enum<ConverterType> ","description":"dev.kordex.core.annotations.converters.ConverterType","location":"annotations/annotations/dev.kordex.core.annotations.converters/-converter-type/index.html","searchKeys":["ConverterType","enum ConverterType : Enum<ConverterType> ","dev.kordex.core.annotations.converters.ConverterType"]},{"name":"fun fromName(name: String): ConverterType?","description":"dev.kordex.core.annotations.converters.ConverterType.Companion.fromName","location":"annotations/annotations/dev.kordex.core.annotations.converters/-converter-type/-companion/from-name.html","searchKeys":["fromName","fun fromName(name: String): ConverterType?","dev.kordex.core.annotations.converters.ConverterType.Companion.fromName"]},{"name":"fun valueOf(value: String): ConverterType","description":"dev.kordex.core.annotations.converters.ConverterType.valueOf","location":"annotations/annotations/dev.kordex.core.annotations.converters/-converter-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ConverterType","dev.kordex.core.annotations.converters.ConverterType.valueOf"]},{"name":"fun values(): Array<ConverterType>","description":"dev.kordex.core.annotations.converters.ConverterType.values","location":"annotations/annotations/dev.kordex.core.annotations.converters/-converter-type/values.html","searchKeys":["values","fun values(): Array<ConverterType>","dev.kordex.core.annotations.converters.ConverterType.values"]},{"name":"object Companion","description":"dev.kordex.core.annotations.converters.ConverterType.Companion","location":"annotations/annotations/dev.kordex.core.annotations.converters/-converter-type/-companion/index.html","searchKeys":["Companion","object Companion","dev.kordex.core.annotations.converters.ConverterType.Companion"]},{"name":"val appendFragment: Boolean = true","description":"dev.kordex.core.annotations.converters.ConverterType.appendFragment","location":"annotations/annotations/dev.kordex.core.annotations.converters/-converter-type/append-fragment.html","searchKeys":["appendFragment","val appendFragment: Boolean = true","dev.kordex.core.annotations.converters.ConverterType.appendFragment"]},{"name":"val builderBuildFunctionPreStatements: Array<String>","description":"dev.kordex.core.annotations.converters.Converter.builderBuildFunctionPreStatements","location":"annotations/annotations/dev.kordex.core.annotations.converters/-converter/builder-build-function-pre-statements.html","searchKeys":["builderBuildFunctionPreStatements","val builderBuildFunctionPreStatements: Array<String>","dev.kordex.core.annotations.converters.Converter.builderBuildFunctionPreStatements"]},{"name":"val builderBuildFunctionStatements: Array<String>","description":"dev.kordex.core.annotations.converters.Converter.builderBuildFunctionStatements","location":"annotations/annotations/dev.kordex.core.annotations.converters/-converter/builder-build-function-statements.html","searchKeys":["builderBuildFunctionStatements","val builderBuildFunctionStatements: Array<String>","dev.kordex.core.annotations.converters.Converter.builderBuildFunctionStatements"]},{"name":"val builderConstructorArguments: Array<String>","description":"dev.kordex.core.annotations.converters.Converter.builderConstructorArguments","location":"annotations/annotations/dev.kordex.core.annotations.converters/-converter/builder-constructor-arguments.html","searchKeys":["builderConstructorArguments","val builderConstructorArguments: Array<String>","dev.kordex.core.annotations.converters.Converter.builderConstructorArguments"]},{"name":"val builderExtraStatements: Array<String>","description":"dev.kordex.core.annotations.converters.Converter.builderExtraStatements","location":"annotations/annotations/dev.kordex.core.annotations.converters/-converter/builder-extra-statements.html","searchKeys":["builderExtraStatements","val builderExtraStatements: Array<String>","dev.kordex.core.annotations.converters.Converter.builderExtraStatements"]},{"name":"val builderFields: Array<String>","description":"dev.kordex.core.annotations.converters.Converter.builderFields","location":"annotations/annotations/dev.kordex.core.annotations.converters/-converter/builder-fields.html","searchKeys":["builderFields","val builderFields: Array<String>","dev.kordex.core.annotations.converters.Converter.builderFields"]},{"name":"val builderGeneric: String","description":"dev.kordex.core.annotations.converters.Converter.builderGeneric","location":"annotations/annotations/dev.kordex.core.annotations.converters/-converter/builder-generic.html","searchKeys":["builderGeneric","val builderGeneric: String","dev.kordex.core.annotations.converters.Converter.builderGeneric"]},{"name":"val builderInitStatements: Array<String>","description":"dev.kordex.core.annotations.converters.Converter.builderInitStatements","location":"annotations/annotations/dev.kordex.core.annotations.converters/-converter/builder-init-statements.html","searchKeys":["builderInitStatements","val builderInitStatements: Array<String>","dev.kordex.core.annotations.converters.Converter.builderInitStatements"]},{"name":"val builderSuffixedWhere: String","description":"dev.kordex.core.annotations.converters.Converter.builderSuffixedWhere","location":"annotations/annotations/dev.kordex.core.annotations.converters/-converter/builder-suffixed-where.html","searchKeys":["builderSuffixedWhere","val builderSuffixedWhere: String","dev.kordex.core.annotations.converters.Converter.builderSuffixedWhere"]},{"name":"val entries: EnumEntries<ConverterType>","description":"dev.kordex.core.annotations.converters.ConverterType.entries","location":"annotations/annotations/dev.kordex.core.annotations.converters/-converter-type/entries.html","searchKeys":["entries","val entries: EnumEntries<ConverterType>","dev.kordex.core.annotations.converters.ConverterType.entries"]},{"name":"val fragment: String","description":"dev.kordex.core.annotations.converters.ConverterType.fragment","location":"annotations/annotations/dev.kordex.core.annotations.converters/-converter-type/fragment.html","searchKeys":["fragment","val fragment: String","dev.kordex.core.annotations.converters.ConverterType.fragment"]},{"name":"val functionBuilderArguments: Array<String>","description":"dev.kordex.core.annotations.converters.Converter.functionBuilderArguments","location":"annotations/annotations/dev.kordex.core.annotations.converters/-converter/function-builder-arguments.html","searchKeys":["functionBuilderArguments","val functionBuilderArguments: Array<String>","dev.kordex.core.annotations.converters.Converter.functionBuilderArguments"]},{"name":"val functionGeneric: String","description":"dev.kordex.core.annotations.converters.Converter.functionGeneric","location":"annotations/annotations/dev.kordex.core.annotations.converters/-converter/function-generic.html","searchKeys":["functionGeneric","val functionGeneric: String","dev.kordex.core.annotations.converters.Converter.functionGeneric"]},{"name":"val functionSuffixedWhere: String","description":"dev.kordex.core.annotations.converters.Converter.functionSuffixedWhere","location":"annotations/annotations/dev.kordex.core.annotations.converters/-converter/function-suffixed-where.html","searchKeys":["functionSuffixedWhere","val functionSuffixedWhere: String","dev.kordex.core.annotations.converters.Converter.functionSuffixedWhere"]},{"name":"val imports: Array<String>","description":"dev.kordex.core.annotations.converters.Converter.imports","location":"annotations/annotations/dev.kordex.core.annotations.converters/-converter/imports.html","searchKeys":["imports","val imports: Array<String>","dev.kordex.core.annotations.converters.Converter.imports"]},{"name":"val names: Array<out String>","description":"dev.kordex.core.annotations.converters.Converter.names","location":"annotations/annotations/dev.kordex.core.annotations.converters/-converter/names.html","searchKeys":["names","val names: Array<out String>","dev.kordex.core.annotations.converters.Converter.names"]},{"name":"val order: Int","description":"dev.kordex.core.annotations.converters.ConverterType.order","location":"annotations/annotations/dev.kordex.core.annotations.converters/-converter-type/order.html","searchKeys":["order","val order: Int","dev.kordex.core.annotations.converters.ConverterType.order"]},{"name":"val types: Array<ConverterType>","description":"dev.kordex.core.annotations.converters.Converter.types","location":"annotations/annotations/dev.kordex.core.annotations.converters/-converter/types.html","searchKeys":["types","val types: Array<ConverterType>","dev.kordex.core.annotations.converters.Converter.types"]},{"name":"Add","description":"dev.kordex.modules.func.phishing.DomainChangeType.Add","location":"modules/functionality/func-phishing/dev.kordex.modules.func.phishing/-domain-change-type/-add/index.html","searchKeys":["Add","Add","dev.kordex.modules.func.phishing.DomainChangeType.Add"]},{"name":"Delete","description":"dev.kordex.modules.func.phishing.DomainChangeType.Delete","location":"modules/functionality/func-phishing/dev.kordex.modules.func.phishing/-domain-change-type/-delete/index.html","searchKeys":["Delete","Delete","dev.kordex.modules.func.phishing.DomainChangeType.Delete"]},{"name":"class ExtPhishingBuilder","description":"dev.kordex.modules.func.phishing.ExtPhishingBuilder","location":"modules/functionality/func-phishing/dev.kordex.modules.func.phishing/-ext-phishing-builder/index.html","searchKeys":["ExtPhishingBuilder","class ExtPhishingBuilder","dev.kordex.modules.func.phishing.ExtPhishingBuilder"]},{"name":"class PhishingApi(userAgent: String)","description":"dev.kordex.modules.func.phishing.PhishingApi","location":"modules/functionality/func-phishing/dev.kordex.modules.func.phishing/-phishing-api/index.html","searchKeys":["PhishingApi","class PhishingApi(userAgent: String)","dev.kordex.modules.func.phishing.PhishingApi"]},{"name":"class PhishingExtension(settings: ExtPhishingBuilder) : Extension","description":"dev.kordex.modules.func.phishing.PhishingExtension","location":"modules/functionality/func-phishing/dev.kordex.modules.func.phishing/-phishing-extension/index.html","searchKeys":["PhishingExtension","class PhishingExtension(settings: ExtPhishingBuilder) : Extension","dev.kordex.modules.func.phishing.PhishingExtension"]},{"name":"class PhishingWebsocketWrapper(userAgent: String, callback: suspend (DomainChange) -> Unit) : KordExKoinComponent","description":"dev.kordex.modules.func.phishing.PhishingWebsocketWrapper","location":"modules/functionality/func-phishing/dev.kordex.modules.func.phishing/-phishing-websocket-wrapper/index.html","searchKeys":["PhishingWebsocketWrapper","class PhishingWebsocketWrapper(userAgent: String, callback: suspend (DomainChange) -> Unit) : KordExKoinComponent","dev.kordex.modules.func.phishing.PhishingWebsocketWrapper"]},{"name":"const val MAX_REDIRECTS: Int = 5","description":"dev.kordex.modules.func.phishing.MAX_REDIRECTS","location":"modules/functionality/func-phishing/dev.kordex.modules.func.phishing/-m-a-x_-r-e-d-i-r-e-c-t-s.html","searchKeys":["MAX_REDIRECTS","const val MAX_REDIRECTS: Int = 5","dev.kordex.modules.func.phishing.MAX_REDIRECTS"]},{"name":"constructor()","description":"dev.kordex.modules.func.phishing.ExtPhishingBuilder.ExtPhishingBuilder","location":"modules/functionality/func-phishing/dev.kordex.modules.func.phishing/-ext-phishing-builder/-ext-phishing-builder.html","searchKeys":["ExtPhishingBuilder","constructor()","dev.kordex.modules.func.phishing.ExtPhishingBuilder.ExtPhishingBuilder"]},{"name":"constructor()","description":"dev.kordex.modules.func.phishing.PhishingExtension.DomainArgs.DomainArgs","location":"modules/functionality/func-phishing/dev.kordex.modules.func.phishing/-phishing-extension/-domain-args/-domain-args.html","searchKeys":["DomainArgs","constructor()","dev.kordex.modules.func.phishing.PhishingExtension.DomainArgs.DomainArgs"]},{"name":"constructor(settings: ExtPhishingBuilder)","description":"dev.kordex.modules.func.phishing.PhishingExtension.PhishingExtension","location":"modules/functionality/func-phishing/dev.kordex.modules.func.phishing/-phishing-extension/-phishing-extension.html","searchKeys":["PhishingExtension","constructor(settings: ExtPhishingBuilder)","dev.kordex.modules.func.phishing.PhishingExtension.PhishingExtension"]},{"name":"constructor(type: DomainChangeType, domains: Set<String>)","description":"dev.kordex.modules.func.phishing.DomainChange.DomainChange","location":"modules/functionality/func-phishing/dev.kordex.modules.func.phishing/-domain-change/-domain-change.html","searchKeys":["DomainChange","constructor(type: DomainChangeType, domains: Set<String>)","dev.kordex.modules.func.phishing.DomainChange.DomainChange"]},{"name":"constructor(userAgent: String)","description":"dev.kordex.modules.func.phishing.PhishingApi.PhishingApi","location":"modules/functionality/func-phishing/dev.kordex.modules.func.phishing/-phishing-api/-phishing-api.html","searchKeys":["PhishingApi","constructor(userAgent: String)","dev.kordex.modules.func.phishing.PhishingApi.PhishingApi"]},{"name":"constructor(userAgent: String, callback: suspend (DomainChange) -> Unit)","description":"dev.kordex.modules.func.phishing.PhishingWebsocketWrapper.PhishingWebsocketWrapper","location":"modules/functionality/func-phishing/dev.kordex.modules.func.phishing/-phishing-websocket-wrapper/-phishing-websocket-wrapper.html","searchKeys":["PhishingWebsocketWrapper","constructor(userAgent: String, callback: suspend (DomainChange) -> Unit)","dev.kordex.modules.func.phishing.PhishingWebsocketWrapper.PhishingWebsocketWrapper"]},{"name":"data class DomainChange(val type: DomainChangeType, val domains: Set<String>)","description":"dev.kordex.modules.func.phishing.DomainChange","location":"modules/functionality/func-phishing/dev.kordex.modules.func.phishing/-domain-change/index.html","searchKeys":["DomainChange","data class DomainChange(val type: DomainChangeType, val domains: Set<String>)","dev.kordex.modules.func.phishing.DomainChange"]},{"name":"enum DomainChangeType : Enum<DomainChangeType> ","description":"dev.kordex.modules.func.phishing.DomainChangeType","location":"modules/functionality/func-phishing/dev.kordex.modules.func.phishing/-domain-change-type/index.html","searchKeys":["DomainChangeType","enum DomainChangeType : Enum<DomainChangeType> ","dev.kordex.modules.func.phishing.DomainChangeType"]},{"name":"fun ExtensionsBuilder.extPhishing()","description":"dev.kordex.modules.func.phishing.extPhishing","location":"modules/functionality/func-phishing/dev.kordex.modules.func.phishing/ext-phishing.html","searchKeys":["extPhishing","fun ExtensionsBuilder.extPhishing()","dev.kordex.modules.func.phishing.extPhishing"]},{"name":"fun badDomain(domain: String)","description":"dev.kordex.modules.func.phishing.ExtPhishingBuilder.badDomain","location":"modules/functionality/func-phishing/dev.kordex.modules.func.phishing/-ext-phishing-builder/bad-domain.html","searchKeys":["badDomain","fun badDomain(domain: String)","dev.kordex.modules.func.phishing.ExtPhishingBuilder.badDomain"]},{"name":"fun check(check: CheckWithCache<Event>)","description":"dev.kordex.modules.func.phishing.ExtPhishingBuilder.check","location":"modules/functionality/func-phishing/dev.kordex.modules.func.phishing/-ext-phishing-builder/check.html","searchKeys":["check","fun check(check: CheckWithCache<Event>)","dev.kordex.modules.func.phishing.ExtPhishingBuilder.check"]},{"name":"fun check(vararg checkList: CheckWithCache<Event>)","description":"dev.kordex.modules.func.phishing.ExtPhishingBuilder.check","location":"modules/functionality/func-phishing/dev.kordex.modules.func.phishing/-ext-phishing-builder/check.html","searchKeys":["check","fun check(vararg checkList: CheckWithCache<Event>)","dev.kordex.modules.func.phishing.ExtPhishingBuilder.check"]},{"name":"fun regex(pattern: String)","description":"dev.kordex.modules.func.phishing.ExtPhishingBuilder.regex","location":"modules/functionality/func-phishing/dev.kordex.modules.func.phishing/-ext-phishing-builder/regex.html","searchKeys":["regex","fun regex(pattern: String)","dev.kordex.modules.func.phishing.ExtPhishingBuilder.regex"]},{"name":"fun stop()","description":"dev.kordex.modules.func.phishing.PhishingWebsocketWrapper.stop","location":"modules/functionality/func-phishing/dev.kordex.modules.func.phishing/-phishing-websocket-wrapper/stop.html","searchKeys":["stop","fun stop()","dev.kordex.modules.func.phishing.PhishingWebsocketWrapper.stop"]},{"name":"fun valueOf(value: String): DomainChangeType","description":"dev.kordex.modules.func.phishing.DomainChangeType.valueOf","location":"modules/functionality/func-phishing/dev.kordex.modules.func.phishing/-domain-change-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): DomainChangeType","dev.kordex.modules.func.phishing.DomainChangeType.valueOf"]},{"name":"fun values(): Array<DomainChangeType>","description":"dev.kordex.modules.func.phishing.DomainChangeType.values","location":"modules/functionality/func-phishing/dev.kordex.modules.func.phishing/-domain-change-type/values.html","searchKeys":["values","fun values(): Array<DomainChangeType>","dev.kordex.modules.func.phishing.DomainChangeType.values"]},{"name":"fun websocket(callback: suspend (DomainChange) -> Unit): PhishingWebsocketWrapper","description":"dev.kordex.modules.func.phishing.PhishingApi.websocket","location":"modules/functionality/func-phishing/dev.kordex.modules.func.phishing/-phishing-api/websocket.html","searchKeys":["websocket","fun websocket(callback: suspend (DomainChange) -> Unit): PhishingWebsocketWrapper","dev.kordex.modules.func.phishing.PhishingApi.websocket"]},{"name":"inline fun ExtensionsBuilder.extPhishing(builder: ExtPhishingBuilder.() -> Unit)","description":"dev.kordex.modules.func.phishing.extPhishing","location":"modules/functionality/func-phishing/dev.kordex.modules.func.phishing/ext-phishing.html","searchKeys":["extPhishing","inline fun ExtensionsBuilder.extPhishing(builder: ExtPhishingBuilder.() -> Unit)","dev.kordex.modules.func.phishing.extPhishing"]},{"name":"inner class DomainArgs : Arguments","description":"dev.kordex.modules.func.phishing.PhishingExtension.DomainArgs","location":"modules/functionality/func-phishing/dev.kordex.modules.func.phishing/-phishing-extension/-domain-args/index.html","searchKeys":["DomainArgs","inner class DomainArgs : Arguments","dev.kordex.modules.func.phishing.PhishingExtension.DomainArgs"]},{"name":"object Ban : DetectionAction","description":"dev.kordex.modules.func.phishing.DetectionAction.Ban","location":"modules/functionality/func-phishing/dev.kordex.modules.func.phishing/-detection-action/-ban/index.html","searchKeys":["Ban","object Ban : DetectionAction","dev.kordex.modules.func.phishing.DetectionAction.Ban"]},{"name":"object Delete : DetectionAction","description":"dev.kordex.modules.func.phishing.DetectionAction.Delete","location":"modules/functionality/func-phishing/dev.kordex.modules.func.phishing/-detection-action/-delete/index.html","searchKeys":["Delete","object Delete : DetectionAction","dev.kordex.modules.func.phishing.DetectionAction.Delete"]},{"name":"object Kick : DetectionAction","description":"dev.kordex.modules.func.phishing.DetectionAction.Kick","location":"modules/functionality/func-phishing/dev.kordex.modules.func.phishing/-detection-action/-kick/index.html","searchKeys":["Kick","object Kick : DetectionAction","dev.kordex.modules.func.phishing.DetectionAction.Kick"]},{"name":"object LogOnly : DetectionAction","description":"dev.kordex.modules.func.phishing.DetectionAction.LogOnly","location":"modules/functionality/func-phishing/dev.kordex.modules.func.phishing/-detection-action/-log-only/index.html","searchKeys":["LogOnly","object LogOnly : DetectionAction","dev.kordex.modules.func.phishing.DetectionAction.LogOnly"]},{"name":"open override val name: String","description":"dev.kordex.modules.func.phishing.PhishingExtension.name","location":"modules/functionality/func-phishing/dev.kordex.modules.func.phishing/-phishing-extension/name.html","searchKeys":["name","open override val name: String","dev.kordex.modules.func.phishing.PhishingExtension.name"]},{"name":"open suspend override fun setup()","description":"dev.kordex.modules.func.phishing.PhishingExtension.setup","location":"modules/functionality/func-phishing/dev.kordex.modules.func.phishing/-phishing-extension/setup.html","searchKeys":["setup","open suspend override fun setup()","dev.kordex.modules.func.phishing.PhishingExtension.setup"]},{"name":"open suspend override fun unload()","description":"dev.kordex.modules.func.phishing.PhishingExtension.unload","location":"modules/functionality/func-phishing/dev.kordex.modules.func.phishing/-phishing-extension/unload.html","searchKeys":["unload","open suspend override fun unload()","dev.kordex.modules.func.phishing.PhishingExtension.unload"]},{"name":"sealed class DetectionAction","description":"dev.kordex.modules.func.phishing.DetectionAction","location":"modules/functionality/func-phishing/dev.kordex.modules.func.phishing/-detection-action/index.html","searchKeys":["DetectionAction","sealed class DetectionAction","dev.kordex.modules.func.phishing.DetectionAction"]},{"name":"suspend fun Locale.safeEmoji(): String","description":"dev.kordex.modules.func.phishing.PhishingExtension.safeEmoji","location":"modules/functionality/func-phishing/dev.kordex.modules.func.phishing/-phishing-extension/safe-emoji.html","searchKeys":["safeEmoji","suspend fun Locale.safeEmoji(): String","dev.kordex.modules.func.phishing.PhishingExtension.safeEmoji"]},{"name":"suspend fun Locale.unsafeEmoji(): String","description":"dev.kordex.modules.func.phishing.PhishingExtension.unsafeEmoji","location":"modules/functionality/func-phishing/dev.kordex.modules.func.phishing/-phishing-extension/unsafe-emoji.html","searchKeys":["unsafeEmoji","suspend fun Locale.unsafeEmoji(): String","dev.kordex.modules.func.phishing.PhishingExtension.unsafeEmoji"]},{"name":"suspend fun checkDomain(domain: String): Boolean","description":"dev.kordex.modules.func.phishing.PhishingApi.checkDomain","location":"modules/functionality/func-phishing/dev.kordex.modules.func.phishing/-phishing-api/check-domain.html","searchKeys":["checkDomain","suspend fun checkDomain(domain: String): Boolean","dev.kordex.modules.func.phishing.PhishingApi.checkDomain"]},{"name":"suspend fun getAllDomains(): Set<String>","description":"dev.kordex.modules.func.phishing.PhishingApi.getAllDomains","location":"modules/functionality/func-phishing/dev.kordex.modules.func.phishing/-phishing-api/get-all-domains.html","searchKeys":["getAllDomains","suspend fun getAllDomains(): Set<String>","dev.kordex.modules.func.phishing.PhishingApi.getAllDomains"]},{"name":"suspend fun getRecentDomains(seconds: Long): List<DomainChange>","description":"dev.kordex.modules.func.phishing.PhishingApi.getRecentDomains","location":"modules/functionality/func-phishing/dev.kordex.modules.func.phishing/-phishing-api/get-recent-domains.html","searchKeys":["getRecentDomains","suspend fun getRecentDomains(seconds: Long): List<DomainChange>","dev.kordex.modules.func.phishing.PhishingApi.getRecentDomains"]},{"name":"suspend fun getTotalDomains(): Long","description":"dev.kordex.modules.func.phishing.PhishingApi.getTotalDomains","location":"modules/functionality/func-phishing/dev.kordex.modules.func.phishing/-phishing-api/get-total-domains.html","searchKeys":["getTotalDomains","suspend fun getTotalDomains(): Long","dev.kordex.modules.func.phishing.PhishingApi.getTotalDomains"]},{"name":"suspend fun start()","description":"dev.kordex.modules.func.phishing.PhishingWebsocketWrapper.start","location":"modules/functionality/func-phishing/dev.kordex.modules.func.phishing/-phishing-websocket-wrapper/start.html","searchKeys":["start","suspend fun start()","dev.kordex.modules.func.phishing.PhishingWebsocketWrapper.start"]},{"name":"val badDomains: MutableSet<String>","description":"dev.kordex.modules.func.phishing.ExtPhishingBuilder.badDomains","location":"modules/functionality/func-phishing/dev.kordex.modules.func.phishing/-ext-phishing-builder/bad-domains.html","searchKeys":["badDomains","val badDomains: MutableSet<String>","dev.kordex.modules.func.phishing.ExtPhishingBuilder.badDomains"]},{"name":"val domain: String","description":"dev.kordex.modules.func.phishing.PhishingExtension.DomainArgs.domain","location":"modules/functionality/func-phishing/dev.kordex.modules.func.phishing/-phishing-extension/-domain-args/domain.html","searchKeys":["domain","val domain: String","dev.kordex.modules.func.phishing.PhishingExtension.DomainArgs.domain"]},{"name":"val domains: Set<String>","description":"dev.kordex.modules.func.phishing.DomainChange.domains","location":"modules/functionality/func-phishing/dev.kordex.modules.func.phishing/-domain-change/domains.html","searchKeys":["domains","val domains: Set<String>","dev.kordex.modules.func.phishing.DomainChange.domains"]},{"name":"val entries: EnumEntries<DomainChangeType>","description":"dev.kordex.modules.func.phishing.DomainChangeType.entries","location":"modules/functionality/func-phishing/dev.kordex.modules.func.phishing/-domain-change-type/entries.html","searchKeys":["entries","val entries: EnumEntries<DomainChangeType>","dev.kordex.modules.func.phishing.DomainChangeType.entries"]},{"name":"val message: Key","description":"dev.kordex.modules.func.phishing.DetectionAction.message","location":"modules/functionality/func-phishing/dev.kordex.modules.func.phishing/-detection-action/message.html","searchKeys":["message","val message: Key","dev.kordex.modules.func.phishing.DetectionAction.message"]},{"name":"val readableName: String","description":"dev.kordex.modules.func.phishing.DomainChangeType.readableName","location":"modules/functionality/func-phishing/dev.kordex.modules.func.phishing/-domain-change-type/readable-name.html","searchKeys":["readableName","val readableName: String","dev.kordex.modules.func.phishing.DomainChangeType.readableName"]},{"name":"val type: DomainChangeType","description":"dev.kordex.modules.func.phishing.DomainChange.type","location":"modules/functionality/func-phishing/dev.kordex.modules.func.phishing/-domain-change/type.html","searchKeys":["type","val type: DomainChangeType","dev.kordex.modules.func.phishing.DomainChange.type"]},{"name":"var detectionAction: DetectionAction","description":"dev.kordex.modules.func.phishing.ExtPhishingBuilder.detectionAction","location":"modules/functionality/func-phishing/dev.kordex.modules.func.phishing/-ext-phishing-builder/detection-action.html","searchKeys":["detectionAction","var detectionAction: DetectionAction","dev.kordex.modules.func.phishing.ExtPhishingBuilder.detectionAction"]},{"name":"var logChannelName: String","description":"dev.kordex.modules.func.phishing.ExtPhishingBuilder.logChannelName","location":"modules/functionality/func-phishing/dev.kordex.modules.func.phishing/-ext-phishing-builder/log-channel-name.html","searchKeys":["logChannelName","var logChannelName: String","dev.kordex.modules.func.phishing.ExtPhishingBuilder.logChannelName"]},{"name":"var notifyUser: Boolean","description":"dev.kordex.modules.func.phishing.ExtPhishingBuilder.notifyUser","location":"modules/functionality/func-phishing/dev.kordex.modules.func.phishing/-ext-phishing-builder/notify-user.html","searchKeys":["notifyUser","var notifyUser: Boolean","dev.kordex.modules.func.phishing.ExtPhishingBuilder.notifyUser"]},{"name":"var requiredCommandPermission: Permission?","description":"dev.kordex.modules.func.phishing.ExtPhishingBuilder.requiredCommandPermission","location":"modules/functionality/func-phishing/dev.kordex.modules.func.phishing/-ext-phishing-builder/required-command-permission.html","searchKeys":["requiredCommandPermission","var requiredCommandPermission: Permission?","dev.kordex.modules.func.phishing.ExtPhishingBuilder.requiredCommandPermission"]},{"name":"var updateDelay: Duration","description":"dev.kordex.modules.func.phishing.ExtPhishingBuilder.updateDelay","location":"modules/functionality/func-phishing/dev.kordex.modules.func.phishing/-ext-phishing-builder/update-delay.html","searchKeys":["updateDelay","var updateDelay: Duration","dev.kordex.modules.func.phishing.ExtPhishingBuilder.updateDelay"]},{"name":"var urlRegex: Regex","description":"dev.kordex.modules.func.phishing.ExtPhishingBuilder.urlRegex","location":"modules/functionality/func-phishing/dev.kordex.modules.func.phishing/-ext-phishing-builder/url-regex.html","searchKeys":["urlRegex","var urlRegex: Regex","dev.kordex.modules.func.phishing.ExtPhishingBuilder.urlRegex"]},{"name":"class ArgumentTestExtension : Extension","description":"dev.kordex.test.bot.extensions.ArgumentTestExtension","location":"test-bot/dev.kordex.test.bot.extensions/-argument-test-extension/index.html","searchKeys":["ArgumentTestExtension","class ArgumentTestExtension : Extension","dev.kordex.test.bot.extensions.ArgumentTestExtension"]},{"name":"class I18nTestExtension : Extension","description":"dev.kordex.test.bot.extensions.I18nTestExtension","location":"test-bot/dev.kordex.test.bot.extensions/-i18n-test-extension/index.html","searchKeys":["I18nTestExtension","class I18nTestExtension : Extension","dev.kordex.test.bot.extensions.I18nTestExtension"]},{"name":"class ModalTestExtension : Extension","description":"dev.kordex.test.bot.extensions.ModalTestExtension","location":"test-bot/dev.kordex.test.bot.extensions/-modal-test-extension/index.html","searchKeys":["ModalTestExtension","class ModalTestExtension : Extension","dev.kordex.test.bot.extensions.ModalTestExtension"]},{"name":"class PKTestExtension : Extension","description":"dev.kordex.test.bot.extensions.PKTestExtension","location":"test-bot/dev.kordex.test.bot.extensions/-p-k-test-extension/index.html","searchKeys":["PKTestExtension","class PKTestExtension : Extension","dev.kordex.test.bot.extensions.PKTestExtension"]},{"name":"class PaginatorTestExtension : Extension","description":"dev.kordex.test.bot.extensions.PaginatorTestExtension","location":"test-bot/dev.kordex.test.bot.extensions/-paginator-test-extension/index.html","searchKeys":["PaginatorTestExtension","class PaginatorTestExtension : Extension","dev.kordex.test.bot.extensions.PaginatorTestExtension"]},{"name":"class SelectorTestExtension : Extension","description":"dev.kordex.test.bot.extensions.SelectorTestExtension","location":"test-bot/dev.kordex.test.bot.extensions/-selector-test-extension/index.html","searchKeys":["SelectorTestExtension","class SelectorTestExtension : Extension","dev.kordex.test.bot.extensions.SelectorTestExtension"]},{"name":"constructor()","description":"dev.kordex.test.bot.extensions.ArgumentTestExtension.ArgumentTestExtension","location":"test-bot/dev.kordex.test.bot.extensions/-argument-test-extension/-argument-test-extension.html","searchKeys":["ArgumentTestExtension","constructor()","dev.kordex.test.bot.extensions.ArgumentTestExtension.ArgumentTestExtension"]},{"name":"constructor()","description":"dev.kordex.test.bot.extensions.ArgumentTestExtension.AttachmentArguments.AttachmentArguments","location":"test-bot/dev.kordex.test.bot.extensions/-argument-test-extension/-attachment-arguments/-attachment-arguments.html","searchKeys":["AttachmentArguments","constructor()","dev.kordex.test.bot.extensions.ArgumentTestExtension.AttachmentArguments.AttachmentArguments"]},{"name":"constructor()","description":"dev.kordex.test.bot.extensions.ArgumentTestExtension.AutocompleteArguments.AutocompleteArguments","location":"test-bot/dev.kordex.test.bot.extensions/-argument-test-extension/-autocomplete-arguments/-autocomplete-arguments.html","searchKeys":["AutocompleteArguments","constructor()","dev.kordex.test.bot.extensions.ArgumentTestExtension.AutocompleteArguments.AutocompleteArguments"]},{"name":"constructor()","description":"dev.kordex.test.bot.extensions.ArgumentTestExtension.ChannelArguments.ChannelArguments","location":"test-bot/dev.kordex.test.bot.extensions/-argument-test-extension/-channel-arguments/-channel-arguments.html","searchKeys":["ChannelArguments","constructor()","dev.kordex.test.bot.extensions.ArgumentTestExtension.ChannelArguments.ChannelArguments"]},{"name":"constructor()","description":"dev.kordex.test.bot.extensions.ArgumentTestExtension.EmojiArguments.EmojiArguments","location":"test-bot/dev.kordex.test.bot.extensions/-argument-test-extension/-emoji-arguments/-emoji-arguments.html","searchKeys":["EmojiArguments","constructor()","dev.kordex.test.bot.extensions.ArgumentTestExtension.EmojiArguments.EmojiArguments"]},{"name":"constructor()","description":"dev.kordex.test.bot.extensions.ArgumentTestExtension.LengthConstrainedArgs.LengthConstrainedArgs","location":"test-bot/dev.kordex.test.bot.extensions/-argument-test-extension/-length-constrained-args/-length-constrained-args.html","searchKeys":["LengthConstrainedArgs","constructor()","dev.kordex.test.bot.extensions.ArgumentTestExtension.LengthConstrainedArgs.LengthConstrainedArgs"]},{"name":"constructor()","description":"dev.kordex.test.bot.extensions.ArgumentTestExtension.OptionalArgs.OptionalArgs","location":"test-bot/dev.kordex.test.bot.extensions/-argument-test-extension/-optional-args/-optional-args.html","searchKeys":["OptionalArgs","constructor()","dev.kordex.test.bot.extensions.ArgumentTestExtension.OptionalArgs.OptionalArgs"]},{"name":"constructor()","description":"dev.kordex.test.bot.extensions.ArgumentTestExtension.TagArgs.TagArgs","location":"test-bot/dev.kordex.test.bot.extensions/-argument-test-extension/-tag-args/-tag-args.html","searchKeys":["TagArgs","constructor()","dev.kordex.test.bot.extensions.ArgumentTestExtension.TagArgs.TagArgs"]},{"name":"constructor()","description":"dev.kordex.test.bot.extensions.I18nTestExtension.I18nTestExtension","location":"test-bot/dev.kordex.test.bot.extensions/-i18n-test-extension/-i18n-test-extension.html","searchKeys":["I18nTestExtension","constructor()","dev.kordex.test.bot.extensions.I18nTestExtension.I18nTestExtension"]},{"name":"constructor()","description":"dev.kordex.test.bot.extensions.ModalTestExtension.Args.Args","location":"test-bot/dev.kordex.test.bot.extensions/-modal-test-extension/-args/-args.html","searchKeys":["Args","constructor()","dev.kordex.test.bot.extensions.ModalTestExtension.Args.Args"]},{"name":"constructor()","description":"dev.kordex.test.bot.extensions.ModalTestExtension.Modal.Modal","location":"test-bot/dev.kordex.test.bot.extensions/-modal-test-extension/-modal/-modal.html","searchKeys":["Modal","constructor()","dev.kordex.test.bot.extensions.ModalTestExtension.Modal.Modal"]},{"name":"constructor()","description":"dev.kordex.test.bot.extensions.ModalTestExtension.ModalTestExtension","location":"test-bot/dev.kordex.test.bot.extensions/-modal-test-extension/-modal-test-extension.html","searchKeys":["ModalTestExtension","constructor()","dev.kordex.test.bot.extensions.ModalTestExtension.ModalTestExtension"]},{"name":"constructor()","description":"dev.kordex.test.bot.extensions.PKTestExtension.PKTestExtension","location":"test-bot/dev.kordex.test.bot.extensions/-p-k-test-extension/-p-k-test-extension.html","searchKeys":["PKTestExtension","constructor()","dev.kordex.test.bot.extensions.PKTestExtension.PKTestExtension"]},{"name":"constructor()","description":"dev.kordex.test.bot.extensions.PaginatorTestExtension.PaginatorTestExtension","location":"test-bot/dev.kordex.test.bot.extensions/-paginator-test-extension/-paginator-test-extension.html","searchKeys":["PaginatorTestExtension","constructor()","dev.kordex.test.bot.extensions.PaginatorTestExtension.PaginatorTestExtension"]},{"name":"constructor()","description":"dev.kordex.test.bot.extensions.SelectorTestExtension.SelectorTestExtension","location":"test-bot/dev.kordex.test.bot.extensions/-selector-test-extension/-selector-test-extension.html","searchKeys":["SelectorTestExtension","constructor()","dev.kordex.test.bot.extensions.SelectorTestExtension.SelectorTestExtension"]},{"name":"fun fromString(string: String): LogLevel?","description":"dev.kordex.test.bot.utils.LogLevel.Companion.fromString","location":"test-bot/dev.kordex.test.bot.utils/-log-level/-companion/from-string.html","searchKeys":["fromString","fun fromString(string: String): LogLevel?","dev.kordex.test.bot.utils.LogLevel.Companion.fromString"]},{"name":"fun isEnabled(): Boolean","description":"dev.kordex.test.bot.utils.LogLevel.isEnabled","location":"test-bot/dev.kordex.test.bot.utils/-log-level/is-enabled.html","searchKeys":["isEnabled","fun isEnabled(): Boolean","dev.kordex.test.bot.utils.LogLevel.isEnabled"]},{"name":"inner class Args : Arguments","description":"dev.kordex.test.bot.extensions.ModalTestExtension.Args","location":"test-bot/dev.kordex.test.bot.extensions/-modal-test-extension/-args/index.html","searchKeys":["Args","inner class Args : Arguments","dev.kordex.test.bot.extensions.ModalTestExtension.Args"]},{"name":"inner class AttachmentArguments : Arguments","description":"dev.kordex.test.bot.extensions.ArgumentTestExtension.AttachmentArguments","location":"test-bot/dev.kordex.test.bot.extensions/-argument-test-extension/-attachment-arguments/index.html","searchKeys":["AttachmentArguments","inner class AttachmentArguments : Arguments","dev.kordex.test.bot.extensions.ArgumentTestExtension.AttachmentArguments"]},{"name":"inner class AutocompleteArguments : Arguments","description":"dev.kordex.test.bot.extensions.ArgumentTestExtension.AutocompleteArguments","location":"test-bot/dev.kordex.test.bot.extensions/-argument-test-extension/-autocomplete-arguments/index.html","searchKeys":["AutocompleteArguments","inner class AutocompleteArguments : Arguments","dev.kordex.test.bot.extensions.ArgumentTestExtension.AutocompleteArguments"]},{"name":"inner class ChannelArguments : Arguments","description":"dev.kordex.test.bot.extensions.ArgumentTestExtension.ChannelArguments","location":"test-bot/dev.kordex.test.bot.extensions/-argument-test-extension/-channel-arguments/index.html","searchKeys":["ChannelArguments","inner class ChannelArguments : Arguments","dev.kordex.test.bot.extensions.ArgumentTestExtension.ChannelArguments"]},{"name":"inner class EmojiArguments : Arguments","description":"dev.kordex.test.bot.extensions.ArgumentTestExtension.EmojiArguments","location":"test-bot/dev.kordex.test.bot.extensions/-argument-test-extension/-emoji-arguments/index.html","searchKeys":["EmojiArguments","inner class EmojiArguments : Arguments","dev.kordex.test.bot.extensions.ArgumentTestExtension.EmojiArguments"]},{"name":"inner class LengthConstrainedArgs : Arguments","description":"dev.kordex.test.bot.extensions.ArgumentTestExtension.LengthConstrainedArgs","location":"test-bot/dev.kordex.test.bot.extensions/-argument-test-extension/-length-constrained-args/index.html","searchKeys":["LengthConstrainedArgs","inner class LengthConstrainedArgs : Arguments","dev.kordex.test.bot.extensions.ArgumentTestExtension.LengthConstrainedArgs"]},{"name":"inner class Modal : ModalForm","description":"dev.kordex.test.bot.extensions.ModalTestExtension.Modal","location":"test-bot/dev.kordex.test.bot.extensions/-modal-test-extension/-modal/index.html","searchKeys":["Modal","inner class Modal : ModalForm","dev.kordex.test.bot.extensions.ModalTestExtension.Modal"]},{"name":"inner class OptionalArgs : Arguments","description":"dev.kordex.test.bot.extensions.ArgumentTestExtension.OptionalArgs","location":"test-bot/dev.kordex.test.bot.extensions/-argument-test-extension/-optional-args/index.html","searchKeys":["OptionalArgs","inner class OptionalArgs : Arguments","dev.kordex.test.bot.extensions.ArgumentTestExtension.OptionalArgs"]},{"name":"inner class TagArgs : Arguments","description":"dev.kordex.test.bot.extensions.ArgumentTestExtension.TagArgs","location":"test-bot/dev.kordex.test.bot.extensions/-argument-test-extension/-tag-args/index.html","searchKeys":["TagArgs","inner class TagArgs : Arguments","dev.kordex.test.bot.extensions.ArgumentTestExtension.TagArgs"]},{"name":"object Companion","description":"dev.kordex.test.bot.utils.LogLevel.Companion","location":"test-bot/dev.kordex.test.bot.utils/-log-level/-companion/index.html","searchKeys":["Companion","object Companion","dev.kordex.test.bot.utils.LogLevel.Companion"]},{"name":"object DEBUG : LogLevel","description":"dev.kordex.test.bot.utils.LogLevel.DEBUG","location":"test-bot/dev.kordex.test.bot.utils/-log-level/-d-e-b-u-g/index.html","searchKeys":["DEBUG","object DEBUG : LogLevel","dev.kordex.test.bot.utils.LogLevel.DEBUG"]},{"name":"object ERROR : LogLevel","description":"dev.kordex.test.bot.utils.LogLevel.ERROR","location":"test-bot/dev.kordex.test.bot.utils/-log-level/-e-r-r-o-r/index.html","searchKeys":["ERROR","object ERROR : LogLevel","dev.kordex.test.bot.utils.LogLevel.ERROR"]},{"name":"object INFO : LogLevel","description":"dev.kordex.test.bot.utils.LogLevel.INFO","location":"test-bot/dev.kordex.test.bot.utils/-log-level/-i-n-f-o/index.html","searchKeys":["INFO","object INFO : LogLevel","dev.kordex.test.bot.utils.LogLevel.INFO"]},{"name":"object WARNING : LogLevel","description":"dev.kordex.test.bot.utils.LogLevel.WARNING","location":"test-bot/dev.kordex.test.bot.utils/-log-level/-w-a-r-n-i-n-g/index.html","searchKeys":["WARNING","object WARNING : LogLevel","dev.kordex.test.bot.utils.LogLevel.WARNING"]},{"name":"open operator override fun compareTo(other: LogLevel): Int","description":"dev.kordex.test.bot.utils.LogLevel.compareTo","location":"test-bot/dev.kordex.test.bot.utils/-log-level/compare-to.html","searchKeys":["compareTo","open operator override fun compareTo(other: LogLevel): Int","dev.kordex.test.bot.utils.LogLevel.compareTo"]},{"name":"open override val name: String","description":"dev.kordex.test.bot.extensions.ArgumentTestExtension.name","location":"test-bot/dev.kordex.test.bot.extensions/-argument-test-extension/name.html","searchKeys":["name","open override val name: String","dev.kordex.test.bot.extensions.ArgumentTestExtension.name"]},{"name":"open override val name: String","description":"dev.kordex.test.bot.extensions.I18nTestExtension.name","location":"test-bot/dev.kordex.test.bot.extensions/-i18n-test-extension/name.html","searchKeys":["name","open override val name: String","dev.kordex.test.bot.extensions.I18nTestExtension.name"]},{"name":"open override val name: String","description":"dev.kordex.test.bot.extensions.ModalTestExtension.name","location":"test-bot/dev.kordex.test.bot.extensions/-modal-test-extension/name.html","searchKeys":["name","open override val name: String","dev.kordex.test.bot.extensions.ModalTestExtension.name"]},{"name":"open override val name: String","description":"dev.kordex.test.bot.extensions.PKTestExtension.name","location":"test-bot/dev.kordex.test.bot.extensions/-p-k-test-extension/name.html","searchKeys":["name","open override val name: String","dev.kordex.test.bot.extensions.PKTestExtension.name"]},{"name":"open override val name: String","description":"dev.kordex.test.bot.extensions.PaginatorTestExtension.name","location":"test-bot/dev.kordex.test.bot.extensions/-paginator-test-extension/name.html","searchKeys":["name","open override val name: String","dev.kordex.test.bot.extensions.PaginatorTestExtension.name"]},{"name":"open override val name: String","description":"dev.kordex.test.bot.extensions.SelectorTestExtension.name","location":"test-bot/dev.kordex.test.bot.extensions/-selector-test-extension/name.html","searchKeys":["name","open override val name: String","dev.kordex.test.bot.extensions.SelectorTestExtension.name"]},{"name":"open override val parseForAutocomplete: Boolean = true","description":"dev.kordex.test.bot.extensions.ArgumentTestExtension.AutocompleteArguments.parseForAutocomplete","location":"test-bot/dev.kordex.test.bot.extensions/-argument-test-extension/-autocomplete-arguments/parse-for-autocomplete.html","searchKeys":["parseForAutocomplete","open override val parseForAutocomplete: Boolean = true","dev.kordex.test.bot.extensions.ArgumentTestExtension.AutocompleteArguments.parseForAutocomplete"]},{"name":"open override val parseForAutocomplete: Boolean = true","description":"dev.kordex.test.bot.extensions.ArgumentTestExtension.TagArgs.parseForAutocomplete","location":"test-bot/dev.kordex.test.bot.extensions/-argument-test-extension/-tag-args/parse-for-autocomplete.html","searchKeys":["parseForAutocomplete","open override val parseForAutocomplete: Boolean = true","dev.kordex.test.bot.extensions.ArgumentTestExtension.TagArgs.parseForAutocomplete"]},{"name":"open override var title: Key","description":"dev.kordex.test.bot.extensions.ModalTestExtension.Modal.title","location":"test-bot/dev.kordex.test.bot.extensions/-modal-test-extension/-modal/title.html","searchKeys":["title","open override var title: Key","dev.kordex.test.bot.extensions.ModalTestExtension.Modal.title"]},{"name":"open suspend override fun setup()","description":"dev.kordex.test.bot.extensions.ArgumentTestExtension.setup","location":"test-bot/dev.kordex.test.bot.extensions/-argument-test-extension/setup.html","searchKeys":["setup","open suspend override fun setup()","dev.kordex.test.bot.extensions.ArgumentTestExtension.setup"]},{"name":"open suspend override fun setup()","description":"dev.kordex.test.bot.extensions.I18nTestExtension.setup","location":"test-bot/dev.kordex.test.bot.extensions/-i18n-test-extension/setup.html","searchKeys":["setup","open suspend override fun setup()","dev.kordex.test.bot.extensions.I18nTestExtension.setup"]},{"name":"open suspend override fun setup()","description":"dev.kordex.test.bot.extensions.ModalTestExtension.setup","location":"test-bot/dev.kordex.test.bot.extensions/-modal-test-extension/setup.html","searchKeys":["setup","open suspend override fun setup()","dev.kordex.test.bot.extensions.ModalTestExtension.setup"]},{"name":"open suspend override fun setup()","description":"dev.kordex.test.bot.extensions.PKTestExtension.setup","location":"test-bot/dev.kordex.test.bot.extensions/-p-k-test-extension/setup.html","searchKeys":["setup","open suspend override fun setup()","dev.kordex.test.bot.extensions.PKTestExtension.setup"]},{"name":"open suspend override fun setup()","description":"dev.kordex.test.bot.extensions.PaginatorTestExtension.setup","location":"test-bot/dev.kordex.test.bot.extensions/-paginator-test-extension/setup.html","searchKeys":["setup","open suspend override fun setup()","dev.kordex.test.bot.extensions.PaginatorTestExtension.setup"]},{"name":"open suspend override fun setup()","description":"dev.kordex.test.bot.extensions.SelectorTestExtension.setup","location":"test-bot/dev.kordex.test.bot.extensions/-selector-test-extension/setup.html","searchKeys":["setup","open suspend override fun setup()","dev.kordex.test.bot.extensions.SelectorTestExtension.setup"]},{"name":"sealed class LogLevel : Comparable<LogLevel> ","description":"dev.kordex.test.bot.utils.LogLevel","location":"test-bot/dev.kordex.test.bot.utils/-log-level/index.html","searchKeys":["LogLevel","sealed class LogLevel : Comparable<LogLevel> ","dev.kordex.test.bot.utils.LogLevel"]},{"name":"suspend fun CommandContext.assert(value: Boolean, failureMessage: AssertBody = null)","description":"dev.kordex.test.bot.utils.assert","location":"test-bot/dev.kordex.test.bot.utils/assert.html","searchKeys":["assert","suspend fun CommandContext.assert(value: Boolean, failureMessage: AssertBody = null)","dev.kordex.test.bot.utils.assert"]},{"name":"suspend fun CommandContext.assertEqual(left: Any?, right: Any?, failureMessage: AssertBody = null)","description":"dev.kordex.test.bot.utils.assertEqual","location":"test-bot/dev.kordex.test.bot.utils/assert-equal.html","searchKeys":["assertEqual","suspend fun CommandContext.assertEqual(left: Any?, right: Any?, failureMessage: AssertBody = null)","dev.kordex.test.bot.utils.assertEqual"]},{"name":"suspend fun CommandContext.assertFalse(value: Boolean, failureMessage: AssertBody = null)","description":"dev.kordex.test.bot.utils.assertFalse","location":"test-bot/dev.kordex.test.bot.utils/assert-false.html","searchKeys":["assertFalse","suspend fun CommandContext.assertFalse(value: Boolean, failureMessage: AssertBody = null)","dev.kordex.test.bot.utils.assertFalse"]},{"name":"suspend fun CommandContext.assertNotEqual(left: Any?, right: Any?, failureMessage: AssertBody = null)","description":"dev.kordex.test.bot.utils.assertNotEqual","location":"test-bot/dev.kordex.test.bot.utils/assert-not-equal.html","searchKeys":["assertNotEqual","suspend fun CommandContext.assertNotEqual(left: Any?, right: Any?, failureMessage: AssertBody = null)","dev.kordex.test.bot.utils.assertNotEqual"]},{"name":"suspend fun CommandContext.log(level: LogLevel, body: LogBody = null): Message?","description":"dev.kordex.test.bot.utils.log","location":"test-bot/dev.kordex.test.bot.utils/log.html","searchKeys":["log","suspend fun CommandContext.log(level: LogLevel, body: LogBody = null): Message?","dev.kordex.test.bot.utils.log"]},{"name":"suspend fun CommandContext.logDebug(body: LogBody = null): Message?","description":"dev.kordex.test.bot.utils.logDebug","location":"test-bot/dev.kordex.test.bot.utils/log-debug.html","searchKeys":["logDebug","suspend fun CommandContext.logDebug(body: LogBody = null): Message?","dev.kordex.test.bot.utils.logDebug"]},{"name":"suspend fun CommandContext.logError(body: LogBody = null): Message?","description":"dev.kordex.test.bot.utils.logError","location":"test-bot/dev.kordex.test.bot.utils/log-error.html","searchKeys":["logError","suspend fun CommandContext.logError(body: LogBody = null): Message?","dev.kordex.test.bot.utils.logError"]},{"name":"suspend fun CommandContext.logInfo(body: LogBody = null): Message?","description":"dev.kordex.test.bot.utils.logInfo","location":"test-bot/dev.kordex.test.bot.utils/log-info.html","searchKeys":["logInfo","suspend fun CommandContext.logInfo(body: LogBody = null): Message?","dev.kordex.test.bot.utils.logInfo"]},{"name":"suspend fun CommandContext.logWarning(body: LogBody = null): Message?","description":"dev.kordex.test.bot.utils.logWarning","location":"test-bot/dev.kordex.test.bot.utils/log-warning.html","searchKeys":["logWarning","suspend fun CommandContext.logWarning(body: LogBody = null): Message?","dev.kordex.test.bot.utils.logWarning"]},{"name":"suspend fun EventContext<*>.log(level: LogLevel, body: LogBody = null): Message?","description":"dev.kordex.test.bot.utils.log","location":"test-bot/dev.kordex.test.bot.utils/log.html","searchKeys":["log","suspend fun EventContext<*>.log(level: LogLevel, body: LogBody = null): Message?","dev.kordex.test.bot.utils.log"]},{"name":"suspend fun EventContext<*>.logDebug(body: LogBody = null): Message?","description":"dev.kordex.test.bot.utils.logDebug","location":"test-bot/dev.kordex.test.bot.utils/log-debug.html","searchKeys":["logDebug","suspend fun EventContext<*>.logDebug(body: LogBody = null): Message?","dev.kordex.test.bot.utils.logDebug"]},{"name":"suspend fun EventContext<*>.logError(body: LogBody = null): Message?","description":"dev.kordex.test.bot.utils.logError","location":"test-bot/dev.kordex.test.bot.utils/log-error.html","searchKeys":["logError","suspend fun EventContext<*>.logError(body: LogBody = null): Message?","dev.kordex.test.bot.utils.logError"]},{"name":"suspend fun EventContext<*>.logInfo(body: LogBody = null): Message?","description":"dev.kordex.test.bot.utils.logInfo","location":"test-bot/dev.kordex.test.bot.utils/log-info.html","searchKeys":["logInfo","suspend fun EventContext<*>.logInfo(body: LogBody = null): Message?","dev.kordex.test.bot.utils.logInfo"]},{"name":"suspend fun EventContext<*>.logWarning(body: LogBody = null): Message?","description":"dev.kordex.test.bot.utils.logWarning","location":"test-bot/dev.kordex.test.bot.utils/log-warning.html","searchKeys":["logWarning","suspend fun EventContext<*>.logWarning(body: LogBody = null): Message?","dev.kordex.test.bot.utils.logWarning"]},{"name":"suspend fun Extension.logRaw(builder: MessageCreateBuilder.() -> Unit): Message?","description":"dev.kordex.test.bot.utils.logRaw","location":"test-bot/dev.kordex.test.bot.utils/log-raw.html","searchKeys":["logRaw","suspend fun Extension.logRaw(builder: MessageCreateBuilder.() -> Unit): Message?","dev.kordex.test.bot.utils.logRaw"]},{"name":"suspend fun main()","description":"dev.kordex.test.bot.main","location":"test-bot/dev.kordex.test.bot/main.html","searchKeys":["main","suspend fun main()","dev.kordex.test.bot.main"]},{"name":"typealias AssertBody = suspend () -> Any?","description":"dev.kordex.test.bot.utils.AssertBody","location":"test-bot/dev.kordex.test.bot.utils/-assert-body/index.html","searchKeys":["AssertBody","typealias AssertBody = suspend () -> Any?","dev.kordex.test.bot.utils.AssertBody"]},{"name":"typealias LogBody = suspend () -> Any??","description":"dev.kordex.test.bot.utils.LogBody","location":"test-bot/dev.kordex.test.bot.utils/-log-body/index.html","searchKeys":["LogBody","typealias LogBody = suspend () -> Any??","dev.kordex.test.bot.utils.LogBody"]},{"name":"val ALL: Set<LogLevel>","description":"dev.kordex.test.bot.utils.LogLevel.Companion.ALL","location":"test-bot/dev.kordex.test.bot.utils/-log-level/-companion/-a-l-l.html","searchKeys":["ALL","val ALL: Set<LogLevel>","dev.kordex.test.bot.utils.LogLevel.Companion.ALL"]},{"name":"val TEST_SERVER_ID: Snowflake","description":"dev.kordex.test.bot.TEST_SERVER_ID","location":"test-bot/dev.kordex.test.bot/-t-e-s-t_-s-e-r-v-e-r_-i-d.html","searchKeys":["TEST_SERVER_ID","val TEST_SERVER_ID: Snowflake","dev.kordex.test.bot.TEST_SERVER_ID"]},{"name":"val WARN: LogLevel.WARNING","description":"dev.kordex.test.bot.utils.LogLevel.Companion.WARN","location":"test-bot/dev.kordex.test.bot.utils/-log-level/-companion/-w-a-r-n.html","searchKeys":["WARN","val WARN: LogLevel.WARNING","dev.kordex.test.bot.utils.LogLevel.Companion.WARN"]},{"name":"val channel: Channel","description":"dev.kordex.test.bot.extensions.ArgumentTestExtension.ChannelArguments.channel","location":"test-bot/dev.kordex.test.bot.extensions/-argument-test-extension/-channel-arguments/channel.html","searchKeys":["channel","val channel: Channel","dev.kordex.test.bot.extensions.ArgumentTestExtension.ChannelArguments.channel"]},{"name":"val channel: Channel?","description":"dev.kordex.test.bot.extensions.ArgumentTestExtension.TagArgs.channel","location":"test-bot/dev.kordex.test.bot.extensions/-argument-test-extension/-tag-args/channel.html","searchKeys":["channel","val channel: Channel?","dev.kordex.test.bot.extensions.ArgumentTestExtension.TagArgs.channel"]},{"name":"val color: Color?","description":"dev.kordex.test.bot.utils.LogLevel.color","location":"test-bot/dev.kordex.test.bot.utils/-log-level/color.html","searchKeys":["color","val color: Color?","dev.kordex.test.bot.utils.LogLevel.color"]},{"name":"val emoji: Emoji","description":"dev.kordex.test.bot.extensions.ArgumentTestExtension.EmojiArguments.emoji","location":"test-bot/dev.kordex.test.bot.extensions/-argument-test-extension/-emoji-arguments/emoji.html","searchKeys":["emoji","val emoji: Emoji","dev.kordex.test.bot.extensions.ArgumentTestExtension.EmojiArguments.emoji"]},{"name":"val file: Attachment","description":"dev.kordex.test.bot.extensions.ArgumentTestExtension.AttachmentArguments.file","location":"test-bot/dev.kordex.test.bot.extensions/-argument-test-extension/-attachment-arguments/file.html","searchKeys":["file","val file: Attachment","dev.kordex.test.bot.extensions.ArgumentTestExtension.AttachmentArguments.file"]},{"name":"val lastName: String?","description":"dev.kordex.test.bot.extensions.ArgumentTestExtension.LengthConstrainedArgs.lastName","location":"test-bot/dev.kordex.test.bot.extensions/-argument-test-extension/-length-constrained-args/last-name.html","searchKeys":["lastName","val lastName: String?","dev.kordex.test.bot.extensions.ArgumentTestExtension.LengthConstrainedArgs.lastName"]},{"name":"val line: LineTextWidget","description":"dev.kordex.test.bot.extensions.ModalTestExtension.Modal.line","location":"test-bot/dev.kordex.test.bot.extensions/-modal-test-extension/-modal/line.html","searchKeys":["line","val line: LineTextWidget","dev.kordex.test.bot.extensions.ModalTestExtension.Modal.line"]},{"name":"val name: String","description":"dev.kordex.test.bot.extensions.ArgumentTestExtension.LengthConstrainedArgs.name","location":"test-bot/dev.kordex.test.bot.extensions/-argument-test-extension/-length-constrained-args/name.html","searchKeys":["name","val name: String","dev.kordex.test.bot.extensions.ArgumentTestExtension.LengthConstrainedArgs.name"]},{"name":"val name: String","description":"dev.kordex.test.bot.utils.LogLevel.name","location":"test-bot/dev.kordex.test.bot.utils/-log-level/name.html","searchKeys":["name","val name: String","dev.kordex.test.bot.utils.LogLevel.name"]},{"name":"val one: String","description":"dev.kordex.test.bot.extensions.ArgumentTestExtension.AutocompleteArguments.one","location":"test-bot/dev.kordex.test.bot.extensions/-argument-test-extension/-autocomplete-arguments/one.html","searchKeys":["one","val one: String","dev.kordex.test.bot.extensions.ArgumentTestExtension.AutocompleteArguments.one"]},{"name":"val optionalFile: Attachment?","description":"dev.kordex.test.bot.extensions.ArgumentTestExtension.AttachmentArguments.optionalFile","location":"test-bot/dev.kordex.test.bot.extensions/-argument-test-extension/-attachment-arguments/optional-file.html","searchKeys":["optionalFile","val optionalFile: Attachment?","dev.kordex.test.bot.extensions.ArgumentTestExtension.AttachmentArguments.optionalFile"]},{"name":"val paragraph: ParagraphTextWidget","description":"dev.kordex.test.bot.extensions.ModalTestExtension.Modal.paragraph","location":"test-bot/dev.kordex.test.bot.extensions/-modal-test-extension/-modal/paragraph.html","searchKeys":["paragraph","val paragraph: ParagraphTextWidget","dev.kordex.test.bot.extensions.ModalTestExtension.Modal.paragraph"]},{"name":"val response: String?","description":"dev.kordex.test.bot.extensions.ArgumentTestExtension.OptionalArgs.response","location":"test-bot/dev.kordex.test.bot.extensions/-argument-test-extension/-optional-args/response.html","searchKeys":["response","val response: String?","dev.kordex.test.bot.extensions.ArgumentTestExtension.OptionalArgs.response"]},{"name":"val str: String","description":"dev.kordex.test.bot.extensions.ModalTestExtension.Args.str","location":"test-bot/dev.kordex.test.bot.extensions/-modal-test-extension/-args/str.html","searchKeys":["str","val str: String","dev.kordex.test.bot.extensions.ModalTestExtension.Args.str"]},{"name":"val tag: ForumTag?","description":"dev.kordex.test.bot.extensions.ArgumentTestExtension.TagArgs.tag","location":"test-bot/dev.kordex.test.bot.extensions/-argument-test-extension/-tag-args/tag.html","searchKeys":["tag","val tag: ForumTag?","dev.kordex.test.bot.extensions.ArgumentTestExtension.TagArgs.tag"]},{"name":"val two: String","description":"dev.kordex.test.bot.extensions.ArgumentTestExtension.AutocompleteArguments.two","location":"test-bot/dev.kordex.test.bot.extensions/-argument-test-extension/-autocomplete-arguments/two.html","searchKeys":["two","val two: String","dev.kordex.test.bot.extensions.ArgumentTestExtension.AutocompleteArguments.two"]},{"name":"var enabled: Set<LogLevel>","description":"dev.kordex.test.bot.utils.LogLevel.Companion.enabled","location":"test-bot/dev.kordex.test.bot.utils/-log-level/-companion/enabled.html","searchKeys":["enabled","var enabled: Set<LogLevel>","dev.kordex.test.bot.utils.LogLevel.Companion.enabled"]},{"name":"var enabledLevel: LogLevel","description":"dev.kordex.test.bot.utils.LogLevel.Companion.enabledLevel","location":"test-bot/dev.kordex.test.bot.utils/-log-level/-companion/enabled-level.html","searchKeys":["enabledLevel","var enabledLevel: LogLevel","dev.kordex.test.bot.utils.LogLevel.Companion.enabledLevel"]}]